
;;; GENERATED BY CHICKEN-BIND FROM -

(begin
  (begin
    (define gl:accum
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glAccum(a0 , a1);")))
  (begin
    (define gl:alpha-func
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glAlphaFunc(a0 , a1);")))
  (begin
    (define gl:are-textures-resident
      (foreign-lambda*
        unsigned-char
        ((integer a0) (u32vector a1) (u8vector a2))
        "return(glAreTexturesResident(a0 , a1 , a2));")))
  (begin
    (define gl:array-element
      (foreign-lambda* void ((integer a0)) "glArrayElement(a0);")))
  (begin
    (define gl:begin
      (foreign-lambda* void ((unsigned-integer a0)) "glBegin(a0);")))
  (begin
    (define gl:bind-texture
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindTexture(a0 , a1);")))
  (begin
    (define gl:bitmap
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (u8vector a6))
        "glBitmap(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:blend-func
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBlendFunc(a0 , a1);")))
  (begin
    (define gl:call-list
      (foreign-lambda* void ((unsigned-integer a0)) "glCallList(a0);")))
  (begin
    (define gl:call-lists
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) ((c-pointer void) a2))
        "glCallLists(a0 , a1 , a2);")))
  (begin
    (define gl:clear
      (foreign-lambda* void ((unsigned-integer a0)) "glClear(a0);")))
  (begin
    (define gl:clear-accum
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glClearAccum(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-color
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glClearColor(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-depth
      (foreign-lambda* void ((double a0)) "glClearDepth(a0);")))
  (begin
    (define gl:clear-index
      (foreign-lambda* void ((float a0)) "glClearIndex(a0);")))
  (begin
    (define gl:clear-stencil
      (foreign-lambda* void ((integer a0)) "glClearStencil(a0);")))
  (begin
    (define gl:clip-plane
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glClipPlane(a0 , a1);")))
  (begin
    (define gl:color3b
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glColor3b(a0 , a1 , a2);")))
  (begin
    (define gl:color3bv
      (foreign-lambda* void ((c-string a0)) "glColor3bv(a0);")))
  (begin
    (define gl:color3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glColor3d(a0 , a1 , a2);")))
  (begin
    (define gl:color3dv
      (foreign-lambda* void ((f64vector a0)) "glColor3dv(a0);")))
  (begin
    (define gl:color3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glColor3f(a0 , a1 , a2);")))
  (begin
    (define gl:color3fv
      (foreign-lambda* void ((f32vector a0)) "glColor3fv(a0);")))
  (begin
    (define gl:color3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glColor3i(a0 , a1 , a2);")))
  (begin
    (define gl:color3iv
      (foreign-lambda* void ((s32vector a0)) "glColor3iv(a0);")))
  (begin
    (define gl:color3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glColor3s(a0 , a1 , a2);")))
  (begin
    (define gl:color3sv
      (foreign-lambda* void ((s16vector a0)) "glColor3sv(a0);")))
  (begin
    (define gl:color3ub
      (foreign-lambda*
        void
        ((unsigned-char a0) (unsigned-char a1) (unsigned-char a2))
        "glColor3ub(a0 , a1 , a2);")))
  (begin
    (define gl:color3ubv
      (foreign-lambda* void ((u8vector a0)) "glColor3ubv(a0);")))
  (begin
    (define gl:color3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glColor3ui(a0 , a1 , a2);")))
  (begin
    (define gl:color3uiv
      (foreign-lambda* void ((u32vector a0)) "glColor3uiv(a0);")))
  (begin
    (define gl:color3us
      (foreign-lambda*
        void
        ((unsigned-short a0) (unsigned-short a1) (unsigned-short a2))
        "glColor3us(a0 , a1 , a2);")))
  (begin
    (define gl:color3usv
      (foreign-lambda* void ((u16vector a0)) "glColor3usv(a0);")))
  (begin
    (define gl:color4b
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2) (char a3))
        "glColor4b(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4bv
      (foreign-lambda* void ((c-string a0)) "glColor4bv(a0);")))
  (begin
    (define gl:color4d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glColor4d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4dv
      (foreign-lambda* void ((f64vector a0)) "glColor4dv(a0);")))
  (begin
    (define gl:color4f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glColor4f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4fv
      (foreign-lambda* void ((f32vector a0)) "glColor4fv(a0);")))
  (begin
    (define gl:color4i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glColor4i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4iv
      (foreign-lambda* void ((s32vector a0)) "glColor4iv(a0);")))
  (begin
    (define gl:color4s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glColor4s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4sv
      (foreign-lambda* void ((s16vector a0)) "glColor4sv(a0);")))
  (begin
    (define gl:color4ub
      (foreign-lambda*
        void
        ((unsigned-char a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3))
        "glColor4ub(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4ubv
      (foreign-lambda* void ((u8vector a0)) "glColor4ubv(a0);")))
  (begin
    (define gl:color4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glColor4ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4uiv
      (foreign-lambda* void ((u32vector a0)) "glColor4uiv(a0);")))
  (begin
    (define gl:color4us
      (foreign-lambda*
        void
        ((unsigned-short a0)
         (unsigned-short a1)
         (unsigned-short a2)
         (unsigned-short a3))
        "glColor4us(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4usv
      (foreign-lambda* void ((u16vector a0)) "glColor4usv(a0);")))
  (begin
    (define gl:color-mask
      (foreign-lambda*
        void
        ((unsigned-char a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3))
        "glColorMask(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color-material
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glColorMaterial(a0 , a1);")))
  (begin
    (define gl:color-pointer
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glColorPointer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:copy-pixels
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4))
        "glCopyPixels(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:copy-tex-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glCopyTexImage1D(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-tex-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyTexImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-tex-sub-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glCopyTexSubImage1D(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:copy-tex-sub-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyTexSubImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:cull-face
      (foreign-lambda* void ((unsigned-integer a0)) "glCullFace(a0);")))
  (begin
    (define gl:delete-lists
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glDeleteLists(a0 , a1);")))
  (begin
    (define gl:delete-textures
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteTextures(a0 , a1);")))
  (begin
    (define gl:depth-func
      (foreign-lambda* void ((unsigned-integer a0)) "glDepthFunc(a0);")))
  (begin
    (define gl:depth-mask
      (foreign-lambda* void ((unsigned-char a0)) "glDepthMask(a0);")))
  (begin
    (define gl:depth-range
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glDepthRange(a0 , a1);")))
  (begin
    (define gl:disable
      (foreign-lambda* void ((unsigned-integer a0)) "glDisable(a0);")))
  (begin
    (define gl:disable-client-state
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDisableClientState(a0);")))
  (begin
    (define gl:draw-arrays
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glDrawArrays(a0 , a1 , a2);")))
  (begin
    (define gl:draw-buffer
      (foreign-lambda* void ((unsigned-integer a0)) "glDrawBuffer(a0);")))
  (begin
    (define gl:draw-elements
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glDrawElements(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-pixels
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glDrawPixels(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:edge-flag
      (foreign-lambda* void ((unsigned-char a0)) "glEdgeFlag(a0);")))
  (begin
    (define gl:edge-flag-pointer
      (foreign-lambda*
        void
        ((integer a0) ((c-pointer void) a1))
        "glEdgeFlagPointer(a0 , a1);")))
  (begin
    (define gl:edge-flagv
      (foreign-lambda* void ((u8vector a0)) "glEdgeFlagv(a0);")))
  (begin
    (define gl:enable
      (foreign-lambda* void ((unsigned-integer a0)) "glEnable(a0);")))
  (begin
    (define gl:enable-client-state
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEnableClientState(a0);")))
  (begin (define gl:end (foreign-lambda* void () "glEnd();")))
  (begin (define gl:end-list (foreign-lambda* void () "glEndList();")))
  (begin
    (define gl:eval-coord1d
      (foreign-lambda* void ((double a0)) "glEvalCoord1d(a0);")))
  (begin
    (define gl:eval-coord1dv
      (foreign-lambda* void ((f64vector a0)) "glEvalCoord1dv(a0);")))
  (begin
    (define gl:eval-coord1f
      (foreign-lambda* void ((float a0)) "glEvalCoord1f(a0);")))
  (begin
    (define gl:eval-coord1fv
      (foreign-lambda* void ((f32vector a0)) "glEvalCoord1fv(a0);")))
  (begin
    (define gl:eval-coord2d
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glEvalCoord2d(a0 , a1);")))
  (begin
    (define gl:eval-coord2dv
      (foreign-lambda* void ((f64vector a0)) "glEvalCoord2dv(a0);")))
  (begin
    (define gl:eval-coord2f
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glEvalCoord2f(a0 , a1);")))
  (begin
    (define gl:eval-coord2fv
      (foreign-lambda* void ((f32vector a0)) "glEvalCoord2fv(a0);")))
  (begin
    (define gl:eval-mesh1
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glEvalMesh1(a0 , a1 , a2);")))
  (begin
    (define gl:eval-mesh2
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glEvalMesh2(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:eval-point1
      (foreign-lambda* void ((integer a0)) "glEvalPoint1(a0);")))
  (begin
    (define gl:eval-point2
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glEvalPoint2(a0 , a1);")))
  (begin
    (define gl:feedback-buffer
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (f32vector a2))
        "glFeedbackBuffer(a0 , a1 , a2);")))
  (begin (define gl:finish (foreign-lambda* void () "glFinish();")))
  (begin (define gl:flush (foreign-lambda* void () "glFlush();")))
  (begin
    (define gl:fogf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glFogf(a0 , a1);")))
  (begin
    (define gl:fogfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glFogfv(a0 , a1);")))
  (begin
    (define gl:fogi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glFogi(a0 , a1);")))
  (begin
    (define gl:fogiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glFogiv(a0 , a1);")))
  (begin
    (define gl:front-face
      (foreign-lambda* void ((unsigned-integer a0)) "glFrontFace(a0);")))
  (begin
    (define gl:frustum
      (foreign-lambda*
        void
        ((double a0)
         (double a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glFrustum(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:gen-lists
      (foreign-lambda*
        unsigned-integer
        ((integer a0))
        "return(glGenLists(a0));")))
  (begin
    (define gl:gen-textures
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenTextures(a0 , a1);")))
  (begin
    (define gl:get-booleanv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glGetBooleanv(a0 , a1);")))
  (begin
    (define gl:get-clip-plane
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glGetClipPlane(a0 , a1);")))
  (begin
    (define gl:get-doublev
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glGetDoublev(a0 , a1);")))
  (begin
    (define gl:get-error
      (foreign-lambda* unsigned-integer () "return(glGetError());")))
  (begin
    (define gl:get-floatv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetFloatv(a0 , a1);")))
  (begin
    (define gl:get-integerv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glGetIntegerv(a0 , a1);")))
  (begin
    (define gl:get-lightfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetLightfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-lightiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetLightiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-mapdv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetMapdv(a0 , a1 , a2);")))
  (begin
    (define gl:get-mapfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMapfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-mapiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMapiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-materialfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMaterialfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-materialiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMaterialiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-pixel-mapfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetPixelMapfv(a0 , a1);")))
  (begin
    (define gl:get-pixel-mapuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glGetPixelMapuiv(a0 , a1);")))
  (begin
    (define gl:get-pixel-mapusv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glGetPixelMapusv(a0 , a1);")))
  (begin
    (define gl:get-pointerv
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer (c-pointer void)) a1))
        "glGetPointerv(a0 , a1);")))
  (begin
    (define gl:get-polygon-stipple
      (foreign-lambda* void ((u8vector a0)) "glGetPolygonStipple(a0);")))
  (begin
    (define gl:get-string
      (foreign-lambda*
        (c-pointer (const unsigned-char))
        ((unsigned-integer a0))
        "return(glGetString(a0));")))
  (begin
    (define gl:get-tex-envfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetTexEnvfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-enviv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexEnviv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-gendv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetTexGendv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-genfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetTexGenfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-geniv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexGeniv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-image
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glGetTexImage(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-tex-level-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetTexLevelParameterfv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-tex-level-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetTexLevelParameteriv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-tex-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetTexParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:hint
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glHint(a0 , a1);")))
  (begin
    (define gl:index-mask
      (foreign-lambda* void ((unsigned-integer a0)) "glIndexMask(a0);")))
  (begin
    (define gl:index-pointer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glIndexPointer(a0 , a1 , a2);")))
  (begin
    (define gl:indexd (foreign-lambda* void ((double a0)) "glIndexd(a0);")))
  (begin
    (define gl:indexdv
      (foreign-lambda* void ((f64vector a0)) "glIndexdv(a0);")))
  (begin
    (define gl:indexf (foreign-lambda* void ((float a0)) "glIndexf(a0);")))
  (begin
    (define gl:indexfv
      (foreign-lambda* void ((f32vector a0)) "glIndexfv(a0);")))
  (begin
    (define gl:indexi (foreign-lambda* void ((integer a0)) "glIndexi(a0);")))
  (begin
    (define gl:indexiv
      (foreign-lambda* void ((s32vector a0)) "glIndexiv(a0);")))
  (begin
    (define gl:indexs (foreign-lambda* void ((short a0)) "glIndexs(a0);")))
  (begin
    (define gl:indexsv
      (foreign-lambda* void ((s16vector a0)) "glIndexsv(a0);")))
  (begin
    (define gl:indexub
      (foreign-lambda* void ((unsigned-char a0)) "glIndexub(a0);")))
  (begin
    (define gl:indexubv
      (foreign-lambda* void ((u8vector a0)) "glIndexubv(a0);")))
  (begin (define gl:init-names (foreign-lambda* void () "glInitNames();")))
  (begin
    (define gl:interleaved-arrays
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glInterleavedArrays(a0 , a1 , a2);")))
  (begin
    (define gl:is-enabled
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsEnabled(a0));")))
  (begin
    (define gl:is-list
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsList(a0));")))
  (begin
    (define gl:is-texture
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsTexture(a0));")))
  (begin
    (define gl:light-modelf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glLightModelf(a0 , a1);")))
  (begin
    (define gl:light-modelfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glLightModelfv(a0 , a1);")))
  (begin
    (define gl:light-modeli
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glLightModeli(a0 , a1);")))
  (begin
    (define gl:light-modeliv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glLightModeliv(a0 , a1);")))
  (begin
    (define gl:lightf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glLightf(a0 , a1 , a2);")))
  (begin
    (define gl:lightfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glLightfv(a0 , a1 , a2);")))
  (begin
    (define gl:lighti
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glLighti(a0 , a1 , a2);")))
  (begin
    (define gl:lightiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glLightiv(a0 , a1 , a2);")))
  (begin
    (define gl:line-stipple
      (foreign-lambda*
        void
        ((integer a0) (unsigned-short a1))
        "glLineStipple(a0 , a1);")))
  (begin
    (define gl:line-width
      (foreign-lambda* void ((float a0)) "glLineWidth(a0);")))
  (begin
    (define gl:list-base
      (foreign-lambda* void ((unsigned-integer a0)) "glListBase(a0);")))
  (begin
    (define gl:load-identity (foreign-lambda* void () "glLoadIdentity();")))
  (begin
    (define gl:load-matrixd
      (foreign-lambda* void ((f64vector a0)) "glLoadMatrixd(a0);")))
  (begin
    (define gl:load-matrixf
      (foreign-lambda* void ((f32vector a0)) "glLoadMatrixf(a0);")))
  (begin
    (define gl:load-name
      (foreign-lambda* void ((unsigned-integer a0)) "glLoadName(a0);")))
  (begin
    (define gl:logic-op
      (foreign-lambda* void ((unsigned-integer a0)) "glLogicOp(a0);")))
  (begin
    (define gl:map1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (double a1)
         (double a2)
         (integer a3)
         (integer a4)
         (f64vector a5))
        "glMap1d(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:map1f
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (integer a3)
         (integer a4)
         (f32vector a5))
        "glMap1f(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:map2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (double a1)
         (double a2)
         (integer a3)
         (integer a4)
         (double a5)
         (double a6)
         (integer a7)
         (integer a8)
         (f64vector a9))
        "glMap2d(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:map2f
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (integer a3)
         (integer a4)
         (float a5)
         (float a6)
         (integer a7)
         (integer a8)
         (f32vector a9))
        "glMap2f(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:map-grid1d
      (foreign-lambda*
        void
        ((integer a0) (double a1) (double a2))
        "glMapGrid1d(a0 , a1 , a2);")))
  (begin
    (define gl:map-grid1f
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2))
        "glMapGrid1f(a0 , a1 , a2);")))
  (begin
    (define gl:map-grid2d
      (foreign-lambda*
        void
        ((integer a0)
         (double a1)
         (double a2)
         (integer a3)
         (double a4)
         (double a5))
        "glMapGrid2d(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:map-grid2f
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2) (integer a3) (float a4) (float a5))
        "glMapGrid2f(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:materialf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glMaterialf(a0 , a1 , a2);")))
  (begin
    (define gl:materialfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glMaterialfv(a0 , a1 , a2);")))
  (begin
    (define gl:materiali
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glMateriali(a0 , a1 , a2);")))
  (begin
    (define gl:materialiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glMaterialiv(a0 , a1 , a2);")))
  (begin
    (define gl:matrix-mode
      (foreign-lambda* void ((unsigned-integer a0)) "glMatrixMode(a0);")))
  (begin
    (define gl:mult-matrixd
      (foreign-lambda* void ((f64vector a0)) "glMultMatrixd(a0);")))
  (begin
    (define gl:mult-matrixf
      (foreign-lambda* void ((f32vector a0)) "glMultMatrixf(a0);")))
  (begin
    (define gl:new-list
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glNewList(a0 , a1);")))
  (begin
    (define gl:normal3b
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glNormal3b(a0 , a1 , a2);")))
  (begin
    (define gl:normal3bv
      (foreign-lambda* void ((c-string a0)) "glNormal3bv(a0);")))
  (begin
    (define gl:normal3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glNormal3d(a0 , a1 , a2);")))
  (begin
    (define gl:normal3dv
      (foreign-lambda* void ((f64vector a0)) "glNormal3dv(a0);")))
  (begin
    (define gl:normal3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glNormal3f(a0 , a1 , a2);")))
  (begin
    (define gl:normal3fv
      (foreign-lambda* void ((f32vector a0)) "glNormal3fv(a0);")))
  (begin
    (define gl:normal3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glNormal3i(a0 , a1 , a2);")))
  (begin
    (define gl:normal3iv
      (foreign-lambda* void ((s32vector a0)) "glNormal3iv(a0);")))
  (begin
    (define gl:normal3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glNormal3s(a0 , a1 , a2);")))
  (begin
    (define gl:normal3sv
      (foreign-lambda* void ((s16vector a0)) "glNormal3sv(a0);")))
  (begin
    (define gl:normal-pointer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glNormalPointer(a0 , a1 , a2);")))
  (begin
    (define gl:ortho
      (foreign-lambda*
        void
        ((double a0)
         (double a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glOrtho(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:pass-through
      (foreign-lambda* void ((float a0)) "glPassThrough(a0);")))
  (begin
    (define gl:pixel-mapfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glPixelMapfv(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-mapuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glPixelMapuiv(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-mapusv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u16vector a2))
        "glPixelMapusv(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-storef
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPixelStoref(a0 , a1);")))
  (begin
    (define gl:pixel-storei
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPixelStorei(a0 , a1);")))
  (begin
    (define gl:pixel-transferf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPixelTransferf(a0 , a1);")))
  (begin
    (define gl:pixel-transferi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPixelTransferi(a0 , a1);")))
  (begin
    (define gl:pixel-zoom
      (foreign-lambda* void ((float a0) (float a1)) "glPixelZoom(a0 , a1);")))
  (begin
    (define gl:point-size
      (foreign-lambda* void ((float a0)) "glPointSize(a0);")))
  (begin
    (define gl:polygon-mode
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glPolygonMode(a0 , a1);")))
  (begin
    (define gl:polygon-offset
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glPolygonOffset(a0 , a1);")))
  (begin
    (define gl:polygon-stipple
      (foreign-lambda* void ((u8vector a0)) "glPolygonStipple(a0);")))
  (begin (define gl:pop-attrib (foreign-lambda* void () "glPopAttrib();")))
  (begin
    (define gl:pop-client-attrib
      (foreign-lambda* void () "glPopClientAttrib();")))
  (begin (define gl:pop-matrix (foreign-lambda* void () "glPopMatrix();")))
  (begin (define gl:pop-name (foreign-lambda* void () "glPopName();")))
  (begin
    (define gl:prioritize-textures
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1) (f32vector a2))
        "glPrioritizeTextures(a0 , a1 , a2);")))
  (begin
    (define gl:push-attrib
      (foreign-lambda* void ((unsigned-integer a0)) "glPushAttrib(a0);")))
  (begin
    (define gl:push-client-attrib
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glPushClientAttrib(a0);")))
  (begin (define gl:push-matrix (foreign-lambda* void () "glPushMatrix();")))
  (begin
    (define gl:push-name
      (foreign-lambda* void ((unsigned-integer a0)) "glPushName(a0);")))
  (begin
    (define gl:raster-pos2d
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glRasterPos2d(a0 , a1);")))
  (begin
    (define gl:raster-pos2dv
      (foreign-lambda* void ((f64vector a0)) "glRasterPos2dv(a0);")))
  (begin
    (define gl:raster-pos2f
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glRasterPos2f(a0 , a1);")))
  (begin
    (define gl:raster-pos2fv
      (foreign-lambda* void ((f32vector a0)) "glRasterPos2fv(a0);")))
  (begin
    (define gl:raster-pos2i
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glRasterPos2i(a0 , a1);")))
  (begin
    (define gl:raster-pos2iv
      (foreign-lambda* void ((s32vector a0)) "glRasterPos2iv(a0);")))
  (begin
    (define gl:raster-pos2s
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "glRasterPos2s(a0 , a1);")))
  (begin
    (define gl:raster-pos2sv
      (foreign-lambda* void ((s16vector a0)) "glRasterPos2sv(a0);")))
  (begin
    (define gl:raster-pos3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glRasterPos3d(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos3dv
      (foreign-lambda* void ((f64vector a0)) "glRasterPos3dv(a0);")))
  (begin
    (define gl:raster-pos3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glRasterPos3f(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos3fv
      (foreign-lambda* void ((f32vector a0)) "glRasterPos3fv(a0);")))
  (begin
    (define gl:raster-pos3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glRasterPos3i(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos3iv
      (foreign-lambda* void ((s32vector a0)) "glRasterPos3iv(a0);")))
  (begin
    (define gl:raster-pos3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glRasterPos3s(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos3sv
      (foreign-lambda* void ((s16vector a0)) "glRasterPos3sv(a0);")))
  (begin
    (define gl:raster-pos4d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glRasterPos4d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos4dv
      (foreign-lambda* void ((f64vector a0)) "glRasterPos4dv(a0);")))
  (begin
    (define gl:raster-pos4f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glRasterPos4f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos4fv
      (foreign-lambda* void ((f32vector a0)) "glRasterPos4fv(a0);")))
  (begin
    (define gl:raster-pos4i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glRasterPos4i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos4iv
      (foreign-lambda* void ((s32vector a0)) "glRasterPos4iv(a0);")))
  (begin
    (define gl:raster-pos4s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glRasterPos4s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos4sv
      (foreign-lambda* void ((s16vector a0)) "glRasterPos4sv(a0);")))
  (begin
    (define gl:read-buffer
      (foreign-lambda* void ((unsigned-integer a0)) "glReadBuffer(a0);")))
  (begin
    (define gl:read-pixels
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glReadPixels(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:rectd
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glRectd(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:rectdv
      (foreign-lambda*
        void
        ((f64vector a0) (f64vector a1))
        "glRectdv(a0 , a1);")))
  (begin
    (define gl:rectf
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glRectf(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:rectfv
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1))
        "glRectfv(a0 , a1);")))
  (begin
    (define gl:recti
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glRecti(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:rectiv
      (foreign-lambda*
        void
        ((s32vector a0) (s32vector a1))
        "glRectiv(a0 , a1);")))
  (begin
    (define gl:rects
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glRects(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:rectsv
      (foreign-lambda*
        void
        ((s16vector a0) (s16vector a1))
        "glRectsv(a0 , a1);")))
  (begin
    (define gl:render-mode
      (foreign-lambda*
        integer
        ((unsigned-integer a0))
        "return(glRenderMode(a0));")))
  (begin
    (define gl:rotated
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glRotated(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:rotatef
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glRotatef(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:scaled
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glScaled(a0 , a1 , a2);")))
  (begin
    (define gl:scalef
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glScalef(a0 , a1 , a2);")))
  (begin
    (define gl:scissor
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glScissor(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:select-buffer
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glSelectBuffer(a0 , a1);")))
  (begin
    (define gl:shade-model
      (foreign-lambda* void ((unsigned-integer a0)) "glShadeModel(a0);")))
  (begin
    (define gl:stencil-func
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (unsigned-integer a2))
        "glStencilFunc(a0 , a1 , a2);")))
  (begin
    (define gl:stencil-mask
      (foreign-lambda* void ((unsigned-integer a0)) "glStencilMask(a0);")))
  (begin
    (define gl:stencil-op
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glStencilOp(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord1d
      (foreign-lambda* void ((double a0)) "glTexCoord1d(a0);")))
  (begin
    (define gl:tex-coord1dv
      (foreign-lambda* void ((f64vector a0)) "glTexCoord1dv(a0);")))
  (begin
    (define gl:tex-coord1f
      (foreign-lambda* void ((float a0)) "glTexCoord1f(a0);")))
  (begin
    (define gl:tex-coord1fv
      (foreign-lambda* void ((f32vector a0)) "glTexCoord1fv(a0);")))
  (begin
    (define gl:tex-coord1i
      (foreign-lambda* void ((integer a0)) "glTexCoord1i(a0);")))
  (begin
    (define gl:tex-coord1iv
      (foreign-lambda* void ((s32vector a0)) "glTexCoord1iv(a0);")))
  (begin
    (define gl:tex-coord1s
      (foreign-lambda* void ((short a0)) "glTexCoord1s(a0);")))
  (begin
    (define gl:tex-coord1sv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord1sv(a0);")))
  (begin
    (define gl:tex-coord2d
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glTexCoord2d(a0 , a1);")))
  (begin
    (define gl:tex-coord2dv
      (foreign-lambda* void ((f64vector a0)) "glTexCoord2dv(a0);")))
  (begin
    (define gl:tex-coord2f
      (foreign-lambda* void ((float a0) (float a1)) "glTexCoord2f(a0 , a1);")))
  (begin
    (define gl:tex-coord2fv
      (foreign-lambda* void ((f32vector a0)) "glTexCoord2fv(a0);")))
  (begin
    (define gl:tex-coord2i
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glTexCoord2i(a0 , a1);")))
  (begin
    (define gl:tex-coord2iv
      (foreign-lambda* void ((s32vector a0)) "glTexCoord2iv(a0);")))
  (begin
    (define gl:tex-coord2s
      (foreign-lambda* void ((short a0) (short a1)) "glTexCoord2s(a0 , a1);")))
  (begin
    (define gl:tex-coord2sv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord2sv(a0);")))
  (begin
    (define gl:tex-coord3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glTexCoord3d(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3dv
      (foreign-lambda* void ((f64vector a0)) "glTexCoord3dv(a0);")))
  (begin
    (define gl:tex-coord3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glTexCoord3f(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3fv
      (foreign-lambda* void ((f32vector a0)) "glTexCoord3fv(a0);")))
  (begin
    (define gl:tex-coord3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glTexCoord3i(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3iv
      (foreign-lambda* void ((s32vector a0)) "glTexCoord3iv(a0);")))
  (begin
    (define gl:tex-coord3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glTexCoord3s(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3sv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord3sv(a0);")))
  (begin
    (define gl:tex-coord4d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glTexCoord4d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4dv
      (foreign-lambda* void ((f64vector a0)) "glTexCoord4dv(a0);")))
  (begin
    (define gl:tex-coord4f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glTexCoord4f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4fv
      (foreign-lambda* void ((f32vector a0)) "glTexCoord4fv(a0);")))
  (begin
    (define gl:tex-coord4i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glTexCoord4i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4iv
      (foreign-lambda* void ((s32vector a0)) "glTexCoord4iv(a0);")))
  (begin
    (define gl:tex-coord4s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glTexCoord4s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4sv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord4sv(a0);")))
  (begin
    (define gl:tex-coord-pointer
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glTexCoordPointer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-envf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glTexEnvf(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glTexEnvfv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexEnvi(a0 , a1 , a2);")))
  (begin
    (define gl:tex-enviv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexEnviv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-gend
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (double a2))
        "glTexGend(a0 , a1 , a2);")))
  (begin
    (define gl:tex-gendv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glTexGendv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-genf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glTexGenf(a0 , a1 , a2);")))
  (begin
    (define gl:tex-genfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glTexGenfv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-geni
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexGeni(a0 , a1 , a2);")))
  (begin
    (define gl:tex-geniv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexGeniv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         ((c-pointer void) a7))
        "glTexImage1D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "glTexImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:tex-parameterf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glTexParameterf(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glTexParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexParameteri(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-sub-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glTexSubImage1D(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:tex-sub-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "glTexSubImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:translated
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glTranslated(a0 , a1 , a2);")))
  (begin
    (define gl:translatef
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glTranslatef(a0 , a1 , a2);")))
  (begin
    (define gl:vertex2d
      (foreign-lambda* void ((double a0) (double a1)) "glVertex2d(a0 , a1);")))
  (begin
    (define gl:vertex2dv
      (foreign-lambda* void ((f64vector a0)) "glVertex2dv(a0);")))
  (begin
    (define gl:vertex2f
      (foreign-lambda* void ((float a0) (float a1)) "glVertex2f(a0 , a1);")))
  (begin
    (define gl:vertex2fv
      (foreign-lambda* void ((f32vector a0)) "glVertex2fv(a0);")))
  (begin
    (define gl:vertex2i
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glVertex2i(a0 , a1);")))
  (begin
    (define gl:vertex2iv
      (foreign-lambda* void ((s32vector a0)) "glVertex2iv(a0);")))
  (begin
    (define gl:vertex2s
      (foreign-lambda* void ((short a0) (short a1)) "glVertex2s(a0 , a1);")))
  (begin
    (define gl:vertex2sv
      (foreign-lambda* void ((s16vector a0)) "glVertex2sv(a0);")))
  (begin
    (define gl:vertex3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glVertex3d(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3dv
      (foreign-lambda* void ((f64vector a0)) "glVertex3dv(a0);")))
  (begin
    (define gl:vertex3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glVertex3f(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3fv
      (foreign-lambda* void ((f32vector a0)) "glVertex3fv(a0);")))
  (begin
    (define gl:vertex3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glVertex3i(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3iv
      (foreign-lambda* void ((s32vector a0)) "glVertex3iv(a0);")))
  (begin
    (define gl:vertex3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glVertex3s(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3sv
      (foreign-lambda* void ((s16vector a0)) "glVertex3sv(a0);")))
  (begin
    (define gl:vertex4d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glVertex4d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4dv
      (foreign-lambda* void ((f64vector a0)) "glVertex4dv(a0);")))
  (begin
    (define gl:vertex4f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glVertex4f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4fv
      (foreign-lambda* void ((f32vector a0)) "glVertex4fv(a0);")))
  (begin
    (define gl:vertex4i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glVertex4i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4iv
      (foreign-lambda* void ((s32vector a0)) "glVertex4iv(a0);")))
  (begin
    (define gl:vertex4s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glVertex4s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4sv
      (foreign-lambda* void ((s16vector a0)) "glVertex4sv(a0);")))
  (begin
    (define gl:vertex-pointer
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glVertexPointer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:viewport
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glViewport(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:u-error-string
      (foreign-lambda*
        (c-pointer (const unsigned-char))
        ((unsigned-integer a0))
        "return(gluErrorString(a0));")))
  (begin
    (define gl:u-error-unicode-string-ext
      (foreign-lambda*
        (c-pointer (const "wchar_t"))
        ((unsigned-integer a0))
        "return(gluErrorUnicodeStringEXT(a0));")))
  (begin
    (define gl:u-get-string
      (foreign-lambda*
        (c-pointer (const unsigned-char))
        ((unsigned-integer a0))
        "return(gluGetString(a0));")))
  (begin
    (define gl:u-ortho2d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "gluOrtho2D(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:u-perspective
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "gluPerspective(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:u-look-at
      (foreign-lambda*
        void
        ((double a0)
         (double a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5)
         (double a6)
         (double a7)
         (double a8))
        "gluLookAt(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:u-scale-image
      (foreign-lambda*
        integer
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "return(gluScaleImage(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8));")))
  (begin
    (define gl:u-build1dmipmaps
      (foreign-lambda*
        integer
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "return(gluBuild1DMipmaps(a0 , a1 , a2 , a3 , a4 , a5));")))
  (begin
    (define gl:u-build2dmipmaps
      (foreign-lambda*
        integer
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "return(gluBuild2DMipmaps(a0 , a1 , a2 , a3 , a4 , a5 , a6));")))
  (begin
    (define gl:u-new-quadric
      (foreign-lambda*
        (c-pointer (struct "GLUquadric"))
        ()
        "return(gluNewQuadric());")))
  (begin
    (define gl:u-delete-quadric
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0))
        "gluDeleteQuadric(a0);")))
  (begin
    (define gl:u-quadric-normals
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0) (unsigned-integer a1))
        "gluQuadricNormals(a0 , a1);")))
  (begin
    (define gl:u-quadric-texture
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0) (unsigned-char a1))
        "gluQuadricTexture(a0 , a1);")))
  (begin
    (define gl:u-quadric-orientation
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0) (unsigned-integer a1))
        "gluQuadricOrientation(a0 , a1);")))
  (begin
    (define gl:u-quadric-draw-style
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0) (unsigned-integer a1))
        "gluQuadricDrawStyle(a0 , a1);")))
  (begin
    (define gl:u-cylinder
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0)
         (double a1)
         (double a2)
         (double a3)
         (integer a4)
         (integer a5))
        "gluCylinder(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:u-disk
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0)
         (double a1)
         (double a2)
         (integer a3)
         (integer a4))
        "gluDisk(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:u-partial-disk
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0)
         (double a1)
         (double a2)
         (integer a3)
         (integer a4)
         (double a5)
         (double a6))
        "gluPartialDisk(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:u-sphere
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0)
         (double a1)
         (integer a2)
         (integer a3))
        "gluSphere(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:u-quadric-callback
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUquadric")) a0)
         (unsigned-integer a1)
         ((function void ()) a2))
        "gluQuadricCallback(a0 , a1 , a2);")))
  (begin
    (define gl:u-new-tess
      (foreign-lambda*
        (c-pointer (struct "GLUtesselator"))
        ()
        "return(gluNewTess());")))
  (begin
    (define gl:u-delete-tess
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluDeleteTess(a0);")))
  (begin
    (define gl:u-tess-begin-polygon
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0) ((c-pointer void) a1))
        "gluTessBeginPolygon(a0 , a1);")))
  (begin
    (define gl:u-tess-begin-contour
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluTessBeginContour(a0);")))
  (begin
    (define gl:u-tess-end-contour
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluTessEndContour(a0);")))
  (begin
    (define gl:u-tess-end-polygon
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluTessEndPolygon(a0);")))
  (begin
    (define gl:u-tess-property
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0)
         (unsigned-integer a1)
         (double a2))
        "gluTessProperty(a0 , a1 , a2);")))
  (begin
    (define gl:u-tess-normal
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0)
         (double a1)
         (double a2)
         (double a3))
        "gluTessNormal(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:u-tess-callback
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0)
         (unsigned-integer a1)
         ((function void ()) a2))
        "gluTessCallback(a0 , a1 , a2);")))
  (begin
    (define gl:u-get-tess-property
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0)
         (unsigned-integer a1)
         (f64vector a2))
        "gluGetTessProperty(a0 , a1 , a2);")))
  (begin
    (define gl:u-new-nurbs-renderer
      (foreign-lambda*
        (c-pointer (struct "GLUnurbs"))
        ()
        "return(gluNewNurbsRenderer());")))
  (begin
    (define gl:u-delete-nurbs-renderer
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluDeleteNurbsRenderer(a0);")))
  (begin
    (define gl:u-begin-surface
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluBeginSurface(a0);")))
  (begin
    (define gl:u-begin-curve
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluBeginCurve(a0);")))
  (begin
    (define gl:u-end-curve
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluEndCurve(a0);")))
  (begin
    (define gl:u-end-surface
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluEndSurface(a0);")))
  (begin
    (define gl:u-begin-trim
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluBeginTrim(a0);")))
  (begin
    (define gl:u-end-trim
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0))
        "gluEndTrim(a0);")))
  (begin
    (define gl:u-pwl-curve
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0)
         (integer a1)
         (f32vector a2)
         (integer a3)
         (unsigned-integer a4))
        "gluPwlCurve(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:u-nurbs-curve
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0)
         (integer a1)
         (f32vector a2)
         (integer a3)
         (f32vector a4)
         (integer a5)
         (unsigned-integer a6))
        "gluNurbsCurve(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:u-nurbs-surface
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0)
         (integer a1)
         (f32vector a2)
         (integer a3)
         (f32vector a4)
         (integer a5)
         (integer a6)
         (f32vector a7)
         (integer a8)
         (integer a9)
         (unsigned-integer a10))
        "gluNurbsSurface(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:u-nurbs-property
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0) (unsigned-integer a1) (float a2))
        "gluNurbsProperty(a0 , a1 , a2);")))
  (begin
    (define gl:u-get-nurbs-property
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0)
         (unsigned-integer a1)
         (f32vector a2))
        "gluGetNurbsProperty(a0 , a1 , a2);")))
  (begin
    (define gl:u-nurbs-callback
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUnurbs")) a0)
         (unsigned-integer a1)
         ((function void ()) a2))
        "gluNurbsCallback(a0 , a1 , a2);")))
  (begin
    (define gl:u-begin-polygon
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluBeginPolygon(a0);")))
  (begin
    (define gl:u-next-contour
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0) (unsigned-integer a1))
        "gluNextContour(a0 , a1);")))
  (begin
    (define gl:u-end-polygon
      (foreign-lambda*
        void
        (((c-pointer (struct "GLUtesselator")) a0))
        "gluEndPolygon(a0);")))
  (begin
    (define gl:blend-color
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glBlendColor(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-equation
      (foreign-lambda* void ((unsigned-integer a0)) "glBlendEquation(a0);")))
  (begin
    (define gl:draw-range-elements
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glDrawRangeElements(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glColorTable(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glColorTableParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:color-table-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glColorTableParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-table
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyColorTable(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-color-table
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetColorTable(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-color-table-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetColorTableParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-color-table-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetColorTableParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:color-sub-table
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glColorSubTable(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:copy-color-sub-table
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyColorSubTable(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-image3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glTexImage3D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:tex-sub-image3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         ((c-pointer void) a10))
        "glTexSubImage3D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:copy-tex-sub-image3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyTexSubImage3D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:convolution-filter1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glConvolutionFilter1D(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:convolution-filter2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glConvolutionFilter2D(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:convolution-parameterf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glConvolutionParameterf(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glConvolutionParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glConvolutionParameteri(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glConvolutionParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:copy-convolution-filter1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyConvolutionFilter1D(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:copy-convolution-filter2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glCopyConvolutionFilter2D(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-convolution-filter
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetConvolutionFilter(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-convolution-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetConvolutionParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetConvolutionParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:get-separable-filter
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         ((c-pointer void) a4)
         ((c-pointer void) a5))
        "glGetSeparableFilter(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:separable-filter2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6)
         ((c-pointer void) a7))
        "glSeparableFilter2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-histogram
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glGetHistogram(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-histogram-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetHistogramParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetHistogramParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glGetMinmax(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-minmax-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMinmaxParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMinmaxParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:histogram
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3))
        "glHistogram(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:minmax
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-char a2))
        "glMinmax(a0 , a1 , a2);")))
  (begin
    (define gl:reset-histogram
      (foreign-lambda* void ((unsigned-integer a0)) "glResetHistogram(a0);")))
  (begin
    (define gl:reset-minmax
      (foreign-lambda* void ((unsigned-integer a0)) "glResetMinmax(a0);")))
  (begin
    (define gl:active-texture
      (foreign-lambda* void ((unsigned-integer a0)) "glActiveTexture(a0);")))
  (begin
    (define gl:client-active-texture
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glClientActiveTexture(a0);")))
  (begin
    (define gl:multi-tex-coord1d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glMultiTexCoord1d(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord1dv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glMultiTexCoord1f(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord1fv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glMultiTexCoord1i(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord1iv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glMultiTexCoord1s(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord1sv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glMultiTexCoord2d(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord2dv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glMultiTexCoord2f(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord2fv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glMultiTexCoord2i(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord2iv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glMultiTexCoord2s(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord2sv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glMultiTexCoord3d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord3dv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glMultiTexCoord3f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord3fv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glMultiTexCoord3i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord3iv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glMultiTexCoord3s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord3sv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glMultiTexCoord4d(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord4dv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glMultiTexCoord4f(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord4fv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4i
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glMultiTexCoord4i(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord4iv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glMultiTexCoord4s(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord4sv(a0 , a1);")))
  (begin
    (define gl:load-transpose-matrixf
      (foreign-lambda* void ((f32vector a0)) "glLoadTransposeMatrixf(a0);")))
  (begin
    (define gl:load-transpose-matrixd
      (foreign-lambda* void ((f64vector a0)) "glLoadTransposeMatrixd(a0);")))
  (begin
    (define gl:mult-transpose-matrixf
      (foreign-lambda* void ((f32vector a0)) "glMultTransposeMatrixf(a0);")))
  (begin
    (define gl:mult-transpose-matrixd
      (foreign-lambda* void ((f64vector a0)) "glMultTransposeMatrixd(a0);")))
  (begin
    (define gl:sample-coverage
      (foreign-lambda*
        void
        ((float a0) (unsigned-char a1))
        "glSampleCoverage(a0 , a1);")))
  (begin
    (define gl:compressed-tex-image3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedTexImage3D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedTexImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-tex-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         ((c-pointer void) a6))
        "glCompressedTexImage1D(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:compressed-tex-sub-image3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (integer a9)
         ((c-pointer void) a10))
        "glCompressedTexSubImage3D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:compressed-tex-sub-image2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedTexSubImage2D(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-sub-image1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (integer a5)
         ((c-pointer void) a6))
        "glCompressedTexSubImage1D(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-compressed-tex-image
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glGetCompressedTexImage(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separate
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glBlendFuncSeparate(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:fog-coordf
      (foreign-lambda* void ((float a0)) "glFogCoordf(a0);")))
  (begin
    (define gl:fog-coordfv
      (foreign-lambda* void ((f32vector a0)) "glFogCoordfv(a0);")))
  (begin
    (define gl:fog-coordd
      (foreign-lambda* void ((double a0)) "glFogCoordd(a0);")))
  (begin
    (define gl:fog-coorddv
      (foreign-lambda* void ((f64vector a0)) "glFogCoorddv(a0);")))
  (begin
    (define gl:fog-coord-pointer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glFogCoordPointer(a0 , a1 , a2);")))
  (begin
    (define gl:multi-draw-arrays
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1) (s32vector a2) (integer a3))
        "glMultiDrawArrays(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (s32vector a1)
         (unsigned-integer a2)
         ((c-pointer (c-pointer (const void))) a3)
         (integer a4))
        "glMultiDrawElements(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:point-parameterf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPointParameterf(a0 , a1);")))
  (begin
    (define gl:point-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPointParameterfv(a0 , a1);")))
  (begin
    (define gl:point-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPointParameteri(a0 , a1);")))
  (begin
    (define gl:point-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glPointParameteriv(a0 , a1);")))
  (begin
    (define gl:secondary-color3b
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glSecondaryColor3b(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3bv
      (foreign-lambda* void ((c-string a0)) "glSecondaryColor3bv(a0);")))
  (begin
    (define gl:secondary-color3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glSecondaryColor3d(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3dv
      (foreign-lambda* void ((f64vector a0)) "glSecondaryColor3dv(a0);")))
  (begin
    (define gl:secondary-color3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glSecondaryColor3f(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3fv
      (foreign-lambda* void ((f32vector a0)) "glSecondaryColor3fv(a0);")))
  (begin
    (define gl:secondary-color3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glSecondaryColor3i(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3iv
      (foreign-lambda* void ((s32vector a0)) "glSecondaryColor3iv(a0);")))
  (begin
    (define gl:secondary-color3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glSecondaryColor3s(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3sv
      (foreign-lambda* void ((s16vector a0)) "glSecondaryColor3sv(a0);")))
  (begin
    (define gl:secondary-color3ub
      (foreign-lambda*
        void
        ((unsigned-char a0) (unsigned-char a1) (unsigned-char a2))
        "glSecondaryColor3ub(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3ubv
      (foreign-lambda* void ((u8vector a0)) "glSecondaryColor3ubv(a0);")))
  (begin
    (define gl:secondary-color3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glSecondaryColor3ui(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3uiv
      (foreign-lambda* void ((u32vector a0)) "glSecondaryColor3uiv(a0);")))
  (begin
    (define gl:secondary-color3us
      (foreign-lambda*
        void
        ((unsigned-short a0) (unsigned-short a1) (unsigned-short a2))
        "glSecondaryColor3us(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3usv
      (foreign-lambda* void ((u16vector a0)) "glSecondaryColor3usv(a0);")))
  (begin
    (define gl:secondary-color-pointer
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glSecondaryColorPointer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos2d
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glWindowPos2d(a0 , a1);")))
  (begin
    (define gl:window-pos2dv
      (foreign-lambda* void ((f64vector a0)) "glWindowPos2dv(a0);")))
  (begin
    (define gl:window-pos2f
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glWindowPos2f(a0 , a1);")))
  (begin
    (define gl:window-pos2fv
      (foreign-lambda* void ((f32vector a0)) "glWindowPos2fv(a0);")))
  (begin
    (define gl:window-pos2i
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glWindowPos2i(a0 , a1);")))
  (begin
    (define gl:window-pos2iv
      (foreign-lambda* void ((s32vector a0)) "glWindowPos2iv(a0);")))
  (begin
    (define gl:window-pos2s
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "glWindowPos2s(a0 , a1);")))
  (begin
    (define gl:window-pos2sv
      (foreign-lambda* void ((s16vector a0)) "glWindowPos2sv(a0);")))
  (begin
    (define gl:window-pos3d
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glWindowPos3d(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv
      (foreign-lambda* void ((f64vector a0)) "glWindowPos3dv(a0);")))
  (begin
    (define gl:window-pos3f
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glWindowPos3f(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv
      (foreign-lambda* void ((f32vector a0)) "glWindowPos3fv(a0);")))
  (begin
    (define gl:window-pos3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glWindowPos3i(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv
      (foreign-lambda* void ((s32vector a0)) "glWindowPos3iv(a0);")))
  (begin
    (define gl:window-pos3s
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glWindowPos3s(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv
      (foreign-lambda* void ((s16vector a0)) "glWindowPos3sv(a0);")))
  (begin
    (define gl:bind-buffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindBuffer(a0 , a1);")))
  (begin
    (define gl:delete-buffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteBuffers(a0 , a1);")))
  (begin
    (define gl:gen-buffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenBuffers(a0 , a1);")))
  (begin
    (define gl:is-buffer
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsBuffer(a0));")))
  (begin
    (define gl:buffer-data
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (long a1)
         ((c-pointer void) a2)
         (unsigned-integer a3))
        "glBufferData(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glBufferSubData(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-buffer-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glGetBufferSubData(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-buffer
      (foreign-lambda*
        (c-pointer void)
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glMapBuffer(a0 , a1));")))
  (begin
    (define gl:unmap-buffer
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glUnmapBuffer(a0));")))
  (begin
    (define gl:get-buffer-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetBufferParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-pointerv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetBufferPointerv(a0 , a1 , a2);")))
  (begin
    (define gl:gen-queries
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenQueries(a0 , a1);")))
  (begin
    (define gl:delete-queries
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteQueries(a0 , a1);")))
  (begin
    (define gl:is-query
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsQuery(a0));")))
  (begin
    (define gl:begin-query
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBeginQuery(a0 , a1);")))
  (begin
    (define gl:end-query
      (foreign-lambda* void ((unsigned-integer a0)) "glEndQuery(a0);")))
  (begin
    (define gl:get-queryiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetQueryiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetQueryObjectiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetQueryObjectuiv(a0 , a1 , a2);")))
  (begin
    (define gl:blend-equation-separate
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBlendEquationSeparate(a0 , a1);")))
  (begin
    (define gl:create-program
      (foreign-lambda* unsigned-integer () "return(glCreateProgram());")))
  (begin
    (define gl:create-shader
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glCreateShader(a0));")))
  (begin
    (define gl:delete-program
      (foreign-lambda* void ((unsigned-integer a0)) "glDeleteProgram(a0);")))
  (begin
    (define gl:delete-shader
      (foreign-lambda* void ((unsigned-integer a0)) "glDeleteShader(a0);")))
  (begin
    (define gl:attach-shader
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glAttachShader(a0 , a1);")))
  (begin
    (define gl:detach-shader
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDetachShader(a0 , a1);")))
  (begin
    (define gl:shader-source
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         ((c-pointer (c-pointer (const char))) a2)
         (s32vector a3))
        "glShaderSource(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compile-shader
      (foreign-lambda* void ((unsigned-integer a0)) "glCompileShader(a0);")))
  (begin
    (define gl:is-program
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsProgram(a0));")))
  (begin
    (define gl:is-shader
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsShader(a0));")))
  (begin
    (define gl:link-program
      (foreign-lambda* void ((unsigned-integer a0)) "glLinkProgram(a0);")))
  (begin
    (define gl:use-program
      (foreign-lambda* void ((unsigned-integer a0)) "glUseProgram(a0);")))
  (begin
    (define gl:validate-program
      (foreign-lambda* void ((unsigned-integer a0)) "glValidateProgram(a0);")))
  (begin
    (define gl:uniform1f
      (foreign-lambda*
        void
        ((integer a0) (float a1))
        "glUniform1f(a0 , a1);")))
  (begin
    (define gl:uniform2f
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2))
        "glUniform2f(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3f
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2) (float a3))
        "glUniform3f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4f
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2) (float a3) (float a4))
        "glUniform4f(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1i
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glUniform1i(a0 , a1);")))
  (begin
    (define gl:uniform2i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glUniform2i(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glUniform3i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4i
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3) (integer a4))
        "glUniform4i(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform1fv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform2fv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform3fv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform4fv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1iv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform1iv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2iv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform2iv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3iv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform3iv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4iv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform4iv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix2fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix3fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix4fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-shaderfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetShaderfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-shaderiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetShaderiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-programfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetProgramfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-programiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetProgramiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-info-log
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetShaderInfoLog(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-info-log
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetProgramInfoLog(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-attached-shaders
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2) (u32vector a3))
        "glGetAttachedShaders(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniform-location
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetUniformLocation(a0 , a1));")))
  (begin
    (define gl:get-active-uniform
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4)
         (u32vector a5)
         (c-string a6))
        "glGetActiveUniform(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-uniformfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glGetUniformfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2))
        "glGetUniformiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-source
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetShaderSource(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib1f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glVertexAttrib1f(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glVertexAttrib1s(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glVertexAttrib1d(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glVertexAttrib2f(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glVertexAttrib2s(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glVertexAttrib2d(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib3f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glVertexAttrib3f(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glVertexAttrib3s(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glVertexAttrib3d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib4f
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glVertexAttrib4f(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4s
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glVertexAttrib4s(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4d
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glVertexAttrib4d(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4nub
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4))
        "glVertexAttrib4Nub(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib1fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib1fv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib1sv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib1dv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib2fv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib2sv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib2dv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib3fv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib3sv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib3dv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4fv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib4fv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4sv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4dv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib4dv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttrib4iv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4bv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttrib4bv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ubv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttrib4ubv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4usv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttrib4usv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttrib4uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nbv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttrib4Nbv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nsv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4Nsv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4niv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttrib4Niv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nubv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttrib4Nubv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nusv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttrib4Nusv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttrib4Nuiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-pointer
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3)
         (integer a4)
         ((c-pointer void) a5))
        "glVertexAttribPointer(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:enable-vertex-attrib-array
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEnableVertexAttribArray(a0);")))
  (begin
    (define gl:disable-vertex-attrib-array
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDisableVertexAttribArray(a0);")))
  (begin
    (define gl:bind-attrib-location
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "glBindAttribLocation(a0 , a1 , a2);")))
  (begin
    (define gl:get-active-attrib
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4)
         (u32vector a5)
         (c-string a6))
        "glGetActiveAttrib(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-attrib-location
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetAttribLocation(a0 , a1));")))
  (begin
    (define gl:get-vertex-attribdv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetVertexAttribdv(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVertexAttribfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetVertexAttribPointerv(a0 , a1 , a2);")))
  (begin
    (define gl:draw-buffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDrawBuffers(a0 , a1);")))
  (begin
    (define gl:stencil-op-separate
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glStencilOpSeparate(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:stencil-func-separate
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3))
        "glStencilFuncSeparate(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:stencil-mask-separate
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glStencilMaskSeparate(a0 , a1);")))
  (begin
    (define gl:uniform-matrix2x3fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix2x3fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x2fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix3x2fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x4fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix2x4fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x2fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix4x2fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x4fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix3x4fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x3fv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix4x3fv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color-maski
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4))
        "glColorMaski(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-booleani-v
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetBooleani_v(a0 , a1 , a2);")))
  (begin
    (define gl:get-integeri-v
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetIntegeri_v(a0 , a1 , a2);")))
  (begin
    (define gl:enablei
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEnablei(a0 , a1);")))
  (begin
    (define gl:disablei
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDisablei(a0 , a1);")))
  (begin
    (define gl:is-enabledi
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glIsEnabledi(a0 , a1));")))
  (begin
    (define gl:begin-transform-feedback
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginTransformFeedback(a0);")))
  (begin
    (define gl:end-transform-feedback
      (foreign-lambda* void () "glEndTransformFeedback();")))
  (begin
    (define gl:bind-buffer-range
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3)
         (long a4))
        "glBindBufferRange(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-base
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBindBufferBase(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (s32vector a2)
         (unsigned-integer a3))
        "glTransformFeedbackVaryings(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-transform-feedback-varying
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTransformFeedbackVarying(a0 , a1 , a2);")))
  (begin
    (define gl:clamp-color
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glClampColor(a0 , a1);")))
  (begin
    (define gl:begin-conditional-render
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBeginConditionalRender(a0 , a1);")))
  (begin
    (define gl:end-conditional-render
      (foreign-lambda* void () "glEndConditionalRender();")))
  (begin
    (define gl:vertex-attrib-i1i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glVertexAttribI1i(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glVertexAttribI2i(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3i
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glVertexAttribI3i(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4i
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glVertexAttribI4i(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexAttribI1ui(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glVertexAttribI2ui(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glVertexAttribI3ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glVertexAttribI4ui(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI1iv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI2iv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI3iv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4iv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI4iv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i1uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI1uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI2uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI3uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI4uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4bv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttribI4bv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4sv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttribI4sv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4ubv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttribI4ubv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4usv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttribI4usv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-ipointer
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer void) a4))
        "glVertexAttribIPointer(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-vertex-attrib-iiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribIiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-iuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetVertexAttribIuiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glGetUniformuiv(a0 , a1 , a2);")))
  (begin
    (define gl:bind-frag-data-location
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "glBindFragDataLocation(a0 , a1 , a2);")))
  (begin
    (define gl:get-frag-data-location
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetFragDataLocation(a0 , a1));")))
  (begin
    (define gl:uniform1ui
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1))
        "glUniform1ui(a0 , a1);")))
  (begin
    (define gl:uniform2ui
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glUniform2ui(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3ui
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glUniform3ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4ui
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glUniform4ui(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1uiv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform1uiv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2uiv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform2uiv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3uiv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform3uiv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4uiv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform4uiv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameter-iiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexParameterIiv(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameter-iuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glTexParameterIuiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-iiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexParameterIiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-iuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetTexParameterIuiv(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2))
        "glClearBufferiv(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glClearBufferuiv(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glClearBufferfv(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferfi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (float a2) (integer a3))
        "glClearBufferfi(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-stringi
      (foreign-lambda*
        (c-pointer (const unsigned-char))
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glGetStringi(a0 , a1));")))
  (begin
    (define gl:draw-arrays-instanced
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glDrawArraysInstanced(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         (integer a4))
        "glDrawElementsInstanced(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-buffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glTexBuffer(a0 , a1 , a2);")))
  (begin
    (define gl:primitive-restart-index
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glPrimitiveRestartIndex(a0);")))
  (begin
    (define gl:get-integer64i-v
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer integer64) a2))
        "glGetInteger64i_v(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-parameteri64v
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer integer64) a2))
        "glGetBufferParameteri64v(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glProgramParameteri(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glFramebufferTexture(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-buffer-data
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glClearBufferData(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:clear-buffer-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (long a2)
         (long a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glClearBufferSubData(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:dispatch-compute
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glDispatchCompute(a0 , a1 , a2);")))
  (begin
    (define gl:dispatch-compute-indirect
      (foreign-lambda* void ((long a0)) "glDispatchComputeIndirect(a0);")))
  (begin
    (define gl:copy-image-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         (integer a8)
         (integer a9)
         (integer a10)
         (integer a11)
         (integer a12)
         (integer a13)
         (integer a14))
        "glCopyImageSubData(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14);")))
  (begin
    (define gl:framebuffer-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glFramebufferParameteri(a0 , a1 , a2);")))
  (begin
    (define gl:get-framebuffer-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFramebufferParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:get-internalformati64v
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer integer64) a4))
        "glGetInternalformati64v(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:invalidate-tex-sub-image
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glInvalidateTexSubImage(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:invalidate-tex-image
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glInvalidateTexImage(a0 , a1);")))
  (begin
    (define gl:invalidate-buffer-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2))
        "glInvalidateBufferSubData(a0 , a1 , a2);")))
  (begin
    (define gl:invalidate-buffer-data
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glInvalidateBufferData(a0);")))
  (begin
    (define gl:invalidate-framebuffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glInvalidateFramebuffer(a0 , a1 , a2);")))
  (begin
    (define gl:invalidate-sub-framebuffer
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (u32vector a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glInvalidateSubFramebuffer(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:multi-draw-arrays-indirect
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer void) a1) (integer a2) (integer a3))
        "glMultiDrawArraysIndirect(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements-indirect
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer void) a2)
         (integer a3)
         (integer a4))
        "glMultiDrawElementsIndirect(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-program-interfaceiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetProgramInterfaceiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-resource-index
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "return(glGetProgramResourceIndex(a0 , a1 , a2));")))
  (begin
    (define gl:get-program-resource-name
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (s32vector a4)
         (c-string a5))
        "glGetProgramResourceName(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-program-resourceiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (u32vector a4)
         (integer a5)
         (s32vector a6)
         (s32vector a7))
        "glGetProgramResourceiv(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-program-resource-location
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "return(glGetProgramResourceLocation(a0 , a1 , a2));")))
  (begin
    (define gl:get-program-resource-location-index
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "return(glGetProgramResourceLocationIndex(a0 , a1 , a2));")))
  (begin
    (define gl:shader-storage-block-binding
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glShaderStorageBlockBinding(a0 , a1 , a2);")))
  (begin
    (define gl:tex-buffer-range
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3)
         (long a4))
        "glTexBufferRange(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-storage2dmultisample
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (unsigned-char a5))
        "glTexStorage2DMultisample(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-storage3dmultisample
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-char a6))
        "glTexStorage3DMultisample(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:texture-view
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7))
        "glTextureView(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:bind-vertex-buffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (long a2) (integer a3))
        "glBindVertexBuffer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-format
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3)
         (unsigned-integer a4))
        "glVertexAttribFormat(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-iformat
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glVertexAttribIFormat(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-lformat
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glVertexAttribLFormat(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-binding
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexAttribBinding(a0 , a1);")))
  (begin
    (define gl:vertex-binding-divisor
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexBindingDivisor(a0 , a1);")))
  (begin
    (define gl:debug-message-control
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (u32vector a4)
         (unsigned-char a5))
        "glDebugMessageControl(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:debug-message-insert
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4)
         (c-string a5))
        "glDebugMessageInsert(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-debug-message-log
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0)
         (integer a1)
         (u32vector a2)
         (u32vector a3)
         (u32vector a4)
         (u32vector a5)
         (s32vector a6)
         (c-string a7))
        "return(glGetDebugMessageLog(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7));")))
  (begin
    (define gl:push-debug-group
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (c-string a3))
        "glPushDebugGroup(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:pop-debug-group (foreign-lambda* void () "glPopDebugGroup();")))
  (begin
    (define gl:object-label
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (c-string a3))
        "glObjectLabel(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-object-label
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (c-string a4))
        "glGetObjectLabel(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:object-ptr-label
      (foreign-lambda*
        void
        (((c-pointer void) a0) (integer a1) (c-string a2))
        "glObjectPtrLabel(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-ptr-label
      (foreign-lambda*
        void
        (((c-pointer void) a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetObjectPtrLabel(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:active-texture-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glActiveTextureARB(a0);")))
  (begin
    (define gl:client-active-texture-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glClientActiveTextureARB(a0);")))
  (begin
    (define gl:multi-tex-coord1d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glMultiTexCoord1dARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord1dvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glMultiTexCoord1fARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord1fvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1i-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glMultiTexCoord1iARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1iv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord1ivARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glMultiTexCoord1sARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord1svARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glMultiTexCoord2dARB(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord2dvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glMultiTexCoord2fARB(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord2fvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2i-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glMultiTexCoord2iARB(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2iv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord2ivARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glMultiTexCoord2sARB(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord2svARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glMultiTexCoord3dARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord3dvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glMultiTexCoord3fARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord3fvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3i-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glMultiTexCoord3iARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3iv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord3ivARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glMultiTexCoord3sARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord3svARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glMultiTexCoord4dARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMultiTexCoord4dvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glMultiTexCoord4fARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMultiTexCoord4fvARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4i-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glMultiTexCoord4iARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4iv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord4ivARB(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glMultiTexCoord4sARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord4svARB(a0 , a1);")))
  (begin
    (define gl:load-transpose-matrixf-arb
      (foreign-lambda*
        void
        ((f32vector a0))
        "glLoadTransposeMatrixfARB(a0);")))
  (begin
    (define gl:load-transpose-matrixd-arb
      (foreign-lambda*
        void
        ((f64vector a0))
        "glLoadTransposeMatrixdARB(a0);")))
  (begin
    (define gl:mult-transpose-matrixf-arb
      (foreign-lambda*
        void
        ((f32vector a0))
        "glMultTransposeMatrixfARB(a0);")))
  (begin
    (define gl:mult-transpose-matrixd-arb
      (foreign-lambda*
        void
        ((f64vector a0))
        "glMultTransposeMatrixdARB(a0);")))
  (begin
    (define gl:sample-coverage-arb
      (foreign-lambda*
        void
        ((float a0) (unsigned-char a1))
        "glSampleCoverageARB(a0 , a1);")))
  (begin
    (define gl:compressed-tex-image3darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedTexImage3DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-image2darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedTexImage2DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-tex-image1darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         ((c-pointer void) a6))
        "glCompressedTexImage1DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:compressed-tex-sub-image3darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (integer a9)
         ((c-pointer void) a10))
        "glCompressedTexSubImage3DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:compressed-tex-sub-image2darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedTexSubImage2DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-sub-image1darb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (integer a5)
         ((c-pointer void) a6))
        "glCompressedTexSubImage1DARB(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-compressed-tex-image-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glGetCompressedTexImageARB(a0 , a1 , a2);")))
  (begin
    (define gl:point-parameterf-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPointParameterfARB(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPointParameterfvARB(a0 , a1);")))
  (begin
    (define gl:weightbv-arb
      (foreign-lambda*
        void
        ((integer a0) (c-string a1))
        "glWeightbvARB(a0 , a1);")))
  (begin
    (define gl:weightsv-arb
      (foreign-lambda*
        void
        ((integer a0) (s16vector a1))
        "glWeightsvARB(a0 , a1);")))
  (begin
    (define gl:weightiv-arb
      (foreign-lambda*
        void
        ((integer a0) (s32vector a1))
        "glWeightivARB(a0 , a1);")))
  (begin
    (define gl:weightfv-arb
      (foreign-lambda*
        void
        ((integer a0) (f32vector a1))
        "glWeightfvARB(a0 , a1);")))
  (begin
    (define gl:weightdv-arb
      (foreign-lambda*
        void
        ((integer a0) (f64vector a1))
        "glWeightdvARB(a0 , a1);")))
  (begin
    (define gl:weightubv-arb
      (foreign-lambda*
        void
        ((integer a0) (u8vector a1))
        "glWeightubvARB(a0 , a1);")))
  (begin
    (define gl:weightusv-arb
      (foreign-lambda*
        void
        ((integer a0) (u16vector a1))
        "glWeightusvARB(a0 , a1);")))
  (begin
    (define gl:weightuiv-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glWeightuivARB(a0 , a1);")))
  (begin
    (define gl:weight-pointer-arb
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glWeightPointerARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-blend-arb
      (foreign-lambda* void ((integer a0)) "glVertexBlendARB(a0);")))
  (begin
    (define gl:current-palette-matrix-arb
      (foreign-lambda* void ((integer a0)) "glCurrentPaletteMatrixARB(a0);")))
  (begin
    (define gl:matrix-indexubv-arb
      (foreign-lambda*
        void
        ((integer a0) (u8vector a1))
        "glMatrixIndexubvARB(a0 , a1);")))
  (begin
    (define gl:matrix-indexusv-arb
      (foreign-lambda*
        void
        ((integer a0) (u16vector a1))
        "glMatrixIndexusvARB(a0 , a1);")))
  (begin
    (define gl:matrix-indexuiv-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glMatrixIndexuivARB(a0 , a1);")))
  (begin
    (define gl:matrix-index-pointer-arb
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glMatrixIndexPointerARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos2d-arb
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glWindowPos2dARB(a0 , a1);")))
  (begin
    (define gl:window-pos2dv-arb
      (foreign-lambda* void ((f64vector a0)) "glWindowPos2dvARB(a0);")))
  (begin
    (define gl:window-pos2f-arb
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glWindowPos2fARB(a0 , a1);")))
  (begin
    (define gl:window-pos2fv-arb
      (foreign-lambda* void ((f32vector a0)) "glWindowPos2fvARB(a0);")))
  (begin
    (define gl:window-pos2i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glWindowPos2iARB(a0 , a1);")))
  (begin
    (define gl:window-pos2iv-arb
      (foreign-lambda* void ((s32vector a0)) "glWindowPos2ivARB(a0);")))
  (begin
    (define gl:window-pos2s-arb
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "glWindowPos2sARB(a0 , a1);")))
  (begin
    (define gl:window-pos2sv-arb
      (foreign-lambda* void ((s16vector a0)) "glWindowPos2svARB(a0);")))
  (begin
    (define gl:window-pos3d-arb
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glWindowPos3dARB(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv-arb
      (foreign-lambda* void ((f64vector a0)) "glWindowPos3dvARB(a0);")))
  (begin
    (define gl:window-pos3f-arb
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glWindowPos3fARB(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv-arb
      (foreign-lambda* void ((f32vector a0)) "glWindowPos3fvARB(a0);")))
  (begin
    (define gl:window-pos3i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glWindowPos3iARB(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv-arb
      (foreign-lambda* void ((s32vector a0)) "glWindowPos3ivARB(a0);")))
  (begin
    (define gl:window-pos3s-arb
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glWindowPos3sARB(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv-arb
      (foreign-lambda* void ((s16vector a0)) "glWindowPos3svARB(a0);")))
  (begin
    (define gl:vertex-attrib1d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glVertexAttrib1dARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib1dvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glVertexAttrib1fARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib1fvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glVertexAttrib1sARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib1svARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glVertexAttrib2dARB(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib2dvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glVertexAttrib2fARB(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib2fvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glVertexAttrib2sARB(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib2svARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glVertexAttrib3dARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib3dvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glVertexAttrib3fARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib3fvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glVertexAttrib3sARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib3svARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nbv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttrib4NbvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4niv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttrib4NivARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nsv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4NsvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nub-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4))
        "glVertexAttrib4NubARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4nubv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttrib4NubvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nuiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttrib4NuivARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nusv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttrib4NusvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4bv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttrib4bvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glVertexAttrib4dARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib4dvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glVertexAttrib4fARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib4fvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4iv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttrib4ivARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4s-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glVertexAttrib4sARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4sv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4svARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ubv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttrib4ubvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4uiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttrib4uivARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4usv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttrib4usvARB(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-pointer-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3)
         (integer a4)
         ((c-pointer void) a5))
        "glVertexAttribPointerARB(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:enable-vertex-attrib-array-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEnableVertexAttribArrayARB(a0);")))
  (begin
    (define gl:disable-vertex-attrib-array-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDisableVertexAttribArrayARB(a0);")))
  (begin
    (define gl:program-string-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         ((c-pointer void) a3))
        "glProgramStringARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-program-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindProgramARB(a0 , a1);")))
  (begin
    (define gl:delete-programs-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteProgramsARB(a0 , a1);")))
  (begin
    (define gl:gen-programs-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenProgramsARB(a0 , a1);")))
  (begin
    (define gl:program-env-parameter4d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glProgramEnvParameter4dARB(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter4dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glProgramEnvParameter4dvARB(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameter4f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5))
        "glProgramEnvParameter4fARB(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter4fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glProgramEnvParameter4fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameter4d-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glProgramLocalParameter4dARB(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter4dv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glProgramLocalParameter4dvARB(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameter4f-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5))
        "glProgramLocalParameter4fARB(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter4fv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glProgramLocalParameter4fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameterdv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetProgramEnvParameterdvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameterfv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetProgramEnvParameterfvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameterdv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetProgramLocalParameterdvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameterfv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetProgramLocalParameterfvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-programiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetProgramivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-string-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) ((c-pointer void) a2))
        "glGetProgramStringARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribdv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetVertexAttribdvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVertexAttribfvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetVertexAttribPointervARB(a0 , a1 , a2);")))
  (begin
    (define gl:is-program-arb
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsProgramARB(a0));")))
  (begin
    (define gl:bind-buffer-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindBufferARB(a0 , a1);")))
  (begin
    (define gl:delete-buffers-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteBuffersARB(a0 , a1);")))
  (begin
    (define gl:gen-buffers-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenBuffersARB(a0 , a1);")))
  (begin
    (define gl:is-buffer-arb
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsBufferARB(a0));")))
  (begin
    (define gl:buffer-data-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (long a1)
         ((c-pointer void) a2)
         (unsigned-integer a3))
        "glBufferDataARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-sub-data-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glBufferSubDataARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-buffer-sub-data-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glGetBufferSubDataARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-buffer-arb
      (foreign-lambda*
        (c-pointer void)
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glMapBufferARB(a0 , a1));")))
  (begin
    (define gl:unmap-buffer-arb
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glUnmapBufferARB(a0));")))
  (begin
    (define gl:get-buffer-parameteriv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetBufferParameterivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-pointerv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetBufferPointervARB(a0 , a1 , a2);")))
  (begin
    (define gl:gen-queries-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenQueriesARB(a0 , a1);")))
  (begin
    (define gl:delete-queries-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteQueriesARB(a0 , a1);")))
  (begin
    (define gl:is-query-arb
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsQueryARB(a0));")))
  (begin
    (define gl:begin-query-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBeginQueryARB(a0 , a1);")))
  (begin
    (define gl:end-query-arb
      (foreign-lambda* void ((unsigned-integer a0)) "glEndQueryARB(a0);")))
  (begin
    (define gl:get-queryiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetQueryivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetQueryObjectivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectuiv-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetQueryObjectuivARB(a0 , a1 , a2);")))
  (begin
    (define gl:delete-object-arb
      (foreign-lambda* void ((unsigned-long a0)) "glDeleteObjectARB(a0);")))
  (begin
    (define gl:get-handle-arb
      (foreign-lambda*
        unsigned-long
        ((unsigned-integer a0))
        "return(glGetHandleARB(a0));")))
  (begin
    (define gl:detach-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-long a1))
        "glDetachObjectARB(a0 , a1);")))
  (begin
    (define gl:create-shader-object-arb
      (foreign-lambda*
        unsigned-long
        ((unsigned-integer a0))
        "return(glCreateShaderObjectARB(a0));")))
  (begin
    (define gl:shader-source-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         (integer a1)
         ((c-pointer (c-pointer (const char))) a2)
         (s32vector a3))
        "glShaderSourceARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compile-shader-arb
      (foreign-lambda* void ((unsigned-long a0)) "glCompileShaderARB(a0);")))
  (begin
    (define gl:create-program-object-arb
      (foreign-lambda*
        unsigned-long
        ()
        "return(glCreateProgramObjectARB());")))
  (begin
    (define gl:attach-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-long a1))
        "glAttachObjectARB(a0 , a1);")))
  (begin
    (define gl:link-program-arb
      (foreign-lambda* void ((unsigned-long a0)) "glLinkProgramARB(a0);")))
  (begin
    (define gl:use-program-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "glUseProgramObjectARB(a0);")))
  (begin
    (define gl:validate-program-arb
      (foreign-lambda* void ((unsigned-long a0)) "glValidateProgramARB(a0);")))
  (begin
    (define gl:uniform1f-arb
      (foreign-lambda*
        void
        ((integer a0) (float a1))
        "glUniform1fARB(a0 , a1);")))
  (begin
    (define gl:uniform2f-arb
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2))
        "glUniform2fARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3f-arb
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2) (float a3))
        "glUniform3fARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4f-arb
      (foreign-lambda*
        void
        ((integer a0) (float a1) (float a2) (float a3) (float a4))
        "glUniform4fARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glUniform1iARB(a0 , a1);")))
  (begin
    (define gl:uniform2i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glUniform2iARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glUniform3iARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4i-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3) (integer a4))
        "glUniform4iARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform1fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform2fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform3fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f32vector a2))
        "glUniform4fvARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1iv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform1ivARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2iv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform2ivARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3iv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform3ivARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4iv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (s32vector a2))
        "glUniform4ivARB(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix2fvARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix3fvARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4fv-arb
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f32vector a3))
        "glUniformMatrix4fvARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-object-parameterfv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-integer a1) (f32vector a2))
        "glGetObjectParameterfvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-parameteriv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-integer a1) (s32vector a2))
        "glGetObjectParameterivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-info-log-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetInfoLogARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-attached-objects-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (integer a1) (s32vector a2) (u32vector a3))
        "glGetAttachedObjectsARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniform-location-arb
      (foreign-lambda*
        integer
        ((unsigned-long a0) (c-string a1))
        "return(glGetUniformLocationARB(a0 , a1));")))
  (begin
    (define gl:get-active-uniform-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4)
         (u32vector a5)
         (c-string a6))
        "glGetActiveUniformARB(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-uniformfv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (integer a1) (f32vector a2))
        "glGetUniformfvARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformiv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (integer a1) (s32vector a2))
        "glGetUniformivARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-source-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetShaderSourceARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-attrib-location-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-integer a1) (c-string a2))
        "glBindAttribLocationARB(a0 , a1 , a2);")))
  (begin
    (define gl:get-active-attrib-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4)
         (u32vector a5)
         (c-string a6))
        "glGetActiveAttribARB(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-attrib-location-arb
      (foreign-lambda*
        integer
        ((unsigned-long a0) (c-string a1))
        "return(glGetAttribLocationARB(a0 , a1));")))
  (begin
    (define gl:draw-buffers-arb
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDrawBuffersARB(a0 , a1);")))
  (begin
    (define gl:clamp-color-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glClampColorARB(a0 , a1);")))
  (begin
    (define gl:draw-arrays-instanced-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glDrawArraysInstancedARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         (integer a4))
        "glDrawElementsInstancedARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:is-renderbuffer
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsRenderbuffer(a0));")))
  (begin
    (define gl:bind-renderbuffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindRenderbuffer(a0 , a1);")))
  (begin
    (define gl:delete-renderbuffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteRenderbuffers(a0 , a1);")))
  (begin
    (define gl:gen-renderbuffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenRenderbuffers(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2) (integer a3))
        "glRenderbufferStorage(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-renderbuffer-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetRenderbufferParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:is-framebuffer
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsFramebuffer(a0));")))
  (begin
    (define gl:bind-framebuffer
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindFramebuffer(a0 , a1);")))
  (begin
    (define gl:delete-framebuffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteFramebuffers(a0 , a1);")))
  (begin
    (define gl:gen-framebuffers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenFramebuffers(a0 , a1);")))
  (begin
    (define gl:check-framebuffer-status
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glCheckFramebufferStatus(a0));")))
  (begin
    (define gl:framebuffer-texture1d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glFramebufferTexture1D(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture2d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glFramebufferTexture2D(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture3d
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5))
        "glFramebufferTexture3D(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:framebuffer-renderbuffer
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glFramebufferRenderbuffer(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-framebuffer-attachment-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetFramebufferAttachmentParameteriv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-mipmap
      (foreign-lambda* void ((unsigned-integer a0)) "glGenerateMipmap(a0);")))
  (begin
    (define gl:blit-framebuffer
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9))
        "glBlitFramebuffer(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:renderbuffer-storage-multisample
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glRenderbufferStorageMultisample(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture-layer
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glFramebufferTextureLayer(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-parameteri-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glProgramParameteriARB(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glFramebufferTextureARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:framebuffer-texture-layer-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glFramebufferTextureLayerARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture-face-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4))
        "glFramebufferTextureFaceARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-divisor
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexAttribDivisor(a0 , a1);")))
  (begin
    (define gl:map-buffer-range
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) (unsigned-integer a3))
        "glMapBufferRange(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:flush-mapped-buffer-range
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2))
        "glFlushMappedBufferRange(a0 , a1 , a2);")))
  (begin
    (define gl:tex-buffer-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glTexBufferARB(a0 , a1 , a2);")))
  (begin
    (define gl:bind-vertex-array
      (foreign-lambda* void ((unsigned-integer a0)) "glBindVertexArray(a0);")))
  (begin
    (define gl:delete-vertex-arrays
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteVertexArrays(a0 , a1);")))
  (begin
    (define gl:gen-vertex-arrays
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenVertexArrays(a0 , a1);")))
  (begin
    (define gl:is-vertex-array
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsVertexArray(a0));")))
  (begin
    (define gl:get-uniform-indices
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         ((c-pointer (c-pointer (const char))) a2)
         (u32vector a3))
        "glGetUniformIndices(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-active-uniformsiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (u32vector a2)
         (unsigned-integer a3)
         (s32vector a4))
        "glGetActiveUniformsiv(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-active-uniform-name
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (c-string a4))
        "glGetActiveUniformName(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-uniform-block-index
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetUniformBlockIndex(a0 , a1));")))
  (begin
    (define gl:get-active-uniform-blockiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetActiveUniformBlockiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-active-uniform-block-name
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (c-string a4))
        "glGetActiveUniformBlockName(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform-block-binding
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glUniformBlockBinding(a0 , a1 , a2);")))
  (begin
    (define gl:copy-buffer-sub-data
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (long a2)
         (long a3)
         (long a4))
        "glCopyBufferSubData(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:draw-elements-base-vertex
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         (integer a4))
        "glDrawElementsBaseVertex(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:draw-range-elements-base-vertex
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5)
         (integer a6))
        "glDrawRangeElementsBaseVertex(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:draw-elements-instanced-base-vertex
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         (integer a4)
         (integer a5))
        "glDrawElementsInstancedBaseVertex(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:multi-draw-elements-base-vertex
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (s32vector a1)
         (unsigned-integer a2)
         ((c-pointer (c-pointer (const void))) a3)
         (integer a4)
         (s32vector a5))
        "glMultiDrawElementsBaseVertex(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:provoking-vertex
      (foreign-lambda* void ((unsigned-integer a0)) "glProvokingVertex(a0);")))
  (begin
    (define gl:fence-sync
      (foreign-lambda*
        (c-pointer (struct "__GLsync"))
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glFenceSync(a0 , a1));")))
  (begin
    (define gl:is-sync
      (foreign-lambda*
        unsigned-char
        (((c-pointer (struct "__GLsync")) a0))
        "return(glIsSync(a0));")))
  (begin
    (define gl:delete-sync
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0))
        "glDeleteSync(a0);")))
  (begin
    (define gl:client-wait-sync
      (foreign-lambda*
        unsigned-integer
        (((c-pointer (struct "__GLsync")) a0)
         (unsigned-integer a1)
         (unsigned-integer64 a2))
        "return(glClientWaitSync(a0 , a1 , a2));")))
  (begin
    (define gl:wait-sync
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0)
         (unsigned-integer a1)
         (unsigned-integer64 a2))
        "glWaitSync(a0 , a1 , a2);")))
  (begin
    (define gl:get-integer64v
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer integer64) a1))
        "glGetInteger64v(a0 , a1);")))
  (begin
    (define gl:get-synciv
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4))
        "glGetSynciv(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-image2dmultisample
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-char a5))
        "glTexImage2DMultisample(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-image3dmultisample
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-char a6))
        "glTexImage3DMultisample(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-multisamplefv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMultisamplefv(a0 , a1 , a2);")))
  (begin
    (define gl:sample-maski
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glSampleMaski(a0 , a1);")))
  (begin
    (define gl:blend-equationi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBlendEquationi(a0 , a1);")))
  (begin
    (define gl:blend-equation-separatei
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBlendEquationSeparatei(a0 , a1 , a2);")))
  (begin
    (define gl:blend-funci
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBlendFunci(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separatei
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glBlendFuncSeparatei(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:min-sample-shading
      (foreign-lambda* void ((float a0)) "glMinSampleShading(a0);")))
  (begin
    (define gl:named-string-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (c-string a2)
         (integer a3)
         (c-string a4))
        "glNamedStringARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:delete-named-string-arb
      (foreign-lambda*
        void
        ((integer a0) (c-string a1))
        "glDeleteNamedStringARB(a0 , a1);")))
  (begin
    (define gl:compile-shader-include-arb
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         ((c-pointer (c-pointer (const char))) a2)
         (s32vector a3))
        "glCompileShaderIncludeARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:is-named-string-arb
      (foreign-lambda*
        unsigned-char
        ((integer a0) (c-string a1))
        "return(glIsNamedStringARB(a0 , a1));")))
  (begin
    (define gl:get-named-string-arb
      (foreign-lambda*
        void
        ((integer a0) (c-string a1) (integer a2) (s32vector a3) (c-string a4))
        "glGetNamedStringARB(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-named-stringiv-arb
      (foreign-lambda*
        void
        ((integer a0) (c-string a1) (unsigned-integer a2) (s32vector a3))
        "glGetNamedStringivARB(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-frag-data-location-indexed
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (c-string a3))
        "glBindFragDataLocationIndexed(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-frag-data-index
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetFragDataIndex(a0 , a1));")))
  (begin
    (define gl:gen-samplers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenSamplers(a0 , a1);")))
  (begin
    (define gl:delete-samplers
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteSamplers(a0 , a1);")))
  (begin
    (define gl:is-sampler
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsSampler(a0));")))
  (begin
    (define gl:bind-sampler
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindSampler(a0 , a1);")))
  (begin
    (define gl:sampler-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glSamplerParameteri(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glSamplerParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameterf
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glSamplerParameterf(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glSamplerParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameter-iiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glSamplerParameterIiv(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameter-iuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glSamplerParameterIuiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameteriv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetSamplerParameteriv(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameter-iiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetSamplerParameterIiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetSamplerParameterfv(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameter-ifv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetSamplerParameterIfv(a0 , a1 , a2);")))
  (begin
    (define gl:query-counter
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glQueryCounter(a0 , a1);")))
  (begin
    (define gl:get-query-objecti64v
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer integer64) a2))
        "glGetQueryObjecti64v(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectui64v
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetQueryObjectui64v(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-p2ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexP2ui(a0 , a1);")))
  (begin
    (define gl:vertex-p2uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexP2uiv(a0 , a1);")))
  (begin
    (define gl:vertex-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexP3ui(a0 , a1);")))
  (begin
    (define gl:vertex-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexP3uiv(a0 , a1);")))
  (begin
    (define gl:vertex-p4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexP4ui(a0 , a1);")))
  (begin
    (define gl:vertex-p4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexP4uiv(a0 , a1);")))
  (begin
    (define gl:tex-coord-p1ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTexCoordP1ui(a0 , a1);")))
  (begin
    (define gl:tex-coord-p1uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glTexCoordP1uiv(a0 , a1);")))
  (begin
    (define gl:tex-coord-p2ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTexCoordP2ui(a0 , a1);")))
  (begin
    (define gl:tex-coord-p2uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glTexCoordP2uiv(a0 , a1);")))
  (begin
    (define gl:tex-coord-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTexCoordP3ui(a0 , a1);")))
  (begin
    (define gl:tex-coord-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glTexCoordP3uiv(a0 , a1);")))
  (begin
    (define gl:tex-coord-p4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTexCoordP4ui(a0 , a1);")))
  (begin
    (define gl:tex-coord-p4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glTexCoordP4uiv(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord-p1ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glMultiTexCoordP1ui(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p1uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glMultiTexCoordP1uiv(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p2ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glMultiTexCoordP2ui(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p2uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glMultiTexCoordP2uiv(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glMultiTexCoordP3ui(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glMultiTexCoordP3uiv(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glMultiTexCoordP4ui(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glMultiTexCoordP4uiv(a0 , a1 , a2);")))
  (begin
    (define gl:normal-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glNormalP3ui(a0 , a1);")))
  (begin
    (define gl:normal-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glNormalP3uiv(a0 , a1);")))
  (begin
    (define gl:color-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glColorP3ui(a0 , a1);")))
  (begin
    (define gl:color-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glColorP3uiv(a0 , a1);")))
  (begin
    (define gl:color-p4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glColorP4ui(a0 , a1);")))
  (begin
    (define gl:color-p4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glColorP4uiv(a0 , a1);")))
  (begin
    (define gl:secondary-color-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glSecondaryColorP3ui(a0 , a1);")))
  (begin
    (define gl:secondary-color-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glSecondaryColorP3uiv(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-p1ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (unsigned-integer a3))
        "glVertexAttribP1ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p1uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (u32vector a3))
        "glVertexAttribP1uiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p2ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (unsigned-integer a3))
        "glVertexAttribP2ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p2uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (u32vector a3))
        "glVertexAttribP2uiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p3ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (unsigned-integer a3))
        "glVertexAttribP3ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p3uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (u32vector a3))
        "glVertexAttribP3uiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p4ui
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (unsigned-integer a3))
        "glVertexAttribP4ui(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p4uiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-char a2)
         (u32vector a3))
        "glVertexAttribP4uiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-arrays-indirect
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer void) a1))
        "glDrawArraysIndirect(a0 , a1);")))
  (begin
    (define gl:draw-elements-indirect
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) ((c-pointer void) a2))
        "glDrawElementsIndirect(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1d
      (foreign-lambda*
        void
        ((integer a0) (double a1))
        "glUniform1d(a0 , a1);")))
  (begin
    (define gl:uniform2d
      (foreign-lambda*
        void
        ((integer a0) (double a1) (double a2))
        "glUniform2d(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3d
      (foreign-lambda*
        void
        ((integer a0) (double a1) (double a2) (double a3))
        "glUniform3d(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4d
      (foreign-lambda*
        void
        ((integer a0) (double a1) (double a2) (double a3) (double a4))
        "glUniform4d(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f64vector a2))
        "glUniform1dv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f64vector a2))
        "glUniform2dv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f64vector a2))
        "glUniform3dv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (f64vector a2))
        "glUniform4dv(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix2dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix3dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix4dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x3dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix2x3dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x4dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix2x4dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x2dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix3x2dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x4dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix3x4dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x2dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix4x2dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x3dv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (unsigned-char a2) (f64vector a3))
        "glUniformMatrix4x3dv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniformdv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f64vector a2))
        "glGetUniformdv(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform1d-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (double a2))
        "glProgramUniform1dEXT(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2d-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (double a2) (double a3))
        "glProgramUniform2dEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3d-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (double a2)
         (double a3)
         (double a4))
        "glProgramUniform3dEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4d-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glProgramUniform4dEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f64vector a3))
        "glProgramUniform1dvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f64vector a3))
        "glProgramUniform2dvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f64vector a3))
        "glProgramUniform3dvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f64vector a3))
        "glProgramUniform4dvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform-matrix2dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix2dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix3dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix4dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x3dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix2x3dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x4dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix2x4dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x2dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix3x2dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x4dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix3x4dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x2dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix4x2dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x3dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f64vector a4))
        "glProgramUniformMatrix4x3dvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-subroutine-uniform-location
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "return(glGetSubroutineUniformLocation(a0 , a1 , a2));")))
  (begin
    (define gl:get-subroutine-index
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "return(glGetSubroutineIndex(a0 , a1 , a2));")))
  (begin
    (define gl:get-active-subroutine-uniformiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (s32vector a4))
        "glGetActiveSubroutineUniformiv(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-active-subroutine-uniform-name
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (s32vector a4)
         (c-string a5))
        "glGetActiveSubroutineUniformName(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-active-subroutine-name
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (s32vector a4)
         (c-string a5))
        "glGetActiveSubroutineName(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:uniform-subroutinesuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glUniformSubroutinesuiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniform-subroutineuiv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glGetUniformSubroutineuiv(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-stageiv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetProgramStageiv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:patch-parameteri
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPatchParameteri(a0 , a1);")))
  (begin
    (define gl:patch-parameterfv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPatchParameterfv(a0 , a1);")))
  (begin
    (define gl:bind-transform-feedback
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindTransformFeedback(a0 , a1);")))
  (begin
    (define gl:delete-transform-feedbacks
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteTransformFeedbacks(a0 , a1);")))
  (begin
    (define gl:gen-transform-feedbacks
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenTransformFeedbacks(a0 , a1);")))
  (begin
    (define gl:is-transform-feedback
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsTransformFeedback(a0));")))
  (begin
    (define gl:pause-transform-feedback
      (foreign-lambda* void () "glPauseTransformFeedback();")))
  (begin
    (define gl:resume-transform-feedback
      (foreign-lambda* void () "glResumeTransformFeedback();")))
  (begin
    (define gl:draw-transform-feedback
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDrawTransformFeedback(a0 , a1);")))
  (begin
    (define gl:draw-transform-feedback-stream
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glDrawTransformFeedbackStream(a0 , a1 , a2);")))
  (begin
    (define gl:begin-query-indexed
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBeginQueryIndexed(a0 , a1 , a2);")))
  (begin
    (define gl:end-query-indexed
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEndQueryIndexed(a0 , a1);")))
  (begin
    (define gl:get-query-indexediv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetQueryIndexediv(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-color-ext
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glBlendColorEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:polygon-offset-ext
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glPolygonOffsetEXT(a0 , a1);")))
  (begin
    (define gl:tex-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glTexImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:tex-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         ((c-pointer void) a10))
        "glTexSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:get-tex-filter-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetTexFilterFuncSGIS(a0 , a1 , a2);")))
  (begin
    (define gl:tex-filter-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (f32vector a3))
        "glTexFilterFuncSGIS(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glTexSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:tex-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "glTexSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-tex-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glCopyTexImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-tex-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyTexImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-tex-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glCopyTexSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:copy-tex-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyTexSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-tex-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyTexSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-histogram-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glGetHistogramEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-histogram-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetHistogramParameterfvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetHistogramParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         ((c-pointer void) a4))
        "glGetMinmaxEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-minmax-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMinmaxParameterfvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMinmaxParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:histogram-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3))
        "glHistogramEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:minmax-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-char a2))
        "glMinmaxEXT(a0 , a1 , a2);")))
  (begin
    (define gl:reset-histogram-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glResetHistogramEXT(a0);")))
  (begin
    (define gl:reset-minmax-ext
      (foreign-lambda* void ((unsigned-integer a0)) "glResetMinmaxEXT(a0);")))
  (begin
    (define gl:convolution-filter1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glConvolutionFilter1DEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:convolution-filter2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6))
        "glConvolutionFilter2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:convolution-parameterf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glConvolutionParameterfEXT(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glConvolutionParameterfvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteri-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glConvolutionParameteriEXT(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glConvolutionParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:copy-convolution-filter1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyConvolutionFilter1DEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:copy-convolution-filter2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glCopyConvolutionFilter2DEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-convolution-filter-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetConvolutionFilterEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-convolution-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetConvolutionParameterfvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetConvolutionParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-separable-filter-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         ((c-pointer void) a4)
         ((c-pointer void) a5))
        "glGetSeparableFilterEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:separable-filter2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         ((c-pointer void) a6)
         ((c-pointer void) a7))
        "glSeparableFilter2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:color-table-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glColorTableSGI(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table-parameterfv-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glColorTableParameterfvSGI(a0 , a1 , a2);")))
  (begin
    (define gl:color-table-parameteriv-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glColorTableParameterivSGI(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-table-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyColorTableSGI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-color-table-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetColorTableSGI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-color-table-parameterfv-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetColorTableParameterfvSGI(a0 , a1 , a2);")))
  (begin
    (define gl:get-color-table-parameteriv-sgi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetColorTableParameterivSGI(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-tex-gen-sgix
      (foreign-lambda* void ((unsigned-integer a0)) "glPixelTexGenSGIX(a0);")))
  (begin
    (define gl:pixel-tex-gen-parameteri-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPixelTexGenParameteriSGIS(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameteriv-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glPixelTexGenParameterivSGIS(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameterf-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPixelTexGenParameterfSGIS(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameterfv-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPixelTexGenParameterfvSGIS(a0 , a1);")))
  (begin
    (define gl:get-pixel-tex-gen-parameteriv-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glGetPixelTexGenParameterivSGIS(a0 , a1);")))
  (begin
    (define gl:get-pixel-tex-gen-parameterfv-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetPixelTexGenParameterfvSGIS(a0 , a1);")))
  (begin
    (define gl:tex-image4dsgis
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         ((c-pointer void) a10))
        "glTexImage4DSGIS(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:tex-sub-image4dsgis
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (integer a9)
         (unsigned-integer a10)
         (unsigned-integer a11)
         ((c-pointer void) a12))
        "glTexSubImage4DSGIS(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:are-textures-resident-ext
      (foreign-lambda*
        unsigned-char
        ((integer a0) (u32vector a1) (u8vector a2))
        "return(glAreTexturesResidentEXT(a0 , a1 , a2));")))
  (begin
    (define gl:bind-texture-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindTextureEXT(a0 , a1);")))
  (begin
    (define gl:delete-textures-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteTexturesEXT(a0 , a1);")))
  (begin
    (define gl:gen-textures-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenTexturesEXT(a0 , a1);")))
  (begin
    (define gl:is-texture-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsTextureEXT(a0));")))
  (begin
    (define gl:prioritize-textures-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1) (f32vector a2))
        "glPrioritizeTexturesEXT(a0 , a1 , a2);")))
  (begin
    (define gl:detail-tex-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glDetailTexFuncSGIS(a0 , a1 , a2);")))
  (begin
    (define gl:get-detail-tex-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetDetailTexFuncSGIS(a0 , a1);")))
  (begin
    (define gl:sharpen-tex-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glSharpenTexFuncSGIS(a0 , a1 , a2);")))
  (begin
    (define gl:get-sharpen-tex-func-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetSharpenTexFuncSGIS(a0 , a1);")))
  (begin
    (define gl:sample-mask-sgis
      (foreign-lambda*
        void
        ((float a0) (unsigned-char a1))
        "glSampleMaskSGIS(a0 , a1);")))
  (begin
    (define gl:sample-pattern-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glSamplePatternSGIS(a0);")))
  (begin
    (define gl:blend-equation-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBlendEquationEXT(a0);")))
  (begin
    (define gl:sprite-parameterf-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glSpriteParameterfSGIX(a0 , a1);")))
  (begin
    (define gl:sprite-parameterfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glSpriteParameterfvSGIX(a0 , a1);")))
  (begin
    (define gl:sprite-parameteri-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glSpriteParameteriSGIX(a0 , a1);")))
  (begin
    (define gl:sprite-parameteriv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glSpriteParameterivSGIX(a0 , a1);")))
  (begin
    (define gl:point-parameterf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPointParameterfEXT(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPointParameterfvEXT(a0 , a1);")))
  (begin
    (define gl:point-parameterf-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPointParameterfSGIS(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-sgis
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glPointParameterfvSGIS(a0 , a1);")))
  (begin
    (define gl:get-instruments-sgix
      (foreign-lambda* integer () "return(glGetInstrumentsSGIX());")))
  (begin
    (define gl:instruments-buffer-sgix
      (foreign-lambda*
        void
        ((integer a0) (s32vector a1))
        "glInstrumentsBufferSGIX(a0 , a1);")))
  (begin
    (define gl:poll-instruments-sgix
      (foreign-lambda*
        integer
        ((s32vector a0))
        "return(glPollInstrumentsSGIX(a0));")))
  (begin
    (define gl:read-instruments-sgix
      (foreign-lambda* void ((integer a0)) "glReadInstrumentsSGIX(a0);")))
  (begin
    (define gl:start-instruments-sgix
      (foreign-lambda* void () "glStartInstrumentsSGIX();")))
  (begin
    (define gl:stop-instruments-sgix
      (foreign-lambda* void ((integer a0)) "glStopInstrumentsSGIX(a0);")))
  (begin
    (define gl:frame-zoom-sgix
      (foreign-lambda* void ((integer a0)) "glFrameZoomSGIX(a0);")))
  (begin
    (define gl:tag-sample-buffer-sgix
      (foreign-lambda* void () "glTagSampleBufferSGIX();")))
  (begin
    (define gl:deformation-map3d-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (double a1)
         (double a2)
         (integer a3)
         (integer a4)
         (double a5)
         (double a6)
         (integer a7)
         (integer a8)
         (double a9)
         (double a10)
         (integer a11)
         (integer a12)
         (f64vector a13))
        "glDeformationMap3dSGIX(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13);")))
  (begin
    (define gl:deformation-map3f-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (integer a3)
         (integer a4)
         (float a5)
         (float a6)
         (integer a7)
         (integer a8)
         (float a9)
         (float a10)
         (integer a11)
         (integer a12)
         (f32vector a13))
        "glDeformationMap3fSGIX(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13);")))
  (begin
    (define gl:deform-sgix
      (foreign-lambda* void ((unsigned-integer a0)) "glDeformSGIX(a0);")))
  (begin
    (define gl:load-identity-deformation-map-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glLoadIdentityDeformationMapSGIX(a0);")))
  (begin
    (define gl:reference-plane-sgix
      (foreign-lambda* void ((f64vector a0)) "glReferencePlaneSGIX(a0);")))
  (begin
    (define gl:flush-raster-sgix
      (foreign-lambda* void () "glFlushRasterSGIX();")))
  (begin
    (define gl:fog-func-sgis
      (foreign-lambda*
        void
        ((integer a0) (f32vector a1))
        "glFogFuncSGIS(a0 , a1);")))
  (begin
    (define gl:get-fog-func-sgis
      (foreign-lambda* void ((f32vector a0)) "glGetFogFuncSGIS(a0);")))
  (begin
    (define gl:image-transform-parameteri-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glImageTransformParameteriHP(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameterf-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glImageTransformParameterfHP(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameteriv-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glImageTransformParameterivHP(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameterfv-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glImageTransformParameterfvHP(a0 , a1 , a2);")))
  (begin
    (define gl:get-image-transform-parameteriv-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetImageTransformParameterivHP(a0 , a1 , a2);")))
  (begin
    (define gl:get-image-transform-parameterfv-hp
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetImageTransformParameterfvHP(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-sub-table-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glCopyColorSubTableEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:hint-pgi
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glHintPGI(a0 , a1);")))
  (begin
    (define gl:get-list-parameterfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetListParameterfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:get-list-parameteriv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetListParameterivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameterf-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glListParameterfSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameterfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glListParameterfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameteri-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glListParameteriSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameteriv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glListParameterivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:index-material-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glIndexMaterialEXT(a0 , a1);")))
  (begin
    (define gl:index-func-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glIndexFuncEXT(a0 , a1);")))
  (begin
    (define gl:lock-arrays-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glLockArraysEXT(a0 , a1);")))
  (begin
    (define gl:unlock-arrays-ext
      (foreign-lambda* void () "glUnlockArraysEXT();")))
  (begin
    (define gl:cull-parameterdv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glCullParameterdvEXT(a0 , a1);")))
  (begin
    (define gl:cull-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glCullParameterfvEXT(a0 , a1);")))
  (begin
    (define gl:fragment-color-material-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glFragmentColorMaterialSGIX(a0 , a1);")))
  (begin
    (define gl:fragment-lightf-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glFragmentLightfSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lightfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glFragmentLightfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lighti-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glFragmentLightiSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lightiv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glFragmentLightivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-light-modelf-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glFragmentLightModelfSGIX(a0 , a1);")))
  (begin
    (define gl:fragment-light-modelfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glFragmentLightModelfvSGIX(a0 , a1);")))
  (begin
    (define gl:fragment-light-modeli-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glFragmentLightModeliSGIX(a0 , a1);")))
  (begin
    (define gl:fragment-light-modeliv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glFragmentLightModelivSGIX(a0 , a1);")))
  (begin
    (define gl:fragment-materialf-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glFragmentMaterialfSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materialfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glFragmentMaterialfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materiali-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glFragmentMaterialiSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materialiv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glFragmentMaterialivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-lightfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetFragmentLightfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-lightiv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFragmentLightivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-materialfv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetFragmentMaterialfvSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-materialiv-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFragmentMaterialivSGIX(a0 , a1 , a2);")))
  (begin
    (define gl:light-envi-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glLightEnviSGIX(a0 , a1);")))
  (begin
    (define gl:draw-range-elements-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glDrawRangeElementsEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:apply-texture-ext
      (foreign-lambda* void ((unsigned-integer a0)) "glApplyTextureEXT(a0);")))
  (begin
    (define gl:texture-light-ext
      (foreign-lambda* void ((unsigned-integer a0)) "glTextureLightEXT(a0);")))
  (begin
    (define gl:texture-material-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTextureMaterialEXT(a0 , a1);")))
  (begin
    (define gl:async-marker-sgix
      (foreign-lambda* void ((unsigned-integer a0)) "glAsyncMarkerSGIX(a0);")))
  (begin
    (define gl:finish-async-sgix
      (foreign-lambda*
        integer
        ((u32vector a0))
        "return(glFinishAsyncSGIX(a0));")))
  (begin
    (define gl:poll-async-sgix
      (foreign-lambda*
        integer
        ((u32vector a0))
        "return(glPollAsyncSGIX(a0));")))
  (begin
    (define gl:gen-async-markers-sgix
      (foreign-lambda*
        unsigned-integer
        ((integer a0))
        "return(glGenAsyncMarkersSGIX(a0));")))
  (begin
    (define gl:delete-async-markers-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glDeleteAsyncMarkersSGIX(a0 , a1);")))
  (begin
    (define gl:is-async-marker-sgix
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsAsyncMarkerSGIX(a0));")))
  (begin
    (define gl:vertex-pointerv-intel
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer (const void))) a2))
        "glVertexPointervINTEL(a0 , a1 , a2);")))
  (begin
    (define gl:normal-pointerv-intel
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer (c-pointer (const void))) a1))
        "glNormalPointervINTEL(a0 , a1);")))
  (begin
    (define gl:color-pointerv-intel
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer (const void))) a2))
        "glColorPointervINTEL(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord-pointerv-intel
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer (const void))) a2))
        "glTexCoordPointervINTEL(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameteri-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glPixelTransformParameteriEXT(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameterf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (float a2))
        "glPixelTransformParameterfEXT(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glPixelTransformParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glPixelTransformParameterfvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3b-ext
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glSecondaryColor3bEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3bv-ext
      (foreign-lambda* void ((c-string a0)) "glSecondaryColor3bvEXT(a0);")))
  (begin
    (define gl:secondary-color3d-ext
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glSecondaryColor3dEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3dv-ext
      (foreign-lambda* void ((f64vector a0)) "glSecondaryColor3dvEXT(a0);")))
  (begin
    (define gl:secondary-color3f-ext
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glSecondaryColor3fEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3fv-ext
      (foreign-lambda* void ((f32vector a0)) "glSecondaryColor3fvEXT(a0);")))
  (begin
    (define gl:secondary-color3i-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glSecondaryColor3iEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3iv-ext
      (foreign-lambda* void ((s32vector a0)) "glSecondaryColor3ivEXT(a0);")))
  (begin
    (define gl:secondary-color3s-ext
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glSecondaryColor3sEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3sv-ext
      (foreign-lambda* void ((s16vector a0)) "glSecondaryColor3svEXT(a0);")))
  (begin
    (define gl:secondary-color3ub-ext
      (foreign-lambda*
        void
        ((unsigned-char a0) (unsigned-char a1) (unsigned-char a2))
        "glSecondaryColor3ubEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3ubv-ext
      (foreign-lambda* void ((u8vector a0)) "glSecondaryColor3ubvEXT(a0);")))
  (begin
    (define gl:secondary-color3ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glSecondaryColor3uiEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3uiv-ext
      (foreign-lambda* void ((u32vector a0)) "glSecondaryColor3uivEXT(a0);")))
  (begin
    (define gl:secondary-color3us-ext
      (foreign-lambda*
        void
        ((unsigned-short a0) (unsigned-short a1) (unsigned-short a2))
        "glSecondaryColor3usEXT(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3usv-ext
      (foreign-lambda* void ((u16vector a0)) "glSecondaryColor3usvEXT(a0);")))
  (begin
    (define gl:secondary-color-pointer-ext
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glSecondaryColorPointerEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-normal-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glTextureNormalEXT(a0);")))
  (begin
    (define gl:multi-draw-arrays-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1) (s32vector a2) (integer a3))
        "glMultiDrawArraysEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (s32vector a1)
         (unsigned-integer a2)
         ((c-pointer (c-pointer (const void))) a3)
         (integer a4))
        "glMultiDrawElementsEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:fog-coordf-ext
      (foreign-lambda* void ((float a0)) "glFogCoordfEXT(a0);")))
  (begin
    (define gl:fog-coordfv-ext
      (foreign-lambda* void ((f32vector a0)) "glFogCoordfvEXT(a0);")))
  (begin
    (define gl:fog-coordd-ext
      (foreign-lambda* void ((double a0)) "glFogCoorddEXT(a0);")))
  (begin
    (define gl:fog-coorddv-ext
      (foreign-lambda* void ((f64vector a0)) "glFogCoorddvEXT(a0);")))
  (begin
    (define gl:fog-coord-pointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glFogCoordPointerEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3b-ext
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glTangent3bEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3bv-ext
      (foreign-lambda* void ((c-string a0)) "glTangent3bvEXT(a0);")))
  (begin
    (define gl:tangent3d-ext
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glTangent3dEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3dv-ext
      (foreign-lambda* void ((f64vector a0)) "glTangent3dvEXT(a0);")))
  (begin
    (define gl:tangent3f-ext
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glTangent3fEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3fv-ext
      (foreign-lambda* void ((f32vector a0)) "glTangent3fvEXT(a0);")))
  (begin
    (define gl:tangent3i-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glTangent3iEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3iv-ext
      (foreign-lambda* void ((s32vector a0)) "glTangent3ivEXT(a0);")))
  (begin
    (define gl:tangent3s-ext
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glTangent3sEXT(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3sv-ext
      (foreign-lambda* void ((s16vector a0)) "glTangent3svEXT(a0);")))
  (begin
    (define gl:binormal3b-ext
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glBinormal3bEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3bv-ext
      (foreign-lambda* void ((c-string a0)) "glBinormal3bvEXT(a0);")))
  (begin
    (define gl:binormal3d-ext
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glBinormal3dEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3dv-ext
      (foreign-lambda* void ((f64vector a0)) "glBinormal3dvEXT(a0);")))
  (begin
    (define gl:binormal3f-ext
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glBinormal3fEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3fv-ext
      (foreign-lambda* void ((f32vector a0)) "glBinormal3fvEXT(a0);")))
  (begin
    (define gl:binormal3i-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glBinormal3iEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3iv-ext
      (foreign-lambda* void ((s32vector a0)) "glBinormal3ivEXT(a0);")))
  (begin
    (define gl:binormal3s-ext
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glBinormal3sEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3sv-ext
      (foreign-lambda* void ((s16vector a0)) "glBinormal3svEXT(a0);")))
  (begin
    (define gl:tangent-pointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glTangentPointerEXT(a0 , a1 , a2);")))
  (begin
    (define gl:binormal-pointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glBinormalPointerEXT(a0 , a1 , a2);")))
  (begin
    (define gl:finish-texture-sunx
      (foreign-lambda* void () "glFinishTextureSUNX();")))
  (begin
    (define gl:global-alpha-factorb-sun
      (foreign-lambda* void ((char a0)) "glGlobalAlphaFactorbSUN(a0);")))
  (begin
    (define gl:global-alpha-factors-sun
      (foreign-lambda* void ((short a0)) "glGlobalAlphaFactorsSUN(a0);")))
  (begin
    (define gl:global-alpha-factori-sun
      (foreign-lambda* void ((integer a0)) "glGlobalAlphaFactoriSUN(a0);")))
  (begin
    (define gl:global-alpha-factorf-sun
      (foreign-lambda* void ((float a0)) "glGlobalAlphaFactorfSUN(a0);")))
  (begin
    (define gl:global-alpha-factord-sun
      (foreign-lambda* void ((double a0)) "glGlobalAlphaFactordSUN(a0);")))
  (begin
    (define gl:global-alpha-factorub-sun
      (foreign-lambda*
        void
        ((unsigned-char a0))
        "glGlobalAlphaFactorubSUN(a0);")))
  (begin
    (define gl:global-alpha-factorus-sun
      (foreign-lambda*
        void
        ((unsigned-short a0))
        "glGlobalAlphaFactorusSUN(a0);")))
  (begin
    (define gl:global-alpha-factorui-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glGlobalAlphaFactoruiSUN(a0);")))
  (begin
    (define gl:replacement-codeui-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glReplacementCodeuiSUN(a0);")))
  (begin
    (define gl:replacement-codeus-sun
      (foreign-lambda*
        void
        ((unsigned-short a0))
        "glReplacementCodeusSUN(a0);")))
  (begin
    (define gl:replacement-codeub-sun
      (foreign-lambda*
        void
        ((unsigned-char a0))
        "glReplacementCodeubSUN(a0);")))
  (begin
    (define gl:replacement-codeuiv-sun
      (foreign-lambda* void ((u32vector a0)) "glReplacementCodeuivSUN(a0);")))
  (begin
    (define gl:replacement-codeusv-sun
      (foreign-lambda* void ((u16vector a0)) "glReplacementCodeusvSUN(a0);")))
  (begin
    (define gl:replacement-codeubv-sun
      (foreign-lambda* void ((u8vector a0)) "glReplacementCodeubvSUN(a0);")))
  (begin
    (define gl:replacement-code-pointer-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         ((c-pointer (c-pointer (const void))) a2))
        "glReplacementCodePointerSUN(a0 , a1 , a2);")))
  (begin
    (define gl:color4ub-vertex2f-sun
      (foreign-lambda*
        void
        ((unsigned-char a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (float a4)
         (float a5))
        "glColor4ubVertex2fSUN(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color4ub-vertex2fv-sun
      (foreign-lambda*
        void
        ((u8vector a0) (f32vector a1))
        "glColor4ubVertex2fvSUN(a0 , a1);")))
  (begin
    (define gl:color4ub-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-char a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (float a4)
         (float a5)
         (float a6))
        "glColor4ubVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        ((u8vector a0) (f32vector a1))
        "glColor4ubVertex3fvSUN(a0 , a1);")))
  (begin
    (define gl:color3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3) (float a4) (float a5))
        "glColor3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1))
        "glColor3fVertex3fvSUN(a0 , a1);")))
  (begin
    (define gl:normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3) (float a4) (float a5))
        "glNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1))
        "glNormal3fVertex3fvSUN(a0 , a1);")))
  (begin
    (define gl:color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8)
         (float a9))
        "glColor4fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1) (f32vector a2))
        "glColor4fNormal3fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3) (float a4))
        "glTexCoord2fVertex3fSUN(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-coord2f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1))
        "glTexCoord2fVertex3fvSUN(a0 , a1);")))
  (begin
    (define gl:tex-coord4f-vertex4f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7))
        "glTexCoord4fVertex4fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord4f-vertex4fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1))
        "glTexCoord4fVertex4fvSUN(a0 , a1);")))
  (begin
    (define gl:tex-coord2f-color4ub-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4)
         (unsigned-char a5)
         (float a6)
         (float a7)
         (float a8))
        "glTexCoord2fColor4ubVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:tex-coord2f-color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (u8vector a1) (f32vector a2))
        "glTexCoord2fColor4ubVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-color3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7))
        "glTexCoord2fColor3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord2f-color3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1) (f32vector a2))
        "glTexCoord2fColor3fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7))
        "glTexCoord2fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord2f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1) (f32vector a2))
        "glTexCoord2fNormal3fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8)
         (float a9)
         (float a10)
         (float a11))
        "glTexCoord2fColor4fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:tex-coord2f-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1) (f32vector a2) (f32vector a3))
        "glTexCoord2fColor4fNormal3fVertex3fvSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4f-color4f-normal3f-vertex4f-sun
      (foreign-lambda*
        void
        ((float a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8)
         (float a9)
         (float a10)
         (float a11)
         (float a12)
         (float a13)
         (float a14))
        "glTexCoord4fColor4fNormal3fVertex4fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14);")))
  (begin
    (define gl:tex-coord4f-color4f-normal3f-vertex4fv-sun
      (foreign-lambda*
        void
        ((f32vector a0) (f32vector a1) (f32vector a2) (f32vector a3))
        "glTexCoord4fColor4fNormal3fVertex4fvSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glReplacementCodeuiVertex3fSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1))
        "glReplacementCodeuiVertex3fvSUN(a0 , a1);")))
  (begin
    (define gl:replacement-codeui-color4ub-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4)
         (float a5)
         (float a6)
         (float a7))
        "glReplacementCodeuiColor4ubVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:replacement-codeui-color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (u8vector a1) (f32vector a2))
        "glReplacementCodeuiColor4ubVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-color3f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6))
        "glReplacementCodeuiColor3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:replacement-codeui-color3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1) (f32vector a2))
        "glReplacementCodeuiColor3fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6))
        "glReplacementCodeuiNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:replacement-codeui-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1) (f32vector a2))
        "glReplacementCodeuiNormal3fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8)
         (float a9)
         (float a10))
        "glReplacementCodeuiColor4fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:replacement-codeui-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1) (f32vector a2) (f32vector a3))
        "glReplacementCodeuiColor4fNormal3fVertex3fvSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5))
        "glReplacementCodeuiTexCoord2fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1) (f32vector a2))
        "glReplacementCodeuiTexCoord2fVertex3fvSUN(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8))
        "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0) (f32vector a1) (f32vector a2) (f32vector a3))
        "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (float a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6)
         (float a7)
         (float a8)
         (float a9)
         (float a10)
         (float a11)
         (float a12))
        "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        ((u32vector a0)
         (f32vector a1)
         (f32vector a2)
         (f32vector a3)
         (f32vector a4))
        "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:blend-func-separate-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glBlendFuncSeparateEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-func-separate-ingr
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glBlendFuncSeparateINGR(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-weightf-ext
      (foreign-lambda* void ((float a0)) "glVertexWeightfEXT(a0);")))
  (begin
    (define gl:vertex-weightfv-ext
      (foreign-lambda* void ((f32vector a0)) "glVertexWeightfvEXT(a0);")))
  (begin
    (define gl:vertex-weight-pointer-ext
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2) ((c-pointer void) a3))
        "glVertexWeightPointerEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:flush-vertex-array-range-nv
      (foreign-lambda* void () "glFlushVertexArrayRangeNV();")))
  (begin
    (define gl:vertex-array-range-nv
      (foreign-lambda*
        void
        ((integer a0) ((c-pointer void) a1))
        "glVertexArrayRangeNV(a0 , a1);")))
  (begin
    (define gl:combiner-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glCombinerParameterfvNV(a0 , a1);")))
  (begin
    (define gl:combiner-parameterf-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glCombinerParameterfNV(a0 , a1);")))
  (begin
    (define gl:combiner-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glCombinerParameterivNV(a0 , a1);")))
  (begin
    (define gl:combiner-parameteri-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glCombinerParameteriNV(a0 , a1);")))
  (begin
    (define gl:combiner-input-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glCombinerInputNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:combiner-output-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-char a7)
         (unsigned-char a8)
         (unsigned-char a9))
        "glCombinerOutputNV(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:final-combiner-input-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glFinalCombinerInputNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-combiner-input-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (f32vector a4))
        "glGetCombinerInputParameterfvNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-combiner-input-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (s32vector a4))
        "glGetCombinerInputParameterivNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-combiner-output-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetCombinerOutputParameterfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-combiner-output-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetCombinerOutputParameterivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-final-combiner-input-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetFinalCombinerInputParameterfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-final-combiner-input-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFinalCombinerInputParameterivNV(a0 , a1 , a2);")))
  (begin
    (define gl:resize-buffers-mesa
      (foreign-lambda* void () "glResizeBuffersMESA();")))
  (begin
    (define gl:window-pos2d-mesa
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glWindowPos2dMESA(a0 , a1);")))
  (begin
    (define gl:window-pos2dv-mesa
      (foreign-lambda* void ((f64vector a0)) "glWindowPos2dvMESA(a0);")))
  (begin
    (define gl:window-pos2f-mesa
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glWindowPos2fMESA(a0 , a1);")))
  (begin
    (define gl:window-pos2fv-mesa
      (foreign-lambda* void ((f32vector a0)) "glWindowPos2fvMESA(a0);")))
  (begin
    (define gl:window-pos2i-mesa
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glWindowPos2iMESA(a0 , a1);")))
  (begin
    (define gl:window-pos2iv-mesa
      (foreign-lambda* void ((s32vector a0)) "glWindowPos2ivMESA(a0);")))
  (begin
    (define gl:window-pos2s-mesa
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "glWindowPos2sMESA(a0 , a1);")))
  (begin
    (define gl:window-pos2sv-mesa
      (foreign-lambda* void ((s16vector a0)) "glWindowPos2svMESA(a0);")))
  (begin
    (define gl:window-pos3d-mesa
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2))
        "glWindowPos3dMESA(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv-mesa
      (foreign-lambda* void ((f64vector a0)) "glWindowPos3dvMESA(a0);")))
  (begin
    (define gl:window-pos3f-mesa
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2))
        "glWindowPos3fMESA(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv-mesa
      (foreign-lambda* void ((f32vector a0)) "glWindowPos3fvMESA(a0);")))
  (begin
    (define gl:window-pos3i-mesa
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glWindowPos3iMESA(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv-mesa
      (foreign-lambda* void ((s32vector a0)) "glWindowPos3ivMESA(a0);")))
  (begin
    (define gl:window-pos3s-mesa
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glWindowPos3sMESA(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv-mesa
      (foreign-lambda* void ((s16vector a0)) "glWindowPos3svMESA(a0);")))
  (begin
    (define gl:window-pos4d-mesa
      (foreign-lambda*
        void
        ((double a0) (double a1) (double a2) (double a3))
        "glWindowPos4dMESA(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4dv-mesa
      (foreign-lambda* void ((f64vector a0)) "glWindowPos4dvMESA(a0);")))
  (begin
    (define gl:window-pos4f-mesa
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3))
        "glWindowPos4fMESA(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4fv-mesa
      (foreign-lambda* void ((f32vector a0)) "glWindowPos4fvMESA(a0);")))
  (begin
    (define gl:window-pos4i-mesa
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glWindowPos4iMESA(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4iv-mesa
      (foreign-lambda* void ((s32vector a0)) "glWindowPos4ivMESA(a0);")))
  (begin
    (define gl:window-pos4s-mesa
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glWindowPos4sMESA(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4sv-mesa
      (foreign-lambda* void ((s16vector a0)) "glWindowPos4svMESA(a0);")))
  (begin
    (define gl:multi-mode-draw-arrays-ibm
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (s32vector a1)
         (s32vector a2)
         (integer a3)
         (integer a4))
        "glMultiModeDrawArraysIBM(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-mode-draw-elements-ibm
      (foreign-lambda*
        void
        ((u32vector a0)
         (s32vector a1)
         (unsigned-integer a2)
         ((c-pointer (c-pointer (const void))) a3)
         (integer a4)
         (integer a5))
        "glMultiModeDrawElementsIBM(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tbuffer-mask3dfx
      (foreign-lambda* void ((unsigned-integer a0)) "glTbufferMask3DFX(a0);")))
  (begin
    (define gl:sample-mask-ext
      (foreign-lambda*
        void
        ((float a0) (unsigned-char a1))
        "glSampleMaskEXT(a0 , a1);")))
  (begin
    (define gl:sample-pattern-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glSamplePatternEXT(a0);")))
  (begin
    (define gl:texture-color-mask-sgis
      (foreign-lambda*
        void
        ((unsigned-char a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3))
        "glTextureColorMaskSGIS(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:igloo-interface-sgix
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer void) a1))
        "glIglooInterfaceSGIX(a0 , a1);")))
  (begin
    (define gl:delete-fences-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteFencesNV(a0 , a1);")))
  (begin
    (define gl:gen-fences-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenFencesNV(a0 , a1);")))
  (begin
    (define gl:is-fence-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsFenceNV(a0));")))
  (begin
    (define gl:test-fence-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glTestFenceNV(a0));")))
  (begin
    (define gl:get-fenceiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFenceivNV(a0 , a1 , a2);")))
  (begin
    (define gl:finish-fence-nv
      (foreign-lambda* void ((unsigned-integer a0)) "glFinishFenceNV(a0);")))
  (begin
    (define gl:set-fence-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glSetFenceNV(a0 , a1);")))
  (begin
    (define gl:map-control-points-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-char a7)
         ((c-pointer void) a8))
        "glMapControlPointsNV(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:map-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glMapParameterivNV(a0 , a1 , a2);")))
  (begin
    (define gl:map-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glMapParameterfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-control-points-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (unsigned-char a5)
         ((c-pointer void) a6))
        "glGetMapControlPointsNV(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-map-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMapParameterivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMapParameterfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-attrib-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetMapAttribParameterivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-map-attrib-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetMapAttribParameterfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:eval-maps-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEvalMapsNV(a0 , a1);")))
  (begin
    (define gl:combiner-stage-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glCombinerStageParameterfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-combiner-stage-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetCombinerStageParameterfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:are-programs-resident-nv
      (foreign-lambda*
        unsigned-char
        ((integer a0) (u32vector a1) (u8vector a2))
        "return(glAreProgramsResidentNV(a0 , a1 , a2));")))
  (begin
    (define gl:bind-program-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindProgramNV(a0 , a1);")))
  (begin
    (define gl:delete-programs-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteProgramsNV(a0 , a1);")))
  (begin
    (define gl:execute-program-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glExecuteProgramNV(a0 , a1 , a2);")))
  (begin
    (define gl:gen-programs-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenProgramsNV(a0 , a1);")))
  (begin
    (define gl:get-program-parameterdv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glGetProgramParameterdvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetProgramParameterfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-programiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetProgramivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-string-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetProgramStringNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-track-matrixiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetTrackMatrixivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-vertex-attribdv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetVertexAttribdvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVertexAttribfvNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetVertexAttribPointervNV(a0 , a1 , a2);")))
  (begin
    (define gl:is-program-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsProgramNV(a0));")))
  (begin
    (define gl:load-program-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (u8vector a3))
        "glLoadProgramNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-parameter4d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5))
        "glProgramParameter4dNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-parameter4dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glProgramParameter4dvNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameter4f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5))
        "glProgramParameter4fNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-parameter4fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glProgramParameter4fvNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameters4dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glProgramParameters4dvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-parameters4fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glProgramParameters4fvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:request-resident-programs-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glRequestResidentProgramsNV(a0 , a1);")))
  (begin
    (define gl:track-matrix-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glTrackMatrixNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-pointer-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer void) a4))
        "glVertexAttribPointerNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib1d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glVertexAttrib1dNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib1dvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glVertexAttrib1fNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib1fvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glVertexAttrib1sNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib1svNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glVertexAttrib2dNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib2dvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glVertexAttrib2fNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib2fvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2s-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glVertexAttrib2sNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib2svNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glVertexAttrib3dNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib3dvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glVertexAttrib3fNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib3fvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3s-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glVertexAttrib3sNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib3svNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glVertexAttrib4dNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexAttrib4dvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glVertexAttrib4fNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexAttrib4fvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4s-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glVertexAttrib4sNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4svNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ub-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4))
        "glVertexAttrib4ubNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4ubv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttrib4ubvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attribs1dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f64vector a2))
        "glVertexAttribs1dvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs1fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glVertexAttribs1fvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs1sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs1svNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f64vector a2))
        "glVertexAttribs2dvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glVertexAttribs2fvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs2svNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f64vector a2))
        "glVertexAttribs3dvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glVertexAttribs3fvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs3svNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f64vector a2))
        "glVertexAttribs4dvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (f32vector a2))
        "glVertexAttribs4fvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4sv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs4svNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4ubv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u8vector a2))
        "glVertexAttribs4ubvNV(a0 , a1 , a2);")))
  (begin
    (define gl:tex-bump-parameteriv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glTexBumpParameterivATI(a0 , a1);")))
  (begin
    (define gl:tex-bump-parameterfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glTexBumpParameterfvATI(a0 , a1);")))
  (begin
    (define gl:get-tex-bump-parameteriv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glGetTexBumpParameterivATI(a0 , a1);")))
  (begin
    (define gl:get-tex-bump-parameterfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetTexBumpParameterfvATI(a0 , a1);")))
  (begin
    (define gl:gen-fragment-shaders-ati
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glGenFragmentShadersATI(a0));")))
  (begin
    (define gl:bind-fragment-shader-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBindFragmentShaderATI(a0);")))
  (begin
    (define gl:delete-fragment-shader-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDeleteFragmentShaderATI(a0);")))
  (begin
    (define gl:begin-fragment-shader-ati
      (foreign-lambda* void () "glBeginFragmentShaderATI();")))
  (begin
    (define gl:end-fragment-shader-ati
      (foreign-lambda* void () "glEndFragmentShaderATI();")))
  (begin
    (define gl:pass-tex-coord-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glPassTexCoordATI(a0 , a1 , a2);")))
  (begin
    (define gl:sample-map-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glSampleMapATI(a0 , a1 , a2);")))
  (begin
    (define gl:color-fragment-op1ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6))
        "glColorFragmentOp1ATI(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:color-fragment-op2ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9))
        "glColorFragmentOp2ATI(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:color-fragment-op3ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         (unsigned-integer a10)
         (unsigned-integer a11)
         (unsigned-integer a12))
        "glColorFragmentOp3ATI(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:alpha-fragment-op1ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glAlphaFragmentOp1ATI(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:alpha-fragment-op2ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8))
        "glAlphaFragmentOp2ATI(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:alpha-fragment-op3ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         (unsigned-integer a10)
         (unsigned-integer a11))
        "glAlphaFragmentOp3ATI(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:set-fragment-shader-constant-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glSetFragmentShaderConstantATI(a0 , a1);")))
  (begin
    (define gl:pntrianglesi-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPNTrianglesiATI(a0 , a1);")))
  (begin
    (define gl:pntrianglesf-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glPNTrianglesfATI(a0 , a1);")))
  (begin
    (define gl:new-object-buffer-ati
      (foreign-lambda*
        unsigned-integer
        ((integer a0) ((c-pointer void) a1) (unsigned-integer a2))
        "return(glNewObjectBufferATI(a0 , a1 , a2));")))
  (begin
    (define gl:is-object-buffer-ati
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsObjectBufferATI(a0));")))
  (begin
    (define gl:update-object-buffer-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         ((c-pointer void) a3)
         (unsigned-integer a4))
        "glUpdateObjectBufferATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-object-bufferfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetObjectBufferfvATI(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-bufferiv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetObjectBufferivATI(a0 , a1 , a2);")))
  (begin
    (define gl:free-object-buffer-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glFreeObjectBufferATI(a0);")))
  (begin
    (define gl:array-object-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glArrayObjectATI(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-array-objectfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetArrayObjectfvATI(a0 , a1 , a2);")))
  (begin
    (define gl:get-array-objectiv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetArrayObjectivATI(a0 , a1 , a2);")))
  (begin
    (define gl:variant-array-object-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glVariantArrayObjectATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-variant-array-objectfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVariantArrayObjectfvATI(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-array-objectiv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVariantArrayObjectivATI(a0 , a1 , a2);")))
  (begin
    (define gl:begin-vertex-shader-ext
      (foreign-lambda* void () "glBeginVertexShaderEXT();")))
  (begin
    (define gl:end-vertex-shader-ext
      (foreign-lambda* void () "glEndVertexShaderEXT();")))
  (begin
    (define gl:bind-vertex-shader-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBindVertexShaderEXT(a0);")))
  (begin
    (define gl:gen-vertex-shaders-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glGenVertexShadersEXT(a0));")))
  (begin
    (define gl:delete-vertex-shader-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDeleteVertexShaderEXT(a0);")))
  (begin
    (define gl:shader-op1ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glShaderOp1EXT(a0 , a1 , a2);")))
  (begin
    (define gl:shader-op2ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glShaderOp2EXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:shader-op3ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glShaderOp3EXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:swizzle-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glSwizzleEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:write-mask-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glWriteMaskEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:insert-component-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glInsertComponentEXT(a0 , a1 , a2);")))
  (begin
    (define gl:extract-component-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glExtractComponentEXT(a0 , a1 , a2);")))
  (begin
    (define gl:gen-symbols-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "return(glGenSymbolsEXT(a0 , a1 , a2 , a3));")))
  (begin
    (define gl:set-invariant-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) ((c-pointer void) a2))
        "glSetInvariantEXT(a0 , a1 , a2);")))
  (begin
    (define gl:set-local-constant-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) ((c-pointer void) a2))
        "glSetLocalConstantEXT(a0 , a1 , a2);")))
  (begin
    (define gl:variantbv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVariantbvEXT(a0 , a1);")))
  (begin
    (define gl:variantsv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVariantsvEXT(a0 , a1);")))
  (begin
    (define gl:variantiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVariantivEXT(a0 , a1);")))
  (begin
    (define gl:variantfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVariantfvEXT(a0 , a1);")))
  (begin
    (define gl:variantdv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVariantdvEXT(a0 , a1);")))
  (begin
    (define gl:variantubv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVariantubvEXT(a0 , a1);")))
  (begin
    (define gl:variantusv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVariantusvEXT(a0 , a1);")))
  (begin
    (define gl:variantuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVariantuivEXT(a0 , a1);")))
  (begin
    (define gl:variant-pointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glVariantPointerEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:enable-variant-client-state-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEnableVariantClientStateEXT(a0);")))
  (begin
    (define gl:disable-variant-client-state-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glDisableVariantClientStateEXT(a0);")))
  (begin
    (define gl:bind-light-parameter-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glBindLightParameterEXT(a0 , a1));")))
  (begin
    (define gl:bind-material-parameter-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glBindMaterialParameterEXT(a0 , a1));")))
  (begin
    (define gl:bind-tex-gen-parameter-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "return(glBindTexGenParameterEXT(a0 , a1 , a2));")))
  (begin
    (define gl:bind-texture-unit-parameter-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glBindTextureUnitParameterEXT(a0 , a1));")))
  (begin
    (define gl:bind-parameter-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glBindParameterEXT(a0));")))
  (begin
    (define gl:is-variant-enabled-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glIsVariantEnabledEXT(a0 , a1));")))
  (begin
    (define gl:get-variant-booleanv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetVariantBooleanvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-integerv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVariantIntegervEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-floatv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVariantFloatvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-pointerv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetVariantPointervEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-booleanv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetInvariantBooleanvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-integerv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetInvariantIntegervEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-floatv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetInvariantFloatvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-booleanv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetLocalConstantBooleanvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-integerv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetLocalConstantIntegervEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-floatv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetLocalConstantFloatvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream1s-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glVertexStream1sATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1sv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexStream1svATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1i-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glVertexStream1iATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1iv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexStream1ivATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1f-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glVertexStream1fATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1fv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexStream1fvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1d-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1))
        "glVertexStream1dATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream1dv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexStream1dvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream2s-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glVertexStream2sATI(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2sv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexStream2svATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream2i-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glVertexStream2iATI(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2iv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexStream2ivATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream2f-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2))
        "glVertexStream2fATI(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2fv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexStream2fvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream2d-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2))
        "glVertexStream2dATI(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2dv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexStream2dvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream3s-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glVertexStream3sATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3sv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexStream3svATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream3i-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glVertexStream3iATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3iv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexStream3ivATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream3f-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glVertexStream3fATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3fv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexStream3fvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream3d-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glVertexStream3dATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3dv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexStream3dvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream4s-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glVertexStream4sATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4sv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexStream4svATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream4i-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glVertexStream4iATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4iv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexStream4ivATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream4f-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glVertexStream4fATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4fv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glVertexStream4fvATI(a0 , a1);")))
  (begin
    (define gl:vertex-stream4d-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glVertexStream4dATI(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4dv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glVertexStream4dvATI(a0 , a1);")))
  (begin
    (define gl:normal-stream3b-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (char a1) (char a2) (char a3))
        "glNormalStream3bATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3bv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glNormalStream3bvATI(a0 , a1);")))
  (begin
    (define gl:normal-stream3s-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glNormalStream3sATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3sv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glNormalStream3svATI(a0 , a1);")))
  (begin
    (define gl:normal-stream3i-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glNormalStream3iATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3iv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glNormalStream3ivATI(a0 , a1);")))
  (begin
    (define gl:normal-stream3f-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glNormalStream3fATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3fv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glNormalStream3fvATI(a0 , a1);")))
  (begin
    (define gl:normal-stream3d-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glNormalStream3dATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3dv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glNormalStream3dvATI(a0 , a1);")))
  (begin
    (define gl:client-active-vertex-stream-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glClientActiveVertexStreamATI(a0);")))
  (begin
    (define gl:vertex-blend-envi-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glVertexBlendEnviATI(a0 , a1);")))
  (begin
    (define gl:vertex-blend-envf-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1))
        "glVertexBlendEnvfATI(a0 , a1);")))
  (begin
    (define gl:element-pointer-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer void) a1))
        "glElementPointerATI(a0 , a1);")))
  (begin
    (define gl:draw-element-array-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glDrawElementArrayATI(a0 , a1);")))
  (begin
    (define gl:draw-range-element-array-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glDrawRangeElementArrayATI(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-mesh-arrays-sun
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glDrawMeshArraysSUN(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:gen-occlusion-queries-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenOcclusionQueriesNV(a0 , a1);")))
  (begin
    (define gl:delete-occlusion-queries-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteOcclusionQueriesNV(a0 , a1);")))
  (begin
    (define gl:is-occlusion-query-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsOcclusionQueryNV(a0));")))
  (begin
    (define gl:begin-occlusion-query-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginOcclusionQueryNV(a0);")))
  (begin
    (define gl:end-occlusion-query-nv
      (foreign-lambda* void () "glEndOcclusionQueryNV();")))
  (begin
    (define gl:get-occlusion-queryiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetOcclusionQueryivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-occlusion-queryuiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetOcclusionQueryuivNV(a0 , a1 , a2);")))
  (begin
    (define gl:point-parameteri-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPointParameteriNV(a0 , a1);")))
  (begin
    (define gl:point-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glPointParameterivNV(a0 , a1);")))
  (begin
    (define gl:active-stencil-face-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glActiveStencilFaceEXT(a0);")))
  (begin
    (define gl:element-pointer-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer void) a1))
        "glElementPointerAPPLE(a0 , a1);")))
  (begin
    (define gl:draw-element-array-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glDrawElementArrayAPPLE(a0 , a1 , a2);")))
  (begin
    (define gl:draw-range-element-array-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glDrawRangeElementArrayAPPLE(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-draw-element-array-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1) (s32vector a2) (integer a3))
        "glMultiDrawElementArrayAPPLE(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-range-element-array-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3)
         (s32vector a4)
         (integer a5))
        "glMultiDrawRangeElementArrayAPPLE(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:gen-fences-apple
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenFencesAPPLE(a0 , a1);")))
  (begin
    (define gl:delete-fences-apple
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteFencesAPPLE(a0 , a1);")))
  (begin
    (define gl:set-fence-apple
      (foreign-lambda* void ((unsigned-integer a0)) "glSetFenceAPPLE(a0);")))
  (begin
    (define gl:is-fence-apple
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsFenceAPPLE(a0));")))
  (begin
    (define gl:test-fence-apple
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glTestFenceAPPLE(a0));")))
  (begin
    (define gl:finish-fence-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glFinishFenceAPPLE(a0);")))
  (begin
    (define gl:test-object-apple
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glTestObjectAPPLE(a0 , a1));")))
  (begin
    (define gl:finish-object-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glFinishObjectAPPLE(a0 , a1);")))
  (begin
    (define gl:bind-vertex-array-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBindVertexArrayAPPLE(a0);")))
  (begin
    (define gl:delete-vertex-arrays-apple
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteVertexArraysAPPLE(a0 , a1);")))
  (begin
    (define gl:gen-vertex-arrays-apple
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenVertexArraysAPPLE(a0 , a1);")))
  (begin
    (define gl:is-vertex-array-apple
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsVertexArrayAPPLE(a0));")))
  (begin
    (define gl:vertex-array-range-apple
      (foreign-lambda*
        void
        ((integer a0) ((c-pointer void) a1))
        "glVertexArrayRangeAPPLE(a0 , a1);")))
  (begin
    (define gl:flush-vertex-array-range-apple
      (foreign-lambda*
        void
        ((integer a0) ((c-pointer void) a1))
        "glFlushVertexArrayRangeAPPLE(a0 , a1);")))
  (begin
    (define gl:vertex-array-parameteri-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glVertexArrayParameteriAPPLE(a0 , a1);")))
  (begin
    (define gl:draw-buffers-ati
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDrawBuffersATI(a0 , a1);")))
  (begin
    (define gl:program-named-parameter4f-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (u8vector a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6))
        "glProgramNamedParameter4fNV(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:program-named-parameter4d-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (u8vector a2)
         (double a3)
         (double a4)
         (double a5)
         (double a6))
        "glProgramNamedParameter4dNV(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:program-named-parameter4fv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u8vector a2) (f32vector a3))
        "glProgramNamedParameter4fvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-named-parameter4dv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u8vector a2) (f64vector a3))
        "glProgramNamedParameter4dvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-named-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u8vector a2) (f32vector a3))
        "glGetProgramNamedParameterfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-named-parameterdv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u8vector a2) (f64vector a3))
        "glGetProgramNamedParameterdvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2h-nv
      (foreign-lambda* void ((short a0) (short a1)) "glVertex2hNV(a0 , a1);")))
  (begin
    (define gl:vertex2hv-nv
      (foreign-lambda* void ((s16vector a0)) "glVertex2hvNV(a0);")))
  (begin
    (define gl:vertex3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glVertex3hNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3hv-nv
      (foreign-lambda* void ((s16vector a0)) "glVertex3hvNV(a0);")))
  (begin
    (define gl:vertex4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glVertex4hNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4hv-nv
      (foreign-lambda* void ((s16vector a0)) "glVertex4hvNV(a0);")))
  (begin
    (define gl:normal3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glNormal3hNV(a0 , a1 , a2);")))
  (begin
    (define gl:normal3hv-nv
      (foreign-lambda* void ((s16vector a0)) "glNormal3hvNV(a0);")))
  (begin
    (define gl:color3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glColor3hNV(a0 , a1 , a2);")))
  (begin
    (define gl:color3hv-nv
      (foreign-lambda* void ((s16vector a0)) "glColor3hvNV(a0);")))
  (begin
    (define gl:color4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glColor4hNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4hv-nv
      (foreign-lambda* void ((s16vector a0)) "glColor4hvNV(a0);")))
  (begin
    (define gl:tex-coord1h-nv
      (foreign-lambda* void ((short a0)) "glTexCoord1hNV(a0);")))
  (begin
    (define gl:tex-coord1hv-nv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord1hvNV(a0);")))
  (begin
    (define gl:tex-coord2h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "glTexCoord2hNV(a0 , a1);")))
  (begin
    (define gl:tex-coord2hv-nv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord2hvNV(a0);")))
  (begin
    (define gl:tex-coord3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glTexCoord3hNV(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3hv-nv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord3hvNV(a0);")))
  (begin
    (define gl:tex-coord4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "glTexCoord4hNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4hv-nv
      (foreign-lambda* void ((s16vector a0)) "glTexCoord4hvNV(a0);")))
  (begin
    (define gl:multi-tex-coord1h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glMultiTexCoord1hNV(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord1hvNV(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glMultiTexCoord2hNV(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord2hvNV(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glMultiTexCoord3hNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord3hvNV(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glMultiTexCoord4hNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glMultiTexCoord4hvNV(a0 , a1);")))
  (begin
    (define gl:fog-coordh-nv
      (foreign-lambda* void ((short a0)) "glFogCoordhNV(a0);")))
  (begin
    (define gl:fog-coordhv-nv
      (foreign-lambda* void ((s16vector a0)) "glFogCoordhvNV(a0);")))
  (begin
    (define gl:secondary-color3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "glSecondaryColor3hNV(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3hv-nv
      (foreign-lambda* void ((s16vector a0)) "glSecondaryColor3hvNV(a0);")))
  (begin
    (define gl:vertex-weighth-nv
      (foreign-lambda* void ((short a0)) "glVertexWeighthNV(a0);")))
  (begin
    (define gl:vertex-weighthv-nv
      (foreign-lambda* void ((s16vector a0)) "glVertexWeighthvNV(a0);")))
  (begin
    (define gl:vertex-attrib1h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1))
        "glVertexAttrib1hNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib1hvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2))
        "glVertexAttrib2hNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib2hvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3))
        "glVertexAttrib3hNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib3hvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4h-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (short a1) (short a2) (short a3) (short a4))
        "glVertexAttrib4hNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttrib4hvNV(a0 , a1);")))
  (begin
    (define gl:vertex-attribs1hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs1hvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs2hvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs3hvNV(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4hv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s16vector a2))
        "glVertexAttribs4hvNV(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-data-range-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glPixelDataRangeNV(a0 , a1 , a2);")))
  (begin
    (define gl:flush-pixel-data-range-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glFlushPixelDataRangeNV(a0);")))
  (begin
    (define gl:primitive-restart-nv
      (foreign-lambda* void () "glPrimitiveRestartNV();")))
  (begin
    (define gl:primitive-restart-index-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glPrimitiveRestartIndexNV(a0);")))
  (begin
    (define gl:map-object-buffer-ati
      (foreign-lambda*
        (c-pointer void)
        ((unsigned-integer a0))
        "return(glMapObjectBufferATI(a0));")))
  (begin
    (define gl:unmap-object-buffer-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glUnmapObjectBufferATI(a0);")))
  (begin
    (define gl:vertex-attrib-array-object-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3)
         (integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6))
        "glVertexAttribArrayObjectATI(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-vertex-attrib-array-objectfv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetVertexAttribArrayObjectfvATI(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-array-objectiv-ati
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribArrayObjectivATI(a0 , a1 , a2);")))
  (begin
    (define gl:vertex2b-oes
      (foreign-lambda* void ((char a0) (char a1)) "glVertex2bOES(a0 , a1);")))
  (begin
    (define gl:vertex3b-oes
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glVertex3bOES(a0 , a1 , a2);")))
  (begin
    (define gl:vertex4b-oes
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2) (char a3))
        "glVertex4bOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2bv-oes
      (foreign-lambda* void ((c-string a0)) "glVertex2bvOES(a0);")))
  (begin
    (define gl:vertex3bv-oes
      (foreign-lambda* void ((c-string a0)) "glVertex3bvOES(a0);")))
  (begin
    (define gl:vertex4bv-oes
      (foreign-lambda* void ((c-string a0)) "glVertex4bvOES(a0);")))
  (begin
    (define gl:tex-coord1b-oes
      (foreign-lambda* void ((char a0)) "glTexCoord1bOES(a0);")))
  (begin
    (define gl:tex-coord2b-oes
      (foreign-lambda*
        void
        ((char a0) (char a1))
        "glTexCoord2bOES(a0 , a1);")))
  (begin
    (define gl:tex-coord3b-oes
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2))
        "glTexCoord3bOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord4b-oes
      (foreign-lambda*
        void
        ((char a0) (char a1) (char a2) (char a3))
        "glTexCoord4bOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord1bv-oes
      (foreign-lambda* void ((c-string a0)) "glTexCoord1bvOES(a0);")))
  (begin
    (define gl:tex-coord2bv-oes
      (foreign-lambda* void ((c-string a0)) "glTexCoord2bvOES(a0);")))
  (begin
    (define gl:tex-coord3bv-oes
      (foreign-lambda* void ((c-string a0)) "glTexCoord3bvOES(a0);")))
  (begin
    (define gl:tex-coord4bv-oes
      (foreign-lambda* void ((c-string a0)) "glTexCoord4bvOES(a0);")))
  (begin
    (define gl:multi-tex-coord1b-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (char a1))
        "glMultiTexCoord1bOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2b-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (char a1) (char a2))
        "glMultiTexCoord2bOES(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord3b-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (char a1) (char a2) (char a3))
        "glMultiTexCoord3bOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord4b-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (char a1) (char a2) (char a3) (char a4))
        "glMultiTexCoord4bOES(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord1bv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glMultiTexCoord1bvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2bv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glMultiTexCoord2bvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3bv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glMultiTexCoord3bvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4bv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glMultiTexCoord4bvOES(a0 , a1);")))
  (begin
    (define gl:vertex2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glVertex2xOES(a0 , a1);")))
  (begin
    (define gl:vertex3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glVertex3xOES(a0 , a1 , a2);")))
  (begin
    (define gl:vertex4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glVertex4xOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2xv-oes
      (foreign-lambda* void ((s32vector a0)) "glVertex2xvOES(a0);")))
  (begin
    (define gl:vertex3xv-oes
      (foreign-lambda* void ((s32vector a0)) "glVertex3xvOES(a0);")))
  (begin
    (define gl:vertex4xv-oes
      (foreign-lambda* void ((s32vector a0)) "glVertex4xvOES(a0);")))
  (begin
    (define gl:normal3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glNormal3xOES(a0 , a1 , a2);")))
  (begin
    (define gl:normal3xv-oes
      (foreign-lambda* void ((s32vector a0)) "glNormal3xvOES(a0);")))
  (begin
    (define gl:tex-coord1x-oes
      (foreign-lambda* void ((integer a0)) "glTexCoord1xOES(a0);")))
  (begin
    (define gl:tex-coord2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glTexCoord2xOES(a0 , a1);")))
  (begin
    (define gl:tex-coord3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glTexCoord3xOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glTexCoord4xOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord1xv-oes
      (foreign-lambda* void ((s32vector a0)) "glTexCoord1xvOES(a0);")))
  (begin
    (define gl:tex-coord2xv-oes
      (foreign-lambda* void ((s32vector a0)) "glTexCoord2xvOES(a0);")))
  (begin
    (define gl:tex-coord3xv-oes
      (foreign-lambda* void ((s32vector a0)) "glTexCoord3xvOES(a0);")))
  (begin
    (define gl:tex-coord4xv-oes
      (foreign-lambda* void ((s32vector a0)) "glTexCoord4xvOES(a0);")))
  (begin
    (define gl:multi-tex-coord1x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glMultiTexCoord1xOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glMultiTexCoord2xOES(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord3x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glMultiTexCoord3xOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord4x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glMultiTexCoord4xOES(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord1xv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord1xvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2xv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord2xvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3xv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord3xvOES(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4xv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glMultiTexCoord4xvOES(a0 , a1);")))
  (begin
    (define gl:color3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glColor3xOES(a0 , a1 , a2);")))
  (begin
    (define gl:color4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glColor4xOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color3xv-oes
      (foreign-lambda* void ((s32vector a0)) "glColor3xvOES(a0);")))
  (begin
    (define gl:color4xv-oes
      (foreign-lambda* void ((s32vector a0)) "glColor4xvOES(a0);")))
  (begin
    (define gl:indexx-oes
      (foreign-lambda* void ((integer a0)) "glIndexxOES(a0);")))
  (begin
    (define gl:indexxv-oes
      (foreign-lambda* void ((s32vector a0)) "glIndexxvOES(a0);")))
  (begin
    (define gl:rectx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glRectxOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:depth-rangex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glDepthRangexOES(a0 , a1);")))
  (begin
    (define gl:rotatex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glRotatexOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:scalex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glScalexOES(a0 , a1 , a2);")))
  (begin
    (define gl:translatex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glTranslatexOES(a0 , a1 , a2);")))
  (begin
    (define gl:frustumx-oes
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glFrustumxOES(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:orthox-oes
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glOrthoxOES(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-genx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexGenxOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-genxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexGenxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-genxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexGenxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:clip-planex-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glClipPlanexOES(a0 , a1);")))
  (begin
    (define gl:get-clip-planex-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glGetClipPlanexOES(a0 , a1);")))
  (begin
    (define gl:raster-pos2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glRasterPos2xOES(a0 , a1);")))
  (begin
    (define gl:raster-pos3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glRasterPos3xOES(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glRasterPos4xOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos2xv-oes
      (foreign-lambda* void ((s32vector a0)) "glRasterPos2xvOES(a0);")))
  (begin
    (define gl:raster-pos3xv-oes
      (foreign-lambda* void ((s32vector a0)) "glRasterPos3xvOES(a0);")))
  (begin
    (define gl:raster-pos4xv-oes
      (foreign-lambda* void ((s32vector a0)) "glRasterPos4xvOES(a0);")))
  (begin
    (define gl:materialx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glMaterialxOES(a0 , a1 , a2);")))
  (begin
    (define gl:materialxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glMaterialxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-materialx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMaterialxOES(a0 , a1 , a2);")))
  (begin
    (define gl:lightx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glLightxOES(a0 , a1 , a2);")))
  (begin
    (define gl:lightxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glLightxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-lightx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetLightxOES(a0 , a1 , a2);")))
  (begin
    (define gl:light-modelx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glLightModelxOES(a0 , a1);")))
  (begin
    (define gl:light-modelxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glLightModelxvOES(a0 , a1);")))
  (begin
    (define gl:point-sizex-oes
      (foreign-lambda* void ((integer a0)) "glPointSizexOES(a0);")))
  (begin
    (define gl:line-widthx-oes
      (foreign-lambda* void ((integer a0)) "glLineWidthxOES(a0);")))
  (begin
    (define gl:polygon-offsetx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glPolygonOffsetxOES(a0 , a1);")))
  (begin
    (define gl:pixel-storex
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPixelStorex(a0 , a1);")))
  (begin
    (define gl:pixel-transferx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glPixelTransferxOES(a0 , a1);")))
  (begin
    (define gl:pixel-mapx
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2))
        "glPixelMapx(a0 , a1 , a2);")))
  (begin
    (define gl:get-pixel-mapxv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2))
        "glGetPixelMapxv(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glConvolutionParameterxOES(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glConvolutionParameterxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetConvolutionParameterxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetHistogramParameterxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-zoomx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glPixelZoomxOES(a0 , a1);")))
  (begin
    (define gl:bitmapx-oes
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (u8vector a6))
        "glBitmapxOES(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:tex-parameterx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexParameterxOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexParameterxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexParameterxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-level-parameterxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetTexLevelParameterxvOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:prioritize-texturesx-oes
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1) (s32vector a2))
        "glPrioritizeTexturesxOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glTexEnvxOES(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glTexEnvxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-envxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTexEnvxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:fogx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glFogxOES(a0 , a1);")))
  (begin
    (define gl:fogxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glFogxvOES(a0 , a1);")))
  (begin
    (define gl:sample-coverage-oes
      (foreign-lambda*
        void
        ((integer a0) (unsigned-char a1))
        "glSampleCoverageOES(a0 , a1);")))
  (begin
    (define gl:alpha-funcx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glAlphaFuncxOES(a0 , a1);")))
  (begin
    (define gl:blend-colorx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glBlendColorxOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-colorx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glClearColorxOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-depthx-oes
      (foreign-lambda* void ((integer a0)) "glClearDepthxOES(a0);")))
  (begin
    (define gl:clear-accumx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "glClearAccumxOES(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:accumx-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glAccumxOES(a0 , a1);")))
  (begin
    (define gl:map1x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (s32vector a5))
        "glMap1xOES(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:map2x-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (s32vector a9))
        "glMap2xOES(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:map-grid1x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "glMapGrid1xOES(a0 , a1 , a2);")))
  (begin
    (define gl:map-grid2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3) (integer a4))
        "glMapGrid2xOES(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-mapxv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetMapxvOES(a0 , a1 , a2);")))
  (begin
    (define gl:eval-coord1x-oes
      (foreign-lambda* void ((integer a0)) "glEvalCoord1xOES(a0);")))
  (begin
    (define gl:eval-coord2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "glEvalCoord2xOES(a0 , a1);")))
  (begin
    (define gl:eval-coord1xv-oes
      (foreign-lambda* void ((s32vector a0)) "glEvalCoord1xvOES(a0);")))
  (begin
    (define gl:eval-coord2xv-oes
      (foreign-lambda* void ((s32vector a0)) "glEvalCoord2xvOES(a0);")))
  (begin
    (define gl:feedback-bufferx-oes
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (s32vector a2))
        "glFeedbackBufferxOES(a0 , a1 , a2);")))
  (begin
    (define gl:pass-throughx-oes
      (foreign-lambda* void ((integer a0)) "glPassThroughxOES(a0);")))
  (begin
    (define gl:get-fixedv-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glGetFixedvOES(a0 , a1);")))
  (begin
    (define gl:depth-rangef-oes
      (foreign-lambda*
        void
        ((float a0) (float a1))
        "glDepthRangefOES(a0 , a1);")))
  (begin
    (define gl:frustumf-oes
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3) (float a4) (float a5))
        "glFrustumfOES(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:orthof-oes
      (foreign-lambda*
        void
        ((float a0) (float a1) (float a2) (float a3) (float a4) (float a5))
        "glOrthofOES(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:clip-planef-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glClipPlanefOES(a0 , a1);")))
  (begin
    (define gl:get-clip-planef-oes
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glGetClipPlanefOES(a0 , a1);")))
  (begin
    (define gl:clear-depthf-oes
      (foreign-lambda* void ((double a0)) "glClearDepthfOES(a0);")))
  (begin
    (define gl:depth-bounds-ext
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glDepthBoundsEXT(a0 , a1);")))
  (begin
    (define gl:blend-equation-separate-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBlendEquationSeparateEXT(a0 , a1);")))
  (begin
    (define gl:is-renderbuffer-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsRenderbufferEXT(a0));")))
  (begin
    (define gl:bind-renderbuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindRenderbufferEXT(a0 , a1);")))
  (begin
    (define gl:delete-renderbuffers-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteRenderbuffersEXT(a0 , a1);")))
  (begin
    (define gl:gen-renderbuffers-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenRenderbuffersEXT(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2) (integer a3))
        "glRenderbufferStorageEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-renderbuffer-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetRenderbufferParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:is-framebuffer-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsFramebufferEXT(a0));")))
  (begin
    (define gl:bind-framebuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindFramebufferEXT(a0 , a1);")))
  (begin
    (define gl:delete-framebuffers-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteFramebuffersEXT(a0 , a1);")))
  (begin
    (define gl:gen-framebuffers-ext
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenFramebuffersEXT(a0 , a1);")))
  (begin
    (define gl:check-framebuffer-status-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0))
        "return(glCheckFramebufferStatusEXT(a0));")))
  (begin
    (define gl:framebuffer-texture1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glFramebufferTexture1DEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glFramebufferTexture2DEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5))
        "glFramebufferTexture3DEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:framebuffer-renderbuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glFramebufferRenderbufferEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-framebuffer-attachment-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetFramebufferAttachmentParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-mipmap-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glGenerateMipmapEXT(a0);")))
  (begin
    (define gl:string-marker-gremedy
      (foreign-lambda*
        void
        ((integer a0) ((c-pointer void) a1))
        "glStringMarkerGREMEDY(a0 , a1);")))
  (begin
    (define gl:stencil-clear-tag-ext
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1))
        "glStencilClearTagEXT(a0 , a1);")))
  (begin
    (define gl:blit-framebuffer-ext
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9))
        "glBlitFramebufferEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:renderbuffer-storage-multisample-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glRenderbufferStorageMultisampleEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-query-objecti64v-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer integer64) a2))
        "glGetQueryObjecti64vEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectui64v-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetQueryObjectui64vEXT(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (f32vector a3))
        "glProgramEnvParameters4fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-local-parameters4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (f32vector a3))
        "glProgramLocalParameters4fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-parameteri-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glBufferParameteriAPPLE(a0 , a1 , a2);")))
  (begin
    (define gl:flush-mapped-buffer-range-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2))
        "glFlushMappedBufferRangeAPPLE(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (unsigned-integer a2))
        "glUniformBufferEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniform-buffer-size-ext
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (integer a1))
        "return(glGetUniformBufferSizeEXT(a0 , a1));")))
  (begin
    (define gl:get-uniform-offset-ext
      (foreign-lambda*
        long
        ((unsigned-integer a0) (integer a1))
        "return(glGetUniformOffsetEXT(a0 , a1));")))
  (begin
    (define gl:color-mask-indexed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-char a2)
         (unsigned-char a3)
         (unsigned-char a4))
        "glColorMaskIndexedEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-boolean-indexedv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u8vector a2))
        "glGetBooleanIndexedvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-integer-indexedv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetIntegerIndexedvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:enable-indexed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEnableIndexedEXT(a0 , a1);")))
  (begin
    (define gl:disable-indexed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDisableIndexedEXT(a0 , a1);")))
  (begin
    (define gl:is-enabled-indexed-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glIsEnabledIndexedEXT(a0 , a1));")))
  (begin
    (define gl:draw-arrays-instanced-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glDrawArraysInstancedEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3)
         (integer a4))
        "glDrawElementsInstancedEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-parameteri-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2))
        "glProgramParameteriEXT(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glFramebufferTextureEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:framebuffer-texture-face-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4))
        "glFramebufferTextureFaceEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glVertexAttribI1iEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glVertexAttribI2iEXT(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glVertexAttribI3iEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glVertexAttribI4iEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glVertexAttribI1uiEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glVertexAttribI2uiEXT(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glVertexAttribI3uiEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glVertexAttribI4uiEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI1ivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI2ivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI3ivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s32vector a1))
        "glVertexAttribI4ivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i1uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI1uivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI2uivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI3uivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u32vector a1))
        "glVertexAttribI4uivEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4bv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glVertexAttribI4bvEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4sv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (s16vector a1))
        "glVertexAttribI4svEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4ubv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u8vector a1))
        "glVertexAttribI4ubvEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4usv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (u16vector a1))
        "glVertexAttribI4usvEXT(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-ipointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer void) a4))
        "glVertexAttribIPointerEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-vertex-attrib-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribIivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVertexAttribIuivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1ui-ext
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1))
        "glUniform1uiEXT(a0 , a1);")))
  (begin
    (define gl:uniform2ui-ext
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glUniform2uiEXT(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3ui-ext
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glUniform3uiEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4ui-ext
      (foreign-lambda*
        void
        ((integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glUniform4uiEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1uiv-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform1uivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2uiv-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform2uivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3uiv-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform3uivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4uiv-ext
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (u32vector a2))
        "glUniform4uivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2))
        "glGetUniformuivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:bind-frag-data-location-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (c-string a2))
        "glBindFragDataLocationEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-frag-data-location-ext
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetFragDataLocationEXT(a0 , a1));")))
  (begin
    (define gl:framebuffer-texture-layer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glFramebufferTextureLayerEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glTexBufferEXT(a0 , a1 , a2);")))
  (begin
    (define gl:depth-ranged-nv
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glDepthRangedNV(a0 , a1);")))
  (begin
    (define gl:clear-depthd-nv
      (foreign-lambda* void ((double a0)) "glClearDepthdNV(a0);")))
  (begin
    (define gl:depth-boundsd-nv
      (foreign-lambda*
        void
        ((double a0) (double a1))
        "glDepthBoundsdNV(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage-multsample-coverage-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5))
        "glRenderbufferStorageMultsampleCoverageNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-vertex-limit-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glProgramVertexLimitNV(a0 , a1);")))
  (begin
    (define gl:program-local-parameter-i4i-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glProgramLocalParameterI4iNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter-i4iv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glProgramLocalParameterI4ivNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameters-i4iv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3))
        "glProgramLocalParametersI4ivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-local-parameter-i4ui-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glProgramLocalParameterI4uiNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter-i4uiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glProgramLocalParameterI4uivNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameters-i4uiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (u32vector a3))
        "glProgramLocalParametersI4uivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-env-parameter-i4i-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glProgramEnvParameterI4iNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter-i4iv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glProgramEnvParameterI4ivNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters-i4iv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3))
        "glProgramEnvParametersI4ivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-env-parameter-i4ui-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glProgramEnvParameterI4uiNV(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter-i4uiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glProgramEnvParameterI4uivNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters-i4uiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (u32vector a3))
        "glProgramEnvParametersI4uivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-local-parameter-iiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetProgramLocalParameterIivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameter-iuiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetProgramLocalParameterIuivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameter-iiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetProgramEnvParameterIivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameter-iuiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (u32vector a2))
        "glGetProgramEnvParameterIuivNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-buffer-parametersfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (f32vector a4))
        "glProgramBufferParametersfvNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-buffer-parameters-iiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (s32vector a4))
        "glProgramBufferParametersIivNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-buffer-parameters-iuiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (u32vector a4))
        "glProgramBufferParametersIuivNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-range-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3)
         (long a4))
        "glBindBufferRangeNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-offset-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3))
        "glBindBufferOffsetNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-buffer-base-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBindBufferBaseNV(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-attribs-nv
      (foreign-lambda*
        void
        ((integer a0) (s32vector a1) (unsigned-integer a2))
        "glTransformFeedbackAttribsNV(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (s32vector a2)
         (unsigned-integer a3))
        "glTransformFeedbackVaryingsNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:begin-transform-feedback-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginTransformFeedbackNV(a0);")))
  (begin
    (define gl:end-transform-feedback-nv
      (foreign-lambda* void () "glEndTransformFeedbackNV();")))
  (begin
    (define gl:get-varying-location-nv
      (foreign-lambda*
        integer
        ((unsigned-integer a0) (c-string a1))
        "return(glGetVaryingLocationNV(a0 , a1));")))
  (begin
    (define gl:get-active-varying-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (s32vector a4)
         (u32vector a5)
         (c-string a6))
        "glGetActiveVaryingNV(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:active-varying-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (c-string a1))
        "glActiveVaryingNV(a0 , a1);")))
  (begin
    (define gl:get-transform-feedback-varying-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTransformFeedbackVaryingNV(a0 , a1 , a2);")))
  (begin
    (define gl:frame-terminator-gremedy
      (foreign-lambda* void () "glFrameTerminatorGREMEDY();")))
  (begin
    (define gl:begin-conditional-render-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBeginConditionalRenderNV(a0 , a1);")))
  (begin
    (define gl:end-conditional-render-nv
      (foreign-lambda* void () "glEndConditionalRenderNV();")))
  (begin
    (define gl:begin-transform-feedback-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginTransformFeedbackEXT(a0);")))
  (begin
    (define gl:end-transform-feedback-ext
      (foreign-lambda* void () "glEndTransformFeedbackEXT();")))
  (begin
    (define gl:bind-buffer-range-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3)
         (long a4))
        "glBindBufferRangeEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-offset-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3))
        "glBindBufferOffsetEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-buffer-base-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBindBufferBaseEXT(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (s32vector a2)
         (unsigned-integer a3))
        "glTransformFeedbackVaryingsEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-transform-feedback-varying-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetTransformFeedbackVaryingEXT(a0 , a1 , a2);")))
  (begin
    (define gl:client-attrib-default-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glClientAttribDefaultEXT(a0);")))
  (begin
    (define gl:push-client-attrib-default-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glPushClientAttribDefaultEXT(a0);")))
  (begin
    (define gl:matrix-loadf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMatrixLoadfEXT(a0 , a1);")))
  (begin
    (define gl:matrix-loadd-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMatrixLoaddEXT(a0 , a1);")))
  (begin
    (define gl:matrix-multf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMatrixMultfEXT(a0 , a1);")))
  (begin
    (define gl:matrix-multd-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMatrixMultdEXT(a0 , a1);")))
  (begin
    (define gl:matrix-load-identity-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glMatrixLoadIdentityEXT(a0);")))
  (begin
    (define gl:matrix-rotatef-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3) (float a4))
        "glMatrixRotatefEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:matrix-rotated-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3) (double a4))
        "glMatrixRotatedEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:matrix-scalef-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glMatrixScalefEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-scaled-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glMatrixScaledEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-translatef-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (float a1) (float a2) (float a3))
        "glMatrixTranslatefEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-translated-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (double a1) (double a2) (double a3))
        "glMatrixTranslatedEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-frustum-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (double a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5)
         (double a6))
        "glMatrixFrustumEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:matrix-ortho-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (double a1)
         (double a2)
         (double a3)
         (double a4)
         (double a5)
         (double a6))
        "glMatrixOrthoEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:matrix-pop-ext
      (foreign-lambda* void ((unsigned-integer a0)) "glMatrixPopEXT(a0);")))
  (begin
    (define gl:matrix-push-ext
      (foreign-lambda* void ((unsigned-integer a0)) "glMatrixPushEXT(a0);")))
  (begin
    (define gl:matrix-load-transposef-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMatrixLoadTransposefEXT(a0 , a1);")))
  (begin
    (define gl:matrix-load-transposed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMatrixLoadTransposedEXT(a0 , a1);")))
  (begin
    (define gl:matrix-mult-transposef-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f32vector a1))
        "glMatrixMultTransposefEXT(a0 , a1);")))
  (begin
    (define gl:matrix-mult-transposed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (f64vector a1))
        "glMatrixMultTransposedEXT(a0 , a1);")))
  (begin
    (define gl:texture-parameterf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (float a3))
        "glTextureParameterfEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glTextureParameterfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameteri-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glTextureParameteriEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glTextureParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "glTextureImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:texture-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glTextureImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:texture-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         ((c-pointer void) a7))
        "glTextureSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:texture-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glTextureSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:copy-texture-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyTextureImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-texture-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyTextureImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-texture-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glCopyTextureSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-texture-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyTextureSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-texture-image-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glGetTextureImageEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-texture-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetTextureParameterfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetTextureParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-level-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (f32vector a4))
        "glGetTextureLevelParameterfvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-texture-level-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (s32vector a4))
        "glGetTextureLevelParameterivEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:texture-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         ((c-pointer void) a10))
        "glTextureImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:texture-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (unsigned-integer a9)
         (unsigned-integer a10)
         ((c-pointer void) a11))
        "glTextureSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:copy-texture-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (integer a9))
        "glCopyTextureSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:multi-tex-parameterf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (float a3))
        "glMultiTexParameterfEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glMultiTexParameterfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameteri-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glMultiTexParameteriEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glMultiTexParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (unsigned-integer a6)
         (unsigned-integer a7)
         ((c-pointer void) a8))
        "glMultiTexImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:multi-tex-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glMultiTexImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:multi-tex-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6)
         ((c-pointer void) a7))
        "glMultiTexSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:multi-tex-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (unsigned-integer a8)
         ((c-pointer void) a9))
        "glMultiTexSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:copy-multi-tex-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7))
        "glCopyMultiTexImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-multi-tex-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyMultiTexImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-multi-tex-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glCopyMultiTexSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-multi-tex-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8))
        "glCopyMultiTexSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-multi-tex-image-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         ((c-pointer void) a5))
        "glGetMultiTexImageEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-multi-tex-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetMultiTexParameterfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetMultiTexParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-level-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (f32vector a4))
        "glGetMultiTexLevelParameterfvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-multi-tex-level-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (s32vector a4))
        "glGetMultiTexLevelParameterivEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (unsigned-integer a8)
         (unsigned-integer a9)
         ((c-pointer void) a10))
        "glMultiTexImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:multi-tex-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (unsigned-integer a9)
         (unsigned-integer a10)
         ((c-pointer void) a11))
        "glMultiTexSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:copy-multi-tex-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (integer a9))
        "glCopyMultiTexSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:bind-multi-texture-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBindMultiTextureEXT(a0 , a1 , a2);")))
  (begin
    (define gl:enable-client-state-indexed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEnableClientStateIndexedEXT(a0 , a1);")))
  (begin
    (define gl:disable-client-state-indexed-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDisableClientStateIndexedEXT(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord-pointer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer void) a4))
        "glMultiTexCoordPointerEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-envf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (float a3))
        "glMultiTexEnvfEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-envfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glMultiTexEnvfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-envi-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glMultiTexEnviEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-enviv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glMultiTexEnvivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-gend-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (double a3))
        "glMultiTexGendEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-gendv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glMultiTexGendvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-genf-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (float a3))
        "glMultiTexGenfEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-genfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glMultiTexGenfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-geni-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glMultiTexGeniEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-geniv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glMultiTexGenivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-envfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetMultiTexEnvfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-enviv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetMultiTexEnvivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-gendv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glGetMultiTexGendvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-genfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetMultiTexGenfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-geniv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetMultiTexGenivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-float-indexedv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetFloatIndexedvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-double-indexedv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f64vector a2))
        "glGetDoubleIndexedvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-pointer-indexedv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetPointerIndexedvEXT(a0 , a1 , a2);")))
  (begin
    (define gl:compressed-texture-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         ((c-pointer void) a9))
        "glCompressedTextureImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-texture-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedTextureImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-texture-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedTextureImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-texture-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (unsigned-integer a9)
         (integer a10)
         ((c-pointer void) a11))
        "glCompressedTextureSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:compressed-texture-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (integer a8)
         ((c-pointer void) a9))
        "glCompressedTextureSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-texture-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedTextureSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-compressed-texture-image-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         ((c-pointer void) a3))
        "glGetCompressedTextureImageEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compressed-multi-tex-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         ((c-pointer void) a9))
        "glCompressedMultiTexImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-multi-tex-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         ((c-pointer void) a8))
        "glCompressedMultiTexImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-multi-tex-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedMultiTexImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-multi-tex-sub-image3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (integer a7)
         (integer a8)
         (unsigned-integer a9)
         (integer a10)
         ((c-pointer void) a11))
        "glCompressedMultiTexSubImage3DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:compressed-multi-tex-sub-image2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6)
         (unsigned-integer a7)
         (integer a8)
         ((c-pointer void) a9))
        "glCompressedMultiTexSubImage2DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-multi-tex-sub-image1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (unsigned-integer a5)
         (integer a6)
         ((c-pointer void) a7))
        "glCompressedMultiTexSubImage1DEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-compressed-multi-tex-image-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         ((c-pointer void) a3))
        "glGetCompressedMultiTexImageEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-string-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         ((c-pointer void) a4))
        "glNamedProgramStringEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter4d-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (double a3)
         (double a4)
         (double a5)
         (double a6))
        "glNamedProgramLocalParameter4dEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter4dv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glNamedProgramLocalParameter4dvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameter4f-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (float a3)
         (float a4)
         (float a5)
         (float a6))
        "glNamedProgramLocalParameter4fEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glNamedProgramLocalParameter4fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameterdv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glGetNamedProgramLocalParameterdvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameterfv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetNamedProgramLocalParameterfvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-programiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetNamedProgramivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-string-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetNamedProgramStringEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (f32vector a4))
        "glNamedProgramLocalParameters4fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter-i4i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         (integer a6))
        "glNamedProgramLocalParameterI4iEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter-i4iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glNamedProgramLocalParameterI4ivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters-i4iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (s32vector a4))
        "glNamedProgramLocalParametersI4ivEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter-i4ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5)
         (unsigned-integer a6))
        "glNamedProgramLocalParameterI4uiEXT(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter-i4uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glNamedProgramLocalParameterI4uivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters-i4uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (u32vector a4))
        "glNamedProgramLocalParametersI4uivEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-named-program-local-parameter-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetNamedProgramLocalParameterIivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameter-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glGetNamedProgramLocalParameterIuivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameter-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glTextureParameterIivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameter-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glTextureParameterIuivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameter-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetTextureParameterIivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameter-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glGetTextureParameterIuivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameter-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glMultiTexParameterIivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameter-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glMultiTexParameterIuivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameter-iiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetMultiTexParameterIivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameter-iuiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (u32vector a3))
        "glGetMultiTexParameterIuivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform1f-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (float a2))
        "glProgramUniform1fEXT(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2f-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (float a2) (float a3))
        "glProgramUniform2fEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3f-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (float a2) (float a3) (float a4))
        "glProgramUniform3fEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4f-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (float a2)
         (float a3)
         (float a4)
         (float a5))
        "glProgramUniform4fEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2))
        "glProgramUniform1iEXT(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (integer a3))
        "glProgramUniform2iEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4))
        "glProgramUniform3iEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4i-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "glProgramUniform4iEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f32vector a3))
        "glProgramUniform1fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f32vector a3))
        "glProgramUniform2fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f32vector a3))
        "glProgramUniform3fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (f32vector a3))
        "glProgramUniform4fvEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform1iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (s32vector a3))
        "glProgramUniform1ivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (s32vector a3))
        "glProgramUniform2ivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (s32vector a3))
        "glProgramUniform3ivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4iv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (s32vector a3))
        "glProgramUniform4ivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform-matrix2fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix2fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix3fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix4fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x3fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix2x3fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x2fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix3x2fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix2x4fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x2fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix4x2fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x4fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix3x4fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x3fv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-char a3)
         (f32vector a4))
        "glProgramUniformMatrix4x3fvEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform1ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (unsigned-integer a2))
        "glProgramUniform1uiEXT(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glProgramUniform2uiEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glProgramUniform3uiEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4ui-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4)
         (unsigned-integer a5))
        "glProgramUniform4uiEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (u32vector a3))
        "glProgramUniform1uivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (u32vector a3))
        "glProgramUniform2uivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (u32vector a3))
        "glProgramUniform3uivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4uiv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (integer a2) (u32vector a3))
        "glProgramUniform4uivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-buffer-data-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (long a1)
         ((c-pointer void) a2)
         (unsigned-integer a3))
        "glNamedBufferDataEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-buffer-sub-data-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glNamedBufferSubDataEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-named-buffer-ext
      (foreign-lambda*
        (c-pointer void)
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glMapNamedBufferEXT(a0 , a1));")))
  (begin
    (define gl:unmap-named-buffer-ext
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glUnmapNamedBufferEXT(a0));")))
  (begin
    (define gl:get-named-buffer-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetNamedBufferParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-pointerv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetNamedBufferPointervEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-sub-data-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (long a1) (long a2) ((c-pointer void) a3))
        "glGetNamedBufferSubDataEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glTextureBufferEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glMultiTexBufferEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-renderbuffer-storage-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (integer a2) (integer a3))
        "glNamedRenderbufferStorageEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-renderbuffer-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetNamedRenderbufferParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:check-named-framebuffer-status-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glCheckNamedFramebufferStatusEXT(a0 , a1));")))
  (begin
    (define gl:named-framebuffer-texture1dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glNamedFramebufferTexture1DEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture2dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4))
        "glNamedFramebufferTexture2DEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture3dext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5))
        "glNamedFramebufferTexture3DEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:named-framebuffer-renderbuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3))
        "glNamedFramebufferRenderbufferEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-framebuffer-attachment-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetNamedFramebufferAttachmentParameterivEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-texture-mipmap-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glGenerateTextureMipmapEXT(a0 , a1);")))
  (begin
    (define gl:generate-multi-tex-mipmap-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glGenerateMultiTexMipmapEXT(a0 , a1);")))
  (begin
    (define gl:framebuffer-draw-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glFramebufferDrawBufferEXT(a0 , a1);")))
  (begin
    (define gl:framebuffer-draw-buffers-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (u32vector a2))
        "glFramebufferDrawBuffersEXT(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-read-buffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glFramebufferReadBufferEXT(a0 , a1);")))
  (begin
    (define gl:get-framebuffer-parameteriv-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetFramebufferParameterivEXT(a0 , a1 , a2);")))
  (begin
    (define gl:named-renderbuffer-storage-multisample-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glNamedRenderbufferStorageMultisampleEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-renderbuffer-storage-multisample-coverage-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         (unsigned-integer a3)
         (integer a4)
         (integer a5))
        "glNamedRenderbufferStorageMultisampleCoverageEXT(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:named-framebuffer-texture-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3))
        "glNamedFramebufferTextureEXT(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-framebuffer-texture-layer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (integer a4))
        "glNamedFramebufferTextureLayerEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture-face-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (integer a3)
         (unsigned-integer a4))
        "glNamedFramebufferTextureFaceEXT(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:texture-renderbuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glTextureRenderbufferEXT(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-renderbuffer-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glMultiTexRenderbufferEXT(a0 , a1 , a2);")))
  (begin
    (define gl:get-multisamplefv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (f32vector a2))
        "glGetMultisamplefvNV(a0 , a1 , a2);")))
  (begin
    (define gl:sample-mask-indexed-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glSampleMaskIndexedNV(a0 , a1);")))
  (begin
    (define gl:tex-renderbuffer-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glTexRenderbufferNV(a0 , a1);")))
  (begin
    (define gl:bind-transform-feedback-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBindTransformFeedbackNV(a0 , a1);")))
  (begin
    (define gl:delete-transform-feedbacks-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeleteTransformFeedbacksNV(a0 , a1);")))
  (begin
    (define gl:gen-transform-feedbacks-nv
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenTransformFeedbacksNV(a0 , a1);")))
  (begin
    (define gl:is-transform-feedback-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsTransformFeedbackNV(a0));")))
  (begin
    (define gl:pause-transform-feedback-nv
      (foreign-lambda* void () "glPauseTransformFeedbackNV();")))
  (begin
    (define gl:resume-transform-feedback-nv
      (foreign-lambda* void () "glResumeTransformFeedbackNV();")))
  (begin
    (define gl:draw-transform-feedback-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDrawTransformFeedbackNV(a0 , a1);")))
  (begin
    (define gl:get-perf-monitor-groups-amd
      (foreign-lambda*
        void
        ((s32vector a0) (integer a1) (u32vector a2))
        "glGetPerfMonitorGroupsAMD(a0 , a1 , a2);")))
  (begin
    (define gl:get-perf-monitor-counters-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (s32vector a1)
         (s32vector a2)
         (integer a3)
         (u32vector a4))
        "glGetPerfMonitorCountersAMD(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-perf-monitor-group-string-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (s32vector a2) (c-string a3))
        "glGetPerfMonitorGroupStringAMD(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-perf-monitor-counter-string-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (s32vector a3)
         (c-string a4))
        "glGetPerfMonitorCounterStringAMD(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-perf-monitor-counter-info-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         ((c-pointer void) a3))
        "glGetPerfMonitorCounterInfoAMD(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:gen-perf-monitors-amd
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glGenPerfMonitorsAMD(a0 , a1);")))
  (begin
    (define gl:delete-perf-monitors-amd
      (foreign-lambda*
        void
        ((integer a0) (u32vector a1))
        "glDeletePerfMonitorsAMD(a0 , a1);")))
  (begin
    (define gl:select-perf-monitor-counters-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-char a1)
         (unsigned-integer a2)
         (integer a3)
         (u32vector a4))
        "glSelectPerfMonitorCountersAMD(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:begin-perf-monitor-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginPerfMonitorAMD(a0);")))
  (begin
    (define gl:end-perf-monitor-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEndPerfMonitorAMD(a0);")))
  (begin
    (define gl:get-perf-monitor-counter-data-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (integer a2)
         (u32vector a3)
         (s32vector a4))
        "glGetPerfMonitorCounterDataAMD(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tessellation-factor-amd
      (foreign-lambda* void ((float a0)) "glTessellationFactorAMD(a0);")))
  (begin
    (define gl:tessellation-mode-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glTessellationModeAMD(a0);")))
  (begin
    (define gl:provoking-vertex-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glProvokingVertexEXT(a0);")))
  (begin
    (define gl:blend-func-indexed-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBlendFuncIndexedAMD(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separate-indexed-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glBlendFuncSeparateIndexedAMD(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:blend-equation-indexed-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glBlendEquationIndexedAMD(a0 , a1);")))
  (begin
    (define gl:blend-equation-separate-indexed-amd
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "glBlendEquationSeparateIndexedAMD(a0 , a1 , a2);")))
  (begin
    (define gl:texture-range-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) ((c-pointer void) a2))
        "glTextureRangeAPPLE(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-pointerv-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer (c-pointer void)) a2))
        "glGetTexParameterPointervAPPLE(a0 , a1 , a2);")))
  (begin
    (define gl:enable-vertex-attrib-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glEnableVertexAttribAPPLE(a0 , a1);")))
  (begin
    (define gl:disable-vertex-attrib-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glDisableVertexAttribAPPLE(a0 , a1);")))
  (begin
    (define gl:is-vertex-attrib-enabled-apple
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0) (unsigned-integer a1))
        "return(glIsVertexAttribEnabledAPPLE(a0 , a1));")))
  (begin
    (define gl:map-vertex-attrib1d-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (double a2)
         (double a3)
         (integer a4)
         (integer a5)
         (f64vector a6))
        "glMapVertexAttrib1dAPPLE(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:map-vertex-attrib1f-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (float a2)
         (float a3)
         (integer a4)
         (integer a5)
         (f32vector a6))
        "glMapVertexAttrib1fAPPLE(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:map-vertex-attrib2d-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (double a2)
         (double a3)
         (integer a4)
         (integer a5)
         (double a6)
         (double a7)
         (integer a8)
         (integer a9)
         (f64vector a10))
        "glMapVertexAttrib2dAPPLE(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:map-vertex-attrib2f-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (float a2)
         (float a3)
         (integer a4)
         (integer a5)
         (float a6)
         (float a7)
         (integer a8)
         (integer a9)
         (f32vector a10))
        "glMapVertexAttrib2fAPPLE(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:object-purgeable-apple
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "return(glObjectPurgeableAPPLE(a0 , a1 , a2));")))
  (begin
    (define gl:object-unpurgeable-apple
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (unsigned-integer a1) (unsigned-integer a2))
        "return(glObjectUnpurgeableAPPLE(a0 , a1 , a2));")))
  (begin
    (define gl:get-object-parameteriv-apple
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetObjectParameterivAPPLE(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:begin-video-capture-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glBeginVideoCaptureNV(a0);")))
  (begin
    (define gl:bind-video-capture-stream-buffer-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (long a3))
        "glBindVideoCaptureStreamBufferNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-video-capture-stream-texture-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (unsigned-integer a3)
         (unsigned-integer a4))
        "glBindVideoCaptureStreamTextureNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:end-video-capture-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glEndVideoCaptureNV(a0);")))
  (begin
    (define gl:get-video-captureiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1) (s32vector a2))
        "glGetVideoCaptureivNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-video-capture-streamiv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glGetVideoCaptureStreamivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-video-capture-streamfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glGetVideoCaptureStreamfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-video-capture-streamdv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glGetVideoCaptureStreamdvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-nv
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0)
         (u32vector a1)
         ((c-pointer unsigned-integer64) a2))
        "return(glVideoCaptureNV(a0 , a1 , a2));")))
  (begin
    (define gl:video-capture-stream-parameteriv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (s32vector a3))
        "glVideoCaptureStreamParameterivNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-stream-parameterfv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f32vector a3))
        "glVideoCaptureStreamParameterfvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-stream-parameterdv-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer a2)
         (f64vector a3))
        "glVideoCaptureStreamParameterdvNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:use-shader-program-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glUseShaderProgramEXT(a0 , a1);")))
  (begin
    (define gl:active-program-ext
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glActiveProgramEXT(a0);")))
  (begin
    (define gl:create-shader-program-ext
      (foreign-lambda*
        unsigned-integer
        ((unsigned-integer a0) (c-string a1))
        "return(glCreateShaderProgramEXT(a0 , a1));")))
  (begin
    (define gl:make-buffer-resident-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glMakeBufferResidentNV(a0 , a1);")))
  (begin
    (define gl:make-buffer-non-resident-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glMakeBufferNonResidentNV(a0);")))
  (begin
    (define gl:is-buffer-resident-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsBufferResidentNV(a0));")))
  (begin
    (define gl:make-named-buffer-resident-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (unsigned-integer a1))
        "glMakeNamedBufferResidentNV(a0 , a1);")))
  (begin
    (define gl:make-named-buffer-non-resident-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0))
        "glMakeNamedBufferNonResidentNV(a0);")))
  (begin
    (define gl:is-named-buffer-resident-nv
      (foreign-lambda*
        unsigned-char
        ((unsigned-integer a0))
        "return(glIsNamedBufferResidentNV(a0));")))
  (begin
    (define gl:get-buffer-parameterui64v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetBufferParameterui64vNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-parameterui64v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetNamedBufferParameterui64vNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-integerui64v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) ((c-pointer unsigned-integer64) a1))
        "glGetIntegerui64vNV(a0 , a1);")))
  (begin
    (define gl:uniformui64nv
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer64 a1))
        "glUniformui64NV(a0 , a1);")))
  (begin
    (define gl:uniformui64v-nv
      (foreign-lambda*
        void
        ((integer a0) (integer a1) ((c-pointer unsigned-integer64) a2))
        "glUniformui64vNV(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformui64v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetUniformui64vNV(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniformui64nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (unsigned-integer64 a2))
        "glProgramUniformui64NV(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniformui64v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (integer a2)
         ((c-pointer unsigned-integer64) a3))
        "glProgramUniformui64vNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-address-range-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         (unsigned-integer64 a2)
         (long a3))
        "glBufferAddressRangeNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-format-nv
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2))
        "glVertexFormatNV(a0 , a1 , a2);")))
  (begin
    (define gl:normal-format-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glNormalFormatNV(a0 , a1);")))
  (begin
    (define gl:color-format-nv
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2))
        "glColorFormatNV(a0 , a1 , a2);")))
  (begin
    (define gl:index-format-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glIndexFormatNV(a0 , a1);")))
  (begin
    (define gl:tex-coord-format-nv
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2))
        "glTexCoordFormatNV(a0 , a1 , a2);")))
  (begin
    (define gl:edge-flag-format-nv
      (foreign-lambda* void ((integer a0)) "glEdgeFlagFormatNV(a0);")))
  (begin
    (define gl:secondary-color-format-nv
      (foreign-lambda*
        void
        ((integer a0) (unsigned-integer a1) (integer a2))
        "glSecondaryColorFormatNV(a0 , a1 , a2);")))
  (begin
    (define gl:fog-coord-format-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1))
        "glFogCoordFormatNV(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-format-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (integer a1)
         (unsigned-integer a2)
         (unsigned-char a3)
         (integer a4))
        "glVertexAttribFormatNV(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-iformat-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0) (integer a1) (unsigned-integer a2) (integer a3))
        "glVertexAttribIFormatNV(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-integerui64i-v-nv
      (foreign-lambda*
        void
        ((unsigned-integer a0)
         (unsigned-integer a1)
         ((c-pointer unsigned-integer64) a2))
        "glGetIntegerui64i_vNV(a0 , a1 , a2);")))
  (begin
    (define gl:texture-barrier-nv
      (foreign-lambda* void () "glTextureBarrierNV();"))))

;;; END OF FILE
