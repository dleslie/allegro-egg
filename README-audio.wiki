[[tags: allegro game]]

== allegro

This document pertains to audio related methods found in the Allegro egg.

[[toc:]]

== Functions

=== Audio

<procedure>(make-sample* (blob buffer) (unsigned-integer samples) (unsigned-integer frequency) audio-depth channel-configuration (bool free-buffer))</procedure>

Implements al_create_sample.

<procedure>(make-sample (blob buffer) (unsigned-integer samples) (unsigned-integer frequency) audio-depth channel-configuration (bool free-buffer))</procedure>

Implements al_create_sample, with (free-sample!) declared as a finalizer.

<procedure>(free-sample! sample)</procedure>

Implements al_destroy_sample.

<procedure>(make-sample-instance* sample)</procedure>

Implements al_create_sample_instance.

<procedure>(make-sample-instance sample)</procedure>

Implements al_create_sample_instance, with (free-sample-instance!) declared as a finalizer.

<procedure>(free-sample-instance! sample)</procedure>

Implements al_destroy_sample_instance.

<procedure>(sample-frequency sample)</procedure>

Implements al_get_sample_frequenecy.

<procedure>(sample-length sample)</procedure>

Implements al_get_sample_length.

<procedure>(sample-depth sample)</procedure>

Implements al_get_sample_depth.

<procedure>(sample-channels sample)</procedure>

Implements al_get_sample_channels.

<procedure>(sample-instance-frequency sample-instance)</procedure>

Implements al_get_sample_instance_frequency.

<procedure>(sample-instance-length sample-instance)</procedure>

Implements al_get_sample_instance_length.

<procedure>(sample-instance-position sample-instance)</procedure>

Implements al_get_sample_instance-position.

<procedure>(sample-instance-speed sample-instance)</procedure>

Implements al_get_sample_instance_speed.

<procedure>(sample-instance-gain sample-instance)</procedure>

Implements al_get_sample_instance_gain.

<procedure>(sample-instance-pan sample-instance)</procedure>

Implements al_get_sample_instance_pan.

<procedure>(sample-instance-time sample-instance)</procedure>

Implements al_get_sample_instance_time.

<procedure>(sample-instance-depth sample-instance)</procedure>

Implements al_get_sample_instance_depth.

<procedure>(sample-instance-channels sample-instance)</procedure>

Implements al_get_sample_instance_channels.

<procedure>(sample-instance-playmode sample-instance)</procedure>

Implements al_get_sample_instance_playmode.

<procedure>(sample-instance-playing? sample-instance)</procedure>

Implements al_get_sample_instance_playing.

<procedure>(sample-instance-attached? sample-instance)</procedure>

Implements al_get_sample_instance_attached.

<procedure>(sample-instance-position-set! sample-instance unsigned-integer)</procedure>

Implements al_set_sample_instance_position.

<procedure>(sample-instance-length-set! sample-instance unsigned-integer)</procedure>

Implements al_set_sample_instance_length.

<procedure>(sample-instance-speed-set! sample-instance float)</procedure>

Implements al_set_sample_instance_speed.

<procedure>(sample-instance-gain-set! sample-instance float)</procedure>

Implements al_set_sample_instance_gain.

<procedure>(sample-instance-pan-set! sample-instance float)</procedure>

Implements al_set_sample_instance_pan.

<procedure>(sample-instance-playmode-set! sample-instance playmode)</procedure>

Implements al_set_sample_instance_playmode.

<procedure>(sample-instance-playing-set! sample-instance bool)</procedure>

Implements al_set_sample_instance_playing.

<procedure>(sample-instance-detach! sample-instance)</procedure>

Implements al_detach_sample_instance.

<procedure>(sample-instance-sample sample-instance)</procedure>

Implements al_get_sample.

<procedure>(sample-instance-sample-set! sample-instance sample)</procedure>

Implements al_set_sample

<procedure>(sample-instance-play sample-instance)</procedure>

Implements al_play_sample_instance.

<procedure>(sample-instance-stop sample-instance)</procedure>

Implements al_stop_sample_instance.

<procedure>(make-audio-stream* (integer buffer-count) (unsigned-integer samples) (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_audio_stream.

<procedure>(make-audio-stream (integer buffer-count) (unsigned-integer samples) (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_audio_stream, with (free-audio-stream!) declared as a finalizer.

<procedure>(free-audio-stream! audio-stream)</procedure>

Implements al_destroy_audio_stream.

<procedure>(audio-stram-drain audio-stream)</procedure>

Implements al_drain_audio_stream.

<procedure>(audio-stream-frequency audio-stream)</procedure>

Implements al_get_audio_stream_frequency.

<procedure>(audio-stream-length audio-stream)</procedure>

Implements al_get_audio_stream_length.

<procedure>(audio-stream-fragments audio-stream)</procedure>

Implements al_get_available_audio_stream_fragments.

<procedure>(audio-stream-available-fragments audio-stream)</procedure>

Implements al_get_available_audio_stream_fragments.

<procedure>(audio-stream-speed audio-stream)</procedure>

Implements al_get_audio_stream_speed.

<procedure>(audio-stream-gain audio-stream)</procedure>

Implements al_get_audio_stream_gain.

<procedure>(audio-stream-channels audio-stream)</procedure>

Implements al_get_audio_stream_channels.

<procedure>(audio-stream-depth audio-stream)</procedure>

Implements al_get_audio_stream_depth.

<procedure>(audio-stream-playmode audio-stream)</procedure>

Implements al_get_audio_stream_playmode.

<procedure>(audio-stream-playing? audio-stream)</procedure>

Implements al_get_audio_stream_playing.

<procedure>(audio-stream-attached? audio-stream)</procedure>

Implements al_get_audio_stream_attached.

<procedure>(audio-stream-fragment audio-stream)</procedure>

Implements al_get_audio_stream_fragment.

<procedure>(audio-stream-speed-set! audio-stream float)</procedure>

Implements al_set_audio_stream_speed.

<procedure>(audio-stream-gain-set! audio-stream float)</procedure>

Implements al_set_audio_stream_gain.

<procedure>(audio-stream-pan-set! audio-stream float)</procedure>

Implements al_set_audio_stream_pan.

<procedure>(audio-stream-playmode-set! audio-stream playmode)</procedure>

Implements al_set_audio_stream_playmode.

<procedure>(audio-stream-playing-set! audio-stream bool)</procedure>

Implements al_set_audio_stream_playing.

<procedure>(audio-stream-detach! audio-stream)</procedure>

Implements al_detach_audio_stream.

<procedure>(audio-stream-fragment-set! audio-stream c-pointer)</procedure>

Implements al_set_audio_stream_fragment.

<procedure>(audio-stream-rewind! audio-stream)</procedure>

Implements al_rewind_audio_stream.

<procedure>(audio-stream-seek-seconds! audio-stream double)</procedure>

Implements al_seek_audio_stream_secs.

<procedure>(audio-stream-position-seconds audio-stream)</procedure>

Impements al_get_audio_stream_position_secs.

<procedure>(audio-stream-length-seconds audio-stream)</procedure>

Implements al_get_audio_length_secs.

<procedure>(audio-stream-loop-set! audio-stream (double start-seconds) (double end-seconds))</procedure>

Implements al_set_audio_stream_loop_secs.

<procedure>(audio-stream-event-source audio-stream)</procedure>

Implements al_get_audio_stream_event_source.

<procedure>(make-mixer* (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_mixer.

<procedure>(make-mixer (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_mixer, with (free-mixer!) declared as a finalizer.

<procedure>(free-mixer! mixer)</procedure>

Implements al_destroy_mixer.

<procedure>(sample-instance-attach-to-mixer! sample-instance mixer)</procedure>

Implements al_attach_sample_instance_to_mixer.

<procedure>(audio-stream-attach-to-mixer! audio-stream mixer)</procedure>

Implements al_attach_audio_stram_to_mixer.

<procedure>(mixer-attach-to-mixer! mixer mixer)</procedure>

Implements al_attach_mixer_to_mixer.

<procedure>(mixer-postprocess-callback-set! mixer (function void (c-pointer unsigned-integer32 c-pointer)) (c-pointer data))</procedure>

Implements al_set_mixer_postprocess_callback.

<procedure>(mixer-frequency mixer)</procedure>

Implements al_get_mixer_frequency.

<procedure>(mixer-channels mixer)</procedure>

Implements al_get_mixer_channels.

<procedure>(mixer-depth mixer)</procedure>

Implements al_get_mixer_depth.

<procedure>(mixer-quality mixer)</procedure>

Implements al_get_mixer_quality.

<procedure>(mixer-playing? mixer)</procedure>

Implements al_get_mixer_playing.

<procedure>(mixer-attached? mixer)</procedure>

Implements al_get_mixer_attached.

<procedure>(mixer-frequency-set! mixer unsigned-integer)</procedure>

Implements al_set_mixer_frequency.

<procedure>(mixer-quality-set! mixer mixer-quality)</procedure>

Implements al_set_mixer_quality.

<procedure>(mixer-playing-set! mixer bool)</procedure>

Implements al_set_mixer_playing.

<procedure>(mixer-detach! mixer)</procedure>

Implements al_detach_mixer.

<procedure>(make-voice* (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_voice.

<procedure>(make-voice (unsigned-integer frequency) audio-depth channel-configuration)</procedure>

Implements al_create_voice, with (free-voice!) declared as a finalizer.

<procedure>(free-voice! voice)</procedure>

Implements al_destroy_voice.

<procedure>(sample-instance-attach-to-voice! sample-instance voice)</procedure>

Implements al_attach_sample_instance_to_voice.

<procedure>(audio-stream-attach-to-voice! audio-stram voice)</procedure>

Implements al_attach_audio_stream_to_voice.

<procedure>(mixer-attach-to-voice! mixer voice)</procedure>

Implements al_attach_mixer_to_voice.

<procedure>(voice-detach! voice)</procedure>

Implements al_detach_voice.

<procedure>(voice-frequency voice)</procedure>

Implements al_get_voice_frequency.

<procedure>(voice-position voice)</procedure>

Implements al_get_voice_position voice)</procedure>

<procedure>(voice-channels voice)</procedure>

Implements al_get_voice_channels.

<procedure>(voice-depth voice)</procedure>

Implements al_get_voice_depth.

<procedure>(voice-playing? voice)</procedure>

Implements al_get_voice_playing.

<procedure>(voice-position-set! voice unsigned-integer)</procedure>

Implements al_set_voice_position.

<procedure>(voice-playing-set! voice bool)</procedure>

Implements al_set_voice_playing.

<procedure>(audio-addon-install)</procedure>

Implements al_install_audio.

<procedure>(audio-addon-uninstall)</procedure>

Implements al_uninstall_audio.

<procedure>(audio-addon-installed?)</procedure>

Implements al_is_audio_installed.

<procedure>(audio-addon-version)</procedure>

Implements al_get_allegro_audio_version.

<procedure>(channel-configuration-count channel-configuration)</procedure>

Implements al_get_channel_count.

<procedure>(audio-depth-size audio-depth)</procedure>

Implements al_get_audio_depth_size.

<procedure>(default-mixer)</procedure>

Implements al_get_default_mixer.

<procedure>(default-mixer-set! mixer)</procedure>

Implements al_set_default_mixer.

<procedure>(default-mixer-restore!)</procedure>

Implements al_restore_default_mixer.

<procedure>(sample-play sample (float gain) (float pan) (float speed) playmode sample-id)</procedure>

Implements al_play_sample.

The Sample ID is written to the provided sample-id struct.

<procedure>(sample-stop sample-id)</procedure>

Implements al_stop_sample.

<procedure>(reserve-samples integer)</procedure>

Implements al_reserve_samples.

<procedure>(stop-all-samples)</procedure>

Implements al_stop_samples.

<procedure>(register-sample-loader (string extension) (function sample ((const string))))</procedure>

Implements al_register_sample_loader.

<procedure>(register-sample-saver (string extension) (function bool ((const c-string) sample)))</procedure>

Implements al_register_sample_saver.

<procedure>(register-audio-stream-loader (string extension) (function audio-stream ((const string) size_t unsigned-integer32)))</procedure>

Implements al_register_audio_stream_loader.

<procedure>(register-sample-file-loader (string extension) (function sample (file)))</procedure>

Implements al_register_sample_loader_f.

<procedure>(register-sample-file-saver (string extension) (function bool (file sample)))</procedure>

Implements al_register_sample_saver_f.

<procedure>(register-audio-stream-file-loader (string extension) (function audio-stream (file size_t unsigned-integer)))</procedure>

Implements al_register_audio_stream_loader_f.

<procedure>(load-sample* string)</procedure>

Implements al_load_sample.

<procedure>(load-sample string)</procedure>

Implements al_load_sample, with (free-sample!) declared as a finalizer.

<procedure>(load-audio-stream* string (integer buffer-count) (unsigned-integer samples))</procedure>

Implements al_load_audio_stream.

<procedure>(load-audio-stream string (integer buffer-count) (unsigned-integer samples))</procedure>

Implements al_load_audio_stream, with (free-audio-stream!) declared as a finalizer.

<procedure>(load-audio-stream-from-file* file (string identity) (integer buffer-count) (unsigned-integer samples))</procedure>

Implements al_load_audio_straem_from_file.

<procedure>(load-audio-stream-from-file file (string identity) (integer buffer-count) (unsigned-integer samples))</procedure>

Implements al_load_audio_straem_from_file, with (free-audio-stream!) declared as a finalizer.

<procedure>(load-sample-from-file* file (string identity))</procedure>

Implements al_load_sample_f.

<procedure>(load-sample-from-file file (string identity))</procedure>

Implements al_load_sample_f, with (free-sample!) declared as a finalizer.

<procedure>(sample-save-to-file sample file (string identity))</procedure>

Implements al_save_sample_f.

<procedure>(sample-save sample (string filename))</procedure>

Implements al_save_sample.


=== Audio Codec Addon

<procedure>(acodec-addon-init)</procedure>

Implements al_init_acodec_addon.

<procedure>(acodec-addon-version)</procedure>

Implements al_get_allegro_acodec_version.
