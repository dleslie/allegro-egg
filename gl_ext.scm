
;;; GENERATED BY CHICKEN-BIND FROM gl_ext.h

(begin
  (define ogl-ext-list:arb:imaging
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_imaging);"))
  (define ogl-ext-list:arb:multitexture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_multitexture);"))
  (define ogl-ext-list:arb:transpose_matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transpose_matrix);"))
  (define ogl-ext-list:arb:multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_multisample);"))
  (define ogl-ext-list:arb:texture_env_add
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_add);"))
  (define ogl-ext-list:arb:texture_cube_map
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_cube_map);"))
  (define ogl-ext-list:arb:texture_compression
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression);"))
  (define ogl-ext-list:arb:texture_border_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_border_clamp);"))
  (define ogl-ext-list:arb:point_parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_point_parameters);"))
  (define ogl-ext-list:arb:vertex_blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_blend);"))
  (define ogl-ext-list:arb:texture_env_combine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_combine);"))
  (define ogl-ext-list:arb:texture_env_crossbar
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_crossbar);"))
  (define ogl-ext-list:arb:texture_env_dot3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_dot3);"))
  (define ogl-ext-list:arb:texture_mirrored_repeat
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_mirrored_repeat);"))
  (define ogl-ext-list:arb:depth_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_texture);"))
  (define ogl-ext-list:arb:shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shadow);"))
  (define ogl-ext-list:arb:shadow_ambient
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shadow_ambient);"))
  (define ogl-ext-list:arb:window_pos
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_window_pos);"))
  (define ogl-ext-list:arb:vertex_program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_program);"))
  (define ogl-ext-list:arb:fragment_program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_program);"))
  (define ogl-ext-list:arb:vertex_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_buffer_object);"))
  (define ogl-ext-list:arb:occlusion_query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_occlusion_query);"))
  (define ogl-ext-list:arb:shader_objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_objects);"))
  (define ogl-ext-list:arb:vertex_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_shader);"))
  (define ogl-ext-list:arb:fragment_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_shader);"))
  (define ogl-ext-list:arb:shading_language_100
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shading_language_100);"))
  (define ogl-ext-list:arb:texture_non_power_of_two
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_non_power_of_two);"))
  (define ogl-ext-list:arb:point_sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_point_sprite);"))
  (define ogl-ext-list:arb:fragment_program_shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_program_shadow);"))
  (define ogl-ext-list:arb:draw_buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_buffers);"))
  (define ogl-ext-list:arb:texture_rectangle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rectangle);"))
  (define ogl-ext-list:arb:color_buffer_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_color_buffer_float);"))
  (define ogl-ext-list:arb:half_float_pixel
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_half_float_pixel);"))
  (define ogl-ext-list:arb:texture_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_float);"))
  (define ogl-ext-list:arb:pixel_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_pixel_buffer_object);"))
  (define ogl-ext-list:arb:instanced_arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_instanced_arrays);"))
  (define ogl-ext-list:arb:draw_instanced
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_instanced);"))
  (define ogl-ext-list:arb:geometry_shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_geometry_shader4);"))
  (define ogl-ext-list:arb:texture_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_buffer_object);"))
  (define ogl-ext-list:arb:depth_buffer_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_buffer_float);"))
  (define ogl-ext-list:arb:framebuffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_framebuffer_object);"))
  (define ogl-ext-list:arb:framebuffer_sRGB
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_framebuffer_sRGB);"))
  (define ogl-ext-list:arb:half_float_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_half_float_vertex);"))
  (define ogl-ext-list:arb:map_buffer_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_map_buffer_range);"))
  (define ogl-ext-list:arb:texture_compression_rgtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression_rgtc);"))
  (define ogl-ext-list:arb:texture_rg
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rg);"))
  (define ogl-ext-list:arb:vertex_array_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_array_object);"))
  (define ogl-ext-list:arb:copy_buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_copy_buffer);"))
  (define ogl-ext-list:arb:compatibility
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_compatibility);"))
  (define ogl-ext-list:arb:uniform_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_uniform_buffer_object);"))
  (define ogl-ext-list:arb:shader_texture_lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_texture_lod);"))
  (define ogl-ext-list:arb:depth_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_clamp);"))
  (define ogl-ext-list:arb:draw_elements_base_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_elements_base_vertex);"))
  (define ogl-ext-list:arb:fragment_coord_conventions
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_coord_conventions);"))
  (define ogl-ext-list:arb:provoking_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_provoking_vertex);"))
  (define ogl-ext-list:arb:seamless_cube_map
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_seamless_cube_map);"))
  (define ogl-ext-list:arb:sync
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sync);"))
  (define ogl-ext-list:arb:texture_multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_multisample);"))
  (define ogl-ext-list:arb:vertex_array_bgra
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_array_bgra);"))
  (define ogl-ext-list:arb:draw_buffers_blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_buffers_blend);"))
  (define ogl-ext-list:arb:sample_shading
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sample_shading);"))
  (define ogl-ext-list:arb:texture_cube_map_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_cube_map_array);"))
  (define ogl-ext-list:arb:texture_gather
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_gather);"))
  (define ogl-ext-list:arb:texture_query_lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_query_lod);"))
  (define ogl-ext-list:arb:shading_language_include
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shading_language_include);"))
  (define ogl-ext-list:arb:texture_compression_bptc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression_bptc);"))
  (define ogl-ext-list:arb:blend_func_extended
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_blend_func_extended);"))
  (define ogl-ext-list:arb:explicit_attrib_location
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_explicit_attrib_location);"))
  (define ogl-ext-list:arb:occlusion_query2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_occlusion_query2);"))
  (define ogl-ext-list:arb:sampler_objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sampler_objects);"))
  (define ogl-ext-list:arb:shader_bit_encoding
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_bit_encoding);"))
  (define ogl-ext-list:arb:texture_rgb10_a2ui
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rgb10_a2ui);"))
  (define ogl-ext-list:arb:texture_swizzle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_swizzle);"))
  (define ogl-ext-list:arb:timer_query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_timer_query);"))
  (define ogl-ext-list:arb:vertex_type_2_10_10_10_rev
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev);"))
  (define ogl-ext-list:arb:draw_indirect
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_indirect);"))
  (define ogl-ext-list:arb:gpu_shader5
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_gpu_shader5);"))
  (define ogl-ext-list:arb:gpu_shader_fp64
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_gpu_shader_fp64);"))
  (define ogl-ext-list:arb:shader_subroutine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_subroutine);"))
  (define ogl-ext-list:arb:tessellation_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_tessellation_shader);"))
  (define ogl-ext-list:arb:texture_buffer_object_rgb32
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_buffer_object_rgb32);"))
  (define ogl-ext-list:arb:transform_feedback2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transform_feedback2);"))
  (define ogl-ext-list:arb:transform_feedback3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transform_feedback3);"))
  (define ogl-ext-list:gl-ext:abgr
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_abgr);"))
  (define ogl-ext-list:gl-ext:blend_color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_color);"))
  (define ogl-ext-list:gl-ext:polygon_offset
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_polygon_offset);"))
  (define ogl-ext-list:gl-ext:texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture);"))
  (define ogl-ext-list:gl-ext:texture3D
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture3D);"))
  (define ogl-ext-list:gl-sgis:texture_filter4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_filter4);"))
  (define ogl-ext-list:gl-ext:subtexture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_subtexture);"))
  (define ogl-ext-list:gl-ext:copy_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_copy_texture);"))
  (define ogl-ext-list:gl-ext:histogram
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_histogram);"))
  (define ogl-ext-list:gl-ext:convolution
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_convolution);"))
  (define ogl-ext-list:gl-sgi:color_matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_color_matrix);"))
  (define ogl-ext-list:gl-sgi:color_table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_color_table);"))
  (define ogl-ext-list:gl-sgis:pixel_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_pixel_texture);"))
  (define ogl-ext-list:gl-sgix:pixel_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_pixel_texture);"))
  (define ogl-ext-list:gl-sgis:texture4D
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture4D);"))
  (define ogl-ext-list:gl-sgi:texture_color_table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_texture_color_table);"))
  (define ogl-ext-list:gl-ext:cmyka
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_cmyka);"))
  (define ogl-ext-list:gl-ext:texture_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_object);"))
  (define ogl-ext-list:gl-sgis:detail_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_detail_texture);"))
  (define ogl-ext-list:gl-sgis:sharpen_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_sharpen_texture);"))
  (define ogl-ext-list:gl-ext:packed_pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_pixels);"))
  (define ogl-ext-list:gl-sgis:texture_lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_lod);"))
  (define ogl-ext-list:gl-sgis:multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_multisample);"))
  (define ogl-ext-list:gl-ext:rescale_normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_rescale_normal);"))
  (define ogl-ext-list:gl-ext:vertex_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_array);"))
  (define ogl-ext-list:gl-ext:misc_attribute
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_misc_attribute);"))
  (define ogl-ext-list:gl-sgis:generate_mipmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_generate_mipmap);"))
  (define ogl-ext-list:gl-sgix:clipmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_clipmap);"))
  (define ogl-ext-list:gl-sgix:shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_shadow);"))
  (define ogl-ext-list:gl-sgis:texture_edge_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_edge_clamp);"))
  (define ogl-ext-list:gl-sgis:texture_border_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_border_clamp);"))
  (define ogl-ext-list:gl-ext:blend_minmax
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_minmax);"))
  (define ogl-ext-list:gl-ext:blend_subtract
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_subtract);"))
  (define ogl-ext-list:gl-ext:blend_logic_op
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_logic_op);"))
  (define ogl-ext-list:gl-sgix:interlace
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_interlace);"))
  (define ogl-ext-list:gl-sgis:texture_select
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_select);"))
  (define ogl-ext-list:gl-sgix:sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_sprite);"))
  (define ogl-ext-list:gl-sgix:texture_multi_buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_multi_buffer);"))
  (define ogl-ext-list:gl-ext:point_parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_point_parameters);"))
  (define ogl-ext-list:gl-sgix:instruments
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_instruments);"))
  (define ogl-ext-list:gl-sgix:texture_scale_bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_scale_bias);"))
  (define ogl-ext-list:gl-sgix:framezoom
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_framezoom);"))
  (define ogl-ext-list:gl-sgix:tag_sample_buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_tag_sample_buffer);"))
  (define ogl-ext-list:gl-sgix:reference_plane
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_reference_plane);"))
  (define ogl-ext-list:gl-sgix:flush_raster
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_flush_raster);"))
  (define ogl-ext-list:gl-sgix:depth_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_depth_texture);"))
  (define ogl-ext-list:gl-sgis:fog_function
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_fog_function);"))
  (define ogl-ext-list:gl-sgix:fog_offset
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_fog_offset);"))
  (define ogl-ext-list:gl-hp:image_transform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_image_transform);"))
  (define ogl-ext-list:gl-hp:convolution_border_modes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_convolution_border_modes);"))
  (define ogl-ext-list:gl-sgix:texture_add_env
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_add_env);"))
  (define ogl-ext-list:gl-ext:color_subtable
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_color_subtable);"))
  (define ogl-ext-list:gl-pgi:vertex_hints
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_PGI_vertex_hints);"))
  (define ogl-ext-list:gl-pgi:misc_hints
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_PGI_misc_hints);"))
  (define ogl-ext-list:gl-ext:paletted_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_paletted_texture);"))
  (define ogl-ext-list:gl-ext:clip_volume_hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_clip_volume_hint);"))
  (define ogl-ext-list:gl-sgix:list_priority
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_list_priority);"))
  (define ogl-ext-list:gl-sgix:ir_instrument1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_ir_instrument1);"))
  (define ogl-ext-list:gl-sgix:texture_lod_bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_lod_bias);"))
  (define ogl-ext-list:gl-sgix:shadow_ambient
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_shadow_ambient);"))
  (define ogl-ext-list:gl-ext:index_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_texture);"))
  (define ogl-ext-list:gl-ext:index_material
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_material);"))
  (define ogl-ext-list:gl-ext:index_func
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_func);"))
  (define ogl-ext-list:gl-ext:index_array_formats
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_array_formats);"))
  (define ogl-ext-list:gl-ext:compiled_vertex_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_compiled_vertex_array);"))
  (define ogl-ext-list:gl-ext:cull_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_cull_vertex);"))
  (define ogl-ext-list:gl-sgix:ycrcb
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_ycrcb);"))
  (define ogl-ext-list:gl-ext:fragment_lighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_fragment_lighting);"))
  (define ogl-ext-list:gl-ibm:rasterpos_clip
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_rasterpos_clip);"))
  (define ogl-ext-list:gl-hp:texture_lighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_texture_lighting);"))
  (define ogl-ext-list:gl-ext:draw_range_elements
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_range_elements);"))
  (define ogl-ext-list:gl-win:phong_shading
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_WIN_phong_shading);"))
  (define ogl-ext-list:gl-win:specular_fog
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_WIN_specular_fog);"))
  (define ogl-ext-list:gl-ext:light_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_light_texture);"))
  (define ogl-ext-list:gl-sgix:blend_alpha_minmax
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_blend_alpha_minmax);"))
  (define ogl-ext-list:gl-ext:scene_marker
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_scene_marker);"))
  (define ogl-ext-list:gl-sgix:pixel_texture_bits
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_pixel_texture_bits);"))
  (define ogl-ext-list:gl-ext:bgra
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_bgra);"))
  (define ogl-ext-list:gl-sgix:async
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async);"))
  (define ogl-ext-list:gl-sgix:async_pixel
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async_pixel);"))
  (define ogl-ext-list:gl-sgix:async_histogram
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async_histogram);"))
  (define ogl-ext-list:gl-intel:texture_scissor
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INTEL_texture_scissor);"))
  (define ogl-ext-list:gl-intel:parallel_arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INTEL_parallel_arrays);"))
  (define ogl-ext-list:gl-hp:occlusion_test
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_occlusion_test);"))
  (define ogl-ext-list:gl-ext:pixel_transform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_transform);"))
  (define ogl-ext-list:gl-ext:pixel_transform_color_table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_transform_color_table);"))
  (define ogl-ext-list:gl-ext:shared_texture_palette
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_shared_texture_palette);"))
  (define ogl-ext-list:gl-ext:separate_specular_color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_separate_specular_color);"))
  (define ogl-ext-list:gl-ext:secondary_color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_secondary_color);"))
  (define ogl-ext-list:gl-ext:texture_env
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env);"))
  (define ogl-ext-list:gl-ext:texture_perturb_normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_perturb_normal);"))
  (define ogl-ext-list:gl-ext:multi_draw_arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_multi_draw_arrays);"))
  (define ogl-ext-list:gl-ext:fog_coord
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_fog_coord);"))
  (define ogl-ext-list:ALLEGRO_GL_REND_screen_coordinates
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_REND_screen_coordinates);"))
  (define ogl-ext-list:gl-ext:coordinate_frame
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_coordinate_frame);"))
  (define ogl-ext-list:gl-ext:texture_env_combine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_combine);"))
  (define ogl-ext-list:gl-apple:specular_vector
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_specular_vector);"))
  (define ogl-ext-list:gl-apple:transform_hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_transform_hint);"))
  (define ogl-ext-list:ALLEGRO_GL_SUNX_constant_data
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUNX_constant_data);"))
  (define ogl-ext-list:gl-sun:global_alpha
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_global_alpha);"))
  (define ogl-ext-list:gl-sun:triangle_list
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_triangle_list);"))
  (define ogl-ext-list:gl-sun:vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_vertex);"))
  (define ogl-ext-list:gl-ext:blend_func_separate
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_func_separate);"))
  (define ogl-ext-list:ALLEGRO_GL_INGR_color_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INGR_color_clamp);"))
  (define ogl-ext-list:ALLEGRO_GL_INGR_interlace_read
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INGR_interlace_read);"))
  (define ogl-ext-list:gl-ext:stencil_wrap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_wrap);"))
  (define ogl-ext-list:gl-ext:422_pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_422_pixels);"))
  (define ogl-ext-list:gl-nv:texgen_reflection
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texgen_reflection);"))
  (define ogl-ext-list:gl-sgix:texture_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_range);"))
  (define ogl-ext-list:gl-sun:convolution_border_modes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_convolution_border_modes);"))
  (define ogl-ext-list:gl-ext:texture_env_add
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_add);"))
  (define ogl-ext-list:gl-ext:texture_lod_bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_lod_bias);"))
  (define ogl-ext-list:gl-ext:texture_filter_anisotropic
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_filter_anisotropic);"))
  (define ogl-ext-list:gl-ext:vertex_weighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_weighting);"))
  (define ogl-ext-list:gl-nv:light_max_exponent
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_light_max_exponent);"))
  (define ogl-ext-list:gl-nv:vertex_array_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_array_range);"))
  (define ogl-ext-list:gl-nv:register_combiners
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_register_combiners);"))
  (define ogl-ext-list:gl-nv:fog_distance
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fog_distance);"))
  (define ogl-ext-list:gl-nv:texgen_emboss
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texgen_emboss);"))
  (define ogl-ext-list:gl-nv:blend_square
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_blend_square);"))
  (define ogl-ext-list:gl-nv:texture_env_combine4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_env_combine4);"))
  (define ogl-ext-list:ALLEGRO_GL_MESA_resize_buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_resize_buffers);"))
  (define ogl-ext-list:ALLEGRO_GL_MESA_window_pos
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_window_pos);"))
  (define ogl-ext-list:gl-ext:texture_compression_s3tc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_s3tc);"))
  (define ogl-ext-list:gl-ibm:cull_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_cull_vertex);"))
  (define ogl-ext-list:gl-ibm:multimode_draw_arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_multimode_draw_arrays);"))
  (define ogl-ext-list:gl-ibm:vertex_array_lists
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_vertex_array_lists);"))
  (define ogl-ext-list:ALLEGRO_GL_3DFX_texture_compression_FXT1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_texture_compression_FXT1);"))
  (define ogl-ext-list:ALLEGRO_GL_3DFX_multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_multisample);"))
  (define ogl-ext-list:ALLEGRO_GL_3DFX_tbuffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_tbuffer);"))
  (define ogl-ext-list:gl-sgix:vertex_preclip
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_vertex_preclip);"))
  (define ogl-ext-list:gl-sgix:resample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_resample);"))
  (define ogl-ext-list:gl-sgis:texture_color_mask
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_color_mask);"))
  (define ogl-ext-list:gl-ext:texture_env_dot3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_dot3);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_texture_mirror_once
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_mirror_once);"))
  (define ogl-ext-list:gl-nv:fence
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fence);"))
  (define ogl-ext-list:gl-ibm:static_data
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_static_data);"))
  (define ogl-ext-list:gl-ibm:texture_mirrored_repeat
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_texture_mirrored_repeat);"))
  (define ogl-ext-list:gl-nv:evaluators
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_evaluators);"))
  (define ogl-ext-list:gl-nv:packed_depth_stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_packed_depth_stencil);"))
  (define ogl-ext-list:gl-nv:register_combiners2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_register_combiners2);"))
  (define ogl-ext-list:gl-nv:texture_compression_vtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_compression_vtc);"))
  (define ogl-ext-list:gl-nv:texture_rectangle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_rectangle);"))
  (define ogl-ext-list:gl-nv:texture_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader);"))
  (define ogl-ext-list:gl-nv:texture_shader2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader2);"))
  (define ogl-ext-list:gl-nv:vertex_array_range2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_array_range2);"))
  (define ogl-ext-list:gl-nv:vertex_program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program);"))
  (define ogl-ext-list:gl-sgix:texture_coordinate_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_coordinate_clamp);"))
  (define ogl-ext-list:ALLEGRO_GL_OML_interlace
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_interlace);"))
  (define ogl-ext-list:ALLEGRO_GL_OML_subsample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_subsample);"))
  (define ogl-ext-list:ALLEGRO_GL_OML_resample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_resample);"))
  (define ogl-ext-list:gl-nv:copy_depth_to_color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_copy_depth_to_color);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_envmap_bumpmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_envmap_bumpmap);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_fragment_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_fragment_shader);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_pn_triangles
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_pn_triangles);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_vertex_array_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_array_object);"))
  (define ogl-ext-list:gl-ext:vertex_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_shader);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_vertex_streams
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_streams);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_element_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_element_array);"))
  (define ogl-ext-list:gl-sun:mesh_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_mesh_array);"))
  (define ogl-ext-list:gl-sun:slice_accum
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_slice_accum);"))
  (define ogl-ext-list:gl-nv:multisample_filter_hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_multisample_filter_hint);"))
  (define ogl-ext-list:gl-nv:depth_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_depth_clamp);"))
  (define ogl-ext-list:gl-nv:occlusion_query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_occlusion_query);"))
  (define ogl-ext-list:gl-nv:point_sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_point_sprite);"))
  (define ogl-ext-list:gl-nv:texture_shader3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader3);"))
  (define ogl-ext-list:gl-nv:vertex_program1_1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program1_1);"))
  (define ogl-ext-list:gl-ext:shadow_funcs
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_shadow_funcs);"))
  (define ogl-ext-list:gl-ext:stencil_two_side
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_two_side);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_text_fragment_shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_text_fragment_shader);"))
  (define ogl-ext-list:gl-apple:client_storage
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_client_storage);"))
  (define ogl-ext-list:gl-apple:element_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_element_array);"))
  (define ogl-ext-list:gl-apple:fence
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_fence);"))
  (define ogl-ext-list:gl-apple:vertex_array_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_array_object);"))
  (define ogl-ext-list:gl-apple:vertex_array_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_array_range);"))
  (define ogl-ext-list:gl-apple:ycbcr_422
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_ycbcr_422);"))
  (define ogl-ext-list:ALLEGRO_GL_S3_s3tc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_S3_s3tc);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_draw_buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_draw_buffers);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_texture_env_combine3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_env_combine3);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_texture_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_float);"))
  (define ogl-ext-list:gl-nv:float_buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_float_buffer);"))
  (define ogl-ext-list:gl-nv:fragment_program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program);"))
  (define ogl-ext-list:gl-nv:half_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_half_float);"))
  (define ogl-ext-list:gl-nv:pixel_data_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_pixel_data_range);"))
  (define ogl-ext-list:gl-nv:primitive_restart
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_primitive_restart);"))
  (define ogl-ext-list:gl-nv:texture_expand_normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_expand_normal);"))
  (define ogl-ext-list:gl-nv:vertex_program2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program2);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_map_object_buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_map_object_buffer);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_separate_stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_separate_stencil);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_vertex_attrib_array_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_attrib_array_object);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_byte_coordinates
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_byte_coordinates);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_fixed_point
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_fixed_point);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_single_precision
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_single_precision);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_compressed_paletted_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_compressed_paletted_texture);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_read_format
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_read_format);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_query_matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_query_matrix);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_framebuffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_framebuffer_object);"))
  (define ogl-ext-list:ALLEGRO_GL_OES_texture_npot
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_texture_npot);"))
  (define ogl-ext-list:gl-ext:depth_bounds_test
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_depth_bounds_test);"))
  (define ogl-ext-list:gl-ext:texture_mirror_clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_mirror_clamp);"))
  (define ogl-ext-list:gl-ext:blend_equation_separate
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_equation_separate);"))
  (define ogl-ext-list:ALLEGRO_GL_MESA_pack_invert
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_pack_invert);"))
  (define ogl-ext-list:ALLEGRO_GL_MESA_ycbcr_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_ycbcr_texture);"))
  (define ogl-ext-list:gl-ext:pixel_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_buffer_object);"))
  (define ogl-ext-list:gl-nv:fragment_program_option
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program_option);"))
  (define ogl-ext-list:gl-nv:fragment_program2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program2);"))
  (define ogl-ext-list:gl-nv:vertex_program2_option
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program2_option);"))
  (define ogl-ext-list:gl-nv:vertex_program3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program3);"))
  (define ogl-ext-list:gl-ext:texture_compression_dxt1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_dxt1);"))
  (define ogl-ext-list:gl-ext:framebuffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_object);"))
  (define ogl-ext-list:ALLEGRO_GL_GREMEDY_string_marker
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_GREMEDY_string_marker);"))
  (define ogl-ext-list:gl-ext:packed_depth_stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_depth_stencil);"))
  (define ogl-ext-list:gl-ext:stencil_clear_tag
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_clear_tag);"))
  (define ogl-ext-list:gl-ext:texture_sRGB
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_sRGB);"))
  (define ogl-ext-list:gl-ext:framebuffer_blit
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_blit);"))
  (define ogl-ext-list:gl-ext:framebuffer_multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_multisample);"))
  (define ogl-ext-list:ALLEGRO_GL_MESAX_texture_stack
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESAX_texture_stack);"))
  (define ogl-ext-list:gl-ext:timer_query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_timer_query);"))
  (define ogl-ext-list:gl-ext:gpu_program_parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_gpu_program_parameters);"))
  (define ogl-ext-list:gl-apple:flush_buffer_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_flush_buffer_range);"))
  (define ogl-ext-list:gl-ext:bindable_uniform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_bindable_uniform);"))
  (define ogl-ext-list:gl-ext:draw_buffers2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_buffers2);"))
  (define ogl-ext-list:gl-ext:draw_instanced
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_instanced);"))
  (define ogl-ext-list:gl-ext:framebuffer_sRGB
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_sRGB);"))
  (define ogl-ext-list:gl-ext:geometry_shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_geometry_shader4);"))
  (define ogl-ext-list:gl-ext:gpu_shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_gpu_shader4);"))
  (define ogl-ext-list:gl-ext:packed_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_float);"))
  (define ogl-ext-list:gl-ext:texture_array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_array);"))
  (define ogl-ext-list:gl-ext:texture_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_buffer_object);"))
  (define ogl-ext-list:gl-ext:texture_compression_latc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_latc);"))
  (define ogl-ext-list:gl-ext:texture_compression_rgtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_rgtc);"))
  (define ogl-ext-list:gl-ext:texture_integer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_integer);"))
  (define ogl-ext-list:gl-ext:texture_shared_exponent
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_shared_exponent);"))
  (define ogl-ext-list:gl-nv:depth_buffer_float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_depth_buffer_float);"))
  (define ogl-ext-list:gl-nv:fragment_program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program4);"))
  (define ogl-ext-list:gl-nv:framebuffer_multisample_coverage
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_framebuffer_multisample_coverage);"))
  (define ogl-ext-list:gl-nv:geometry_program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_geometry_program4);"))
  (define ogl-ext-list:gl-nv:gpu_program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_gpu_program4);"))
  (define ogl-ext-list:gl-nv:parameter_buffer_object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_parameter_buffer_object);"))
  (define ogl-ext-list:gl-nv:transform_feedback
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_transform_feedback);"))
  (define ogl-ext-list:gl-nv:vertex_program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program4);"))
  (define ogl-ext-list:ALLEGRO_GL_GREMEDY_frame_terminator
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_GREMEDY_frame_terminator);"))
  (define ogl-ext-list:gl-nv:conditional_render
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_conditional_render);"))
  (define ogl-ext-list:gl-nv:present_video
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_present_video);"))
  (define ogl-ext-list:gl-ext:direct_state_access
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_direct_state_access);"))
  (define ogl-ext-list:gl-ext:transform_feedback
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_transform_feedback);"))
  (define ogl-ext-list:gl-ext:texture_swizzle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_swizzle);"))
  (define ogl-ext-list:gl-nv:explicit_multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_explicit_multisample);"))
  (define ogl-ext-list:gl-nv:transform_feedback2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_transform_feedback2);"))
  (define ogl-ext-list:ALLEGRO_GL_ATI_meminfo
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_meminfo);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_performance_monitor
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_performance_monitor);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_texture_texture4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_texture_texture4);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_vertex_shader_tesselator
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_vertex_shader_tesselator);"))
  (define ogl-ext-list:gl-ext:provoking_vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_provoking_vertex);"))
  (define ogl-ext-list:gl-ext:texture_snorm
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_snorm);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_draw_buffers_blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_draw_buffers_blend);"))
  (define ogl-ext-list:gl-apple:texture_range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_texture_range);"))
  (define ogl-ext-list:gl-apple:float_pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_float_pixels);"))
  (define ogl-ext-list:gl-apple:vertex_program_evaluators
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_program_evaluators);"))
  (define ogl-ext-list:gl-apple:aux_depth_stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_aux_depth_stencil);"))
  (define ogl-ext-list:gl-apple:object_purgeable
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_object_purgeable);"))
  (define ogl-ext-list:gl-apple:row_bytes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_row_bytes);"))
  (define ogl-ext-list:gl-apple:rgb_422
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_rgb_422);"))
  (define ogl-ext-list:gl-nv:video_capture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_video_capture);"))
  (define ogl-ext-list:gl-ext:separate_shader_objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_separate_shader_objects);"))
  (define ogl-ext-list:gl-nv:parameter_buffer_object2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_parameter_buffer_object2);"))
  (define ogl-ext-list:gl-nv:shader_buffer_load
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_shader_buffer_load);"))
  (define ogl-ext-list:gl-nv:vertex_buffer_unified_memory
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_buffer_unified_memory);"))
  (define ogl-ext-list:gl-nv:texture_barrier
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_barrier);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_shader_stencil_export
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_shader_stencil_export);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_seamless_cubemap_per_texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_seamless_cubemap_per_texture);"))
  (define ogl-ext-list:ALLEGRO_GL_AMD_conservative_depth
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_conservative_depth);"))
  (define make-ALLEGRO_OGL_EXT_LIST
    (foreign-lambda*
      (c-pointer (struct "ALLEGRO_OGL_EXT_LIST"))
      ((integer ALLEGRO_GL_ARB_imaging)
       (integer ALLEGRO_GL_ARB_multitexture)
       (integer ALLEGRO_GL_ARB_transpose_matrix)
       (integer ALLEGRO_GL_ARB_multisample)
       (integer ALLEGRO_GL_ARB_texture_env_add)
       (integer ALLEGRO_GL_ARB_texture_cube_map)
       (integer ALLEGRO_GL_ARB_texture_compression)
       (integer ALLEGRO_GL_ARB_texture_border_clamp)
       (integer ALLEGRO_GL_ARB_point_parameters)
       (integer ALLEGRO_GL_ARB_vertex_blend)
       (integer ALLEGRO_GL_ARB_texture_env_combine)
       (integer ALLEGRO_GL_ARB_texture_env_crossbar)
       (integer ALLEGRO_GL_ARB_texture_env_dot3)
       (integer ALLEGRO_GL_ARB_texture_mirrored_repeat)
       (integer ALLEGRO_GL_ARB_depth_texture)
       (integer ALLEGRO_GL_ARB_shadow)
       (integer ALLEGRO_GL_ARB_shadow_ambient)
       (integer ALLEGRO_GL_ARB_window_pos)
       (integer ALLEGRO_GL_ARB_vertex_program)
       (integer ALLEGRO_GL_ARB_fragment_program)
       (integer ALLEGRO_GL_ARB_vertex_buffer_object)
       (integer ALLEGRO_GL_ARB_occlusion_query)
       (integer ALLEGRO_GL_ARB_shader_objects)
       (integer ALLEGRO_GL_ARB_vertex_shader)
       (integer ALLEGRO_GL_ARB_fragment_shader)
       (integer ALLEGRO_GL_ARB_shading_language_100)
       (integer ALLEGRO_GL_ARB_texture_non_power_of_two)
       (integer ALLEGRO_GL_ARB_point_sprite)
       (integer ALLEGRO_GL_ARB_fragment_program_shadow)
       (integer ALLEGRO_GL_ARB_draw_buffers)
       (integer ALLEGRO_GL_ARB_texture_rectangle)
       (integer ALLEGRO_GL_ARB_color_buffer_float)
       (integer ALLEGRO_GL_ARB_half_float_pixel)
       (integer ALLEGRO_GL_ARB_texture_float)
       (integer ALLEGRO_GL_ARB_pixel_buffer_object)
       (integer ALLEGRO_GL_ARB_instanced_arrays)
       (integer ALLEGRO_GL_ARB_draw_instanced)
       (integer ALLEGRO_GL_ARB_geometry_shader4)
       (integer ALLEGRO_GL_ARB_texture_buffer_object)
       (integer ALLEGRO_GL_ARB_depth_buffer_float)
       (integer ALLEGRO_GL_ARB_framebuffer_object)
       (integer ALLEGRO_GL_ARB_framebuffer_sRGB)
       (integer ALLEGRO_GL_ARB_half_float_vertex)
       (integer ALLEGRO_GL_ARB_map_buffer_range)
       (integer ALLEGRO_GL_ARB_texture_compression_rgtc)
       (integer ALLEGRO_GL_ARB_texture_rg)
       (integer ALLEGRO_GL_ARB_vertex_array_object)
       (integer ALLEGRO_GL_ARB_copy_buffer)
       (integer ALLEGRO_GL_ARB_compatibility)
       (integer ALLEGRO_GL_ARB_uniform_buffer_object)
       (integer ALLEGRO_GL_ARB_shader_texture_lod)
       (integer ALLEGRO_GL_ARB_depth_clamp)
       (integer ALLEGRO_GL_ARB_draw_elements_base_vertex)
       (integer ALLEGRO_GL_ARB_fragment_coord_conventions)
       (integer ALLEGRO_GL_ARB_provoking_vertex)
       (integer ALLEGRO_GL_ARB_seamless_cube_map)
       (integer ALLEGRO_GL_ARB_sync)
       (integer ALLEGRO_GL_ARB_texture_multisample)
       (integer ALLEGRO_GL_ARB_vertex_array_bgra)
       (integer ALLEGRO_GL_ARB_draw_buffers_blend)
       (integer ALLEGRO_GL_ARB_sample_shading)
       (integer ALLEGRO_GL_ARB_texture_cube_map_array)
       (integer ALLEGRO_GL_ARB_texture_gather)
       (integer ALLEGRO_GL_ARB_texture_query_lod)
       (integer ALLEGRO_GL_ARB_shading_language_include)
       (integer ALLEGRO_GL_ARB_texture_compression_bptc)
       (integer ALLEGRO_GL_ARB_blend_func_extended)
       (integer ALLEGRO_GL_ARB_explicit_attrib_location)
       (integer ALLEGRO_GL_ARB_occlusion_query2)
       (integer ALLEGRO_GL_ARB_sampler_objects)
       (integer ALLEGRO_GL_ARB_shader_bit_encoding)
       (integer ALLEGRO_GL_ARB_texture_rgb10_a2ui)
       (integer ALLEGRO_GL_ARB_texture_swizzle)
       (integer ALLEGRO_GL_ARB_timer_query)
       (integer ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev)
       (integer ALLEGRO_GL_ARB_draw_indirect)
       (integer ALLEGRO_GL_ARB_gpu_shader5)
       (integer ALLEGRO_GL_ARB_gpu_shader_fp64)
       (integer ALLEGRO_GL_ARB_shader_subroutine)
       (integer ALLEGRO_GL_ARB_tessellation_shader)
       (integer ALLEGRO_GL_ARB_texture_buffer_object_rgb32)
       (integer ALLEGRO_GL_ARB_transform_feedback2)
       (integer ALLEGRO_GL_ARB_transform_feedback3)
       (integer ALLEGRO_GL_EXT_abgr)
       (integer ALLEGRO_GL_EXT_blend_color)
       (integer ALLEGRO_GL_EXT_polygon_offset)
       (integer ALLEGRO_GL_EXT_texture)
       (integer ALLEGRO_GL_EXT_texture3D)
       (integer ALLEGRO_GL_SGIS_texture_filter4)
       (integer ALLEGRO_GL_EXT_subtexture)
       (integer ALLEGRO_GL_EXT_copy_texture)
       (integer ALLEGRO_GL_EXT_histogram)
       (integer ALLEGRO_GL_EXT_convolution)
       (integer ALLEGRO_GL_SGI_color_matrix)
       (integer ALLEGRO_GL_SGI_color_table)
       (integer ALLEGRO_GL_SGIS_pixel_texture)
       (integer ALLEGRO_GL_SGIX_pixel_texture)
       (integer ALLEGRO_GL_SGIS_texture4D)
       (integer ALLEGRO_GL_SGI_texture_color_table)
       (integer ALLEGRO_GL_EXT_cmyka)
       (integer ALLEGRO_GL_EXT_texture_object)
       (integer ALLEGRO_GL_SGIS_detail_texture)
       (integer ALLEGRO_GL_SGIS_sharpen_texture)
       (integer ALLEGRO_GL_EXT_packed_pixels)
       (integer ALLEGRO_GL_SGIS_texture_lod)
       (integer ALLEGRO_GL_SGIS_multisample)
       (integer ALLEGRO_GL_EXT_rescale_normal)
       (integer ALLEGRO_GL_EXT_vertex_array)
       (integer ALLEGRO_GL_EXT_misc_attribute)
       (integer ALLEGRO_GL_SGIS_generate_mipmap)
       (integer ALLEGRO_GL_SGIX_clipmap)
       (integer ALLEGRO_GL_SGIX_shadow)
       (integer ALLEGRO_GL_SGIS_texture_edge_clamp)
       (integer ALLEGRO_GL_SGIS_texture_border_clamp)
       (integer ALLEGRO_GL_EXT_blend_minmax)
       (integer ALLEGRO_GL_EXT_blend_subtract)
       (integer ALLEGRO_GL_EXT_blend_logic_op)
       (integer ALLEGRO_GL_SGIX_interlace)
       (integer ALLEGRO_GL_SGIS_texture_select)
       (integer ALLEGRO_GL_SGIX_sprite)
       (integer ALLEGRO_GL_SGIX_texture_multi_buffer)
       (integer ALLEGRO_GL_EXT_point_parameters)
       (integer ALLEGRO_GL_SGIX_instruments)
       (integer ALLEGRO_GL_SGIX_texture_scale_bias)
       (integer ALLEGRO_GL_SGIX_framezoom)
       (integer ALLEGRO_GL_SGIX_tag_sample_buffer)
       (integer ALLEGRO_GL_SGIX_reference_plane)
       (integer ALLEGRO_GL_SGIX_flush_raster)
       (integer ALLEGRO_GL_SGIX_depth_texture)
       (integer ALLEGRO_GL_SGIS_fog_function)
       (integer ALLEGRO_GL_SGIX_fog_offset)
       (integer ALLEGRO_GL_HP_image_transform)
       (integer ALLEGRO_GL_HP_convolution_border_modes)
       (integer ALLEGRO_GL_SGIX_texture_add_env)
       (integer ALLEGRO_GL_EXT_color_subtable)
       (integer ALLEGRO_GL_PGI_vertex_hints)
       (integer ALLEGRO_GL_PGI_misc_hints)
       (integer ALLEGRO_GL_EXT_paletted_texture)
       (integer ALLEGRO_GL_EXT_clip_volume_hint)
       (integer ALLEGRO_GL_SGIX_list_priority)
       (integer ALLEGRO_GL_SGIX_ir_instrument1)
       (integer ALLEGRO_GL_SGIX_texture_lod_bias)
       (integer ALLEGRO_GL_SGIX_shadow_ambient)
       (integer ALLEGRO_GL_EXT_index_texture)
       (integer ALLEGRO_GL_EXT_index_material)
       (integer ALLEGRO_GL_EXT_index_func)
       (integer ALLEGRO_GL_EXT_index_array_formats)
       (integer ALLEGRO_GL_EXT_compiled_vertex_array)
       (integer ALLEGRO_GL_EXT_cull_vertex)
       (integer ALLEGRO_GL_SGIX_ycrcb)
       (integer ALLEGRO_GL_EXT_fragment_lighting)
       (integer ALLEGRO_GL_IBM_rasterpos_clip)
       (integer ALLEGRO_GL_HP_texture_lighting)
       (integer ALLEGRO_GL_EXT_draw_range_elements)
       (integer ALLEGRO_GL_WIN_phong_shading)
       (integer ALLEGRO_GL_WIN_specular_fog)
       (integer ALLEGRO_GL_EXT_light_texture)
       (integer ALLEGRO_GL_SGIX_blend_alpha_minmax)
       (integer ALLEGRO_GL_EXT_scene_marker)
       (integer ALLEGRO_GL_SGIX_pixel_texture_bits)
       (integer ALLEGRO_GL_EXT_bgra)
       (integer ALLEGRO_GL_SGIX_async)
       (integer ALLEGRO_GL_SGIX_async_pixel)
       (integer ALLEGRO_GL_SGIX_async_histogram)
       (integer ALLEGRO_GL_INTEL_texture_scissor)
       (integer ALLEGRO_GL_INTEL_parallel_arrays)
       (integer ALLEGRO_GL_HP_occlusion_test)
       (integer ALLEGRO_GL_EXT_pixel_transform)
       (integer ALLEGRO_GL_EXT_pixel_transform_color_table)
       (integer ALLEGRO_GL_EXT_shared_texture_palette)
       (integer ALLEGRO_GL_EXT_separate_specular_color)
       (integer ALLEGRO_GL_EXT_secondary_color)
       (integer ALLEGRO_GL_EXT_texture_env)
       (integer ALLEGRO_GL_EXT_texture_perturb_normal)
       (integer ALLEGRO_GL_EXT_multi_draw_arrays)
       (integer ALLEGRO_GL_EXT_fog_coord)
       (integer ALLEGRO_GL_REND_screen_coordinates)
       (integer ALLEGRO_GL_EXT_coordinate_frame)
       (integer ALLEGRO_GL_EXT_texture_env_combine)
       (integer ALLEGRO_GL_APPLE_specular_vector)
       (integer ALLEGRO_GL_APPLE_transform_hint)
       (integer ALLEGRO_GL_SUNX_constant_data)
       (integer ALLEGRO_GL_SUN_global_alpha)
       (integer ALLEGRO_GL_SUN_triangle_list)
       (integer ALLEGRO_GL_SUN_vertex)
       (integer ALLEGRO_GL_EXT_blend_func_separate)
       (integer ALLEGRO_GL_INGR_color_clamp)
       (integer ALLEGRO_GL_INGR_interlace_read)
       (integer ALLEGRO_GL_EXT_stencil_wrap)
       (integer ALLEGRO_GL_EXT_422_pixels)
       (integer ALLEGRO_GL_NV_texgen_reflection)
       (integer ALLEGRO_GL_SGIX_texture_range)
       (integer ALLEGRO_GL_SUN_convolution_border_modes)
       (integer ALLEGRO_GL_EXT_texture_env_add)
       (integer ALLEGRO_GL_EXT_texture_lod_bias)
       (integer ALLEGRO_GL_EXT_texture_filter_anisotropic)
       (integer ALLEGRO_GL_EXT_vertex_weighting)
       (integer ALLEGRO_GL_NV_light_max_exponent)
       (integer ALLEGRO_GL_NV_vertex_array_range)
       (integer ALLEGRO_GL_NV_register_combiners)
       (integer ALLEGRO_GL_NV_fog_distance)
       (integer ALLEGRO_GL_NV_texgen_emboss)
       (integer ALLEGRO_GL_NV_blend_square)
       (integer ALLEGRO_GL_NV_texture_env_combine4)
       (integer ALLEGRO_GL_MESA_resize_buffers)
       (integer ALLEGRO_GL_MESA_window_pos)
       (integer ALLEGRO_GL_EXT_texture_compression_s3tc)
       (integer ALLEGRO_GL_IBM_cull_vertex)
       (integer ALLEGRO_GL_IBM_multimode_draw_arrays)
       (integer ALLEGRO_GL_IBM_vertex_array_lists)
       (integer ALLEGRO_GL_3DFX_texture_compression_FXT1)
       (integer ALLEGRO_GL_3DFX_multisample)
       (integer ALLEGRO_GL_3DFX_tbuffer)
       (integer ALLEGRO_GL_SGIX_vertex_preclip)
       (integer ALLEGRO_GL_SGIX_resample)
       (integer ALLEGRO_GL_SGIS_texture_color_mask)
       (integer ALLEGRO_GL_EXT_texture_env_dot3)
       (integer ALLEGRO_GL_ATI_texture_mirror_once)
       (integer ALLEGRO_GL_NV_fence)
       (integer ALLEGRO_GL_IBM_static_data)
       (integer ALLEGRO_GL_IBM_texture_mirrored_repeat)
       (integer ALLEGRO_GL_NV_evaluators)
       (integer ALLEGRO_GL_NV_packed_depth_stencil)
       (integer ALLEGRO_GL_NV_register_combiners2)
       (integer ALLEGRO_GL_NV_texture_compression_vtc)
       (integer ALLEGRO_GL_NV_texture_rectangle)
       (integer ALLEGRO_GL_NV_texture_shader)
       (integer ALLEGRO_GL_NV_texture_shader2)
       (integer ALLEGRO_GL_NV_vertex_array_range2)
       (integer ALLEGRO_GL_NV_vertex_program)
       (integer ALLEGRO_GL_SGIX_texture_coordinate_clamp)
       (integer ALLEGRO_GL_OML_interlace)
       (integer ALLEGRO_GL_OML_subsample)
       (integer ALLEGRO_GL_OML_resample)
       (integer ALLEGRO_GL_NV_copy_depth_to_color)
       (integer ALLEGRO_GL_ATI_envmap_bumpmap)
       (integer ALLEGRO_GL_ATI_fragment_shader)
       (integer ALLEGRO_GL_ATI_pn_triangles)
       (integer ALLEGRO_GL_ATI_vertex_array_object)
       (integer ALLEGRO_GL_EXT_vertex_shader)
       (integer ALLEGRO_GL_ATI_vertex_streams)
       (integer ALLEGRO_GL_ATI_element_array)
       (integer ALLEGRO_GL_SUN_mesh_array)
       (integer ALLEGRO_GL_SUN_slice_accum)
       (integer ALLEGRO_GL_NV_multisample_filter_hint)
       (integer ALLEGRO_GL_NV_depth_clamp)
       (integer ALLEGRO_GL_NV_occlusion_query)
       (integer ALLEGRO_GL_NV_point_sprite)
       (integer ALLEGRO_GL_NV_texture_shader3)
       (integer ALLEGRO_GL_NV_vertex_program1_1)
       (integer ALLEGRO_GL_EXT_shadow_funcs)
       (integer ALLEGRO_GL_EXT_stencil_two_side)
       (integer ALLEGRO_GL_ATI_text_fragment_shader)
       (integer ALLEGRO_GL_APPLE_client_storage)
       (integer ALLEGRO_GL_APPLE_element_array)
       (integer ALLEGRO_GL_APPLE_fence)
       (integer ALLEGRO_GL_APPLE_vertex_array_object)
       (integer ALLEGRO_GL_APPLE_vertex_array_range)
       (integer ALLEGRO_GL_APPLE_ycbcr_422)
       (integer ALLEGRO_GL_S3_s3tc)
       (integer ALLEGRO_GL_ATI_draw_buffers)
       (integer ALLEGRO_GL_ATI_texture_env_combine3)
       (integer ALLEGRO_GL_ATI_texture_float)
       (integer ALLEGRO_GL_NV_float_buffer)
       (integer ALLEGRO_GL_NV_fragment_program)
       (integer ALLEGRO_GL_NV_half_float)
       (integer ALLEGRO_GL_NV_pixel_data_range)
       (integer ALLEGRO_GL_NV_primitive_restart)
       (integer ALLEGRO_GL_NV_texture_expand_normal)
       (integer ALLEGRO_GL_NV_vertex_program2)
       (integer ALLEGRO_GL_ATI_map_object_buffer)
       (integer ALLEGRO_GL_ATI_separate_stencil)
       (integer ALLEGRO_GL_ATI_vertex_attrib_array_object)
       (integer ALLEGRO_GL_OES_byte_coordinates)
       (integer ALLEGRO_GL_OES_fixed_point)
       (integer ALLEGRO_GL_OES_single_precision)
       (integer ALLEGRO_GL_OES_compressed_paletted_texture)
       (integer ALLEGRO_GL_OES_read_format)
       (integer ALLEGRO_GL_OES_query_matrix)
       (integer ALLEGRO_GL_OES_framebuffer_object)
       (integer ALLEGRO_GL_OES_texture_npot)
       (integer ALLEGRO_GL_EXT_depth_bounds_test)
       (integer ALLEGRO_GL_EXT_texture_mirror_clamp)
       (integer ALLEGRO_GL_EXT_blend_equation_separate)
       (integer ALLEGRO_GL_MESA_pack_invert)
       (integer ALLEGRO_GL_MESA_ycbcr_texture)
       (integer ALLEGRO_GL_EXT_pixel_buffer_object)
       (integer ALLEGRO_GL_NV_fragment_program_option)
       (integer ALLEGRO_GL_NV_fragment_program2)
       (integer ALLEGRO_GL_NV_vertex_program2_option)
       (integer ALLEGRO_GL_NV_vertex_program3)
       (integer ALLEGRO_GL_EXT_texture_compression_dxt1)
       (integer ALLEGRO_GL_EXT_framebuffer_object)
       (integer ALLEGRO_GL_GREMEDY_string_marker)
       (integer ALLEGRO_GL_EXT_packed_depth_stencil)
       (integer ALLEGRO_GL_EXT_stencil_clear_tag)
       (integer ALLEGRO_GL_EXT_texture_sRGB)
       (integer ALLEGRO_GL_EXT_framebuffer_blit)
       (integer ALLEGRO_GL_EXT_framebuffer_multisample)
       (integer ALLEGRO_GL_MESAX_texture_stack)
       (integer ALLEGRO_GL_EXT_timer_query)
       (integer ALLEGRO_GL_EXT_gpu_program_parameters)
       (integer ALLEGRO_GL_APPLE_flush_buffer_range)
       (integer ALLEGRO_GL_EXT_bindable_uniform)
       (integer ALLEGRO_GL_EXT_draw_buffers2)
       (integer ALLEGRO_GL_EXT_draw_instanced)
       (integer ALLEGRO_GL_EXT_framebuffer_sRGB)
       (integer ALLEGRO_GL_EXT_geometry_shader4)
       (integer ALLEGRO_GL_EXT_gpu_shader4)
       (integer ALLEGRO_GL_EXT_packed_float)
       (integer ALLEGRO_GL_EXT_texture_array)
       (integer ALLEGRO_GL_EXT_texture_buffer_object)
       (integer ALLEGRO_GL_EXT_texture_compression_latc)
       (integer ALLEGRO_GL_EXT_texture_compression_rgtc)
       (integer ALLEGRO_GL_EXT_texture_integer)
       (integer ALLEGRO_GL_EXT_texture_shared_exponent)
       (integer ALLEGRO_GL_NV_depth_buffer_float)
       (integer ALLEGRO_GL_NV_fragment_program4)
       (integer ALLEGRO_GL_NV_framebuffer_multisample_coverage)
       (integer ALLEGRO_GL_NV_geometry_program4)
       (integer ALLEGRO_GL_NV_gpu_program4)
       (integer ALLEGRO_GL_NV_parameter_buffer_object)
       (integer ALLEGRO_GL_NV_transform_feedback)
       (integer ALLEGRO_GL_NV_vertex_program4)
       (integer ALLEGRO_GL_GREMEDY_frame_terminator)
       (integer ALLEGRO_GL_NV_conditional_render)
       (integer ALLEGRO_GL_NV_present_video)
       (integer ALLEGRO_GL_EXT_direct_state_access)
       (integer ALLEGRO_GL_EXT_transform_feedback)
       (integer ALLEGRO_GL_EXT_texture_swizzle)
       (integer ALLEGRO_GL_NV_explicit_multisample)
       (integer ALLEGRO_GL_NV_transform_feedback2)
       (integer ALLEGRO_GL_ATI_meminfo)
       (integer ALLEGRO_GL_AMD_performance_monitor)
       (integer ALLEGRO_GL_AMD_texture_texture4)
       (integer ALLEGRO_GL_AMD_vertex_shader_tesselator)
       (integer ALLEGRO_GL_EXT_provoking_vertex)
       (integer ALLEGRO_GL_EXT_texture_snorm)
       (integer ALLEGRO_GL_AMD_draw_buffers_blend)
       (integer ALLEGRO_GL_APPLE_texture_range)
       (integer ALLEGRO_GL_APPLE_float_pixels)
       (integer ALLEGRO_GL_APPLE_vertex_program_evaluators)
       (integer ALLEGRO_GL_APPLE_aux_depth_stencil)
       (integer ALLEGRO_GL_APPLE_object_purgeable)
       (integer ALLEGRO_GL_APPLE_row_bytes)
       (integer ALLEGRO_GL_APPLE_rgb_422)
       (integer ALLEGRO_GL_NV_video_capture)
       (integer ALLEGRO_GL_EXT_separate_shader_objects)
       (integer ALLEGRO_GL_NV_parameter_buffer_object2)
       (integer ALLEGRO_GL_NV_shader_buffer_load)
       (integer ALLEGRO_GL_NV_vertex_buffer_unified_memory)
       (integer ALLEGRO_GL_NV_texture_barrier)
       (integer ALLEGRO_GL_AMD_shader_stencil_export)
       (integer ALLEGRO_GL_AMD_seamless_cubemap_per_texture)
       (integer ALLEGRO_GL_AMD_conservative_depth))
      "struct ALLEGRO_OGL_EXT_LIST *tmp_ =  (struct ALLEGRO_OGL_EXT_LIST *)C_malloc(sizeof(struct ALLEGRO_OGL_EXT_LIST));\ntmp_->ALLEGRO_GL_ARB_imaging = ALLEGRO_GL_ARB_imaging;\ntmp_->ALLEGRO_GL_ARB_multitexture = ALLEGRO_GL_ARB_multitexture;\ntmp_->ALLEGRO_GL_ARB_transpose_matrix = ALLEGRO_GL_ARB_transpose_matrix;\ntmp_->ALLEGRO_GL_ARB_multisample = ALLEGRO_GL_ARB_multisample;\ntmp_->ALLEGRO_GL_ARB_texture_env_add = ALLEGRO_GL_ARB_texture_env_add;\ntmp_->ALLEGRO_GL_ARB_texture_cube_map = ALLEGRO_GL_ARB_texture_cube_map;\ntmp_->ALLEGRO_GL_ARB_texture_compression = ALLEGRO_GL_ARB_texture_compression;\ntmp_->ALLEGRO_GL_ARB_texture_border_clamp = ALLEGRO_GL_ARB_texture_border_clamp;\ntmp_->ALLEGRO_GL_ARB_point_parameters = ALLEGRO_GL_ARB_point_parameters;\ntmp_->ALLEGRO_GL_ARB_vertex_blend = ALLEGRO_GL_ARB_vertex_blend;\ntmp_->ALLEGRO_GL_ARB_texture_env_combine = ALLEGRO_GL_ARB_texture_env_combine;\ntmp_->ALLEGRO_GL_ARB_texture_env_crossbar = ALLEGRO_GL_ARB_texture_env_crossbar;\ntmp_->ALLEGRO_GL_ARB_texture_env_dot3 = ALLEGRO_GL_ARB_texture_env_dot3;\ntmp_->ALLEGRO_GL_ARB_texture_mirrored_repeat = ALLEGRO_GL_ARB_texture_mirrored_repeat;\ntmp_->ALLEGRO_GL_ARB_depth_texture = ALLEGRO_GL_ARB_depth_texture;\ntmp_->ALLEGRO_GL_ARB_shadow = ALLEGRO_GL_ARB_shadow;\ntmp_->ALLEGRO_GL_ARB_shadow_ambient = ALLEGRO_GL_ARB_shadow_ambient;\ntmp_->ALLEGRO_GL_ARB_window_pos = ALLEGRO_GL_ARB_window_pos;\ntmp_->ALLEGRO_GL_ARB_vertex_program = ALLEGRO_GL_ARB_vertex_program;\ntmp_->ALLEGRO_GL_ARB_fragment_program = ALLEGRO_GL_ARB_fragment_program;\ntmp_->ALLEGRO_GL_ARB_vertex_buffer_object = ALLEGRO_GL_ARB_vertex_buffer_object;\ntmp_->ALLEGRO_GL_ARB_occlusion_query = ALLEGRO_GL_ARB_occlusion_query;\ntmp_->ALLEGRO_GL_ARB_shader_objects = ALLEGRO_GL_ARB_shader_objects;\ntmp_->ALLEGRO_GL_ARB_vertex_shader = ALLEGRO_GL_ARB_vertex_shader;\ntmp_->ALLEGRO_GL_ARB_fragment_shader = ALLEGRO_GL_ARB_fragment_shader;\ntmp_->ALLEGRO_GL_ARB_shading_language_100 = ALLEGRO_GL_ARB_shading_language_100;\ntmp_->ALLEGRO_GL_ARB_texture_non_power_of_two = ALLEGRO_GL_ARB_texture_non_power_of_two;\ntmp_->ALLEGRO_GL_ARB_point_sprite = ALLEGRO_GL_ARB_point_sprite;\ntmp_->ALLEGRO_GL_ARB_fragment_program_shadow = ALLEGRO_GL_ARB_fragment_program_shadow;\ntmp_->ALLEGRO_GL_ARB_draw_buffers = ALLEGRO_GL_ARB_draw_buffers;\ntmp_->ALLEGRO_GL_ARB_texture_rectangle = ALLEGRO_GL_ARB_texture_rectangle;\ntmp_->ALLEGRO_GL_ARB_color_buffer_float = ALLEGRO_GL_ARB_color_buffer_float;\ntmp_->ALLEGRO_GL_ARB_half_float_pixel = ALLEGRO_GL_ARB_half_float_pixel;\ntmp_->ALLEGRO_GL_ARB_texture_float = ALLEGRO_GL_ARB_texture_float;\ntmp_->ALLEGRO_GL_ARB_pixel_buffer_object = ALLEGRO_GL_ARB_pixel_buffer_object;\ntmp_->ALLEGRO_GL_ARB_instanced_arrays = ALLEGRO_GL_ARB_instanced_arrays;\ntmp_->ALLEGRO_GL_ARB_draw_instanced = ALLEGRO_GL_ARB_draw_instanced;\ntmp_->ALLEGRO_GL_ARB_geometry_shader4 = ALLEGRO_GL_ARB_geometry_shader4;\ntmp_->ALLEGRO_GL_ARB_texture_buffer_object = ALLEGRO_GL_ARB_texture_buffer_object;\ntmp_->ALLEGRO_GL_ARB_depth_buffer_float = ALLEGRO_GL_ARB_depth_buffer_float;\ntmp_->ALLEGRO_GL_ARB_framebuffer_object = ALLEGRO_GL_ARB_framebuffer_object;\ntmp_->ALLEGRO_GL_ARB_framebuffer_sRGB = ALLEGRO_GL_ARB_framebuffer_sRGB;\ntmp_->ALLEGRO_GL_ARB_half_float_vertex = ALLEGRO_GL_ARB_half_float_vertex;\ntmp_->ALLEGRO_GL_ARB_map_buffer_range = ALLEGRO_GL_ARB_map_buffer_range;\ntmp_->ALLEGRO_GL_ARB_texture_compression_rgtc = ALLEGRO_GL_ARB_texture_compression_rgtc;\ntmp_->ALLEGRO_GL_ARB_texture_rg = ALLEGRO_GL_ARB_texture_rg;\ntmp_->ALLEGRO_GL_ARB_vertex_array_object = ALLEGRO_GL_ARB_vertex_array_object;\ntmp_->ALLEGRO_GL_ARB_copy_buffer = ALLEGRO_GL_ARB_copy_buffer;\ntmp_->ALLEGRO_GL_ARB_compatibility = ALLEGRO_GL_ARB_compatibility;\ntmp_->ALLEGRO_GL_ARB_uniform_buffer_object = ALLEGRO_GL_ARB_uniform_buffer_object;\ntmp_->ALLEGRO_GL_ARB_shader_texture_lod = ALLEGRO_GL_ARB_shader_texture_lod;\ntmp_->ALLEGRO_GL_ARB_depth_clamp = ALLEGRO_GL_ARB_depth_clamp;\ntmp_->ALLEGRO_GL_ARB_draw_elements_base_vertex = ALLEGRO_GL_ARB_draw_elements_base_vertex;\ntmp_->ALLEGRO_GL_ARB_fragment_coord_conventions = ALLEGRO_GL_ARB_fragment_coord_conventions;\ntmp_->ALLEGRO_GL_ARB_provoking_vertex = ALLEGRO_GL_ARB_provoking_vertex;\ntmp_->ALLEGRO_GL_ARB_seamless_cube_map = ALLEGRO_GL_ARB_seamless_cube_map;\ntmp_->ALLEGRO_GL_ARB_sync = ALLEGRO_GL_ARB_sync;\ntmp_->ALLEGRO_GL_ARB_texture_multisample = ALLEGRO_GL_ARB_texture_multisample;\ntmp_->ALLEGRO_GL_ARB_vertex_array_bgra = ALLEGRO_GL_ARB_vertex_array_bgra;\ntmp_->ALLEGRO_GL_ARB_draw_buffers_blend = ALLEGRO_GL_ARB_draw_buffers_blend;\ntmp_->ALLEGRO_GL_ARB_sample_shading = ALLEGRO_GL_ARB_sample_shading;\ntmp_->ALLEGRO_GL_ARB_texture_cube_map_array = ALLEGRO_GL_ARB_texture_cube_map_array;\ntmp_->ALLEGRO_GL_ARB_texture_gather = ALLEGRO_GL_ARB_texture_gather;\ntmp_->ALLEGRO_GL_ARB_texture_query_lod = ALLEGRO_GL_ARB_texture_query_lod;\ntmp_->ALLEGRO_GL_ARB_shading_language_include = ALLEGRO_GL_ARB_shading_language_include;\ntmp_->ALLEGRO_GL_ARB_texture_compression_bptc = ALLEGRO_GL_ARB_texture_compression_bptc;\ntmp_->ALLEGRO_GL_ARB_blend_func_extended = ALLEGRO_GL_ARB_blend_func_extended;\ntmp_->ALLEGRO_GL_ARB_explicit_attrib_location = ALLEGRO_GL_ARB_explicit_attrib_location;\ntmp_->ALLEGRO_GL_ARB_occlusion_query2 = ALLEGRO_GL_ARB_occlusion_query2;\ntmp_->ALLEGRO_GL_ARB_sampler_objects = ALLEGRO_GL_ARB_sampler_objects;\ntmp_->ALLEGRO_GL_ARB_shader_bit_encoding = ALLEGRO_GL_ARB_shader_bit_encoding;\ntmp_->ALLEGRO_GL_ARB_texture_rgb10_a2ui = ALLEGRO_GL_ARB_texture_rgb10_a2ui;\ntmp_->ALLEGRO_GL_ARB_texture_swizzle = ALLEGRO_GL_ARB_texture_swizzle;\ntmp_->ALLEGRO_GL_ARB_timer_query = ALLEGRO_GL_ARB_timer_query;\ntmp_->ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev = ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev;\ntmp_->ALLEGRO_GL_ARB_draw_indirect = ALLEGRO_GL_ARB_draw_indirect;\ntmp_->ALLEGRO_GL_ARB_gpu_shader5 = ALLEGRO_GL_ARB_gpu_shader5;\ntmp_->ALLEGRO_GL_ARB_gpu_shader_fp64 = ALLEGRO_GL_ARB_gpu_shader_fp64;\ntmp_->ALLEGRO_GL_ARB_shader_subroutine = ALLEGRO_GL_ARB_shader_subroutine;\ntmp_->ALLEGRO_GL_ARB_tessellation_shader = ALLEGRO_GL_ARB_tessellation_shader;\ntmp_->ALLEGRO_GL_ARB_texture_buffer_object_rgb32 = ALLEGRO_GL_ARB_texture_buffer_object_rgb32;\ntmp_->ALLEGRO_GL_ARB_transform_feedback2 = ALLEGRO_GL_ARB_transform_feedback2;\ntmp_->ALLEGRO_GL_ARB_transform_feedback3 = ALLEGRO_GL_ARB_transform_feedback3;\ntmp_->ALLEGRO_GL_EXT_abgr = ALLEGRO_GL_EXT_abgr;\ntmp_->ALLEGRO_GL_EXT_blend_color = ALLEGRO_GL_EXT_blend_color;\ntmp_->ALLEGRO_GL_EXT_polygon_offset = ALLEGRO_GL_EXT_polygon_offset;\ntmp_->ALLEGRO_GL_EXT_texture = ALLEGRO_GL_EXT_texture;\ntmp_->ALLEGRO_GL_EXT_texture3D = ALLEGRO_GL_EXT_texture3D;\ntmp_->ALLEGRO_GL_SGIS_texture_filter4 = ALLEGRO_GL_SGIS_texture_filter4;\ntmp_->ALLEGRO_GL_EXT_subtexture = ALLEGRO_GL_EXT_subtexture;\ntmp_->ALLEGRO_GL_EXT_copy_texture = ALLEGRO_GL_EXT_copy_texture;\ntmp_->ALLEGRO_GL_EXT_histogram = ALLEGRO_GL_EXT_histogram;\ntmp_->ALLEGRO_GL_EXT_convolution = ALLEGRO_GL_EXT_convolution;\ntmp_->ALLEGRO_GL_SGI_color_matrix = ALLEGRO_GL_SGI_color_matrix;\ntmp_->ALLEGRO_GL_SGI_color_table = ALLEGRO_GL_SGI_color_table;\ntmp_->ALLEGRO_GL_SGIS_pixel_texture = ALLEGRO_GL_SGIS_pixel_texture;\ntmp_->ALLEGRO_GL_SGIX_pixel_texture = ALLEGRO_GL_SGIX_pixel_texture;\ntmp_->ALLEGRO_GL_SGIS_texture4D = ALLEGRO_GL_SGIS_texture4D;\ntmp_->ALLEGRO_GL_SGI_texture_color_table = ALLEGRO_GL_SGI_texture_color_table;\ntmp_->ALLEGRO_GL_EXT_cmyka = ALLEGRO_GL_EXT_cmyka;\ntmp_->ALLEGRO_GL_EXT_texture_object = ALLEGRO_GL_EXT_texture_object;\ntmp_->ALLEGRO_GL_SGIS_detail_texture = ALLEGRO_GL_SGIS_detail_texture;\ntmp_->ALLEGRO_GL_SGIS_sharpen_texture = ALLEGRO_GL_SGIS_sharpen_texture;\ntmp_->ALLEGRO_GL_EXT_packed_pixels = ALLEGRO_GL_EXT_packed_pixels;\ntmp_->ALLEGRO_GL_SGIS_texture_lod = ALLEGRO_GL_SGIS_texture_lod;\ntmp_->ALLEGRO_GL_SGIS_multisample = ALLEGRO_GL_SGIS_multisample;\ntmp_->ALLEGRO_GL_EXT_rescale_normal = ALLEGRO_GL_EXT_rescale_normal;\ntmp_->ALLEGRO_GL_EXT_vertex_array = ALLEGRO_GL_EXT_vertex_array;\ntmp_->ALLEGRO_GL_EXT_misc_attribute = ALLEGRO_GL_EXT_misc_attribute;\ntmp_->ALLEGRO_GL_SGIS_generate_mipmap = ALLEGRO_GL_SGIS_generate_mipmap;\ntmp_->ALLEGRO_GL_SGIX_clipmap = ALLEGRO_GL_SGIX_clipmap;\ntmp_->ALLEGRO_GL_SGIX_shadow = ALLEGRO_GL_SGIX_shadow;\ntmp_->ALLEGRO_GL_SGIS_texture_edge_clamp = ALLEGRO_GL_SGIS_texture_edge_clamp;\ntmp_->ALLEGRO_GL_SGIS_texture_border_clamp = ALLEGRO_GL_SGIS_texture_border_clamp;\ntmp_->ALLEGRO_GL_EXT_blend_minmax = ALLEGRO_GL_EXT_blend_minmax;\ntmp_->ALLEGRO_GL_EXT_blend_subtract = ALLEGRO_GL_EXT_blend_subtract;\ntmp_->ALLEGRO_GL_EXT_blend_logic_op = ALLEGRO_GL_EXT_blend_logic_op;\ntmp_->ALLEGRO_GL_SGIX_interlace = ALLEGRO_GL_SGIX_interlace;\ntmp_->ALLEGRO_GL_SGIS_texture_select = ALLEGRO_GL_SGIS_texture_select;\ntmp_->ALLEGRO_GL_SGIX_sprite = ALLEGRO_GL_SGIX_sprite;\ntmp_->ALLEGRO_GL_SGIX_texture_multi_buffer = ALLEGRO_GL_SGIX_texture_multi_buffer;\ntmp_->ALLEGRO_GL_EXT_point_parameters = ALLEGRO_GL_EXT_point_parameters;\ntmp_->ALLEGRO_GL_SGIX_instruments = ALLEGRO_GL_SGIX_instruments;\ntmp_->ALLEGRO_GL_SGIX_texture_scale_bias = ALLEGRO_GL_SGIX_texture_scale_bias;\ntmp_->ALLEGRO_GL_SGIX_framezoom = ALLEGRO_GL_SGIX_framezoom;\ntmp_->ALLEGRO_GL_SGIX_tag_sample_buffer = ALLEGRO_GL_SGIX_tag_sample_buffer;\ntmp_->ALLEGRO_GL_SGIX_reference_plane = ALLEGRO_GL_SGIX_reference_plane;\ntmp_->ALLEGRO_GL_SGIX_flush_raster = ALLEGRO_GL_SGIX_flush_raster;\ntmp_->ALLEGRO_GL_SGIX_depth_texture = ALLEGRO_GL_SGIX_depth_texture;\ntmp_->ALLEGRO_GL_SGIS_fog_function = ALLEGRO_GL_SGIS_fog_function;\ntmp_->ALLEGRO_GL_SGIX_fog_offset = ALLEGRO_GL_SGIX_fog_offset;\ntmp_->ALLEGRO_GL_HP_image_transform = ALLEGRO_GL_HP_image_transform;\ntmp_->ALLEGRO_GL_HP_convolution_border_modes = ALLEGRO_GL_HP_convolution_border_modes;\ntmp_->ALLEGRO_GL_SGIX_texture_add_env = ALLEGRO_GL_SGIX_texture_add_env;\ntmp_->ALLEGRO_GL_EXT_color_subtable = ALLEGRO_GL_EXT_color_subtable;\ntmp_->ALLEGRO_GL_PGI_vertex_hints = ALLEGRO_GL_PGI_vertex_hints;\ntmp_->ALLEGRO_GL_PGI_misc_hints = ALLEGRO_GL_PGI_misc_hints;\ntmp_->ALLEGRO_GL_EXT_paletted_texture = ALLEGRO_GL_EXT_paletted_texture;\ntmp_->ALLEGRO_GL_EXT_clip_volume_hint = ALLEGRO_GL_EXT_clip_volume_hint;\ntmp_->ALLEGRO_GL_SGIX_list_priority = ALLEGRO_GL_SGIX_list_priority;\ntmp_->ALLEGRO_GL_SGIX_ir_instrument1 = ALLEGRO_GL_SGIX_ir_instrument1;\ntmp_->ALLEGRO_GL_SGIX_texture_lod_bias = ALLEGRO_GL_SGIX_texture_lod_bias;\ntmp_->ALLEGRO_GL_SGIX_shadow_ambient = ALLEGRO_GL_SGIX_shadow_ambient;\ntmp_->ALLEGRO_GL_EXT_index_texture = ALLEGRO_GL_EXT_index_texture;\ntmp_->ALLEGRO_GL_EXT_index_material = ALLEGRO_GL_EXT_index_material;\ntmp_->ALLEGRO_GL_EXT_index_func = ALLEGRO_GL_EXT_index_func;\ntmp_->ALLEGRO_GL_EXT_index_array_formats = ALLEGRO_GL_EXT_index_array_formats;\ntmp_->ALLEGRO_GL_EXT_compiled_vertex_array = ALLEGRO_GL_EXT_compiled_vertex_array;\ntmp_->ALLEGRO_GL_EXT_cull_vertex = ALLEGRO_GL_EXT_cull_vertex;\ntmp_->ALLEGRO_GL_SGIX_ycrcb = ALLEGRO_GL_SGIX_ycrcb;\ntmp_->ALLEGRO_GL_EXT_fragment_lighting = ALLEGRO_GL_EXT_fragment_lighting;\ntmp_->ALLEGRO_GL_IBM_rasterpos_clip = ALLEGRO_GL_IBM_rasterpos_clip;\ntmp_->ALLEGRO_GL_HP_texture_lighting = ALLEGRO_GL_HP_texture_lighting;\ntmp_->ALLEGRO_GL_EXT_draw_range_elements = ALLEGRO_GL_EXT_draw_range_elements;\ntmp_->ALLEGRO_GL_WIN_phong_shading = ALLEGRO_GL_WIN_phong_shading;\ntmp_->ALLEGRO_GL_WIN_specular_fog = ALLEGRO_GL_WIN_specular_fog;\ntmp_->ALLEGRO_GL_EXT_light_texture = ALLEGRO_GL_EXT_light_texture;\ntmp_->ALLEGRO_GL_SGIX_blend_alpha_minmax = ALLEGRO_GL_SGIX_blend_alpha_minmax;\ntmp_->ALLEGRO_GL_EXT_scene_marker = ALLEGRO_GL_EXT_scene_marker;\ntmp_->ALLEGRO_GL_SGIX_pixel_texture_bits = ALLEGRO_GL_SGIX_pixel_texture_bits;\ntmp_->ALLEGRO_GL_EXT_bgra = ALLEGRO_GL_EXT_bgra;\ntmp_->ALLEGRO_GL_SGIX_async = ALLEGRO_GL_SGIX_async;\ntmp_->ALLEGRO_GL_SGIX_async_pixel = ALLEGRO_GL_SGIX_async_pixel;\ntmp_->ALLEGRO_GL_SGIX_async_histogram = ALLEGRO_GL_SGIX_async_histogram;\ntmp_->ALLEGRO_GL_INTEL_texture_scissor = ALLEGRO_GL_INTEL_texture_scissor;\ntmp_->ALLEGRO_GL_INTEL_parallel_arrays = ALLEGRO_GL_INTEL_parallel_arrays;\ntmp_->ALLEGRO_GL_HP_occlusion_test = ALLEGRO_GL_HP_occlusion_test;\ntmp_->ALLEGRO_GL_EXT_pixel_transform = ALLEGRO_GL_EXT_pixel_transform;\ntmp_->ALLEGRO_GL_EXT_pixel_transform_color_table = ALLEGRO_GL_EXT_pixel_transform_color_table;\ntmp_->ALLEGRO_GL_EXT_shared_texture_palette = ALLEGRO_GL_EXT_shared_texture_palette;\ntmp_->ALLEGRO_GL_EXT_separate_specular_color = ALLEGRO_GL_EXT_separate_specular_color;\ntmp_->ALLEGRO_GL_EXT_secondary_color = ALLEGRO_GL_EXT_secondary_color;\ntmp_->ALLEGRO_GL_EXT_texture_env = ALLEGRO_GL_EXT_texture_env;\ntmp_->ALLEGRO_GL_EXT_texture_perturb_normal = ALLEGRO_GL_EXT_texture_perturb_normal;\ntmp_->ALLEGRO_GL_EXT_multi_draw_arrays = ALLEGRO_GL_EXT_multi_draw_arrays;\ntmp_->ALLEGRO_GL_EXT_fog_coord = ALLEGRO_GL_EXT_fog_coord;\ntmp_->ALLEGRO_GL_REND_screen_coordinates = ALLEGRO_GL_REND_screen_coordinates;\ntmp_->ALLEGRO_GL_EXT_coordinate_frame = ALLEGRO_GL_EXT_coordinate_frame;\ntmp_->ALLEGRO_GL_EXT_texture_env_combine = ALLEGRO_GL_EXT_texture_env_combine;\ntmp_->ALLEGRO_GL_APPLE_specular_vector = ALLEGRO_GL_APPLE_specular_vector;\ntmp_->ALLEGRO_GL_APPLE_transform_hint = ALLEGRO_GL_APPLE_transform_hint;\ntmp_->ALLEGRO_GL_SUNX_constant_data = ALLEGRO_GL_SUNX_constant_data;\ntmp_->ALLEGRO_GL_SUN_global_alpha = ALLEGRO_GL_SUN_global_alpha;\ntmp_->ALLEGRO_GL_SUN_triangle_list = ALLEGRO_GL_SUN_triangle_list;\ntmp_->ALLEGRO_GL_SUN_vertex = ALLEGRO_GL_SUN_vertex;\ntmp_->ALLEGRO_GL_EXT_blend_func_separate = ALLEGRO_GL_EXT_blend_func_separate;\ntmp_->ALLEGRO_GL_INGR_color_clamp = ALLEGRO_GL_INGR_color_clamp;\ntmp_->ALLEGRO_GL_INGR_interlace_read = ALLEGRO_GL_INGR_interlace_read;\ntmp_->ALLEGRO_GL_EXT_stencil_wrap = ALLEGRO_GL_EXT_stencil_wrap;\ntmp_->ALLEGRO_GL_EXT_422_pixels = ALLEGRO_GL_EXT_422_pixels;\ntmp_->ALLEGRO_GL_NV_texgen_reflection = ALLEGRO_GL_NV_texgen_reflection;\ntmp_->ALLEGRO_GL_SGIX_texture_range = ALLEGRO_GL_SGIX_texture_range;\ntmp_->ALLEGRO_GL_SUN_convolution_border_modes = ALLEGRO_GL_SUN_convolution_border_modes;\ntmp_->ALLEGRO_GL_EXT_texture_env_add = ALLEGRO_GL_EXT_texture_env_add;\ntmp_->ALLEGRO_GL_EXT_texture_lod_bias = ALLEGRO_GL_EXT_texture_lod_bias;\ntmp_->ALLEGRO_GL_EXT_texture_filter_anisotropic = ALLEGRO_GL_EXT_texture_filter_anisotropic;\ntmp_->ALLEGRO_GL_EXT_vertex_weighting = ALLEGRO_GL_EXT_vertex_weighting;\ntmp_->ALLEGRO_GL_NV_light_max_exponent = ALLEGRO_GL_NV_light_max_exponent;\ntmp_->ALLEGRO_GL_NV_vertex_array_range = ALLEGRO_GL_NV_vertex_array_range;\ntmp_->ALLEGRO_GL_NV_register_combiners = ALLEGRO_GL_NV_register_combiners;\ntmp_->ALLEGRO_GL_NV_fog_distance = ALLEGRO_GL_NV_fog_distance;\ntmp_->ALLEGRO_GL_NV_texgen_emboss = ALLEGRO_GL_NV_texgen_emboss;\ntmp_->ALLEGRO_GL_NV_blend_square = ALLEGRO_GL_NV_blend_square;\ntmp_->ALLEGRO_GL_NV_texture_env_combine4 = ALLEGRO_GL_NV_texture_env_combine4;\ntmp_->ALLEGRO_GL_MESA_resize_buffers = ALLEGRO_GL_MESA_resize_buffers;\ntmp_->ALLEGRO_GL_MESA_window_pos = ALLEGRO_GL_MESA_window_pos;\ntmp_->ALLEGRO_GL_EXT_texture_compression_s3tc = ALLEGRO_GL_EXT_texture_compression_s3tc;\ntmp_->ALLEGRO_GL_IBM_cull_vertex = ALLEGRO_GL_IBM_cull_vertex;\ntmp_->ALLEGRO_GL_IBM_multimode_draw_arrays = ALLEGRO_GL_IBM_multimode_draw_arrays;\ntmp_->ALLEGRO_GL_IBM_vertex_array_lists = ALLEGRO_GL_IBM_vertex_array_lists;\ntmp_->ALLEGRO_GL_3DFX_texture_compression_FXT1 = ALLEGRO_GL_3DFX_texture_compression_FXT1;\ntmp_->ALLEGRO_GL_3DFX_multisample = ALLEGRO_GL_3DFX_multisample;\ntmp_->ALLEGRO_GL_3DFX_tbuffer = ALLEGRO_GL_3DFX_tbuffer;\ntmp_->ALLEGRO_GL_SGIX_vertex_preclip = ALLEGRO_GL_SGIX_vertex_preclip;\ntmp_->ALLEGRO_GL_SGIX_resample = ALLEGRO_GL_SGIX_resample;\ntmp_->ALLEGRO_GL_SGIS_texture_color_mask = ALLEGRO_GL_SGIS_texture_color_mask;\ntmp_->ALLEGRO_GL_EXT_texture_env_dot3 = ALLEGRO_GL_EXT_texture_env_dot3;\ntmp_->ALLEGRO_GL_ATI_texture_mirror_once = ALLEGRO_GL_ATI_texture_mirror_once;\ntmp_->ALLEGRO_GL_NV_fence = ALLEGRO_GL_NV_fence;\ntmp_->ALLEGRO_GL_IBM_static_data = ALLEGRO_GL_IBM_static_data;\ntmp_->ALLEGRO_GL_IBM_texture_mirrored_repeat = ALLEGRO_GL_IBM_texture_mirrored_repeat;\ntmp_->ALLEGRO_GL_NV_evaluators = ALLEGRO_GL_NV_evaluators;\ntmp_->ALLEGRO_GL_NV_packed_depth_stencil = ALLEGRO_GL_NV_packed_depth_stencil;\ntmp_->ALLEGRO_GL_NV_register_combiners2 = ALLEGRO_GL_NV_register_combiners2;\ntmp_->ALLEGRO_GL_NV_texture_compression_vtc = ALLEGRO_GL_NV_texture_compression_vtc;\ntmp_->ALLEGRO_GL_NV_texture_rectangle = ALLEGRO_GL_NV_texture_rectangle;\ntmp_->ALLEGRO_GL_NV_texture_shader = ALLEGRO_GL_NV_texture_shader;\ntmp_->ALLEGRO_GL_NV_texture_shader2 = ALLEGRO_GL_NV_texture_shader2;\ntmp_->ALLEGRO_GL_NV_vertex_array_range2 = ALLEGRO_GL_NV_vertex_array_range2;\ntmp_->ALLEGRO_GL_NV_vertex_program = ALLEGRO_GL_NV_vertex_program;\ntmp_->ALLEGRO_GL_SGIX_texture_coordinate_clamp = ALLEGRO_GL_SGIX_texture_coordinate_clamp;\ntmp_->ALLEGRO_GL_OML_interlace = ALLEGRO_GL_OML_interlace;\ntmp_->ALLEGRO_GL_OML_subsample = ALLEGRO_GL_OML_subsample;\ntmp_->ALLEGRO_GL_OML_resample = ALLEGRO_GL_OML_resample;\ntmp_->ALLEGRO_GL_NV_copy_depth_to_color = ALLEGRO_GL_NV_copy_depth_to_color;\ntmp_->ALLEGRO_GL_ATI_envmap_bumpmap = ALLEGRO_GL_ATI_envmap_bumpmap;\ntmp_->ALLEGRO_GL_ATI_fragment_shader = ALLEGRO_GL_ATI_fragment_shader;\ntmp_->ALLEGRO_GL_ATI_pn_triangles = ALLEGRO_GL_ATI_pn_triangles;\ntmp_->ALLEGRO_GL_ATI_vertex_array_object = ALLEGRO_GL_ATI_vertex_array_object;\ntmp_->ALLEGRO_GL_EXT_vertex_shader = ALLEGRO_GL_EXT_vertex_shader;\ntmp_->ALLEGRO_GL_ATI_vertex_streams = ALLEGRO_GL_ATI_vertex_streams;\ntmp_->ALLEGRO_GL_ATI_element_array = ALLEGRO_GL_ATI_element_array;\ntmp_->ALLEGRO_GL_SUN_mesh_array = ALLEGRO_GL_SUN_mesh_array;\ntmp_->ALLEGRO_GL_SUN_slice_accum = ALLEGRO_GL_SUN_slice_accum;\ntmp_->ALLEGRO_GL_NV_multisample_filter_hint = ALLEGRO_GL_NV_multisample_filter_hint;\ntmp_->ALLEGRO_GL_NV_depth_clamp = ALLEGRO_GL_NV_depth_clamp;\ntmp_->ALLEGRO_GL_NV_occlusion_query = ALLEGRO_GL_NV_occlusion_query;\ntmp_->ALLEGRO_GL_NV_point_sprite = ALLEGRO_GL_NV_point_sprite;\ntmp_->ALLEGRO_GL_NV_texture_shader3 = ALLEGRO_GL_NV_texture_shader3;\ntmp_->ALLEGRO_GL_NV_vertex_program1_1 = ALLEGRO_GL_NV_vertex_program1_1;\ntmp_->ALLEGRO_GL_EXT_shadow_funcs = ALLEGRO_GL_EXT_shadow_funcs;\ntmp_->ALLEGRO_GL_EXT_stencil_two_side = ALLEGRO_GL_EXT_stencil_two_side;\ntmp_->ALLEGRO_GL_ATI_text_fragment_shader = ALLEGRO_GL_ATI_text_fragment_shader;\ntmp_->ALLEGRO_GL_APPLE_client_storage = ALLEGRO_GL_APPLE_client_storage;\ntmp_->ALLEGRO_GL_APPLE_element_array = ALLEGRO_GL_APPLE_element_array;\ntmp_->ALLEGRO_GL_APPLE_fence = ALLEGRO_GL_APPLE_fence;\ntmp_->ALLEGRO_GL_APPLE_vertex_array_object = ALLEGRO_GL_APPLE_vertex_array_object;\ntmp_->ALLEGRO_GL_APPLE_vertex_array_range = ALLEGRO_GL_APPLE_vertex_array_range;\ntmp_->ALLEGRO_GL_APPLE_ycbcr_422 = ALLEGRO_GL_APPLE_ycbcr_422;\ntmp_->ALLEGRO_GL_S3_s3tc = ALLEGRO_GL_S3_s3tc;\ntmp_->ALLEGRO_GL_ATI_draw_buffers = ALLEGRO_GL_ATI_draw_buffers;\ntmp_->ALLEGRO_GL_ATI_texture_env_combine3 = ALLEGRO_GL_ATI_texture_env_combine3;\ntmp_->ALLEGRO_GL_ATI_texture_float = ALLEGRO_GL_ATI_texture_float;\ntmp_->ALLEGRO_GL_NV_float_buffer = ALLEGRO_GL_NV_float_buffer;\ntmp_->ALLEGRO_GL_NV_fragment_program = ALLEGRO_GL_NV_fragment_program;\ntmp_->ALLEGRO_GL_NV_half_float = ALLEGRO_GL_NV_half_float;\ntmp_->ALLEGRO_GL_NV_pixel_data_range = ALLEGRO_GL_NV_pixel_data_range;\ntmp_->ALLEGRO_GL_NV_primitive_restart = ALLEGRO_GL_NV_primitive_restart;\ntmp_->ALLEGRO_GL_NV_texture_expand_normal = ALLEGRO_GL_NV_texture_expand_normal;\ntmp_->ALLEGRO_GL_NV_vertex_program2 = ALLEGRO_GL_NV_vertex_program2;\ntmp_->ALLEGRO_GL_ATI_map_object_buffer = ALLEGRO_GL_ATI_map_object_buffer;\ntmp_->ALLEGRO_GL_ATI_separate_stencil = ALLEGRO_GL_ATI_separate_stencil;\ntmp_->ALLEGRO_GL_ATI_vertex_attrib_array_object = ALLEGRO_GL_ATI_vertex_attrib_array_object;\ntmp_->ALLEGRO_GL_OES_byte_coordinates = ALLEGRO_GL_OES_byte_coordinates;\ntmp_->ALLEGRO_GL_OES_fixed_point = ALLEGRO_GL_OES_fixed_point;\ntmp_->ALLEGRO_GL_OES_single_precision = ALLEGRO_GL_OES_single_precision;\ntmp_->ALLEGRO_GL_OES_compressed_paletted_texture = ALLEGRO_GL_OES_compressed_paletted_texture;\ntmp_->ALLEGRO_GL_OES_read_format = ALLEGRO_GL_OES_read_format;\ntmp_->ALLEGRO_GL_OES_query_matrix = ALLEGRO_GL_OES_query_matrix;\ntmp_->ALLEGRO_GL_OES_framebuffer_object = ALLEGRO_GL_OES_framebuffer_object;\ntmp_->ALLEGRO_GL_OES_texture_npot = ALLEGRO_GL_OES_texture_npot;\ntmp_->ALLEGRO_GL_EXT_depth_bounds_test = ALLEGRO_GL_EXT_depth_bounds_test;\ntmp_->ALLEGRO_GL_EXT_texture_mirror_clamp = ALLEGRO_GL_EXT_texture_mirror_clamp;\ntmp_->ALLEGRO_GL_EXT_blend_equation_separate = ALLEGRO_GL_EXT_blend_equation_separate;\ntmp_->ALLEGRO_GL_MESA_pack_invert = ALLEGRO_GL_MESA_pack_invert;\ntmp_->ALLEGRO_GL_MESA_ycbcr_texture = ALLEGRO_GL_MESA_ycbcr_texture;\ntmp_->ALLEGRO_GL_EXT_pixel_buffer_object = ALLEGRO_GL_EXT_pixel_buffer_object;\ntmp_->ALLEGRO_GL_NV_fragment_program_option = ALLEGRO_GL_NV_fragment_program_option;\ntmp_->ALLEGRO_GL_NV_fragment_program2 = ALLEGRO_GL_NV_fragment_program2;\ntmp_->ALLEGRO_GL_NV_vertex_program2_option = ALLEGRO_GL_NV_vertex_program2_option;\ntmp_->ALLEGRO_GL_NV_vertex_program3 = ALLEGRO_GL_NV_vertex_program3;\ntmp_->ALLEGRO_GL_EXT_texture_compression_dxt1 = ALLEGRO_GL_EXT_texture_compression_dxt1;\ntmp_->ALLEGRO_GL_EXT_framebuffer_object = ALLEGRO_GL_EXT_framebuffer_object;\ntmp_->ALLEGRO_GL_GREMEDY_string_marker = ALLEGRO_GL_GREMEDY_string_marker;\ntmp_->ALLEGRO_GL_EXT_packed_depth_stencil = ALLEGRO_GL_EXT_packed_depth_stencil;\ntmp_->ALLEGRO_GL_EXT_stencil_clear_tag = ALLEGRO_GL_EXT_stencil_clear_tag;\ntmp_->ALLEGRO_GL_EXT_texture_sRGB = ALLEGRO_GL_EXT_texture_sRGB;\ntmp_->ALLEGRO_GL_EXT_framebuffer_blit = ALLEGRO_GL_EXT_framebuffer_blit;\ntmp_->ALLEGRO_GL_EXT_framebuffer_multisample = ALLEGRO_GL_EXT_framebuffer_multisample;\ntmp_->ALLEGRO_GL_MESAX_texture_stack = ALLEGRO_GL_MESAX_texture_stack;\ntmp_->ALLEGRO_GL_EXT_timer_query = ALLEGRO_GL_EXT_timer_query;\ntmp_->ALLEGRO_GL_EXT_gpu_program_parameters = ALLEGRO_GL_EXT_gpu_program_parameters;\ntmp_->ALLEGRO_GL_APPLE_flush_buffer_range = ALLEGRO_GL_APPLE_flush_buffer_range;\ntmp_->ALLEGRO_GL_EXT_bindable_uniform = ALLEGRO_GL_EXT_bindable_uniform;\ntmp_->ALLEGRO_GL_EXT_draw_buffers2 = ALLEGRO_GL_EXT_draw_buffers2;\ntmp_->ALLEGRO_GL_EXT_draw_instanced = ALLEGRO_GL_EXT_draw_instanced;\ntmp_->ALLEGRO_GL_EXT_framebuffer_sRGB = ALLEGRO_GL_EXT_framebuffer_sRGB;\ntmp_->ALLEGRO_GL_EXT_geometry_shader4 = ALLEGRO_GL_EXT_geometry_shader4;\ntmp_->ALLEGRO_GL_EXT_gpu_shader4 = ALLEGRO_GL_EXT_gpu_shader4;\ntmp_->ALLEGRO_GL_EXT_packed_float = ALLEGRO_GL_EXT_packed_float;\ntmp_->ALLEGRO_GL_EXT_texture_array = ALLEGRO_GL_EXT_texture_array;\ntmp_->ALLEGRO_GL_EXT_texture_buffer_object = ALLEGRO_GL_EXT_texture_buffer_object;\ntmp_->ALLEGRO_GL_EXT_texture_compression_latc = ALLEGRO_GL_EXT_texture_compression_latc;\ntmp_->ALLEGRO_GL_EXT_texture_compression_rgtc = ALLEGRO_GL_EXT_texture_compression_rgtc;\ntmp_->ALLEGRO_GL_EXT_texture_integer = ALLEGRO_GL_EXT_texture_integer;\ntmp_->ALLEGRO_GL_EXT_texture_shared_exponent = ALLEGRO_GL_EXT_texture_shared_exponent;\ntmp_->ALLEGRO_GL_NV_depth_buffer_float = ALLEGRO_GL_NV_depth_buffer_float;\ntmp_->ALLEGRO_GL_NV_fragment_program4 = ALLEGRO_GL_NV_fragment_program4;\ntmp_->ALLEGRO_GL_NV_framebuffer_multisample_coverage = ALLEGRO_GL_NV_framebuffer_multisample_coverage;\ntmp_->ALLEGRO_GL_NV_geometry_program4 = ALLEGRO_GL_NV_geometry_program4;\ntmp_->ALLEGRO_GL_NV_gpu_program4 = ALLEGRO_GL_NV_gpu_program4;\ntmp_->ALLEGRO_GL_NV_parameter_buffer_object = ALLEGRO_GL_NV_parameter_buffer_object;\ntmp_->ALLEGRO_GL_NV_transform_feedback = ALLEGRO_GL_NV_transform_feedback;\ntmp_->ALLEGRO_GL_NV_vertex_program4 = ALLEGRO_GL_NV_vertex_program4;\ntmp_->ALLEGRO_GL_GREMEDY_frame_terminator = ALLEGRO_GL_GREMEDY_frame_terminator;\ntmp_->ALLEGRO_GL_NV_conditional_render = ALLEGRO_GL_NV_conditional_render;\ntmp_->ALLEGRO_GL_NV_present_video = ALLEGRO_GL_NV_present_video;\ntmp_->ALLEGRO_GL_EXT_direct_state_access = ALLEGRO_GL_EXT_direct_state_access;\ntmp_->ALLEGRO_GL_EXT_transform_feedback = ALLEGRO_GL_EXT_transform_feedback;\ntmp_->ALLEGRO_GL_EXT_texture_swizzle = ALLEGRO_GL_EXT_texture_swizzle;\ntmp_->ALLEGRO_GL_NV_explicit_multisample = ALLEGRO_GL_NV_explicit_multisample;\ntmp_->ALLEGRO_GL_NV_transform_feedback2 = ALLEGRO_GL_NV_transform_feedback2;\ntmp_->ALLEGRO_GL_ATI_meminfo = ALLEGRO_GL_ATI_meminfo;\ntmp_->ALLEGRO_GL_AMD_performance_monitor = ALLEGRO_GL_AMD_performance_monitor;\ntmp_->ALLEGRO_GL_AMD_texture_texture4 = ALLEGRO_GL_AMD_texture_texture4;\ntmp_->ALLEGRO_GL_AMD_vertex_shader_tesselator = ALLEGRO_GL_AMD_vertex_shader_tesselator;\ntmp_->ALLEGRO_GL_EXT_provoking_vertex = ALLEGRO_GL_EXT_provoking_vertex;\ntmp_->ALLEGRO_GL_EXT_texture_snorm = ALLEGRO_GL_EXT_texture_snorm;\ntmp_->ALLEGRO_GL_AMD_draw_buffers_blend = ALLEGRO_GL_AMD_draw_buffers_blend;\ntmp_->ALLEGRO_GL_APPLE_texture_range = ALLEGRO_GL_APPLE_texture_range;\ntmp_->ALLEGRO_GL_APPLE_float_pixels = ALLEGRO_GL_APPLE_float_pixels;\ntmp_->ALLEGRO_GL_APPLE_vertex_program_evaluators = ALLEGRO_GL_APPLE_vertex_program_evaluators;\ntmp_->ALLEGRO_GL_APPLE_aux_depth_stencil = ALLEGRO_GL_APPLE_aux_depth_stencil;\ntmp_->ALLEGRO_GL_APPLE_object_purgeable = ALLEGRO_GL_APPLE_object_purgeable;\ntmp_->ALLEGRO_GL_APPLE_row_bytes = ALLEGRO_GL_APPLE_row_bytes;\ntmp_->ALLEGRO_GL_APPLE_rgb_422 = ALLEGRO_GL_APPLE_rgb_422;\ntmp_->ALLEGRO_GL_NV_video_capture = ALLEGRO_GL_NV_video_capture;\ntmp_->ALLEGRO_GL_EXT_separate_shader_objects = ALLEGRO_GL_EXT_separate_shader_objects;\ntmp_->ALLEGRO_GL_NV_parameter_buffer_object2 = ALLEGRO_GL_NV_parameter_buffer_object2;\ntmp_->ALLEGRO_GL_NV_shader_buffer_load = ALLEGRO_GL_NV_shader_buffer_load;\ntmp_->ALLEGRO_GL_NV_vertex_buffer_unified_memory = ALLEGRO_GL_NV_vertex_buffer_unified_memory;\ntmp_->ALLEGRO_GL_NV_texture_barrier = ALLEGRO_GL_NV_texture_barrier;\ntmp_->ALLEGRO_GL_AMD_shader_stencil_export = ALLEGRO_GL_AMD_shader_stencil_export;\ntmp_->ALLEGRO_GL_AMD_seamless_cubemap_per_texture = ALLEGRO_GL_AMD_seamless_cubemap_per_texture;\ntmp_->ALLEGRO_GL_AMD_conservative_depth = ALLEGRO_GL_AMD_conservative_depth;\nreturn(tmp_);;\n"))
  (define ogl:BlendColor
    (foreign-lambda*
      (function void ("GLclampf" "GLclampf" "GLclampf" "GLclampf"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColor);"))
  (define ogl:BlendEquation
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquation);"))
  (define ogl:DrawRangeElements
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLsizei" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElements);"))
  (define ogl:ColorTable
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTable);"))
  (define ogl:ColorTableParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterfv);"))
  (define ogl:ColorTableParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameteriv);"))
  (define ogl:CopyColorTable
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorTable);"))
  (define ogl:GetColorTable
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTable);"))
  (define ogl:GetColorTableParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfv);"))
  (define ogl:GetColorTableParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameteriv);"))
  (define ogl:ColorSubTable
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorSubTable);"))
  (define ogl:CopyColorSubTable
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorSubTable);"))
  (define ogl:TexImage3D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3D);"))
  (define ogl:TexSubImage3D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage3D);"))
  (define ogl:CopyTexSubImage3D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage3D);"))
  (define ogl:ConvolutionFilter1D
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter1D);"))
  (define ogl:ConvolutionFilter2D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter2D);"))
  (define ogl:ConvolutionParameterf
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterf);"))
  (define ogl:ConvolutionParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfv);"))
  (define ogl:ConvolutionParameteri
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteri);"))
  (define ogl:ConvolutionParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteriv);"))
  (define ogl:CopyConvolutionFilter1D
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter1D);"))
  (define ogl:CopyConvolutionFilter2D
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter2D);"))
  (define ogl:GetConvolutionFilter
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionFilter);"))
  (define ogl:GetConvolutionParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterfv);"))
  (define ogl:GetConvolutionParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameteriv);"))
  (define ogl:GetSeparableFilter
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSeparableFilter);"))
  (define ogl:SeparableFilter2D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SeparableFilter2D);"))
  (define ogl:GetHistogram
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogram);"))
  (define ogl:GetHistogramParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterfv);"))
  (define ogl:GetHistogramParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameteriv);"))
  (define ogl:GetMinmax
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmax);"))
  (define ogl:GetMinmaxParameterfv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterfv);"))
  (define ogl:GetMinmaxParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameteriv);"))
  (define ogl:Histogram
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLenum" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Histogram);"))
  (define ogl:Minmax
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Minmax);"))
  (define ogl:ResetHistogram
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetHistogram);"))
  (define ogl:ResetMinmax
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetMinmax);"))
  (define ogl:ActiveTexture
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveTexture);"))
  (define ogl:ClientActiveTexture
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveTexture);"))
  (define ogl:MultiTexCoord1d
    (foreign-lambda*
      (function void ("GLenum" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1d);"))
  (define ogl:MultiTexCoord1dv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dv);"))
  (define ogl:MultiTexCoord1f
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1f);"))
  (define ogl:MultiTexCoord1fv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fv);"))
  (define ogl:MultiTexCoord1i
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1i);"))
  (define ogl:MultiTexCoord1iv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1iv);"))
  (define ogl:MultiTexCoord1s
    (foreign-lambda*
      (function void ("GLenum" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1s);"))
  (define ogl:MultiTexCoord1sv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1sv);"))
  (define ogl:MultiTexCoord2d
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2d);"))
  (define ogl:MultiTexCoord2dv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dv);"))
  (define ogl:MultiTexCoord2f
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2f);"))
  (define ogl:MultiTexCoord2fv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fv);"))
  (define ogl:MultiTexCoord2i
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2i);"))
  (define ogl:MultiTexCoord2iv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2iv);"))
  (define ogl:MultiTexCoord2s
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2s);"))
  (define ogl:MultiTexCoord2sv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2sv);"))
  (define ogl:MultiTexCoord3d
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3d);"))
  (define ogl:MultiTexCoord3dv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dv);"))
  (define ogl:MultiTexCoord3f
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3f);"))
  (define ogl:MultiTexCoord3fv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fv);"))
  (define ogl:MultiTexCoord3i
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3i);"))
  (define ogl:MultiTexCoord3iv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3iv);"))
  (define ogl:MultiTexCoord3s
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3s);"))
  (define ogl:MultiTexCoord3sv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3sv);"))
  (define ogl:MultiTexCoord4d
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4d);"))
  (define ogl:MultiTexCoord4dv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dv);"))
  (define ogl:MultiTexCoord4f
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4f);"))
  (define ogl:MultiTexCoord4fv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fv);"))
  (define ogl:MultiTexCoord4i
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4i);"))
  (define ogl:MultiTexCoord4iv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4iv);"))
  (define ogl:MultiTexCoord4s
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4s);"))
  (define ogl:MultiTexCoord4sv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4sv);"))
  (define ogl:LoadTransposeMatrixf
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixf);"))
  (define ogl:LoadTransposeMatrixd
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixd);"))
  (define ogl:MultTransposeMatrixf
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixf);"))
  (define ogl:MultTransposeMatrixd
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixd);"))
  (define ogl:SampleCoverage
    (foreign-lambda*
      (function void ("GLclampf" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverage);"))
  (define ogl:CompressedTexImage3D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage3D);"))
  (define ogl:CompressedTexImage2D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage2D);"))
  (define ogl:CompressedTexImage1D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage1D);"))
  (define ogl:CompressedTexSubImage3D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage3D);"))
  (define ogl:CompressedTexSubImage2D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage2D);"))
  (define ogl:CompressedTexSubImage1D
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage1D);"))
  (define ogl:GetCompressedTexImage
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTexImage);"))
  (define ogl:BlendFuncSeparate
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparate);"))
  (define ogl:FogCoordf
    (foreign-lambda*
      (function void ("GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordf);"))
  (define ogl:FogCoordfv
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfv);"))
  (define ogl:FogCoordd
    (foreign-lambda*
      (function void ("GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordd);"))
  (define ogl:FogCoorddv
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddv);"))
  (define ogl:FogCoordPointer
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordPointer);"))
  (define ogl:MultiDrawArrays
    (foreign-lambda*
      (function
        void
        ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArrays);"))
  (define ogl:MultiDrawElements
    (foreign-lambda*
      (function
        void
        ("GLenum"
         (c-pointer "GLsizei")
         "GLenum"
         (c-pointer (c-pointer (const "GLvoid")))
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElements);"))
  (define ogl:PointParameterf
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterf);"))
  (define ogl:PointParameterfv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfv);"))
  (define ogl:PointParameteri
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteri);"))
  (define ogl:PointParameteriv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteriv);"))
  (define ogl:SecondaryColor3b
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3b);"))
  (define ogl:SecondaryColor3bv
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bv);"))
  (define ogl:SecondaryColor3d
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3d);"))
  (define ogl:SecondaryColor3dv
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dv);"))
  (define ogl:SecondaryColor3f
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3f);"))
  (define ogl:SecondaryColor3fv
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fv);"))
  (define ogl:SecondaryColor3i
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3i);"))
  (define ogl:SecondaryColor3iv
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3iv);"))
  (define ogl:SecondaryColor3s
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3s);"))
  (define ogl:SecondaryColor3sv
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3sv);"))
  (define ogl:SecondaryColor3ub
    (foreign-lambda*
      (function void ("GLubyte" "GLubyte" "GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ub);"))
  (define ogl:SecondaryColor3ubv
    (foreign-lambda*
      (function void ((c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubv);"))
  (define ogl:SecondaryColor3ui
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ui);"))
  (define ogl:SecondaryColor3uiv
    (foreign-lambda*
      (function void ((c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uiv);"))
  (define ogl:SecondaryColor3us
    (foreign-lambda*
      (function void ("GLushort" "GLushort" "GLushort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3us);"))
  (define ogl:SecondaryColor3usv
    (foreign-lambda*
      (function void ((c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usv);"))
  (define ogl:SecondaryColorPointer
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorPointer);"))
  (define ogl:WindowPos2d
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2d);"))
  (define ogl:WindowPos2dv
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dv);"))
  (define ogl:WindowPos2f
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2f);"))
  (define ogl:WindowPos2fv
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fv);"))
  (define ogl:WindowPos2i
    (foreign-lambda*
      (function void ("GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2i);"))
  (define ogl:WindowPos2iv
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iv);"))
  (define ogl:WindowPos2s
    (foreign-lambda*
      (function void ("GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2s);"))
  (define ogl:WindowPos2sv
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sv);"))
  (define ogl:WindowPos3d
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3d);"))
  (define ogl:WindowPos3dv
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dv);"))
  (define ogl:WindowPos3f
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3f);"))
  (define ogl:WindowPos3fv
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fv);"))
  (define ogl:WindowPos3i
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3i);"))
  (define ogl:WindowPos3iv
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iv);"))
  (define ogl:WindowPos3s
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3s);"))
  (define ogl:WindowPos3sv
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sv);"))
  (define ogl:BindBuffer
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBuffer);"))
  (define ogl:DeleteBuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteBuffers);"))
  (define ogl:GenBuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenBuffers);"))
  (define ogl:IsBuffer
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBuffer);"))
  (define ogl:BufferData
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferData);"))
  (define ogl:BufferSubData
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferSubData);"))
  (define ogl:GetBufferSubData
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferSubData);"))
  (define ogl:MapBuffer
    (foreign-lambda*
      (function (c-pointer "GLvoid") ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBuffer);"))
  (define ogl:UnmapBuffer
    (foreign-lambda*
      (function "GLboolean" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapBuffer);"))
  (define ogl:GetBufferParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameteriv);"))
  (define ogl:GetBufferPointerv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferPointerv);"))
  (define ogl:GenQueries
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenQueries);"))
  (define ogl:DeleteQueries
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteQueries);"))
  (define ogl:IsQuery
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsQuery);"))
  (define ogl:BeginQuery
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQuery);"))
  (define ogl:EndQuery
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQuery);"))
  (define ogl:GetQueryiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryiv);"))
  (define ogl:GetQueryObjectiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectiv);"))
  (define ogl:GetQueryObjectuiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectuiv);"))
  (define ogl:BlendEquationSeparate
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparate);"))
  (define ogl:CreateProgram
    (foreign-lambda*
      (function "GLuint" (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateProgram);"))
  (define ogl:CreateShader
    (foreign-lambda*
      (function "GLuint" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShader);"))
  (define ogl:DeleteProgram
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgram);"))
  (define ogl:DeleteShader
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteShader);"))
  (define ogl:AttachShader
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AttachShader);"))
  (define ogl:DetachShader
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetachShader);"))
  (define ogl:ShaderSource
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLsizei"
         (c-pointer (c-pointer (const char)))
         (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderSource);"))
  (define ogl:CompileShader
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShader);"))
  (define ogl:IsProgram
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgram);"))
  (define ogl:IsShader
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsShader);"))
  (define ogl:LinkProgram
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LinkProgram);"))
  (define ogl:UseProgram
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseProgram);"))
  (define ogl:ValidateProgram
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ValidateProgram);"))
  (define ogl:Uniform1f
    (foreign-lambda*
      (function void ("GLint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1f);"))
  (define ogl:Uniform2f
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2f);"))
  (define ogl:Uniform3f
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3f);"))
  (define ogl:Uniform4f
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4f);"))
  (define ogl:Uniform1i
    (foreign-lambda*
      (function void ("GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1i);"))
  (define ogl:Uniform2i
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2i);"))
  (define ogl:Uniform3i
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3i);"))
  (define ogl:Uniform4i
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4i);"))
  (define ogl:Uniform1fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fv);"))
  (define ogl:Uniform2fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fv);"))
  (define ogl:Uniform3fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fv);"))
  (define ogl:Uniform4fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fv);"))
  (define ogl:Uniform1iv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1iv);"))
  (define ogl:Uniform2iv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2iv);"))
  (define ogl:Uniform3iv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3iv);"))
  (define ogl:Uniform4iv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4iv);"))
  (define ogl:UniformMatrix2fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2fv);"))
  (define ogl:UniformMatrix3fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3fv);"))
  (define ogl:UniformMatrix4fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4fv);"))
  (define ogl:GetShaderfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderfv);"))
  (define ogl:GetShaderiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderiv);"))
  (define ogl:GetProgramfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramfv);"))
  (define ogl:GetProgramiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramiv);"))
  (define ogl:GetShaderInfoLog
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderInfoLog);"))
  (define ogl:GetProgramInfoLog
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramInfoLog);"))
  (define ogl:GetAttachedShaders
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLsizei") (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttachedShaders);"))
  (define ogl:GetUniformLocation
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformLocation);"))
  (define ogl:GetActiveUniform
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLsizei"
         (c-pointer "GLsizei")
         (c-pointer "GLint")
         (c-pointer "GLenum")
         c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniform);"))
  (define ogl:GetUniformfv
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformfv);"))
  (define ogl:GetUniformiv
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformiv);"))
  (define ogl:GetShaderSource
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderSource);"))
  (define ogl:VertexAttrib1f
    (foreign-lambda*
      (function void ("GLuint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1f);"))
  (define ogl:VertexAttrib1s
    (foreign-lambda*
      (function void ("GLuint" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1s);"))
  (define ogl:VertexAttrib1d
    (foreign-lambda*
      (function void ("GLuint" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1d);"))
  (define ogl:VertexAttrib2f
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2f);"))
  (define ogl:VertexAttrib2s
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2s);"))
  (define ogl:VertexAttrib2d
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2d);"))
  (define ogl:VertexAttrib3f
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3f);"))
  (define ogl:VertexAttrib3s
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3s);"))
  (define ogl:VertexAttrib3d
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3d);"))
  (define ogl:VertexAttrib4f
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4f);"))
  (define ogl:VertexAttrib4s
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4s);"))
  (define ogl:VertexAttrib4d
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4d);"))
  (define ogl:VertexAttrib4Nub
    (foreign-lambda*
      (function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nub);"))
  (define ogl:VertexAttrib1fv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fv);"))
  (define ogl:VertexAttrib1sv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sv);"))
  (define ogl:VertexAttrib1dv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dv);"))
  (define ogl:VertexAttrib2fv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fv);"))
  (define ogl:VertexAttrib2sv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sv);"))
  (define ogl:VertexAttrib2dv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dv);"))
  (define ogl:VertexAttrib3fv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fv);"))
  (define ogl:VertexAttrib3sv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sv);"))
  (define ogl:VertexAttrib3dv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dv);"))
  (define ogl:VertexAttrib4fv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fv);"))
  (define ogl:VertexAttrib4sv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sv);"))
  (define ogl:VertexAttrib4dv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dv);"))
  (define ogl:VertexAttrib4iv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4iv);"))
  (define ogl:VertexAttrib4bv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4bv);"))
  (define ogl:VertexAttrib4ubv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubv);"))
  (define ogl:VertexAttrib4usv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4usv);"))
  (define ogl:VertexAttrib4uiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4uiv);"))
  (define ogl:VertexAttrib4Nbv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nbv);"))
  (define ogl:VertexAttrib4Nsv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nsv);"))
  (define ogl:VertexAttrib4Niv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Niv);"))
  (define ogl:VertexAttrib4Nubv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nubv);"))
  (define ogl:VertexAttrib4Nusv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nusv);"))
  (define ogl:VertexAttrib4Nuiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nuiv);"))
  (define ogl:VertexAttribPointer
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointer);"))
  (define ogl:EnableVertexAttribArray
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribArray);"))
  (define ogl:DisableVertexAttribArray
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribArray);"))
  (define ogl:BindAttribLocation
    (foreign-lambda*
      (function void ("GLuint" "GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindAttribLocation);"))
  (define ogl:GetActiveAttrib
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLsizei"
         (c-pointer "GLsizei")
         (c-pointer "GLint")
         (c-pointer "GLenum")
         c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveAttrib);"))
  (define ogl:GetAttribLocation
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttribLocation);"))
  (define ogl:GetVertexAttribdv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdv);"))
  (define ogl:GetVertexAttribfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfv);"))
  (define ogl:GetVertexAttribiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribiv);"))
  (define ogl:GetVertexAttribPointerv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointerv);"))
  (define ogl:DrawBuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLenum")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffers);"))
  (define ogl:StencilOpSeparate
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilOpSeparate);"))
  (define ogl:StencilFuncSeparate
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilFuncSeparate);"))
  (define ogl:StencilMaskSeparate
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilMaskSeparate);"))
  (define ogl:UniformMatrix2x3fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x3fv);"))
  (define ogl:UniformMatrix3x2fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x2fv);"))
  (define ogl:UniformMatrix2x4fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x4fv);"))
  (define ogl:UniformMatrix4x2fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x2fv);"))
  (define ogl:UniformMatrix3x4fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x4fv);"))
  (define ogl:UniformMatrix4x3fv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x3fv);"))
  (define ogl:ColorMaski
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLboolean" "GLboolean" "GLboolean" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorMaski);"))
  (define ogl:GetBooleani_v
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBooleani_v);"))
  (define ogl:GetIntegeri_v
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegeri_v);"))
  (define ogl:Enablei
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Enablei);"))
  (define ogl:Disablei
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Disablei);"))
  (define ogl:IsEnabledi
    (foreign-lambda*
      (function "GLboolean" ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsEnabledi);"))
  (define ogl:BeginTransformFeedback
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedback);"))
  (define ogl:EndTransformFeedback
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedback);"))
  (define ogl:BindBufferRange
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRange);"))
  (define ogl:BindBufferBase
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBase);"))
  (define ogl:TransformFeedbackVaryings
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryings);"))
  (define ogl:GetTransformFeedbackVarying
    (foreign-lambda*
      (function void ("GLuint" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVarying);"))
  (define ogl:ClampColor
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClampColor);"))
  (define ogl:BeginConditionalRender
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginConditionalRender);"))
  (define ogl:EndConditionalRender
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndConditionalRender);"))
  (define ogl:VertexAttribI1i
    (foreign-lambda*
      (function void ("GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1i);"))
  (define ogl:VertexAttribI2i
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2i);"))
  (define ogl:VertexAttribI3i
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3i);"))
  (define ogl:VertexAttribI4i
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4i);"))
  (define ogl:VertexAttribI1ui
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1ui);"))
  (define ogl:VertexAttribI2ui
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2ui);"))
  (define ogl:VertexAttribI3ui
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3ui);"))
  (define ogl:VertexAttribI4ui
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ui);"))
  (define ogl:VertexAttribI1iv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1iv);"))
  (define ogl:VertexAttribI2iv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2iv);"))
  (define ogl:VertexAttribI3iv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3iv);"))
  (define ogl:VertexAttribI4iv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4iv);"))
  (define ogl:VertexAttribI1uiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uiv);"))
  (define ogl:VertexAttribI2uiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uiv);"))
  (define ogl:VertexAttribI3uiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uiv);"))
  (define ogl:VertexAttribI4uiv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uiv);"))
  (define ogl:VertexAttribI4bv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4bv);"))
  (define ogl:VertexAttribI4sv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4sv);"))
  (define ogl:VertexAttribI4ubv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ubv);"))
  (define ogl:VertexAttribI4usv
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4usv);"))
  (define ogl:VertexAttribIPointer
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIPointer);"))
  (define ogl:GetVertexAttribIiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIiv);"))
  (define ogl:GetVertexAttribIuiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIuiv);"))
  (define ogl:GetUniformuiv
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformuiv);"))
  (define ogl:BindFragDataLocation
    (foreign-lambda*
      (function void ("GLuint" "GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocation);"))
  (define ogl:GetFragDataLocation
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataLocation);"))
  (define ogl:Uniform1ui
    (foreign-lambda*
      (function void ("GLint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1ui);"))
  (define ogl:Uniform2ui
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2ui);"))
  (define ogl:Uniform3ui
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3ui);"))
  (define ogl:Uniform4ui
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4ui);"))
  (define ogl:Uniform1uiv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uiv);"))
  (define ogl:Uniform2uiv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uiv);"))
  (define ogl:Uniform3uiv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uiv);"))
  (define ogl:Uniform4uiv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uiv);"))
  (define ogl:TexParameterIiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterIiv);"))
  (define ogl:TexParameterIuiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterIuiv);"))
  (define ogl:GetTexParameterIiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterIiv);"))
  (define ogl:GetTexParameterIuiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterIuiv);"))
  (define ogl:ClearBufferiv
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferiv);"))
  (define ogl:ClearBufferuiv
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferuiv);"))
  (define ogl:ClearBufferfv
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferfv);"))
  (define ogl:ClearBufferfi
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLfloat" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferfi);"))
  (define ogl:GetStringi
    (foreign-lambda*
      (function (c-pointer (const "GLubyte")) ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetStringi);"))
  (define ogl:DrawArraysInstanced
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstanced);"))
  (define ogl:DrawElementsInstanced
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstanced);"))
  (define ogl:TexBuffer
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBuffer);"))
  (define ogl:PrimitiveRestartIndex
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartIndex);"))
  (define ogl:GetInteger64i_v
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInteger64i_v);"))
  (define ogl:GetBufferParameteri64v
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameteri64v);"))
  (define ogl:ProgramParameteri
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteri);"))
  (define ogl:FramebufferTexture
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture);"))
  (define ogl:ClearBufferData
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer void)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferData);"))
  (define ogl:ClearBufferSubData
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "ptrdiff_t"
         "ptrdiff_t"
         "GLenum"
         "GLenum"
         (c-pointer void)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferSubData);"))
  (define ogl:DispatchCompute
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DispatchCompute);"))
  (define ogl:DispatchComputeIndirect
    (foreign-lambda*
      (function void ("ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DispatchComputeIndirect);"))
  (define ogl:CopyImageSubData
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyImageSubData);"))
  (define ogl:FramebufferParameteri
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferParameteri);"))
  (define ogl:GetFramebufferParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferParameteriv);"))
  (define ogl:GetInternalformati64v
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLenum" "GLsizei" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInternalformati64v);"))
  (define ogl:InvalidateTexSubImage
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateTexSubImage);"))
  (define ogl:InvalidateTexImage
    (foreign-lambda*
      (function void ("GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateTexImage);"))
  (define ogl:InvalidateBufferSubData
    (foreign-lambda*
      (function void ("GLuint" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateBufferSubData);"))
  (define ogl:InvalidateBufferData
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateBufferData);"))
  (define ogl:InvalidateFramebuffer
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLenum")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateFramebuffer);"))
  (define ogl:InvalidateSubFramebuffer
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLsizei"
         (c-pointer "GLenum")
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateSubFramebuffer);"))
  (define ogl:MultiDrawArraysIndirect
    (foreign-lambda*
      (function void ("GLenum" (c-pointer void) "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArraysIndirect);"))
  (define ogl:MultiDrawElementsIndirect
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer void) "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsIndirect);"))
  (define ogl:GetProgramInterfaceiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramInterfaceiv);"))
  (define ogl:GetProgramResourceIndex
    (foreign-lambda*
      (function "GLuint" ("GLuint" "GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceIndex);"))
  (define ogl:GetProgramResourceName
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceName);"))
  (define ogl:GetProgramResourceiv
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLuint"
         "GLsizei"
         (c-pointer "GLenum")
         "GLsizei"
         (c-pointer "GLsizei")
         (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceiv);"))
  (define ogl:GetProgramResourceLocation
    (foreign-lambda*
      (function "GLint" ("GLuint" "GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceLocation);"))
  (define ogl:GetProgramResourceLocationIndex
    (foreign-lambda*
      (function "GLint" ("GLuint" "GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceLocationIndex);"))
  (define ogl:ShaderStorageBlockBinding
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderStorageBlockBinding);"))
  (define ogl:TexBufferRange
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferRange);"))
  (define ogl:TexStorage2DMultisample
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexStorage2DMultisample);"))
  (define ogl:TexStorage3DMultisample
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLsizei"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexStorage3DMultisample);"))
  (define ogl:TextureView
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLuint"
         "GLenum"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureView);"))
  (define ogl:BindVertexBuffer
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "ptrdiff_t" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexBuffer);"))
  (define ogl:VertexAttribFormat
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLenum" "GLboolean" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribFormat);"))
  (define ogl:VertexAttribIFormat
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIFormat);"))
  (define ogl:VertexAttribLFormat
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribLFormat);"))
  (define ogl:VertexAttribBinding
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribBinding);"))
  (define ogl:VertexBindingDivisor
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBindingDivisor);"))
  (define ogl:DebugMessageControl
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLenum"
         "GLsizei"
         (c-pointer "GLuint")
         "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageControl);"))
  (define ogl:DebugMessageInsert
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLenum" "GLsizei" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageInsert);"))
  (define ogl:DebugMessageCallback
    (foreign-lambda*
      (function
        void
        ((function
           void
           ("GLenum"
            "GLenum"
            "GLuint"
            "GLenum"
            "GLsizei"
            c-string
            (c-pointer void)))
         (c-pointer void)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageCallback);"))
  (define ogl:GetDebugMessageLog
    (foreign-lambda*
      (function
        "GLuint"
        ("GLuint"
         "GLsizei"
         (c-pointer "GLenum")
         (c-pointer "GLenum")
         (c-pointer "GLuint")
         (c-pointer "GLenum")
         (c-pointer "GLsizei")
         c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDebugMessageLog);"))
  (define ogl:PushDebugGroup
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PushDebugGroup);"))
  (define ogl:PopDebugGroup
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PopDebugGroup);"))
  (define ogl:ObjectLabel
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectLabel);"))
  (define ogl:GetObjectLabel
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectLabel);"))
  (define ogl:ObjectPtrLabel
    (foreign-lambda*
      (function void ((c-pointer void) "GLsizei" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectPtrLabel);"))
  (define ogl:GetObjectPtrLabel
    (foreign-lambda*
      (function
        void
        ((c-pointer void) "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectPtrLabel);"))
  (define ogl:ActiveTextureARB
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveTextureARB);"))
  (define ogl:ClientActiveTextureARB
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveTextureARB);"))
  (define ogl:MultiTexCoord1dARB
    (foreign-lambda*
      (function void ("GLenum" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dARB);"))
  (define ogl:MultiTexCoord1dvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dvARB);"))
  (define ogl:MultiTexCoord1fARB
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fARB);"))
  (define ogl:MultiTexCoord1fvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fvARB);"))
  (define ogl:MultiTexCoord1iARB
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1iARB);"))
  (define ogl:MultiTexCoord1ivARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1ivARB);"))
  (define ogl:MultiTexCoord1sARB
    (foreign-lambda*
      (function void ("GLenum" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1sARB);"))
  (define ogl:MultiTexCoord1svARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1svARB);"))
  (define ogl:MultiTexCoord2dARB
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dARB);"))
  (define ogl:MultiTexCoord2dvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dvARB);"))
  (define ogl:MultiTexCoord2fARB
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fARB);"))
  (define ogl:MultiTexCoord2fvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fvARB);"))
  (define ogl:MultiTexCoord2iARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2iARB);"))
  (define ogl:MultiTexCoord2ivARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2ivARB);"))
  (define ogl:MultiTexCoord2sARB
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2sARB);"))
  (define ogl:MultiTexCoord2svARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2svARB);"))
  (define ogl:MultiTexCoord3dARB
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dARB);"))
  (define ogl:MultiTexCoord3dvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dvARB);"))
  (define ogl:MultiTexCoord3fARB
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fARB);"))
  (define ogl:MultiTexCoord3fvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fvARB);"))
  (define ogl:MultiTexCoord3iARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3iARB);"))
  (define ogl:MultiTexCoord3ivARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3ivARB);"))
  (define ogl:MultiTexCoord3sARB
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3sARB);"))
  (define ogl:MultiTexCoord3svARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3svARB);"))
  (define ogl:MultiTexCoord4dARB
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dARB);"))
  (define ogl:MultiTexCoord4dvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dvARB);"))
  (define ogl:MultiTexCoord4fARB
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fARB);"))
  (define ogl:MultiTexCoord4fvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fvARB);"))
  (define ogl:MultiTexCoord4iARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4iARB);"))
  (define ogl:MultiTexCoord4ivARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4ivARB);"))
  (define ogl:MultiTexCoord4sARB
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4sARB);"))
  (define ogl:MultiTexCoord4svARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4svARB);"))
  (define ogl:LoadTransposeMatrixfARB
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixfARB);"))
  (define ogl:LoadTransposeMatrixdARB
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixdARB);"))
  (define ogl:MultTransposeMatrixfARB
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixfARB);"))
  (define ogl:MultTransposeMatrixdARB
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixdARB);"))
  (define ogl:SampleCoverageARB
    (foreign-lambda*
      (function void ("GLclampf" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverageARB);"))
  (define ogl:CompressedTexImage3DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage3DARB);"))
  (define ogl:CompressedTexImage2DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage2DARB);"))
  (define ogl:CompressedTexImage1DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage1DARB);"))
  (define ogl:CompressedTexSubImage3DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage3DARB);"))
  (define ogl:CompressedTexSubImage2DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage2DARB);"))
  (define ogl:CompressedTexSubImage1DARB
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage1DARB);"))
  (define ogl:GetCompressedTexImageARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTexImageARB);"))
  (define ogl:PointParameterfARB
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfARB);"))
  (define ogl:PointParameterfvARB
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvARB);"))
  (define ogl:WeightbvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightbvARB);"))
  (define ogl:WeightsvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightsvARB);"))
  (define ogl:WeightivARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightivARB);"))
  (define ogl:WeightfvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightfvARB);"))
  (define ogl:WeightdvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightdvARB);"))
  (define ogl:WeightubvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightubvARB);"))
  (define ogl:WeightusvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightusvARB);"))
  (define ogl:WeightuivARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightuivARB);"))
  (define ogl:WeightPointerARB
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightPointerARB);"))
  (define ogl:VertexBlendARB
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendARB);"))
  (define ogl:CurrentPaletteMatrixARB
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CurrentPaletteMatrixARB);"))
  (define ogl:MatrixIndexubvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexubvARB);"))
  (define ogl:MatrixIndexusvARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexusvARB);"))
  (define ogl:MatrixIndexuivARB
    (foreign-lambda*
      (function void ("GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexuivARB);"))
  (define ogl:MatrixIndexPointerARB
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexPointerARB);"))
  (define ogl:WindowPos2dARB
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dARB);"))
  (define ogl:WindowPos2dvARB
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dvARB);"))
  (define ogl:WindowPos2fARB
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fARB);"))
  (define ogl:WindowPos2fvARB
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fvARB);"))
  (define ogl:WindowPos2iARB
    (foreign-lambda*
      (function void ("GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iARB);"))
  (define ogl:WindowPos2ivARB
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2ivARB);"))
  (define ogl:WindowPos2sARB
    (foreign-lambda*
      (function void ("GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sARB);"))
  (define ogl:WindowPos2svARB
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2svARB);"))
  (define ogl:WindowPos3dARB
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dARB);"))
  (define ogl:WindowPos3dvARB
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dvARB);"))
  (define ogl:WindowPos3fARB
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fARB);"))
  (define ogl:WindowPos3fvARB
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fvARB);"))
  (define ogl:WindowPos3iARB
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iARB);"))
  (define ogl:WindowPos3ivARB
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3ivARB);"))
  (define ogl:WindowPos3sARB
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sARB);"))
  (define ogl:WindowPos3svARB
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3svARB);"))
  (define ogl:VertexAttrib1dARB
    (foreign-lambda*
      (function void ("GLuint" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dARB);"))
  (define ogl:VertexAttrib1dvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dvARB);"))
  (define ogl:VertexAttrib1fARB
    (foreign-lambda*
      (function void ("GLuint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fARB);"))
  (define ogl:VertexAttrib1fvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fvARB);"))
  (define ogl:VertexAttrib1sARB
    (foreign-lambda*
      (function void ("GLuint" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sARB);"))
  (define ogl:VertexAttrib1svARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1svARB);"))
  (define ogl:VertexAttrib2dARB
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dARB);"))
  (define ogl:VertexAttrib2dvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dvARB);"))
  (define ogl:VertexAttrib2fARB
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fARB);"))
  (define ogl:VertexAttrib2fvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fvARB);"))
  (define ogl:VertexAttrib2sARB
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sARB);"))
  (define ogl:VertexAttrib2svARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2svARB);"))
  (define ogl:VertexAttrib3dARB
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dARB);"))
  (define ogl:VertexAttrib3dvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dvARB);"))
  (define ogl:VertexAttrib3fARB
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fARB);"))
  (define ogl:VertexAttrib3fvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fvARB);"))
  (define ogl:VertexAttrib3sARB
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sARB);"))
  (define ogl:VertexAttrib3svARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3svARB);"))
  (define ogl:VertexAttrib4NbvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NbvARB);"))
  (define ogl:VertexAttrib4NivARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NivARB);"))
  (define ogl:VertexAttrib4NsvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NsvARB);"))
  (define ogl:VertexAttrib4NubARB
    (foreign-lambda*
      (function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NubARB);"))
  (define ogl:VertexAttrib4NubvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NubvARB);"))
  (define ogl:VertexAttrib4NuivARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NuivARB);"))
  (define ogl:VertexAttrib4NusvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NusvARB);"))
  (define ogl:VertexAttrib4bvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4bvARB);"))
  (define ogl:VertexAttrib4dARB
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dARB);"))
  (define ogl:VertexAttrib4dvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dvARB);"))
  (define ogl:VertexAttrib4fARB
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fARB);"))
  (define ogl:VertexAttrib4fvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fvARB);"))
  (define ogl:VertexAttrib4ivARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ivARB);"))
  (define ogl:VertexAttrib4sARB
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sARB);"))
  (define ogl:VertexAttrib4svARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4svARB);"))
  (define ogl:VertexAttrib4ubvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubvARB);"))
  (define ogl:VertexAttrib4uivARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4uivARB);"))
  (define ogl:VertexAttrib4usvARB
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4usvARB);"))
  (define ogl:VertexAttribPointerARB
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointerARB);"))
  (define ogl:EnableVertexAttribArrayARB
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribArrayARB);"))
  (define ogl:DisableVertexAttribArrayARB
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribArrayARB);"))
  (define ogl:ProgramStringARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramStringARB);"))
  (define ogl:BindProgramARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindProgramARB);"))
  (define ogl:DeleteProgramsARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgramsARB);"))
  (define ogl:GenProgramsARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenProgramsARB);"))
  (define ogl:ProgramEnvParameter4dARB
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4dARB);"))
  (define ogl:ProgramEnvParameter4dvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4dvARB);"))
  (define ogl:ProgramEnvParameter4fARB
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4fARB);"))
  (define ogl:ProgramEnvParameter4fvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4fvARB);"))
  (define ogl:ProgramLocalParameter4dARB
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4dARB);"))
  (define ogl:ProgramLocalParameter4dvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4dvARB);"))
  (define ogl:ProgramLocalParameter4fARB
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4fARB);"))
  (define ogl:ProgramLocalParameter4fvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4fvARB);"))
  (define ogl:GetProgramEnvParameterdvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterdvARB);"))
  (define ogl:GetProgramEnvParameterfvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterfvARB);"))
  (define ogl:GetProgramLocalParameterdvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterdvARB);"))
  (define ogl:GetProgramLocalParameterfvARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterfvARB);"))
  (define ogl:GetProgramivARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramivARB);"))
  (define ogl:GetProgramStringARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStringARB);"))
  (define ogl:GetVertexAttribdvARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdvARB);"))
  (define ogl:GetVertexAttribfvARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfvARB);"))
  (define ogl:GetVertexAttribivARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribivARB);"))
  (define ogl:GetVertexAttribPointervARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointervARB);"))
  (define ogl:IsProgramARB
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgramARB);"))
  (define ogl:BindBufferARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferARB);"))
  (define ogl:DeleteBuffersARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteBuffersARB);"))
  (define ogl:GenBuffersARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenBuffersARB);"))
  (define ogl:IsBufferARB
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBufferARB);"))
  (define ogl:BufferDataARB
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferDataARB);"))
  (define ogl:BufferSubDataARB
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferSubDataARB);"))
  (define ogl:GetBufferSubDataARB
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferSubDataARB);"))
  (define ogl:MapBufferARB
    (foreign-lambda*
      (function (c-pointer "GLvoid") ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBufferARB);"))
  (define ogl:UnmapBufferARB
    (foreign-lambda*
      (function "GLboolean" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapBufferARB);"))
  (define ogl:GetBufferParameterivARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameterivARB);"))
  (define ogl:GetBufferPointervARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferPointervARB);"))
  (define ogl:GenQueriesARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenQueriesARB);"))
  (define ogl:DeleteQueriesARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteQueriesARB);"))
  (define ogl:IsQueryARB
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsQueryARB);"))
  (define ogl:BeginQueryARB
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQueryARB);"))
  (define ogl:EndQueryARB
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQueryARB);"))
  (define ogl:GetQueryivARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryivARB);"))
  (define ogl:GetQueryObjectivARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectivARB);"))
  (define ogl:GetQueryObjectuivARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectuivARB);"))
  (define ogl:DeleteObjectARB
    (foreign-lambda*
      (function void (unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteObjectARB);"))
  (define ogl:GetHandleARB
    (foreign-lambda*
      (function unsigned-long ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHandleARB);"))
  (define ogl:DetachObjectARB
    (foreign-lambda*
      (function void (unsigned-long unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetachObjectARB);"))
  (define ogl:CreateShaderObjectARB
    (foreign-lambda*
      (function unsigned-long ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShaderObjectARB);"))
  (define ogl:ShaderSourceARB
    (foreign-lambda*
      (function
        void
        (unsigned-long
          "GLsizei"
          (c-pointer (c-pointer (const char)))
          (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderSourceARB);"))
  (define ogl:CompileShaderARB
    (foreign-lambda*
      (function void (unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShaderARB);"))
  (define ogl:CreateProgramObjectARB
    (foreign-lambda*
      (function unsigned-long (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateProgramObjectARB);"))
  (define ogl:AttachObjectARB
    (foreign-lambda*
      (function void (unsigned-long unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AttachObjectARB);"))
  (define ogl:LinkProgramARB
    (foreign-lambda*
      (function void (unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LinkProgramARB);"))
  (define ogl:UseProgramObjectARB
    (foreign-lambda*
      (function void (unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseProgramObjectARB);"))
  (define ogl:ValidateProgramARB
    (foreign-lambda*
      (function void (unsigned-long))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ValidateProgramARB);"))
  (define ogl:Uniform1fARB
    (foreign-lambda*
      (function void ("GLint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fARB);"))
  (define ogl:Uniform2fARB
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fARB);"))
  (define ogl:Uniform3fARB
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fARB);"))
  (define ogl:Uniform4fARB
    (foreign-lambda*
      (function void ("GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fARB);"))
  (define ogl:Uniform1iARB
    (foreign-lambda*
      (function void ("GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1iARB);"))
  (define ogl:Uniform2iARB
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2iARB);"))
  (define ogl:Uniform3iARB
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3iARB);"))
  (define ogl:Uniform4iARB
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4iARB);"))
  (define ogl:Uniform1fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fvARB);"))
  (define ogl:Uniform2fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fvARB);"))
  (define ogl:Uniform3fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fvARB);"))
  (define ogl:Uniform4fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fvARB);"))
  (define ogl:Uniform1ivARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1ivARB);"))
  (define ogl:Uniform2ivARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2ivARB);"))
  (define ogl:Uniform3ivARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3ivARB);"))
  (define ogl:Uniform4ivARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4ivARB);"))
  (define ogl:UniformMatrix2fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2fvARB);"))
  (define ogl:UniformMatrix3fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3fvARB);"))
  (define ogl:UniformMatrix4fvARB
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4fvARB);"))
  (define ogl:GetObjectParameterfvARB
    (foreign-lambda*
      (function void (unsigned-long "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterfvARB);"))
  (define ogl:GetObjectParameterivARB
    (foreign-lambda*
      (function void (unsigned-long "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterivARB);"))
  (define ogl:GetInfoLogARB
    (foreign-lambda*
      (function void (unsigned-long "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInfoLogARB);"))
  (define ogl:GetAttachedObjectsARB
    (foreign-lambda*
      (function void (unsigned-long "GLsizei" (c-pointer "GLsizei") u32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttachedObjectsARB);"))
  (define ogl:GetUniformLocationARB
    (foreign-lambda*
      (function "GLint" (unsigned-long c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformLocationARB);"))
  (define ogl:GetActiveUniformARB
    (foreign-lambda*
      (function
        void
        (unsigned-long
          "GLuint"
          "GLsizei"
          (c-pointer "GLsizei")
          (c-pointer "GLint")
          (c-pointer "GLenum")
          c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformARB);"))
  (define ogl:GetUniformfvARB
    (foreign-lambda*
      (function void (unsigned-long "GLint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformfvARB);"))
  (define ogl:GetUniformivARB
    (foreign-lambda*
      (function void (unsigned-long "GLint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformivARB);"))
  (define ogl:GetShaderSourceARB
    (foreign-lambda*
      (function void (unsigned-long "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderSourceARB);"))
  (define ogl:BindAttribLocationARB
    (foreign-lambda*
      (function void (unsigned-long "GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindAttribLocationARB);"))
  (define ogl:GetActiveAttribARB
    (foreign-lambda*
      (function
        void
        (unsigned-long
          "GLuint"
          "GLsizei"
          (c-pointer "GLsizei")
          (c-pointer "GLint")
          (c-pointer "GLenum")
          c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveAttribARB);"))
  (define ogl:GetAttribLocationARB
    (foreign-lambda*
      (function "GLint" (unsigned-long c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttribLocationARB);"))
  (define ogl:DrawBuffersARB
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLenum")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffersARB);"))
  (define ogl:ClampColorARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClampColorARB);"))
  (define ogl:DrawArraysInstancedARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstancedARB);"))
  (define ogl:DrawElementsInstancedARB
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedARB);"))
  (define ogl:IsRenderbuffer
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsRenderbuffer);"))
  (define ogl:BindRenderbuffer
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindRenderbuffer);"))
  (define ogl:DeleteRenderbuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteRenderbuffers);"))
  (define ogl:GenRenderbuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenRenderbuffers);"))
  (define ogl:RenderbufferStorage
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorage);"))
  (define ogl:GetRenderbufferParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetRenderbufferParameteriv);"))
  (define ogl:IsFramebuffer
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFramebuffer);"))
  (define ogl:BindFramebuffer
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFramebuffer);"))
  (define ogl:DeleteFramebuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFramebuffers);"))
  (define ogl:GenFramebuffers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFramebuffers);"))
  (define ogl:CheckFramebufferStatus
    (foreign-lambda*
      (function "GLenum" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckFramebufferStatus);"))
  (define ogl:FramebufferTexture1D
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture1D);"))
  (define ogl:FramebufferTexture2D
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture2D);"))
  (define ogl:FramebufferTexture3D
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture3D);"))
  (define ogl:FramebufferRenderbuffer
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferRenderbuffer);"))
  (define ogl:GetFramebufferAttachmentParameteriv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferAttachmentParameteriv);"))
  (define ogl:GenerateMipmap
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMipmap);"))
  (define ogl:BlitFramebuffer
    (foreign-lambda*
      (function
        void
        ("GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLbitfield"
         "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlitFramebuffer);"))
  (define ogl:RenderbufferStorageMultisample
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultisample);"))
  (define ogl:FramebufferTextureLayer
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayer);"))
  (define ogl:ProgramParameteriARB
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteriARB);"))
  (define ogl:FramebufferTextureARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureARB);"))
  (define ogl:FramebufferTextureLayerARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayerARB);"))
  (define ogl:FramebufferTextureFaceARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureFaceARB);"))
  (define ogl:VertexAttribDivisor
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribDivisor);"))
  (define ogl:MapBufferRange
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t" "GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBufferRange);"))
  (define ogl:FlushMappedBufferRange
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushMappedBufferRange);"))
  (define ogl:TexBufferARB
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferARB);"))
  (define ogl:BindVertexArray
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexArray);"))
  (define ogl:DeleteVertexArrays
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexArrays);"))
  (define ogl:GenVertexArrays
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexArrays);"))
  (define ogl:IsVertexArray
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexArray);"))
  (define ogl:GetUniformIndices
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLsizei"
         (c-pointer (c-pointer (const char)))
         (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformIndices);"))
  (define ogl:GetActiveUniformsiv
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLuint") "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformsiv);"))
  (define ogl:GetActiveUniformName
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformName);"))
  (define ogl:GetUniformBlockIndex
    (foreign-lambda*
      (function "GLuint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformBlockIndex);"))
  (define ogl:GetActiveUniformBlockiv
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformBlockiv);"))
  (define ogl:GetActiveUniformBlockName
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformBlockName);"))
  (define ogl:UniformBlockBinding
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformBlockBinding);"))
  (define ogl:CopyBufferSubData
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "ptrdiff_t" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyBufferSubData);"))
  (define ogl:DrawElementsBaseVertex
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsBaseVertex);"))
  (define ogl:DrawRangeElementsBaseVertex
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         "GLsizei"
         "GLenum"
         (c-pointer "GLvoid")
         "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementsBaseVertex);"))
  (define ogl:DrawElementsInstancedBaseVertex
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedBaseVertex);"))
  (define ogl:MultiDrawElementsBaseVertex
    (foreign-lambda*
      (function
        void
        ("GLenum"
         (c-pointer "GLsizei")
         "GLenum"
         (c-pointer (c-pointer (const "GLvoid")))
         "GLsizei"
         (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsBaseVertex);"))
  (define ogl:ProvokingVertex
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProvokingVertex);"))
  (define ogl:FenceSync
    (foreign-lambda*
      (function (c-pointer (struct "__GLsync")) ("GLenum" "GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FenceSync);"))
  (define ogl:IsSync
    (foreign-lambda*
      (function "GLboolean" ((c-pointer (struct "__GLsync"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsSync);"))
  (define ogl:DeleteSync
    (foreign-lambda*
      (function void ((c-pointer (struct "__GLsync"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteSync);"))
  (define ogl:ClientWaitSync
    (foreign-lambda*
      (function
        "GLenum"
        ((c-pointer (struct "__GLsync")) "GLbitfield" unsigned-integer64))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientWaitSync);"))
  (define ogl:WaitSync
    (foreign-lambda*
      (function
        void
        ((c-pointer (struct "__GLsync")) "GLbitfield" unsigned-integer64))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WaitSync);"))
  (define ogl:GetInteger64v
    (foreign-lambda*
      (function void ("GLenum" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInteger64v);"))
  (define ogl:GetSynciv
    (foreign-lambda*
      (function
        void
        ((c-pointer (struct "__GLsync"))
         "GLenum"
         "GLsizei"
         (c-pointer "GLsizei")
         (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSynciv);"))
  (define ogl:TexImage2DMultisample
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLint" "GLsizei" "GLsizei" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage2DMultisample);"))
  (define ogl:TexImage3DMultisample
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLint" "GLsizei" "GLsizei" "GLsizei" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3DMultisample);"))
  (define ogl:GetMultisamplefv
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultisamplefv);"))
  (define ogl:SampleMaski
    (foreign-lambda*
      (function void ("GLuint" "GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaski);"))
  (define ogl:BlendEquationi
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationi);"))
  (define ogl:BlendEquationSeparatei
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparatei);"))
  (define ogl:BlendFunci
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFunci);"))
  (define ogl:BlendFuncSeparatei
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparatei);"))
  (define ogl:MinSampleShading
    (foreign-lambda*
      (function void ("GLclampf"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MinSampleShading);"))
  (define ogl:NamedStringARB
    (foreign-lambda*
      (function void ("GLenum" "GLint" c-string "GLint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedStringARB);"))
  (define ogl:DeleteNamedStringARB
    (foreign-lambda*
      (function void ("GLint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteNamedStringARB);"))
  (define ogl:CompileShaderIncludeARB
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLsizei"
         (c-pointer (c-pointer (const char)))
         (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShaderIncludeARB);"))
  (define ogl:IsNamedStringARB
    (foreign-lambda*
      (function "GLboolean" ("GLint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsNamedStringARB);"))
  (define ogl:GetNamedStringARB
    (foreign-lambda*
      (function void ("GLint" c-string "GLsizei" (c-pointer "GLint") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedStringARB);"))
  (define ogl:GetNamedStringivARB
    (foreign-lambda*
      (function void ("GLint" c-string "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedStringivARB);"))
  (define ogl:BindFragDataLocationIndexed
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocationIndexed);"))
  (define ogl:GetFragDataIndex
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataIndex);"))
  (define ogl:GenSamplers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenSamplers);"))
  (define ogl:DeleteSamplers
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteSamplers);"))
  (define ogl:IsSampler
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsSampler);"))
  (define ogl:BindSampler
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindSampler);"))
  (define ogl:SamplerParameteri
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameteri);"))
  (define ogl:SamplerParameteriv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameteriv);"))
  (define ogl:SamplerParameterf
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterf);"))
  (define ogl:SamplerParameterfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterfv);"))
  (define ogl:SamplerParameterIiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterIiv);"))
  (define ogl:SamplerParameterIuiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterIuiv);"))
  (define ogl:GetSamplerParameteriv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameteriv);"))
  (define ogl:GetSamplerParameterIiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterIiv);"))
  (define ogl:GetSamplerParameterfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterfv);"))
  (define ogl:GetSamplerParameterIfv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterIfv);"))
  (define ogl:QueryCounter
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->QueryCounter);"))
  (define ogl:GetQueryObjecti64v
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjecti64v);"))
  (define ogl:GetQueryObjectui64v
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectui64v);"))
  (define ogl:VertexP2ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP2ui);"))
  (define ogl:VertexP2uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP2uiv);"))
  (define ogl:VertexP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP3ui);"))
  (define ogl:VertexP3uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP3uiv);"))
  (define ogl:VertexP4ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP4ui);"))
  (define ogl:VertexP4uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP4uiv);"))
  (define ogl:TexCoordP1ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP1ui);"))
  (define ogl:TexCoordP1uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP1uiv);"))
  (define ogl:TexCoordP2ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP2ui);"))
  (define ogl:TexCoordP2uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP2uiv);"))
  (define ogl:TexCoordP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP3ui);"))
  (define ogl:TexCoordP3uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP3uiv);"))
  (define ogl:TexCoordP4ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP4ui);"))
  (define ogl:TexCoordP4uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP4uiv);"))
  (define ogl:MultiTexCoordP1ui
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP1ui);"))
  (define ogl:MultiTexCoordP1uiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP1uiv);"))
  (define ogl:MultiTexCoordP2ui
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP2ui);"))
  (define ogl:MultiTexCoordP2uiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP2uiv);"))
  (define ogl:MultiTexCoordP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP3ui);"))
  (define ogl:MultiTexCoordP3uiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP3uiv);"))
  (define ogl:MultiTexCoordP4ui
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP4ui);"))
  (define ogl:MultiTexCoordP4uiv
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP4uiv);"))
  (define ogl:NormalP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalP3ui);"))
  (define ogl:NormalP3uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalP3uiv);"))
  (define ogl:ColorP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP3ui);"))
  (define ogl:ColorP3uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP3uiv);"))
  (define ogl:ColorP4ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP4ui);"))
  (define ogl:ColorP4uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP4uiv);"))
  (define ogl:SecondaryColorP3ui
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorP3ui);"))
  (define ogl:SecondaryColorP3uiv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorP3uiv);"))
  (define ogl:VertexAttribP1ui
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP1ui);"))
  (define ogl:VertexAttribP1uiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP1uiv);"))
  (define ogl:VertexAttribP2ui
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP2ui);"))
  (define ogl:VertexAttribP2uiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP2uiv);"))
  (define ogl:VertexAttribP3ui
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP3ui);"))
  (define ogl:VertexAttribP3uiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP3uiv);"))
  (define ogl:VertexAttribP4ui
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP4ui);"))
  (define ogl:VertexAttribP4uiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP4uiv);"))
  (define ogl:DrawArraysIndirect
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysIndirect);"))
  (define ogl:DrawElementsIndirect
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsIndirect);"))
  (define ogl:Uniform1d
    (foreign-lambda*
      (function void ("GLint" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1d);"))
  (define ogl:Uniform2d
    (foreign-lambda*
      (function void ("GLint" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2d);"))
  (define ogl:Uniform3d
    (foreign-lambda*
      (function void ("GLint" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3d);"))
  (define ogl:Uniform4d
    (foreign-lambda*
      (function void ("GLint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4d);"))
  (define ogl:Uniform1dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1dv);"))
  (define ogl:Uniform2dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2dv);"))
  (define ogl:Uniform3dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3dv);"))
  (define ogl:Uniform4dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4dv);"))
  (define ogl:UniformMatrix2dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2dv);"))
  (define ogl:UniformMatrix3dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3dv);"))
  (define ogl:UniformMatrix4dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4dv);"))
  (define ogl:UniformMatrix2x3dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x3dv);"))
  (define ogl:UniformMatrix2x4dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x4dv);"))
  (define ogl:UniformMatrix3x2dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x2dv);"))
  (define ogl:UniformMatrix3x4dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x4dv);"))
  (define ogl:UniformMatrix4x2dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x2dv);"))
  (define ogl:UniformMatrix4x3dv
    (foreign-lambda*
      (function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x3dv);"))
  (define ogl:GetUniformdv
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformdv);"))
  (define ogl:ProgramUniform1dEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1dEXT);"))
  (define ogl:ProgramUniform2dEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2dEXT);"))
  (define ogl:ProgramUniform3dEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3dEXT);"))
  (define ogl:ProgramUniform4dEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4dEXT);"))
  (define ogl:ProgramUniform1dvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1dvEXT);"))
  (define ogl:ProgramUniform2dvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2dvEXT);"))
  (define ogl:ProgramUniform3dvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3dvEXT);"))
  (define ogl:ProgramUniform4dvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4dvEXT);"))
  (define ogl:ProgramUniformMatrix2dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2dvEXT);"))
  (define ogl:ProgramUniformMatrix3dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3dvEXT);"))
  (define ogl:ProgramUniformMatrix4dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4dvEXT);"))
  (define ogl:ProgramUniformMatrix2x3dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x3dvEXT);"))
  (define ogl:ProgramUniformMatrix2x4dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x4dvEXT);"))
  (define ogl:ProgramUniformMatrix3x2dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x2dvEXT);"))
  (define ogl:ProgramUniformMatrix3x4dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x4dvEXT);"))
  (define ogl:ProgramUniformMatrix4x2dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x2dvEXT);"))
  (define ogl:ProgramUniformMatrix4x3dvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x3dvEXT);"))
  (define ogl:GetSubroutineUniformLocation
    (foreign-lambda*
      (function "GLint" ("GLuint" "GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSubroutineUniformLocation);"))
  (define ogl:GetSubroutineIndex
    (foreign-lambda*
      (function "GLuint" ("GLuint" "GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSubroutineIndex);"))
  (define ogl:GetActiveSubroutineUniformiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineUniformiv);"))
  (define ogl:GetActiveSubroutineUniformName
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineUniformName);"))
  (define ogl:GetActiveSubroutineName
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineName);"))
  (define ogl:UniformSubroutinesuiv
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformSubroutinesuiv);"))
  (define ogl:GetUniformSubroutineuiv
    (foreign-lambda*
      (function void ("GLenum" "GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformSubroutineuiv);"))
  (define ogl:GetProgramStageiv
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStageiv);"))
  (define ogl:PatchParameteri
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PatchParameteri);"))
  (define ogl:PatchParameterfv
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PatchParameterfv);"))
  (define ogl:BindTransformFeedback
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTransformFeedback);"))
  (define ogl:DeleteTransformFeedbacks
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTransformFeedbacks);"))
  (define ogl:GenTransformFeedbacks
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTransformFeedbacks);"))
  (define ogl:IsTransformFeedback
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTransformFeedback);"))
  (define ogl:PauseTransformFeedback
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PauseTransformFeedback);"))
  (define ogl:ResumeTransformFeedback
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResumeTransformFeedback);"))
  (define ogl:DrawTransformFeedback
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedback);"))
  (define ogl:DrawTransformFeedbackStream
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedbackStream);"))
  (define ogl:BeginQueryIndexed
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQueryIndexed);"))
  (define ogl:EndQueryIndexed
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQueryIndexed);"))
  (define ogl:GetQueryIndexediv
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryIndexediv);"))
  (define ogl:BlendColorEXT
    (foreign-lambda*
      (function void ("GLclampf" "GLclampf" "GLclampf" "GLclampf"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColorEXT);"))
  (define ogl:PolygonOffsetEXT
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PolygonOffsetEXT);"))
  (define ogl:TexImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3DEXT);"))
  (define ogl:TexSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage3DEXT);"))
  (define ogl:GetTexFilterFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexFilterFuncSGIS);"))
  (define ogl:TexFilterFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexFilterFuncSGIS);"))
  (define ogl:TexSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage1DEXT);"))
  (define ogl:TexSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage2DEXT);"))
  (define ogl:CopyTexImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLint" "GLenum" "GLint" "GLint" "GLsizei" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexImage1DEXT);"))
  (define ogl:CopyTexImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexImage2DEXT);"))
  (define ogl:CopyTexSubImage1DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage1DEXT);"))
  (define ogl:CopyTexSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLint" "GLint" "GLint" "GLint" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage2DEXT);"))
  (define ogl:CopyTexSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage3DEXT);"))
  (define ogl:GetHistogramEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramEXT);"))
  (define ogl:GetHistogramParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterfvEXT);"))
  (define ogl:GetHistogramParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterivEXT);"))
  (define ogl:GetMinmaxEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxEXT);"))
  (define ogl:GetMinmaxParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterfvEXT);"))
  (define ogl:GetMinmaxParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterivEXT);"))
  (define ogl:HistogramEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLenum" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->HistogramEXT);"))
  (define ogl:MinmaxEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MinmaxEXT);"))
  (define ogl:ResetHistogramEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetHistogramEXT);"))
  (define ogl:ResetMinmaxEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetMinmaxEXT);"))
  (define ogl:ConvolutionFilter1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter1DEXT);"))
  (define ogl:ConvolutionFilter2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter2DEXT);"))
  (define ogl:ConvolutionParameterfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfEXT);"))
  (define ogl:ConvolutionParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfvEXT);"))
  (define ogl:ConvolutionParameteriEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteriEXT);"))
  (define ogl:ConvolutionParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterivEXT);"))
  (define ogl:CopyConvolutionFilter1DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter1DEXT);"))
  (define ogl:CopyConvolutionFilter2DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter2DEXT);"))
  (define ogl:GetConvolutionFilterEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionFilterEXT);"))
  (define ogl:GetConvolutionParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterfvEXT);"))
  (define ogl:GetConvolutionParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterivEXT);"))
  (define ogl:GetSeparableFilterEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSeparableFilterEXT);"))
  (define ogl:SeparableFilter2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SeparableFilter2DEXT);"))
  (define ogl:ColorTableSGI
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableSGI);"))
  (define ogl:ColorTableParameterfvSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterfvSGI);"))
  (define ogl:ColorTableParameterivSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterivSGI);"))
  (define ogl:CopyColorTableSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorTableSGI);"))
  (define ogl:GetColorTableSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableSGI);"))
  (define ogl:GetColorTableParameterfvSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfvSGI);"))
  (define ogl:GetColorTableParameterivSGI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterivSGI);"))
  (define ogl:PixelTexGenSGIX
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenSGIX);"))
  (define ogl:PixelTexGenParameteriSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameteriSGIS);"))
  (define ogl:PixelTexGenParameterivSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterivSGIS);"))
  (define ogl:PixelTexGenParameterfSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterfSGIS);"))
  (define ogl:PixelTexGenParameterfvSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterfvSGIS);"))
  (define ogl:GetPixelTexGenParameterivSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelTexGenParameterivSGIS);"))
  (define ogl:GetPixelTexGenParameterfvSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelTexGenParameterfvSGIS);"))
  (define ogl:TexImage4DSGIS
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage4DSGIS);"))
  (define ogl:TexSubImage4DSGIS
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage4DSGIS);"))
  (define ogl:AreTexturesResidentEXT
    (foreign-lambda*
      (function
        "GLboolean"
        ("GLsizei" (c-pointer "GLuint") (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AreTexturesResidentEXT);"))
  (define ogl:BindTextureEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTextureEXT);"))
  (define ogl:DeleteTexturesEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTexturesEXT);"))
  (define ogl:GenTexturesEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTexturesEXT);"))
  (define ogl:IsTextureEXT
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTextureEXT);"))
  (define ogl:PrioritizeTexturesEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint") (c-pointer "GLclampf")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrioritizeTexturesEXT);"))
  (define ogl:DetailTexFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetailTexFuncSGIS);"))
  (define ogl:GetDetailTexFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDetailTexFuncSGIS);"))
  (define ogl:SharpenTexFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SharpenTexFuncSGIS);"))
  (define ogl:GetSharpenTexFuncSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSharpenTexFuncSGIS);"))
  (define ogl:SampleMaskSGIS
    (foreign-lambda*
      (function void ("GLclampf" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskSGIS);"))
  (define ogl:SamplePatternSGIS
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplePatternSGIS);"))
  (define ogl:ArrayElementEXT
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ArrayElementEXT);"))
  (define ogl:ColorPointerEXT
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorPointerEXT);"))
  (define ogl:DrawArraysEXT
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysEXT);"))
  (define ogl:EdgeFlagPointerEXT
    (foreign-lambda*
      (function void ("GLsizei" "GLsizei" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EdgeFlagPointerEXT);"))
  (define ogl:GetPointervEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPointervEXT);"))
  (define ogl:IndexPointerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexPointerEXT);"))
  (define ogl:NormalPointerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalPointerEXT);"))
  (define ogl:TexCoordPointerEXT
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordPointerEXT);"))
  (define ogl:VertexPointerEXT
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexPointerEXT);"))
  (define ogl:BlendEquationEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationEXT);"))
  (define ogl:SpriteParameterfSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterfSGIX);"))
  (define ogl:SpriteParameterfvSGIX
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterfvSGIX);"))
  (define ogl:SpriteParameteriSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameteriSGIX);"))
  (define ogl:SpriteParameterivSGIX
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterivSGIX);"))
  (define ogl:PointParameterfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfEXT);"))
  (define ogl:PointParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvEXT);"))
  (define ogl:PointParameterfSGIS
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfSGIS);"))
  (define ogl:PointParameterfvSGIS
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvSGIS);"))
  (define ogl:GetInstrumentsSGIX
    (foreign-lambda*
      (function "GLint" (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInstrumentsSGIX);"))
  (define ogl:InstrumentsBufferSGIX
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InstrumentsBufferSGIX);"))
  (define ogl:PollInstrumentsSGIX
    (foreign-lambda*
      (function "GLint" ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PollInstrumentsSGIX);"))
  (define ogl:ReadInstrumentsSGIX
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReadInstrumentsSGIX);"))
  (define ogl:StartInstrumentsSGIX
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StartInstrumentsSGIX);"))
  (define ogl:StopInstrumentsSGIX
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StopInstrumentsSGIX);"))
  (define ogl:FrameZoomSGIX
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrameZoomSGIX);"))
  (define ogl:TagSampleBufferSGIX
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TagSampleBufferSGIX);"))
  (define ogl:DeformationMap3dSGIX
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformationMap3dSGIX);"))
  (define ogl:DeformationMap3fSGIX
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformationMap3fSGIX);"))
  (define ogl:DeformSGIX
    (foreign-lambda*
      (function void ("GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformSGIX);"))
  (define ogl:LoadIdentityDeformationMapSGIX
    (foreign-lambda*
      (function void ("GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadIdentityDeformationMapSGIX);"))
  (define ogl:ReferencePlaneSGIX
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReferencePlaneSGIX);"))
  (define ogl:FlushRasterSGIX
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushRasterSGIX);"))
  (define ogl:FogFuncSGIS
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogFuncSGIS);"))
  (define ogl:GetFogFuncSGIS
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFogFuncSGIS);"))
  (define ogl:ImageTransformParameteriHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameteriHP);"))
  (define ogl:ImageTransformParameterfHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterfHP);"))
  (define ogl:ImageTransformParameterivHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterivHP);"))
  (define ogl:ImageTransformParameterfvHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterfvHP);"))
  (define ogl:GetImageTransformParameterivHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetImageTransformParameterivHP);"))
  (define ogl:GetImageTransformParameterfvHP
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetImageTransformParameterfvHP);"))
  (define ogl:CopyColorSubTableEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorSubTableEXT);"))
  (define ogl:HintPGI
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->HintPGI);"))
  (define ogl:ColorTableEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableEXT);"))
  (define ogl:GetColorTableEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableEXT);"))
  (define ogl:GetColorTableParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterivEXT);"))
  (define ogl:GetColorTableParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfvEXT);"))
  (define ogl:GetListParameterfvSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetListParameterfvSGIX);"))
  (define ogl:GetListParameterivSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetListParameterivSGIX);"))
  (define ogl:ListParameterfSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterfSGIX);"))
  (define ogl:ListParameterfvSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterfvSGIX);"))
  (define ogl:ListParameteriSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameteriSGIX);"))
  (define ogl:ListParameterivSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterivSGIX);"))
  (define ogl:IndexMaterialEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexMaterialEXT);"))
  (define ogl:IndexFuncEXT
    (foreign-lambda*
      (function void ("GLenum" "GLclampf"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexFuncEXT);"))
  (define ogl:LockArraysEXT
    (foreign-lambda*
      (function void ("GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LockArraysEXT);"))
  (define ogl:UnlockArraysEXT
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnlockArraysEXT);"))
  (define ogl:CullParameterdvEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CullParameterdvEXT);"))
  (define ogl:CullParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CullParameterfvEXT);"))
  (define ogl:FragmentColorMaterialSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentColorMaterialSGIX);"))
  (define ogl:FragmentLightfSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightfSGIX);"))
  (define ogl:FragmentLightfvSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightfvSGIX);"))
  (define ogl:FragmentLightiSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightiSGIX);"))
  (define ogl:FragmentLightivSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightivSGIX);"))
  (define ogl:FragmentLightModelfSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelfSGIX);"))
  (define ogl:FragmentLightModelfvSGIX
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelfvSGIX);"))
  (define ogl:FragmentLightModeliSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModeliSGIX);"))
  (define ogl:FragmentLightModelivSGIX
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelivSGIX);"))
  (define ogl:FragmentMaterialfSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialfSGIX);"))
  (define ogl:FragmentMaterialfvSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialfvSGIX);"))
  (define ogl:FragmentMaterialiSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialiSGIX);"))
  (define ogl:FragmentMaterialivSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialivSGIX);"))
  (define ogl:GetFragmentLightfvSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentLightfvSGIX);"))
  (define ogl:GetFragmentLightivSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentLightivSGIX);"))
  (define ogl:GetFragmentMaterialfvSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentMaterialfvSGIX);"))
  (define ogl:GetFragmentMaterialivSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentMaterialivSGIX);"))
  (define ogl:LightEnviSGIX
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightEnviSGIX);"))
  (define ogl:DrawRangeElementsEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLsizei" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementsEXT);"))
  (define ogl:ApplyTextureEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ApplyTextureEXT);"))
  (define ogl:TextureLightEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureLightEXT);"))
  (define ogl:TextureMaterialEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureMaterialEXT);"))
  (define ogl:AsyncMarkerSGIX
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AsyncMarkerSGIX);"))
  (define ogl:FinishAsyncSGIX
    (foreign-lambda*
      (function "GLint" ((c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishAsyncSGIX);"))
  (define ogl:PollAsyncSGIX
    (foreign-lambda*
      (function "GLint" ((c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PollAsyncSGIX);"))
  (define ogl:GenAsyncMarkersSGIX
    (foreign-lambda*
      (function "GLuint" ("GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenAsyncMarkersSGIX);"))
  (define ogl:DeleteAsyncMarkersSGIX
    (foreign-lambda*
      (function void ("GLuint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteAsyncMarkersSGIX);"))
  (define ogl:IsAsyncMarkerSGIX
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsAsyncMarkerSGIX);"))
  (define ogl:VertexPointervINTEL
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexPointervINTEL);"))
  (define ogl:NormalPointervINTEL
    (foreign-lambda*
      (function void ("GLenum" (c-pointer (c-pointer (const "GLvoid")))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalPointervINTEL);"))
  (define ogl:ColorPointervINTEL
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorPointervINTEL);"))
  (define ogl:TexCoordPointervINTEL
    (foreign-lambda*
      (function
        void
        ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordPointervINTEL);"))
  (define ogl:PixelTransformParameteriEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameteriEXT);"))
  (define ogl:PixelTransformParameterfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterfEXT);"))
  (define ogl:PixelTransformParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterivEXT);"))
  (define ogl:PixelTransformParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterfvEXT);"))
  (define ogl:SecondaryColor3bEXT
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bEXT);"))
  (define ogl:SecondaryColor3bvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bvEXT);"))
  (define ogl:SecondaryColor3dEXT
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dEXT);"))
  (define ogl:SecondaryColor3dvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dvEXT);"))
  (define ogl:SecondaryColor3fEXT
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fEXT);"))
  (define ogl:SecondaryColor3fvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fvEXT);"))
  (define ogl:SecondaryColor3iEXT
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3iEXT);"))
  (define ogl:SecondaryColor3ivEXT
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ivEXT);"))
  (define ogl:SecondaryColor3sEXT
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3sEXT);"))
  (define ogl:SecondaryColor3svEXT
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3svEXT);"))
  (define ogl:SecondaryColor3ubEXT
    (foreign-lambda*
      (function void ("GLubyte" "GLubyte" "GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubEXT);"))
  (define ogl:SecondaryColor3ubvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubvEXT);"))
  (define ogl:SecondaryColor3uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uiEXT);"))
  (define ogl:SecondaryColor3uivEXT
    (foreign-lambda*
      (function void ((c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uivEXT);"))
  (define ogl:SecondaryColor3usEXT
    (foreign-lambda*
      (function void ("GLushort" "GLushort" "GLushort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usEXT);"))
  (define ogl:SecondaryColor3usvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usvEXT);"))
  (define ogl:SecondaryColorPointerEXT
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorPointerEXT);"))
  (define ogl:TextureNormalEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureNormalEXT);"))
  (define ogl:MultiDrawArraysEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArraysEXT);"))
  (define ogl:MultiDrawElementsEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         (c-pointer "GLsizei")
         "GLenum"
         (c-pointer (c-pointer (const "GLvoid")))
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsEXT);"))
  (define ogl:FogCoordfEXT
    (foreign-lambda*
      (function void ("GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfEXT);"))
  (define ogl:FogCoordfvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfvEXT);"))
  (define ogl:FogCoorddEXT
    (foreign-lambda*
      (function void ("GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddEXT);"))
  (define ogl:FogCoorddvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddvEXT);"))
  (define ogl:FogCoordPointerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordPointerEXT);"))
  (define ogl:Tangent3bEXT
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3bEXT);"))
  (define ogl:Tangent3bvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3bvEXT);"))
  (define ogl:Tangent3dEXT
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3dEXT);"))
  (define ogl:Tangent3dvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3dvEXT);"))
  (define ogl:Tangent3fEXT
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3fEXT);"))
  (define ogl:Tangent3fvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3fvEXT);"))
  (define ogl:Tangent3iEXT
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3iEXT);"))
  (define ogl:Tangent3ivEXT
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3ivEXT);"))
  (define ogl:Tangent3sEXT
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3sEXT);"))
  (define ogl:Tangent3svEXT
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3svEXT);"))
  (define ogl:Binormal3bEXT
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3bEXT);"))
  (define ogl:Binormal3bvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3bvEXT);"))
  (define ogl:Binormal3dEXT
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3dEXT);"))
  (define ogl:Binormal3dvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3dvEXT);"))
  (define ogl:Binormal3fEXT
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3fEXT);"))
  (define ogl:Binormal3fvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3fvEXT);"))
  (define ogl:Binormal3iEXT
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3iEXT);"))
  (define ogl:Binormal3ivEXT
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3ivEXT);"))
  (define ogl:Binormal3sEXT
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3sEXT);"))
  (define ogl:Binormal3svEXT
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3svEXT);"))
  (define ogl:TangentPointerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TangentPointerEXT);"))
  (define ogl:BinormalPointerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BinormalPointerEXT);"))
  (define ogl:FinishTextureSUNX
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishTextureSUNX);"))
  (define ogl:GlobalAlphaFactorbSUN
    (foreign-lambda*
      (function void ("GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorbSUN);"))
  (define ogl:GlobalAlphaFactorsSUN
    (foreign-lambda*
      (function void ("GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorsSUN);"))
  (define ogl:GlobalAlphaFactoriSUN
    (foreign-lambda*
      (function void ("GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactoriSUN);"))
  (define ogl:GlobalAlphaFactorfSUN
    (foreign-lambda*
      (function void ("GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorfSUN);"))
  (define ogl:GlobalAlphaFactordSUN
    (foreign-lambda*
      (function void ("GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactordSUN);"))
  (define ogl:GlobalAlphaFactorubSUN
    (foreign-lambda*
      (function void ("GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorubSUN);"))
  (define ogl:GlobalAlphaFactorusSUN
    (foreign-lambda*
      (function void ("GLushort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorusSUN);"))
  (define ogl:GlobalAlphaFactoruiSUN
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactoruiSUN);"))
  (define ogl:ReplacementCodeuiSUN
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiSUN);"))
  (define ogl:ReplacementCodeusSUN
    (foreign-lambda*
      (function void ("GLushort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeusSUN);"))
  (define ogl:ReplacementCodeubSUN
    (foreign-lambda*
      (function void ("GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeubSUN);"))
  (define ogl:ReplacementCodeuivSUN
    (foreign-lambda*
      (function void ((c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuivSUN);"))
  (define ogl:ReplacementCodeusvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeusvSUN);"))
  (define ogl:ReplacementCodeubvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeubvSUN);"))
  (define ogl:ReplacementCodePointerSUN
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" (c-pointer (c-pointer (const "GLvoid")))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodePointerSUN);"))
  (define ogl:Color4ubVertex2fSUN
    (foreign-lambda*
      (function
        void
        ("GLubyte" "GLubyte" "GLubyte" "GLubyte" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex2fSUN);"))
  (define ogl:Color4ubVertex2fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex2fvSUN);"))
  (define ogl:Color4ubVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLubyte"
         "GLubyte"
         "GLubyte"
         "GLubyte"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex3fSUN);"))
  (define ogl:Color4ubVertex3fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex3fvSUN);"))
  (define ogl:Color3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3fVertex3fSUN);"))
  (define ogl:Color3fVertex3fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3fVertex3fvSUN);"))
  (define ogl:Normal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3fVertex3fSUN);"))
  (define ogl:Normal3fVertex3fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3fVertex3fvSUN);"))
  (define ogl:Color4fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4fNormal3fVertex3fSUN);"))
  (define ogl:Color4fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4fNormal3fVertex3fvSUN);"))
  (define ogl:TexCoord2fVertex3fSUN
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fVertex3fSUN);"))
  (define ogl:TexCoord2fVertex3fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fVertex3fvSUN);"))
  (define ogl:TexCoord4fVertex4fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fVertex4fSUN);"))
  (define ogl:TexCoord4fVertex4fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fVertex4fvSUN);"))
  (define ogl:TexCoord2fColor4ubVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLubyte"
         "GLubyte"
         "GLubyte"
         "GLubyte"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4ubVertex3fSUN);"))
  (define ogl:TexCoord2fColor4ubVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat") (c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4ubVertex3fvSUN);"))
  (define ogl:TexCoord2fColor3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor3fVertex3fSUN);"))
  (define ogl:TexCoord2fColor3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor3fVertex3fvSUN);"))
  (define ogl:TexCoord2fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fNormal3fVertex3fSUN);"))
  (define ogl:TexCoord2fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fNormal3fVertex3fvSUN);"))
  (define ogl:TexCoord2fColor4fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4fNormal3fVertex3fSUN);"))
  (define ogl:TexCoord2fColor4fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4fNormal3fVertex3fvSUN);"))
  (define ogl:TexCoord4fColor4fNormal3fVertex4fSUN
    (foreign-lambda*
      (function
        void
        ("GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fColor4fNormal3fVertex4fSUN);"))
  (define ogl:TexCoord4fColor4fNormal3fVertex4fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fColor4fNormal3fVertex4fvSUN);"))
  (define ogl:ReplacementCodeuiVertex3fSUN
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiVertex3fSUN);"))
  (define ogl:ReplacementCodeuiVertex3fvSUN
    (foreign-lambda*
      (function void ((c-pointer "GLuint") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiColor4ubVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLubyte"
         "GLubyte"
         "GLubyte"
         "GLubyte"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4ubVertex3fSUN);"))
  (define ogl:ReplacementCodeuiColor4ubVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint") (c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4ubVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiColor3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor3fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiColor3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor3fVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiNormal3fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiNormal3fVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiColor4fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4fNormal3fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiColor4fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4fNormal3fVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN);"))
  (define ogl:ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLuint")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN);"))
  (define ogl:BlendFuncSeparateEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateEXT);"))
  (define ogl:BlendFuncSeparateINGR
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateINGR);"))
  (define ogl:VertexWeightfEXT
    (foreign-lambda*
      (function void ("GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightfEXT);"))
  (define ogl:VertexWeightfvEXT
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightfvEXT);"))
  (define ogl:VertexWeightPointerEXT
    (foreign-lambda*
      (function void ("GLsizei" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightPointerEXT);"))
  (define ogl:FlushVertexArrayRangeNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushVertexArrayRangeNV);"))
  (define ogl:VertexArrayRangeNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayRangeNV);"))
  (define ogl:CombinerParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterfvNV);"))
  (define ogl:CombinerParameterfNV
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterfNV);"))
  (define ogl:CombinerParameterivNV
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterivNV);"))
  (define ogl:CombinerParameteriNV
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameteriNV);"))
  (define ogl:CombinerInputNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerInputNV);"))
  (define ogl:CombinerOutputNV
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLenum"
         "GLenum"
         "GLenum"
         "GLenum"
         "GLenum"
         "GLboolean"
         "GLboolean"
         "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerOutputNV);"))
  (define ogl:FinalCombinerInputNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinalCombinerInputNV);"))
  (define ogl:GetCombinerInputParameterfvNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerInputParameterfvNV);"))
  (define ogl:GetCombinerInputParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerInputParameterivNV);"))
  (define ogl:GetCombinerOutputParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerOutputParameterfvNV);"))
  (define ogl:GetCombinerOutputParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerOutputParameterivNV);"))
  (define ogl:GetFinalCombinerInputParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFinalCombinerInputParameterfvNV);"))
  (define ogl:GetFinalCombinerInputParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFinalCombinerInputParameterivNV);"))
  (define ogl:ResizeBuffersMESA
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResizeBuffersMESA);"))
  (define ogl:WindowPos2dMESA
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dMESA);"))
  (define ogl:WindowPos2dvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dvMESA);"))
  (define ogl:WindowPos2fMESA
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fMESA);"))
  (define ogl:WindowPos2fvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fvMESA);"))
  (define ogl:WindowPos2iMESA
    (foreign-lambda*
      (function void ("GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iMESA);"))
  (define ogl:WindowPos2ivMESA
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2ivMESA);"))
  (define ogl:WindowPos2sMESA
    (foreign-lambda*
      (function void ("GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sMESA);"))
  (define ogl:WindowPos2svMESA
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2svMESA);"))
  (define ogl:WindowPos3dMESA
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dMESA);"))
  (define ogl:WindowPos3dvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dvMESA);"))
  (define ogl:WindowPos3fMESA
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fMESA);"))
  (define ogl:WindowPos3fvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fvMESA);"))
  (define ogl:WindowPos3iMESA
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iMESA);"))
  (define ogl:WindowPos3ivMESA
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3ivMESA);"))
  (define ogl:WindowPos3sMESA
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sMESA);"))
  (define ogl:WindowPos3svMESA
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3svMESA);"))
  (define ogl:WindowPos4dMESA
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4dMESA);"))
  (define ogl:WindowPos4dvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4dvMESA);"))
  (define ogl:WindowPos4fMESA
    (foreign-lambda*
      (function void ("GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4fMESA);"))
  (define ogl:WindowPos4fvMESA
    (foreign-lambda*
      (function void ((c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4fvMESA);"))
  (define ogl:WindowPos4iMESA
    (foreign-lambda*
      (function void ("GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4iMESA);"))
  (define ogl:WindowPos4ivMESA
    (foreign-lambda*
      (function void ((c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4ivMESA);"))
  (define ogl:WindowPos4sMESA
    (foreign-lambda*
      (function void ("GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4sMESA);"))
  (define ogl:WindowPos4svMESA
    (foreign-lambda*
      (function void ((c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4svMESA);"))
  (define ogl:MultiModeDrawArraysIBM
    (foreign-lambda*
      (function
        void
        ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiModeDrawArraysIBM);"))
  (define ogl:MultiModeDrawElementsIBM
    (foreign-lambda*
      (function
        void
        ((c-pointer "GLenum")
         (c-pointer "GLsizei")
         "GLenum"
         (c-pointer (c-pointer (const "GLvoid")))
         "GLsizei"
         "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiModeDrawElementsIBM);"))
  (define ogl:TbufferMask3DFX
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TbufferMask3DFX);"))
  (define ogl:SampleMaskEXT
    (foreign-lambda*
      (function void ("GLclampf" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskEXT);"))
  (define ogl:SamplePatternEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplePatternEXT);"))
  (define ogl:TextureColorMaskSGIS
    (foreign-lambda*
      (function void ("GLboolean" "GLboolean" "GLboolean" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureColorMaskSGIS);"))
  (define ogl:IglooInterfaceSGIX
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IglooInterfaceSGIX);"))
  (define ogl:DeleteFencesNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFencesNV);"))
  (define ogl:GenFencesNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFencesNV);"))
  (define ogl:IsFenceNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFenceNV);"))
  (define ogl:TestFenceNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestFenceNV);"))
  (define ogl:GetFenceivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFenceivNV);"))
  (define ogl:FinishFenceNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishFenceNV);"))
  (define ogl:SetFenceNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFenceNV);"))
  (define ogl:MapControlPointsNV
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLint"
         "GLboolean"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapControlPointsNV);"))
  (define ogl:MapParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapParameterivNV);"))
  (define ogl:MapParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapParameterfvNV);"))
  (define ogl:GetMapControlPointsNV
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLboolean"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapControlPointsNV);"))
  (define ogl:GetMapParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapParameterivNV);"))
  (define ogl:GetMapParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapParameterfvNV);"))
  (define ogl:GetMapAttribParameterivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapAttribParameterivNV);"))
  (define ogl:GetMapAttribParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapAttribParameterfvNV);"))
  (define ogl:EvalMapsNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalMapsNV);"))
  (define ogl:CombinerStageParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerStageParameterfvNV);"))
  (define ogl:GetCombinerStageParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerStageParameterfvNV);"))
  (define ogl:AreProgramsResidentNV
    (foreign-lambda*
      (function
        "GLboolean"
        ("GLsizei" (c-pointer "GLuint") (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AreProgramsResidentNV);"))
  (define ogl:BindProgramNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindProgramNV);"))
  (define ogl:DeleteProgramsNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgramsNV);"))
  (define ogl:ExecuteProgramNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ExecuteProgramNV);"))
  (define ogl:GenProgramsNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenProgramsNV);"))
  (define ogl:GetProgramParameterdvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramParameterdvNV);"))
  (define ogl:GetProgramParameterfvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramParameterfvNV);"))
  (define ogl:GetProgramivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramivNV);"))
  (define ogl:GetProgramStringNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStringNV);"))
  (define ogl:GetTrackMatrixivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTrackMatrixivNV);"))
  (define ogl:GetVertexAttribdvNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdvNV);"))
  (define ogl:GetVertexAttribfvNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfvNV);"))
  (define ogl:GetVertexAttribivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribivNV);"))
  (define ogl:GetVertexAttribPointervNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointervNV);"))
  (define ogl:IsProgramNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgramNV);"))
  (define ogl:LoadProgramNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadProgramNV);"))
  (define ogl:ProgramParameter4dNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4dNV);"))
  (define ogl:ProgramParameter4dvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4dvNV);"))
  (define ogl:ProgramParameter4fNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4fNV);"))
  (define ogl:ProgramParameter4fvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4fvNV);"))
  (define ogl:ProgramParameters4dvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameters4dvNV);"))
  (define ogl:ProgramParameters4fvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameters4fvNV);"))
  (define ogl:RequestResidentProgramsNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RequestResidentProgramsNV);"))
  (define ogl:TrackMatrixNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TrackMatrixNV);"))
  (define ogl:VertexAttribPointerNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointerNV);"))
  (define ogl:VertexAttrib1dNV
    (foreign-lambda*
      (function void ("GLuint" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dNV);"))
  (define ogl:VertexAttrib1dvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dvNV);"))
  (define ogl:VertexAttrib1fNV
    (foreign-lambda*
      (function void ("GLuint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fNV);"))
  (define ogl:VertexAttrib1fvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fvNV);"))
  (define ogl:VertexAttrib1sNV
    (foreign-lambda*
      (function void ("GLuint" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sNV);"))
  (define ogl:VertexAttrib1svNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1svNV);"))
  (define ogl:VertexAttrib2dNV
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dNV);"))
  (define ogl:VertexAttrib2dvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dvNV);"))
  (define ogl:VertexAttrib2fNV
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fNV);"))
  (define ogl:VertexAttrib2fvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fvNV);"))
  (define ogl:VertexAttrib2sNV
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sNV);"))
  (define ogl:VertexAttrib2svNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2svNV);"))
  (define ogl:VertexAttrib3dNV
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dNV);"))
  (define ogl:VertexAttrib3dvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dvNV);"))
  (define ogl:VertexAttrib3fNV
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fNV);"))
  (define ogl:VertexAttrib3fvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fvNV);"))
  (define ogl:VertexAttrib3sNV
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sNV);"))
  (define ogl:VertexAttrib3svNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3svNV);"))
  (define ogl:VertexAttrib4dNV
    (foreign-lambda*
      (function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dNV);"))
  (define ogl:VertexAttrib4dvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dvNV);"))
  (define ogl:VertexAttrib4fNV
    (foreign-lambda*
      (function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fNV);"))
  (define ogl:VertexAttrib4fvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fvNV);"))
  (define ogl:VertexAttrib4sNV
    (foreign-lambda*
      (function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sNV);"))
  (define ogl:VertexAttrib4svNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4svNV);"))
  (define ogl:VertexAttrib4ubNV
    (foreign-lambda*
      (function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubNV);"))
  (define ogl:VertexAttrib4ubvNV
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubvNV);"))
  (define ogl:VertexAttribs1dvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1dvNV);"))
  (define ogl:VertexAttribs1fvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1fvNV);"))
  (define ogl:VertexAttribs1svNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1svNV);"))
  (define ogl:VertexAttribs2dvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2dvNV);"))
  (define ogl:VertexAttribs2fvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2fvNV);"))
  (define ogl:VertexAttribs2svNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2svNV);"))
  (define ogl:VertexAttribs3dvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3dvNV);"))
  (define ogl:VertexAttribs3fvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3fvNV);"))
  (define ogl:VertexAttribs3svNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3svNV);"))
  (define ogl:VertexAttribs4dvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4dvNV);"))
  (define ogl:VertexAttribs4fvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4fvNV);"))
  (define ogl:VertexAttribs4svNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4svNV);"))
  (define ogl:VertexAttribs4ubvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4ubvNV);"))
  (define ogl:TexBumpParameterivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBumpParameterivATI);"))
  (define ogl:TexBumpParameterfvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBumpParameterfvATI);"))
  (define ogl:GetTexBumpParameterivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexBumpParameterivATI);"))
  (define ogl:GetTexBumpParameterfvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexBumpParameterfvATI);"))
  (define ogl:GenFragmentShadersATI
    (foreign-lambda*
      (function "GLuint" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFragmentShadersATI);"))
  (define ogl:BindFragmentShaderATI
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragmentShaderATI);"))
  (define ogl:DeleteFragmentShaderATI
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFragmentShaderATI);"))
  (define ogl:BeginFragmentShaderATI
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginFragmentShaderATI);"))
  (define ogl:EndFragmentShaderATI
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndFragmentShaderATI);"))
  (define ogl:PassTexCoordATI
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PassTexCoordATI);"))
  (define ogl:SampleMapATI
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMapATI);"))
  (define ogl:ColorFragmentOp1ATI
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp1ATI);"))
  (define ogl:ColorFragmentOp2ATI
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp2ATI);"))
  (define ogl:ColorFragmentOp3ATI
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp3ATI);"))
  (define ogl:AlphaFragmentOp1ATI
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp1ATI);"))
  (define ogl:AlphaFragmentOp2ATI
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp2ATI);"))
  (define ogl:AlphaFragmentOp3ATI
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"
         "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp3ATI);"))
  (define ogl:SetFragmentShaderConstantATI
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFragmentShaderConstantATI);"))
  (define ogl:PNTrianglesiATI
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PNTrianglesiATI);"))
  (define ogl:PNTrianglesfATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PNTrianglesfATI);"))
  (define ogl:NewObjectBufferATI
    (foreign-lambda*
      (function "GLuint" ("GLsizei" (c-pointer "GLvoid") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NewObjectBufferATI);"))
  (define ogl:IsObjectBufferATI
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsObjectBufferATI);"))
  (define ogl:UpdateObjectBufferATI
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLuint" "GLsizei" (c-pointer "GLvoid") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UpdateObjectBufferATI);"))
  (define ogl:GetObjectBufferfvATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectBufferfvATI);"))
  (define ogl:GetObjectBufferivATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectBufferivATI);"))
  (define ogl:FreeObjectBufferATI
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FreeObjectBufferATI);"))
  (define ogl:ArrayObjectATI
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLenum" "GLsizei" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ArrayObjectATI);"))
  (define ogl:GetArrayObjectfvATI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetArrayObjectfvATI);"))
  (define ogl:GetArrayObjectivATI
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetArrayObjectivATI);"))
  (define ogl:VariantArrayObjectATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLsizei" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantArrayObjectATI);"))
  (define ogl:GetVariantArrayObjectfvATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantArrayObjectfvATI);"))
  (define ogl:GetVariantArrayObjectivATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantArrayObjectivATI);"))
  (define ogl:BeginVertexShaderEXT
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginVertexShaderEXT);"))
  (define ogl:EndVertexShaderEXT
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndVertexShaderEXT);"))
  (define ogl:BindVertexShaderEXT
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexShaderEXT);"))
  (define ogl:GenVertexShadersEXT
    (foreign-lambda*
      (function "GLuint" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexShadersEXT);"))
  (define ogl:DeleteVertexShaderEXT
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexShaderEXT);"))
  (define ogl:ShaderOp1EXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp1EXT);"))
  (define ogl:ShaderOp2EXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp2EXT);"))
  (define ogl:ShaderOp3EXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp3EXT);"))
  (define ogl:SwizzleEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SwizzleEXT);"))
  (define ogl:WriteMaskEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WriteMaskEXT);"))
  (define ogl:InsertComponentEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InsertComponentEXT);"))
  (define ogl:ExtractComponentEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ExtractComponentEXT);"))
  (define ogl:GenSymbolsEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenSymbolsEXT);"))
  (define ogl:SetInvariantEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetInvariantEXT);"))
  (define ogl:SetLocalConstantEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetLocalConstantEXT);"))
  (define ogl:VariantbvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantbvEXT);"))
  (define ogl:VariantsvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantsvEXT);"))
  (define ogl:VariantivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantivEXT);"))
  (define ogl:VariantfvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantfvEXT);"))
  (define ogl:VariantdvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantdvEXT);"))
  (define ogl:VariantubvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantubvEXT);"))
  (define ogl:VariantusvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantusvEXT);"))
  (define ogl:VariantuivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantuivEXT);"))
  (define ogl:VariantPointerEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantPointerEXT);"))
  (define ogl:EnableVariantClientStateEXT
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVariantClientStateEXT);"))
  (define ogl:DisableVariantClientStateEXT
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVariantClientStateEXT);"))
  (define ogl:BindLightParameterEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindLightParameterEXT);"))
  (define ogl:BindMaterialParameterEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindMaterialParameterEXT);"))
  (define ogl:BindTexGenParameterEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTexGenParameterEXT);"))
  (define ogl:BindTextureUnitParameterEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTextureUnitParameterEXT);"))
  (define ogl:BindParameterEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindParameterEXT);"))
  (define ogl:IsVariantEnabledEXT
    (foreign-lambda*
      (function "GLboolean" ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVariantEnabledEXT);"))
  (define ogl:GetVariantBooleanvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantBooleanvEXT);"))
  (define ogl:GetVariantIntegervEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantIntegervEXT);"))
  (define ogl:GetVariantFloatvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantFloatvEXT);"))
  (define ogl:GetVariantPointervEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantPointervEXT);"))
  (define ogl:GetInvariantBooleanvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantBooleanvEXT);"))
  (define ogl:GetInvariantIntegervEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantIntegervEXT);"))
  (define ogl:GetInvariantFloatvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantFloatvEXT);"))
  (define ogl:GetLocalConstantBooleanvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantBooleanvEXT);"))
  (define ogl:GetLocalConstantIntegervEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantIntegervEXT);"))
  (define ogl:GetLocalConstantFloatvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantFloatvEXT);"))
  (define ogl:VertexStream1sATI
    (foreign-lambda*
      (function void ("GLenum" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1sATI);"))
  (define ogl:VertexStream1svATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1svATI);"))
  (define ogl:VertexStream1iATI
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1iATI);"))
  (define ogl:VertexStream1ivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1ivATI);"))
  (define ogl:VertexStream1fATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1fATI);"))
  (define ogl:VertexStream1fvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1fvATI);"))
  (define ogl:VertexStream1dATI
    (foreign-lambda*
      (function void ("GLenum" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1dATI);"))
  (define ogl:VertexStream1dvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1dvATI);"))
  (define ogl:VertexStream2sATI
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2sATI);"))
  (define ogl:VertexStream2svATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2svATI);"))
  (define ogl:VertexStream2iATI
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2iATI);"))
  (define ogl:VertexStream2ivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2ivATI);"))
  (define ogl:VertexStream2fATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2fATI);"))
  (define ogl:VertexStream2fvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2fvATI);"))
  (define ogl:VertexStream2dATI
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2dATI);"))
  (define ogl:VertexStream2dvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2dvATI);"))
  (define ogl:VertexStream3sATI
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3sATI);"))
  (define ogl:VertexStream3svATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3svATI);"))
  (define ogl:VertexStream3iATI
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3iATI);"))
  (define ogl:VertexStream3ivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3ivATI);"))
  (define ogl:VertexStream3fATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3fATI);"))
  (define ogl:VertexStream3fvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3fvATI);"))
  (define ogl:VertexStream3dATI
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3dATI);"))
  (define ogl:VertexStream3dvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3dvATI);"))
  (define ogl:VertexStream4sATI
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4sATI);"))
  (define ogl:VertexStream4svATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4svATI);"))
  (define ogl:VertexStream4iATI
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4iATI);"))
  (define ogl:VertexStream4ivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4ivATI);"))
  (define ogl:VertexStream4fATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4fATI);"))
  (define ogl:VertexStream4fvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4fvATI);"))
  (define ogl:VertexStream4dATI
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4dATI);"))
  (define ogl:VertexStream4dvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4dvATI);"))
  (define ogl:NormalStream3bATI
    (foreign-lambda*
      (function void ("GLenum" "GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3bATI);"))
  (define ogl:NormalStream3bvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3bvATI);"))
  (define ogl:NormalStream3sATI
    (foreign-lambda*
      (function void ("GLenum" "GLshort" "GLshort" "GLshort"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3sATI);"))
  (define ogl:NormalStream3svATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3svATI);"))
  (define ogl:NormalStream3iATI
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3iATI);"))
  (define ogl:NormalStream3ivATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3ivATI);"))
  (define ogl:NormalStream3fATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3fATI);"))
  (define ogl:NormalStream3fvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3fvATI);"))
  (define ogl:NormalStream3dATI
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3dATI);"))
  (define ogl:NormalStream3dvATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3dvATI);"))
  (define ogl:ClientActiveVertexStreamATI
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveVertexStreamATI);"))
  (define ogl:VertexBlendEnviATI
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendEnviATI);"))
  (define ogl:VertexBlendEnvfATI
    (foreign-lambda*
      (function void ("GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendEnvfATI);"))
  (define ogl:ElementPointerATI
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ElementPointerATI);"))
  (define ogl:DrawElementArrayATI
    (foreign-lambda*
      (function void ("GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementArrayATI);"))
  (define ogl:DrawRangeElementArrayATI
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementArrayATI);"))
  (define ogl:DrawMeshArraysSUN
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawMeshArraysSUN);"))
  (define ogl:GenOcclusionQueriesNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenOcclusionQueriesNV);"))
  (define ogl:DeleteOcclusionQueriesNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteOcclusionQueriesNV);"))
  (define ogl:IsOcclusionQueryNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsOcclusionQueryNV);"))
  (define ogl:BeginOcclusionQueryNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginOcclusionQueryNV);"))
  (define ogl:EndOcclusionQueryNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndOcclusionQueryNV);"))
  (define ogl:GetOcclusionQueryivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetOcclusionQueryivNV);"))
  (define ogl:GetOcclusionQueryuivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetOcclusionQueryuivNV);"))
  (define ogl:PointParameteriNV
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteriNV);"))
  (define ogl:PointParameterivNV
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterivNV);"))
  (define ogl:ActiveStencilFaceEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveStencilFaceEXT);"))
  (define ogl:ElementPointerAPPLE
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ElementPointerAPPLE);"))
  (define ogl:DrawElementArrayAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementArrayAPPLE);"))
  (define ogl:DrawRangeElementArrayAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementArrayAPPLE);"))
  (define ogl:MultiDrawElementArrayAPPLE
    (foreign-lambda*
      (function
        void
        ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementArrayAPPLE);"))
  (define ogl:MultiDrawRangeElementArrayAPPLE
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLuint"
         "GLuint"
         (c-pointer "GLint")
         (c-pointer "GLsizei")
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawRangeElementArrayAPPLE);"))
  (define ogl:GenFencesAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFencesAPPLE);"))
  (define ogl:DeleteFencesAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFencesAPPLE);"))
  (define ogl:SetFenceAPPLE
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFenceAPPLE);"))
  (define ogl:IsFenceAPPLE
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFenceAPPLE);"))
  (define ogl:TestFenceAPPLE
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestFenceAPPLE);"))
  (define ogl:FinishFenceAPPLE
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishFenceAPPLE);"))
  (define ogl:TestObjectAPPLE
    (foreign-lambda*
      (function "GLboolean" ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestObjectAPPLE);"))
  (define ogl:FinishObjectAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishObjectAPPLE);"))
  (define ogl:BindVertexArrayAPPLE
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexArrayAPPLE);"))
  (define ogl:DeleteVertexArraysAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexArraysAPPLE);"))
  (define ogl:GenVertexArraysAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexArraysAPPLE);"))
  (define ogl:IsVertexArrayAPPLE
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexArrayAPPLE);"))
  (define ogl:VertexArrayRangeAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayRangeAPPLE);"))
  (define ogl:FlushVertexArrayRangeAPPLE
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushVertexArrayRangeAPPLE);"))
  (define ogl:VertexArrayParameteriAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayParameteriAPPLE);"))
  (define ogl:DrawBuffersATI
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLenum")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffersATI);"))
  (define ogl:ProgramNamedParameter4fNV
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLsizei"
         (c-pointer "GLubyte")
         "GLfloat"
         "GLfloat"
         "GLfloat"
         "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4fNV);"))
  (define ogl:ProgramNamedParameter4dNV
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLsizei"
         (c-pointer "GLubyte")
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4dNV);"))
  (define ogl:ProgramNamedParameter4fvNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4fvNV);"))
  (define ogl:ProgramNamedParameter4dvNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4dvNV);"))
  (define ogl:GetProgramNamedParameterfvNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramNamedParameterfvNV);"))
  (define ogl:GetProgramNamedParameterdvNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramNamedParameterdvNV);"))
  (define ogl:Vertex2hNV
    (foreign-lambda*
      (function void (short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2hNV);"))
  (define ogl:Vertex2hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2hvNV);"))
  (define ogl:Vertex3hNV
    (foreign-lambda*
      (function void (short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3hNV);"))
  (define ogl:Vertex3hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3hvNV);"))
  (define ogl:Vertex4hNV
    (foreign-lambda*
      (function void (short short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4hNV);"))
  (define ogl:Vertex4hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4hvNV);"))
  (define ogl:Normal3hNV
    (foreign-lambda*
      (function void (short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3hNV);"))
  (define ogl:Normal3hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3hvNV);"))
  (define ogl:Color3hNV
    (foreign-lambda*
      (function void (short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3hNV);"))
  (define ogl:Color3hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3hvNV);"))
  (define ogl:Color4hNV
    (foreign-lambda*
      (function void (short short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4hNV);"))
  (define ogl:Color4hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4hvNV);"))
  (define ogl:TexCoord1hNV
    (foreign-lambda*
      (function void (short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1hNV);"))
  (define ogl:TexCoord1hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1hvNV);"))
  (define ogl:TexCoord2hNV
    (foreign-lambda*
      (function void (short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2hNV);"))
  (define ogl:TexCoord2hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2hvNV);"))
  (define ogl:TexCoord3hNV
    (foreign-lambda*
      (function void (short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3hNV);"))
  (define ogl:TexCoord3hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3hvNV);"))
  (define ogl:TexCoord4hNV
    (foreign-lambda*
      (function void (short short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4hNV);"))
  (define ogl:TexCoord4hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4hvNV);"))
  (define ogl:MultiTexCoord1hNV
    (foreign-lambda*
      (function void ("GLenum" short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1hNV);"))
  (define ogl:MultiTexCoord1hvNV
    (foreign-lambda*
      (function void ("GLenum" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1hvNV);"))
  (define ogl:MultiTexCoord2hNV
    (foreign-lambda*
      (function void ("GLenum" short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2hNV);"))
  (define ogl:MultiTexCoord2hvNV
    (foreign-lambda*
      (function void ("GLenum" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2hvNV);"))
  (define ogl:MultiTexCoord3hNV
    (foreign-lambda*
      (function void ("GLenum" short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3hNV);"))
  (define ogl:MultiTexCoord3hvNV
    (foreign-lambda*
      (function void ("GLenum" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3hvNV);"))
  (define ogl:MultiTexCoord4hNV
    (foreign-lambda*
      (function void ("GLenum" short short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4hNV);"))
  (define ogl:MultiTexCoord4hvNV
    (foreign-lambda*
      (function void ("GLenum" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4hvNV);"))
  (define ogl:FogCoordhNV
    (foreign-lambda*
      (function void (short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordhNV);"))
  (define ogl:FogCoordhvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordhvNV);"))
  (define ogl:SecondaryColor3hNV
    (foreign-lambda*
      (function void (short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3hNV);"))
  (define ogl:SecondaryColor3hvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3hvNV);"))
  (define ogl:VertexWeighthNV
    (foreign-lambda*
      (function void (short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeighthNV);"))
  (define ogl:VertexWeighthvNV
    (foreign-lambda*
      (function void (s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeighthvNV);"))
  (define ogl:VertexAttrib1hNV
    (foreign-lambda*
      (function void ("GLuint" short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1hNV);"))
  (define ogl:VertexAttrib1hvNV
    (foreign-lambda*
      (function void ("GLuint" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1hvNV);"))
  (define ogl:VertexAttrib2hNV
    (foreign-lambda*
      (function void ("GLuint" short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2hNV);"))
  (define ogl:VertexAttrib2hvNV
    (foreign-lambda*
      (function void ("GLuint" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2hvNV);"))
  (define ogl:VertexAttrib3hNV
    (foreign-lambda*
      (function void ("GLuint" short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3hNV);"))
  (define ogl:VertexAttrib3hvNV
    (foreign-lambda*
      (function void ("GLuint" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3hvNV);"))
  (define ogl:VertexAttrib4hNV
    (foreign-lambda*
      (function void ("GLuint" short short short short))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4hNV);"))
  (define ogl:VertexAttrib4hvNV
    (foreign-lambda*
      (function void ("GLuint" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4hvNV);"))
  (define ogl:VertexAttribs1hvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1hvNV);"))
  (define ogl:VertexAttribs2hvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2hvNV);"))
  (define ogl:VertexAttribs3hvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3hvNV);"))
  (define ogl:VertexAttribs4hvNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" s16vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4hvNV);"))
  (define ogl:PixelDataRangeNV
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelDataRangeNV);"))
  (define ogl:FlushPixelDataRangeNV
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushPixelDataRangeNV);"))
  (define ogl:PrimitiveRestartNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartNV);"))
  (define ogl:PrimitiveRestartIndexNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartIndexNV);"))
  (define ogl:MapObjectBufferATI
    (foreign-lambda*
      (function (c-pointer "GLvoid") ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapObjectBufferATI);"))
  (define ogl:UnmapObjectBufferATI
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapObjectBufferATI);"))
  (define ogl:VertexAttribArrayObjectATI
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribArrayObjectATI);"))
  (define ogl:GetVertexAttribArrayObjectfvATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribArrayObjectfvATI);"))
  (define ogl:GetVertexAttribArrayObjectivATI
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribArrayObjectivATI);"))
  (define ogl:Vertex2bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2bOES);"))
  (define ogl:Vertex3bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3bOES);"))
  (define ogl:Vertex4bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4bOES);"))
  (define ogl:Vertex2bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2bvOES);"))
  (define ogl:Vertex3bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3bvOES);"))
  (define ogl:Vertex4bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4bvOES);"))
  (define ogl:TexCoord1bOES
    (foreign-lambda*
      (function void ("GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1bOES);"))
  (define ogl:TexCoord2bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2bOES);"))
  (define ogl:TexCoord3bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3bOES);"))
  (define ogl:TexCoord4bOES
    (foreign-lambda*
      (function void ("GLbyte" "GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4bOES);"))
  (define ogl:TexCoord1bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1bvOES);"))
  (define ogl:TexCoord2bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2bvOES);"))
  (define ogl:TexCoord3bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3bvOES);"))
  (define ogl:TexCoord4bvOES
    (foreign-lambda*
      (function void ((c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4bvOES);"))
  (define ogl:MultiTexCoord1bOES
    (foreign-lambda*
      (function void ("GLenum" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1bOES);"))
  (define ogl:MultiTexCoord2bOES
    (foreign-lambda*
      (function void ("GLenum" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2bOES);"))
  (define ogl:MultiTexCoord3bOES
    (foreign-lambda*
      (function void ("GLenum" "GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3bOES);"))
  (define ogl:MultiTexCoord4bOES
    (foreign-lambda*
      (function void ("GLenum" "GLbyte" "GLbyte" "GLbyte" "GLbyte"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4bOES);"))
  (define ogl:MultiTexCoord1bvOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1bvOES);"))
  (define ogl:MultiTexCoord2bvOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2bvOES);"))
  (define ogl:MultiTexCoord3bvOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3bvOES);"))
  (define ogl:MultiTexCoord4bvOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4bvOES);"))
  (define ogl:Vertex2xOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2xOES);"))
  (define ogl:Vertex3xOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3xOES);"))
  (define ogl:Vertex4xOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4xOES);"))
  (define ogl:Vertex2xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2xvOES);"))
  (define ogl:Vertex3xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3xvOES);"))
  (define ogl:Vertex4xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4xvOES);"))
  (define ogl:Normal3xOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3xOES);"))
  (define ogl:Normal3xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3xvOES);"))
  (define ogl:TexCoord1xOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1xOES);"))
  (define ogl:TexCoord2xOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2xOES);"))
  (define ogl:TexCoord3xOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3xOES);"))
  (define ogl:TexCoord4xOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4xOES);"))
  (define ogl:TexCoord1xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1xvOES);"))
  (define ogl:TexCoord2xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2xvOES);"))
  (define ogl:TexCoord3xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3xvOES);"))
  (define ogl:TexCoord4xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4xvOES);"))
  (define ogl:MultiTexCoord1xOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1xOES);"))
  (define ogl:MultiTexCoord2xOES
    (foreign-lambda*
      (function void ("GLenum" integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2xOES);"))
  (define ogl:MultiTexCoord3xOES
    (foreign-lambda*
      (function void ("GLenum" integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3xOES);"))
  (define ogl:MultiTexCoord4xOES
    (foreign-lambda*
      (function void ("GLenum" integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4xOES);"))
  (define ogl:MultiTexCoord1xvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1xvOES);"))
  (define ogl:MultiTexCoord2xvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2xvOES);"))
  (define ogl:MultiTexCoord3xvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3xvOES);"))
  (define ogl:MultiTexCoord4xvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4xvOES);"))
  (define ogl:Color3xOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3xOES);"))
  (define ogl:Color4xOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4xOES);"))
  (define ogl:Color3xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3xvOES);"))
  (define ogl:Color4xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4xvOES);"))
  (define ogl:IndexxOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexxOES);"))
  (define ogl:IndexxvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexxvOES);"))
  (define ogl:RectxOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RectxOES);"))
  (define ogl:RectxvOES
    (foreign-lambda*
      "_ALLEGRO_glRectxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RectxvOES);"))
  (define ogl:DepthRangexOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangexOES);"))
  (define ogl:LoadMatrixxOES
    (foreign-lambda*
      "_ALLEGRO_glLoadMatrixxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadMatrixxOES);"))
  (define ogl:MultMatrixxOES
    (foreign-lambda*
      "_ALLEGRO_glMultMatrixxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultMatrixxOES);"))
  (define ogl:LoadTransposeMatrixxOES
    (foreign-lambda*
      "_ALLEGRO_glLoadTransposeMatrixxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixxOES);"))
  (define ogl:MultTransposeMatrixxOES
    (foreign-lambda*
      "_ALLEGRO_glMultTransposeMatrixxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixxOES);"))
  (define ogl:RotatexOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RotatexOES);"))
  (define ogl:ScalexOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ScalexOES);"))
  (define ogl:TranslatexOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TranslatexOES);"))
  (define ogl:FrustumxOES
    (foreign-lambda*
      (function void (integer integer integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrustumxOES);"))
  (define ogl:OrthoxOES
    (foreign-lambda*
      (function void (integer integer integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->OrthoxOES);"))
  (define ogl:TexGenxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexGenxOES);"))
  (define ogl:TexGenxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexGenxvOES);"))
  (define ogl:GetTexGenxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexGenxvOES);"))
  (define ogl:ClipPlanexOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClipPlanexOES);"))
  (define ogl:GetClipPlanexOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetClipPlanexOES);"))
  (define ogl:RasterPos2xOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos2xOES);"))
  (define ogl:RasterPos3xOES
    (foreign-lambda*
      (function void (integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos3xOES);"))
  (define ogl:RasterPos4xOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos4xOES);"))
  (define ogl:RasterPos2xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos2xvOES);"))
  (define ogl:RasterPos3xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos3xvOES);"))
  (define ogl:RasterPos4xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos4xvOES);"))
  (define ogl:MaterialxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MaterialxOES);"))
  (define ogl:MaterialxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MaterialxvOES);"))
  (define ogl:GetMaterialxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMaterialxOES);"))
  (define ogl:LightxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightxOES);"))
  (define ogl:LightxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightxvOES);"))
  (define ogl:GetLightxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLightxOES);"))
  (define ogl:LightModelxOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightModelxOES);"))
  (define ogl:LightModelxvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightModelxvOES);"))
  (define ogl:PointSizexOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointSizexOES);"))
  (define ogl:LineWidthxOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LineWidthxOES);"))
  (define ogl:PolygonOffsetxOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PolygonOffsetxOES);"))
  (define ogl:PixelStorex
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelStorex);"))
  (define ogl:PixelTransferxOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransferxOES);"))
  (define ogl:PixelMapx
    (foreign-lambda*
      (function void ("GLenum" "GLint" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelMapx);"))
  (define ogl:GetPixelMapxv
    (foreign-lambda*
      (function void ("GLenum" "GLint" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelMapxv);"))
  (define ogl:ConvolutionParameterxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterxOES);"))
  (define ogl:ConvolutionParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterxvOES);"))
  (define ogl:GetConvolutionParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterxvOES);"))
  (define ogl:GetHistogramParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterxvOES);"))
  (define ogl:PixelZoomxOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelZoomxOES);"))
  (define ogl:BitmapxOES
    (foreign-lambda*
      (function
        void
        ("GLsizei"
         "GLsizei"
         integer
         integer
         integer
         integer
         (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BitmapxOES);"))
  (define ogl:TexParameterxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterxOES);"))
  (define ogl:TexParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterxvOES);"))
  (define ogl:GetTexParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterxvOES);"))
  (define ogl:GetTexLevelParameterxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexLevelParameterxvOES);"))
  (define ogl:PrioritizeTexturesxOES
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint") s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrioritizeTexturesxOES);"))
  (define ogl:TexEnvxOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexEnvxOES);"))
  (define ogl:TexEnvxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexEnvxvOES);"))
  (define ogl:GetTexEnvxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexEnvxvOES);"))
  (define ogl:FogxOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogxOES);"))
  (define ogl:FogxvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogxvOES);"))
  (define ogl:SampleCoverageOES
    (foreign-lambda*
      (function void (integer "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverageOES);"))
  (define ogl:AlphaFuncxOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFuncxOES);"))
  (define ogl:BlendColorxOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColorxOES);"))
  (define ogl:ClearColorxOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearColorxOES);"))
  (define ogl:ClearDepthxOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthxOES);"))
  (define ogl:ClearAccumxOES
    (foreign-lambda*
      (function void (integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearAccumxOES);"))
  (define ogl:AccumxOES
    (foreign-lambda*
      (function void ("GLenum" integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AccumxOES);"))
  (define ogl:Map1xOES
    (foreign-lambda*
      (function void ("GLenum" integer integer "GLint" "GLint" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Map1xOES);"))
  (define ogl:Map2xOES
    (foreign-lambda*
      (function
        void
        ("GLenum"
         integer
         integer
         "GLint"
         "GLint"
         integer
         integer
         "GLint"
         "GLint"
         s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Map2xOES);"))
  (define ogl:MapGrid1xOES
    (foreign-lambda*
      (function void ("GLint" integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapGrid1xOES);"))
  (define ogl:MapGrid2xOES
    (foreign-lambda*
      (function void ("GLint" integer integer integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapGrid2xOES);"))
  (define ogl:GetMapxvOES
    (foreign-lambda*
      (function void ("GLenum" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapxvOES);"))
  (define ogl:EvalCoord1xOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord1xOES);"))
  (define ogl:EvalCoord2xOES
    (foreign-lambda*
      (function void (integer integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord2xOES);"))
  (define ogl:EvalCoord1xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord1xvOES);"))
  (define ogl:EvalCoord2xvOES
    (foreign-lambda*
      (function void (s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord2xvOES);"))
  (define ogl:FeedbackBufferxOES
    (foreign-lambda*
      (function void ("GLsizei" "GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FeedbackBufferxOES);"))
  (define ogl:PassThroughxOES
    (foreign-lambda*
      (function void (integer))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PassThroughxOES);"))
  (define ogl:GetFixedvOES
    (foreign-lambda*
      (function void ("GLenum" s32vector))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFixedvOES);"))
  (define ogl:DepthRangefOES
    (foreign-lambda*
      (function void ("GLclampf" "GLclampf"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangefOES);"))
  (define ogl:FrustumfOES
    (foreign-lambda*
      (function
        void
        ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrustumfOES);"))
  (define ogl:OrthofOES
    (foreign-lambda*
      (function
        void
        ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->OrthofOES);"))
  (define ogl:ClipPlanefOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClipPlanefOES);"))
  (define ogl:GetClipPlanefOES
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetClipPlanefOES);"))
  (define ogl:ClearDepthfOES
    (foreign-lambda*
      (function void ("GLclampd"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthfOES);"))
  (define ogl:QueryMatrixxOES
    (foreign-lambda*
      "_ALLEGRO_glQueryMatrixxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->QueryMatrixxOES);"))
  (define ogl:DepthBoundsEXT
    (foreign-lambda*
      (function void ("GLclampd" "GLclampd"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthBoundsEXT);"))
  (define ogl:BlendEquationSeparateEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparateEXT);"))
  (define ogl:IsRenderbufferEXT
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsRenderbufferEXT);"))
  (define ogl:BindRenderbufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindRenderbufferEXT);"))
  (define ogl:DeleteRenderbuffersEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteRenderbuffersEXT);"))
  (define ogl:GenRenderbuffersEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenRenderbuffersEXT);"))
  (define ogl:RenderbufferStorageEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageEXT);"))
  (define ogl:GetRenderbufferParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetRenderbufferParameterivEXT);"))
  (define ogl:IsFramebufferEXT
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFramebufferEXT);"))
  (define ogl:BindFramebufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFramebufferEXT);"))
  (define ogl:DeleteFramebuffersEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFramebuffersEXT);"))
  (define ogl:GenFramebuffersEXT
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFramebuffersEXT);"))
  (define ogl:CheckFramebufferStatusEXT
    (foreign-lambda*
      (function "GLenum" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckFramebufferStatusEXT);"))
  (define ogl:FramebufferTexture1DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture1DEXT);"))
  (define ogl:FramebufferTexture2DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture2DEXT);"))
  (define ogl:FramebufferTexture3DEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture3DEXT);"))
  (define ogl:FramebufferRenderbufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferRenderbufferEXT);"))
  (define ogl:GetFramebufferAttachmentParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferAttachmentParameterivEXT);"))
  (define ogl:GenerateMipmapEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMipmapEXT);"))
  (define ogl:StringMarkerGREMEDY
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StringMarkerGREMEDY);"))
  (define ogl:StencilClearTagEXT
    (foreign-lambda*
      (function void ("GLsizei" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilClearTagEXT);"))
  (define ogl:BlitFramebufferEXT
    (foreign-lambda*
      (function
        void
        ("GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLbitfield"
         "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlitFramebufferEXT);"))
  (define ogl:RenderbufferStorageMultisampleEXT
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultisampleEXT);"))
  (define ogl:GetQueryObjecti64vEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjecti64vEXT);"))
  (define ogl:GetQueryObjectui64vEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectui64vEXT);"))
  (define ogl:ProgramEnvParameters4fvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameters4fvEXT);"))
  (define ogl:ProgramLocalParameters4fvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameters4fvEXT);"))
  (define ogl:BufferParameteriAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferParameteriAPPLE);"))
  (define ogl:FlushMappedBufferRangeAPPLE
    (foreign-lambda*
      (function void ("GLenum" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushMappedBufferRangeAPPLE);"))
  (define ogl:UniformBufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformBufferEXT);"))
  (define ogl:GetUniformBufferSizeEXT
    (foreign-lambda*
      (function "GLint" ("GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformBufferSizeEXT);"))
  (define ogl:GetUniformOffsetEXT
    (foreign-lambda*
      (function "ptrdiff_t" ("GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformOffsetEXT);"))
  (define ogl:ColorMaskIndexedEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLboolean" "GLboolean" "GLboolean" "GLboolean"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorMaskIndexedEXT);"))
  (define ogl:GetBooleanIndexedvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLboolean")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBooleanIndexedvEXT);"))
  (define ogl:GetIntegerIndexedvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerIndexedvEXT);"))
  (define ogl:EnableIndexedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableIndexedEXT);"))
  (define ogl:DisableIndexedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableIndexedEXT);"))
  (define ogl:IsEnabledIndexedEXT
    (foreign-lambda*
      (function "GLboolean" ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsEnabledIndexedEXT);"))
  (define ogl:DrawArraysInstancedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstancedEXT);"))
  (define ogl:DrawElementsInstancedEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedEXT);"))
  (define ogl:ProgramParameteriEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteriEXT);"))
  (define ogl:FramebufferTextureEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureEXT);"))
  (define ogl:FramebufferTextureFaceEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureFaceEXT);"))
  (define ogl:VertexAttribI1iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1iEXT);"))
  (define ogl:VertexAttribI2iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2iEXT);"))
  (define ogl:VertexAttribI3iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3iEXT);"))
  (define ogl:VertexAttribI4iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4iEXT);"))
  (define ogl:VertexAttribI1uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uiEXT);"))
  (define ogl:VertexAttribI2uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uiEXT);"))
  (define ogl:VertexAttribI3uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uiEXT);"))
  (define ogl:VertexAttribI4uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uiEXT);"))
  (define ogl:VertexAttribI1ivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1ivEXT);"))
  (define ogl:VertexAttribI2ivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2ivEXT);"))
  (define ogl:VertexAttribI3ivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3ivEXT);"))
  (define ogl:VertexAttribI4ivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ivEXT);"))
  (define ogl:VertexAttribI1uivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uivEXT);"))
  (define ogl:VertexAttribI2uivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uivEXT);"))
  (define ogl:VertexAttribI3uivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uivEXT);"))
  (define ogl:VertexAttribI4uivEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uivEXT);"))
  (define ogl:VertexAttribI4bvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLbyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4bvEXT);"))
  (define ogl:VertexAttribI4svEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLshort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4svEXT);"))
  (define ogl:VertexAttribI4ubvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLubyte")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ubvEXT);"))
  (define ogl:VertexAttribI4usvEXT
    (foreign-lambda*
      (function void ("GLuint" (c-pointer "GLushort")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4usvEXT);"))
  (define ogl:VertexAttribIPointerEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIPointerEXT);"))
  (define ogl:GetVertexAttribIivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIivEXT);"))
  (define ogl:GetVertexAttribIuivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIuivEXT);"))
  (define ogl:Uniform1uiEXT
    (foreign-lambda*
      (function void ("GLint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uiEXT);"))
  (define ogl:Uniform2uiEXT
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uiEXT);"))
  (define ogl:Uniform3uiEXT
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uiEXT);"))
  (define ogl:Uniform4uiEXT
    (foreign-lambda*
      (function void ("GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uiEXT);"))
  (define ogl:Uniform1uivEXT
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uivEXT);"))
  (define ogl:Uniform2uivEXT
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uivEXT);"))
  (define ogl:Uniform3uivEXT
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uivEXT);"))
  (define ogl:Uniform4uivEXT
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uivEXT);"))
  (define ogl:GetUniformuivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformuivEXT);"))
  (define ogl:BindFragDataLocationEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocationEXT);"))
  (define ogl:GetFragDataLocationEXT
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataLocationEXT);"))
  (define ogl:FramebufferTextureLayerEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayerEXT);"))
  (define ogl:TexBufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferEXT);"))
  (define ogl:DepthRangedNV
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangedNV);"))
  (define ogl:ClearDepthdNV
    (foreign-lambda*
      (function void ("GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthdNV);"))
  (define ogl:DepthBoundsdNV
    (foreign-lambda*
      (function void ("GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthBoundsdNV);"))
  (define ogl:RenderbufferStorageMultsampleCoverageNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLsizei" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultsampleCoverageNV);"))
  (define ogl:ProgramVertexLimitNV
    (foreign-lambda*
      (function void ("GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramVertexLimitNV);"))
  (define ogl:ProgramLocalParameterI4iNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4iNV);"))
  (define ogl:ProgramLocalParameterI4ivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4ivNV);"))
  (define ogl:ProgramLocalParametersI4ivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParametersI4ivNV);"))
  (define ogl:ProgramLocalParameterI4uiNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4uiNV);"))
  (define ogl:ProgramLocalParameterI4uivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4uivNV);"))
  (define ogl:ProgramLocalParametersI4uivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParametersI4uivNV);"))
  (define ogl:ProgramEnvParameterI4iNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4iNV);"))
  (define ogl:ProgramEnvParameterI4ivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4ivNV);"))
  (define ogl:ProgramEnvParametersI4ivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParametersI4ivNV);"))
  (define ogl:ProgramEnvParameterI4uiNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4uiNV);"))
  (define ogl:ProgramEnvParameterI4uivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4uivNV);"))
  (define ogl:ProgramEnvParametersI4uivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParametersI4uivNV);"))
  (define ogl:GetProgramLocalParameterIivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterIivNV);"))
  (define ogl:GetProgramLocalParameterIuivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterIuivNV);"))
  (define ogl:GetProgramEnvParameterIivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterIivNV);"))
  (define ogl:GetProgramEnvParameterIuivNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterIuivNV);"))
  (define ogl:ProgramBufferParametersfvNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersfvNV);"))
  (define ogl:ProgramBufferParametersIivNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersIivNV);"))
  (define ogl:ProgramBufferParametersIuivNV
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLuint" "GLuint" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersIuivNV);"))
  (define ogl:BindBufferRangeNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRangeNV);"))
  (define ogl:BindBufferOffsetNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferOffsetNV);"))
  (define ogl:BindBufferBaseNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBaseNV);"))
  (define ogl:TransformFeedbackAttribsNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLint") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackAttribsNV);"))
  (define ogl:TransformFeedbackVaryingsNV
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryingsNV);"))
  (define ogl:BeginTransformFeedbackNV
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedbackNV);"))
  (define ogl:EndTransformFeedbackNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedbackNV);"))
  (define ogl:GetVaryingLocationNV
    (foreign-lambda*
      (function "GLint" ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVaryingLocationNV);"))
  (define ogl:GetActiveVaryingNV
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLsizei"
         (c-pointer "GLsizei")
         (c-pointer "GLsizei")
         (c-pointer "GLenum")
         c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveVaryingNV);"))
  (define ogl:ActiveVaryingNV
    (foreign-lambda*
      (function void ("GLuint" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveVaryingNV);"))
  (define ogl:GetTransformFeedbackVaryingNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVaryingNV);"))
  (define ogl:FrameTerminatorGREMEDY
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrameTerminatorGREMEDY);"))
  (define ogl:BeginConditionalRenderNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginConditionalRenderNV);"))
  (define ogl:EndConditionalRenderNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndConditionalRenderNV);"))
  (define ogl:BeginTransformFeedbackEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedbackEXT);"))
  (define ogl:EndTransformFeedbackEXT
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedbackEXT);"))
  (define ogl:BindBufferRangeEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRangeEXT);"))
  (define ogl:BindBufferOffsetEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferOffsetEXT);"))
  (define ogl:BindBufferBaseEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBaseEXT);"))
  (define ogl:TransformFeedbackVaryingsEXT
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryingsEXT);"))
  (define ogl:GetTransformFeedbackVaryingEXT
    (foreign-lambda*
      (function void ("GLuint" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVaryingEXT);"))
  (define ogl:ClientAttribDefaultEXT
    (foreign-lambda*
      (function void ("GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientAttribDefaultEXT);"))
  (define ogl:PushClientAttribDefaultEXT
    (foreign-lambda*
      (function void ("GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PushClientAttribDefaultEXT);"))
  (define ogl:MatrixLoadfEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadfEXT);"))
  (define ogl:MatrixLoaddEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoaddEXT);"))
  (define ogl:MatrixMultfEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultfEXT);"))
  (define ogl:MatrixMultdEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultdEXT);"))
  (define ogl:MatrixLoadIdentityEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadIdentityEXT);"))
  (define ogl:MatrixRotatefEXT
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixRotatefEXT);"))
  (define ogl:MatrixRotatedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixRotatedEXT);"))
  (define ogl:MatrixScalefEXT
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixScalefEXT);"))
  (define ogl:MatrixScaledEXT
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixScaledEXT);"))
  (define ogl:MatrixTranslatefEXT
    (foreign-lambda*
      (function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixTranslatefEXT);"))
  (define ogl:MatrixTranslatedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixTranslatedEXT);"))
  (define ogl:MatrixFrustumEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixFrustumEXT);"))
  (define ogl:MatrixOrthoEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixOrthoEXT);"))
  (define ogl:MatrixPopEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixPopEXT);"))
  (define ogl:MatrixPushEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixPushEXT);"))
  (define ogl:MatrixLoadTransposefEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadTransposefEXT);"))
  (define ogl:MatrixLoadTransposedEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadTransposedEXT);"))
  (define ogl:MatrixMultTransposefEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultTransposefEXT);"))
  (define ogl:MatrixMultTransposedEXT
    (foreign-lambda*
      (function void ("GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultTransposedEXT);"))
  (define ogl:TextureParameterfEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterfEXT);"))
  (define ogl:TextureParameterfvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterfvEXT);"))
  (define ogl:TextureParameteriEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameteriEXT);"))
  (define ogl:TextureParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterivEXT);"))
  (define ogl:TextureImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage1DEXT);"))
  (define ogl:TextureImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage2DEXT);"))
  (define ogl:TextureSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage1DEXT);"))
  (define ogl:TextureSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage2DEXT);"))
  (define ogl:CopyTextureImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLint" "GLenum" "GLint" "GLint" "GLsizei" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureImage1DEXT);"))
  (define ogl:CopyTextureImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureImage2DEXT);"))
  (define ogl:CopyTextureSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage1DEXT);"))
  (define ogl:CopyTextureSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage2DEXT);"))
  (define ogl:GetTextureImageEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLint" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureImageEXT);"))
  (define ogl:GetTextureParameterfvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterfvEXT);"))
  (define ogl:GetTextureParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterivEXT);"))
  (define ogl:GetTextureLevelParameterfvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureLevelParameterfvEXT);"))
  (define ogl:GetTextureLevelParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureLevelParameterivEXT);"))
  (define ogl:TextureImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage3DEXT);"))
  (define ogl:TextureSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage3DEXT);"))
  (define ogl:CopyTextureSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage3DEXT);"))
  (define ogl:MultiTexParameterfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterfEXT);"))
  (define ogl:MultiTexParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterfvEXT);"))
  (define ogl:MultiTexParameteriEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameteriEXT);"))
  (define ogl:MultiTexParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterivEXT);"))
  (define ogl:MultiTexImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage1DEXT);"))
  (define ogl:MultiTexImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage2DEXT);"))
  (define ogl:MultiTexSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage1DEXT);"))
  (define ogl:MultiTexSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage2DEXT);"))
  (define ogl:CopyMultiTexImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLint" "GLenum" "GLint" "GLint" "GLsizei" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexImage1DEXT);"))
  (define ogl:CopyMultiTexImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexImage2DEXT);"))
  (define ogl:CopyMultiTexSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage1DEXT);"))
  (define ogl:CopyMultiTexSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage2DEXT);"))
  (define ogl:GetMultiTexImageEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLint" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexImageEXT);"))
  (define ogl:GetMultiTexParameterfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterfvEXT);"))
  (define ogl:GetMultiTexParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterivEXT);"))
  (define ogl:GetMultiTexLevelParameterfvEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLenum" "GLint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexLevelParameterfvEXT);"))
  (define ogl:GetMultiTexLevelParameterivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexLevelParameterivEXT);"))
  (define ogl:MultiTexImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage3DEXT);"))
  (define ogl:MultiTexSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLenum"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage3DEXT);"))
  (define ogl:CopyMultiTexSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage3DEXT);"))
  (define ogl:BindMultiTextureEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindMultiTextureEXT);"))
  (define ogl:EnableClientStateIndexedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableClientStateIndexedEXT);"))
  (define ogl:DisableClientStateIndexedEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableClientStateIndexedEXT);"))
  (define ogl:MultiTexCoordPointerEXT
    (foreign-lambda*
      (function
        void
        ("GLenum" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordPointerEXT);"))
  (define ogl:MultiTexEnvfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvfEXT);"))
  (define ogl:MultiTexEnvfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvfvEXT);"))
  (define ogl:MultiTexEnviEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnviEXT);"))
  (define ogl:MultiTexEnvivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvivEXT);"))
  (define ogl:MultiTexGendEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGendEXT);"))
  (define ogl:MultiTexGendvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGendvEXT);"))
  (define ogl:MultiTexGenfEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenfEXT);"))
  (define ogl:MultiTexGenfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenfvEXT);"))
  (define ogl:MultiTexGeniEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGeniEXT);"))
  (define ogl:MultiTexGenivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenivEXT);"))
  (define ogl:GetMultiTexEnvfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexEnvfvEXT);"))
  (define ogl:GetMultiTexEnvivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexEnvivEXT);"))
  (define ogl:GetMultiTexGendvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGendvEXT);"))
  (define ogl:GetMultiTexGenfvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGenfvEXT);"))
  (define ogl:GetMultiTexGenivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGenivEXT);"))
  (define ogl:GetFloatIndexedvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFloatIndexedvEXT);"))
  (define ogl:GetDoubleIndexedvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDoubleIndexedvEXT);"))
  (define ogl:GetPointerIndexedvEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPointerIndexedvEXT);"))
  (define ogl:CompressedTextureImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage3DEXT);"))
  (define ogl:CompressedTextureImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage2DEXT);"))
  (define ogl:CompressedTextureImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage1DEXT);"))
  (define ogl:CompressedTextureSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage3DEXT);"))
  (define ogl:CompressedTextureSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage2DEXT);"))
  (define ogl:CompressedTextureSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage1DEXT);"))
  (define ogl:GetCompressedTextureImageEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLint" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTextureImageEXT);"))
  (define ogl:CompressedMultiTexImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage3DEXT);"))
  (define ogl:CompressedMultiTexImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage2DEXT);"))
  (define ogl:CompressedMultiTexImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLenum"
         "GLsizei"
         "GLint"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage1DEXT);"))
  (define ogl:CompressedMultiTexSubImage3DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage3DEXT);"))
  (define ogl:CompressedMultiTexSubImage2DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLint"
         "GLsizei"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage2DEXT);"))
  (define ogl:CompressedMultiTexSubImage1DEXT
    (foreign-lambda*
      (function
        void
        ("GLenum"
         "GLenum"
         "GLint"
         "GLint"
         "GLsizei"
         "GLenum"
         "GLsizei"
         (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage1DEXT);"))
  (define ogl:GetCompressedMultiTexImageEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLint" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedMultiTexImageEXT);"))
  (define ogl:NamedProgramStringEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramStringEXT);"))
  (define ogl:NamedProgramLocalParameter4dEXT
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLenum"
         "GLuint"
         "GLdouble"
         "GLdouble"
         "GLdouble"
         "GLdouble"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4dEXT);"))
  (define ogl:NamedProgramLocalParameter4dvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4dvEXT);"))
  (define ogl:NamedProgramLocalParameter4fEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4fEXT);"))
  (define ogl:NamedProgramLocalParameter4fvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4fvEXT);"))
  (define ogl:GetNamedProgramLocalParameterdvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterdvEXT);"))
  (define ogl:GetNamedProgramLocalParameterfvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterfvEXT);"))
  (define ogl:GetNamedProgramivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramivEXT);"))
  (define ogl:GetNamedProgramStringEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramStringEXT);"))
  (define ogl:NamedProgramLocalParameters4fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameters4fvEXT);"))
  (define ogl:NamedProgramLocalParameterI4iEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4iEXT);"))
  (define ogl:NamedProgramLocalParameterI4ivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4ivEXT);"))
  (define ogl:NamedProgramLocalParametersI4ivEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParametersI4ivEXT);"))
  (define ogl:NamedProgramLocalParameterI4uiEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4uiEXT);"))
  (define ogl:NamedProgramLocalParameterI4uivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4uivEXT);"))
  (define ogl:NamedProgramLocalParametersI4uivEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParametersI4uivEXT);"))
  (define ogl:GetNamedProgramLocalParameterIivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterIivEXT);"))
  (define ogl:GetNamedProgramLocalParameterIuivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterIuivEXT);"))
  (define ogl:TextureParameterIivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterIivEXT);"))
  (define ogl:TextureParameterIuivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterIuivEXT);"))
  (define ogl:GetTextureParameterIivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterIivEXT);"))
  (define ogl:GetTextureParameterIuivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterIuivEXT);"))
  (define ogl:MultiTexParameterIivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterIivEXT);"))
  (define ogl:MultiTexParameterIuivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterIuivEXT);"))
  (define ogl:GetMultiTexParameterIivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterIivEXT);"))
  (define ogl:GetMultiTexParameterIuivEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterIuivEXT);"))
  (define ogl:ProgramUniform1fEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1fEXT);"))
  (define ogl:ProgramUniform2fEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2fEXT);"))
  (define ogl:ProgramUniform3fEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3fEXT);"))
  (define ogl:ProgramUniform4fEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4fEXT);"))
  (define ogl:ProgramUniform1iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1iEXT);"))
  (define ogl:ProgramUniform2iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2iEXT);"))
  (define ogl:ProgramUniform3iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3iEXT);"))
  (define ogl:ProgramUniform4iEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLint" "GLint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4iEXT);"))
  (define ogl:ProgramUniform1fvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1fvEXT);"))
  (define ogl:ProgramUniform2fvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2fvEXT);"))
  (define ogl:ProgramUniform3fvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3fvEXT);"))
  (define ogl:ProgramUniform4fvEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4fvEXT);"))
  (define ogl:ProgramUniform1ivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1ivEXT);"))
  (define ogl:ProgramUniform2ivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2ivEXT);"))
  (define ogl:ProgramUniform3ivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3ivEXT);"))
  (define ogl:ProgramUniform4ivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4ivEXT);"))
  (define ogl:ProgramUniformMatrix2fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2fvEXT);"))
  (define ogl:ProgramUniformMatrix3fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3fvEXT);"))
  (define ogl:ProgramUniformMatrix4fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4fvEXT);"))
  (define ogl:ProgramUniformMatrix2x3fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x3fvEXT);"))
  (define ogl:ProgramUniformMatrix3x2fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x2fvEXT);"))
  (define ogl:ProgramUniformMatrix2x4fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x4fvEXT);"))
  (define ogl:ProgramUniformMatrix4x2fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x2fvEXT);"))
  (define ogl:ProgramUniformMatrix3x4fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x4fvEXT);"))
  (define ogl:ProgramUniformMatrix4x3fvEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x3fvEXT);"))
  (define ogl:ProgramUniform1uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1uiEXT);"))
  (define ogl:ProgramUniform2uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2uiEXT);"))
  (define ogl:ProgramUniform3uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3uiEXT);"))
  (define ogl:ProgramUniform4uiEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4uiEXT);"))
  (define ogl:ProgramUniform1uivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1uivEXT);"))
  (define ogl:ProgramUniform2uivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2uivEXT);"))
  (define ogl:ProgramUniform3uivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3uivEXT);"))
  (define ogl:ProgramUniform4uivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4uivEXT);"))
  (define ogl:NamedBufferDataEXT
    (foreign-lambda*
      (function void ("GLuint" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedBufferDataEXT);"))
  (define ogl:NamedBufferSubDataEXT
    (foreign-lambda*
      (function void ("GLuint" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedBufferSubDataEXT);"))
  (define ogl:MapNamedBufferEXT
    (foreign-lambda*
      (function (c-pointer "GLvoid") ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapNamedBufferEXT);"))
  (define ogl:UnmapNamedBufferEXT
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapNamedBufferEXT);"))
  (define ogl:GetNamedBufferParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferParameterivEXT);"))
  (define ogl:GetNamedBufferPointervEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferPointervEXT);"))
  (define ogl:GetNamedBufferSubDataEXT
    (foreign-lambda*
      (function void ("GLuint" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferSubDataEXT);"))
  (define ogl:TextureBufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureBufferEXT);"))
  (define ogl:MultiTexBufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexBufferEXT);"))
  (define ogl:NamedRenderbufferStorageEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageEXT);"))
  (define ogl:GetNamedRenderbufferParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedRenderbufferParameterivEXT);"))
  (define ogl:CheckNamedFramebufferStatusEXT
    (foreign-lambda*
      (function "GLenum" ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckNamedFramebufferStatusEXT);"))
  (define ogl:NamedFramebufferTexture1DEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture1DEXT);"))
  (define ogl:NamedFramebufferTexture2DEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture2DEXT);"))
  (define ogl:NamedFramebufferTexture3DEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture3DEXT);"))
  (define ogl:NamedFramebufferRenderbufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferRenderbufferEXT);"))
  (define ogl:GetNamedFramebufferAttachmentParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedFramebufferAttachmentParameterivEXT);"))
  (define ogl:GenerateTextureMipmapEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateTextureMipmapEXT);"))
  (define ogl:GenerateMultiTexMipmapEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMultiTexMipmapEXT);"))
  (define ogl:FramebufferDrawBufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferDrawBufferEXT);"))
  (define ogl:FramebufferDrawBuffersEXT
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLenum")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferDrawBuffersEXT);"))
  (define ogl:FramebufferReadBufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferReadBufferEXT);"))
  (define ogl:GetFramebufferParameterivEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferParameterivEXT);"))
  (define ogl:NamedRenderbufferStorageMultisampleEXT
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageMultisampleEXT);"))
  (define ogl:NamedRenderbufferStorageMultisampleCoverageEXT
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLsizei" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageMultisampleCoverageEXT);"))
  (define ogl:NamedFramebufferTextureEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureEXT);"))
  (define ogl:NamedFramebufferTextureLayerEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" "GLint" "GLint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureLayerEXT);"))
  (define ogl:NamedFramebufferTextureFaceEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint" "GLint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureFaceEXT);"))
  (define ogl:TextureRenderbufferEXT
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureRenderbufferEXT);"))
  (define ogl:MultiTexRenderbufferEXT
    (foreign-lambda*
      (function void ("GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexRenderbufferEXT);"))
  (define ogl:GetMultisamplefvNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultisamplefvNV);"))
  (define ogl:SampleMaskIndexedNV
    (foreign-lambda*
      (function void ("GLuint" "GLbitfield"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskIndexedNV);"))
  (define ogl:TexRenderbufferNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexRenderbufferNV);"))
  (define ogl:BindTransformFeedbackNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTransformFeedbackNV);"))
  (define ogl:DeleteTransformFeedbacksNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTransformFeedbacksNV);"))
  (define ogl:GenTransformFeedbacksNV
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTransformFeedbacksNV);"))
  (define ogl:IsTransformFeedbackNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTransformFeedbackNV);"))
  (define ogl:PauseTransformFeedbackNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PauseTransformFeedbackNV);"))
  (define ogl:ResumeTransformFeedbackNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResumeTransformFeedbackNV);"))
  (define ogl:DrawTransformFeedbackNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedbackNV);"))
  (define ogl:GetPerfMonitorGroupsAMD
    (foreign-lambda*
      (function void ((c-pointer "GLint") "GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorGroupsAMD);"))
  (define ogl:GetPerfMonitorCountersAMD
    (foreign-lambda*
      (function
        void
        ("GLuint"
         (c-pointer "GLint")
         (c-pointer "GLint")
         "GLsizei"
         (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCountersAMD);"))
  (define ogl:GetPerfMonitorGroupStringAMD
    (foreign-lambda*
      (function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorGroupStringAMD);"))
  (define ogl:GetPerfMonitorCounterStringAMD
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterStringAMD);"))
  (define ogl:GetPerfMonitorCounterInfoAMD
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer void)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterInfoAMD);"))
  (define ogl:GenPerfMonitorsAMD
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenPerfMonitorsAMD);"))
  (define ogl:DeletePerfMonitorsAMD
    (foreign-lambda*
      (function void ("GLsizei" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeletePerfMonitorsAMD);"))
  (define ogl:SelectPerfMonitorCountersAMD
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLboolean" "GLuint" "GLint" (c-pointer "GLuint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SelectPerfMonitorCountersAMD);"))
  (define ogl:BeginPerfMonitorAMD
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginPerfMonitorAMD);"))
  (define ogl:EndPerfMonitorAMD
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndPerfMonitorAMD);"))
  (define ogl:GetPerfMonitorCounterDataAMD
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLenum" "GLsizei" (c-pointer "GLuint") (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterDataAMD);"))
  (define ogl:TessellationFactorAMD
    (foreign-lambda*
      (function void ("GLfloat"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TessellationFactorAMD);"))
  (define ogl:TessellationModeAMD
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TessellationModeAMD);"))
  (define ogl:ProvokingVertexEXT
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProvokingVertexEXT);"))
  (define ogl:BlendFuncIndexedAMD
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncIndexedAMD);"))
  (define ogl:BlendFuncSeparateIndexedAMD
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateIndexedAMD);"))
  (define ogl:BlendEquationIndexedAMD
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationIndexedAMD);"))
  (define ogl:BlendEquationSeparateIndexedAMD
    (foreign-lambda*
      (function void ("GLuint" "GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparateIndexedAMD);"))
  (define ogl:TextureRangeAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureRangeAPPLE);"))
  (define ogl:GetTexParameterPointervAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterPointervAPPLE);"))
  (define ogl:EnableVertexAttribAPPLE
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribAPPLE);"))
  (define ogl:DisableVertexAttribAPPLE
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribAPPLE);"))
  (define ogl:IsVertexAttribEnabledAPPLE
    (foreign-lambda*
      (function "GLboolean" ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexAttribEnabledAPPLE);"))
  (define ogl:MapVertexAttrib1dAPPLE
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib1dAPPLE);"))
  (define ogl:MapVertexAttrib1fAPPLE
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib1fAPPLE);"))
  (define ogl:MapVertexAttrib2dAPPLE
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         "GLdouble"
         "GLdouble"
         "GLint"
         "GLint"
         (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib2dAPPLE);"))
  (define ogl:MapVertexAttrib2fAPPLE
    (foreign-lambda*
      (function
        void
        ("GLuint"
         "GLuint"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         "GLfloat"
         "GLfloat"
         "GLint"
         "GLint"
         (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib2fAPPLE);"))
  (define ogl:ObjectPurgeableAPPLE
    (foreign-lambda*
      (function "GLenum" ("GLenum" "GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectPurgeableAPPLE);"))
  (define ogl:ObjectUnpurgeableAPPLE
    (foreign-lambda*
      (function "GLenum" ("GLenum" "GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectUnpurgeableAPPLE);"))
  (define ogl:GetObjectParameterivAPPLE
    (foreign-lambda*
      (function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterivAPPLE);"))
  (define ogl:BeginVideoCaptureNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginVideoCaptureNV);"))
  (define ogl:BindVideoCaptureStreamBufferNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVideoCaptureStreamBufferNV);"))
  (define ogl:BindVideoCaptureStreamTextureNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVideoCaptureStreamTextureNV);"))
  (define ogl:EndVideoCaptureNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndVideoCaptureNV);"))
  (define ogl:GetVideoCaptureivNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureivNV);"))
  (define ogl:GetVideoCaptureStreamivNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamivNV);"))
  (define ogl:GetVideoCaptureStreamfvNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamfvNV);"))
  (define ogl:GetVideoCaptureStreamdvNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamdvNV);"))
  (define ogl:VideoCaptureNV
    (foreign-lambda*
      (function
        "GLenum"
        ("GLuint" (c-pointer "GLuint") (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureNV);"))
  (define ogl:VideoCaptureStreamParameterivNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterivNV);"))
  (define ogl:VideoCaptureStreamParameterfvNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLfloat")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterfvNV);"))
  (define ogl:VideoCaptureStreamParameterdvNV
    (foreign-lambda*
      (function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLdouble")))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterdvNV);"))
  (define ogl:UseShaderProgramEXT
    (foreign-lambda*
      (function void ("GLenum" "GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseShaderProgramEXT);"))
  (define ogl:ActiveProgramEXT
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveProgramEXT);"))
  (define ogl:CreateShaderProgramEXT
    (foreign-lambda*
      (function "GLuint" ("GLenum" c-string))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShaderProgramEXT);"))
  (define ogl:MakeBufferResidentNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeBufferResidentNV);"))
  (define ogl:MakeBufferNonResidentNV
    (foreign-lambda*
      (function void ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeBufferNonResidentNV);"))
  (define ogl:IsBufferResidentNV
    (foreign-lambda*
      (function "GLboolean" ("GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBufferResidentNV);"))
  (define ogl:MakeNamedBufferResidentNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeNamedBufferResidentNV);"))
  (define ogl:MakeNamedBufferNonResidentNV
    (foreign-lambda*
      (function void ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeNamedBufferNonResidentNV);"))
  (define ogl:IsNamedBufferResidentNV
    (foreign-lambda*
      (function "GLboolean" ("GLuint"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsNamedBufferResidentNV);"))
  (define ogl:GetBufferParameterui64vNV
    (foreign-lambda*
      (function void ("GLenum" "GLenum" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameterui64vNV);"))
  (define ogl:GetNamedBufferParameterui64vNV
    (foreign-lambda*
      (function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferParameterui64vNV);"))
  (define ogl:GetIntegerui64vNV
    (foreign-lambda*
      (function void ("GLenum" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerui64vNV);"))
  (define ogl:Uniformui64NV
    (foreign-lambda*
      (function void ("GLint" unsigned-integer64))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniformui64NV);"))
  (define ogl:Uniformui64vNV
    (foreign-lambda*
      (function void ("GLint" "GLsizei" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniformui64vNV);"))
  (define ogl:GetUniformui64vNV
    (foreign-lambda*
      (function void ("GLuint" "GLint" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformui64vNV);"))
  (define ogl:ProgramUniformui64NV
    (foreign-lambda*
      (function void ("GLuint" "GLint" unsigned-integer64))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformui64NV);"))
  (define ogl:ProgramUniformui64vNV
    (foreign-lambda*
      (function
        void
        ("GLuint" "GLint" "GLsizei" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformui64vNV);"))
  (define ogl:BufferAddressRangeNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" unsigned-integer64 "ptrdiff_t"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferAddressRangeNV);"))
  (define ogl:VertexFormatNV
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexFormatNV);"))
  (define ogl:NormalFormatNV
    (foreign-lambda*
      (function void ("GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalFormatNV);"))
  (define ogl:ColorFormatNV
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFormatNV);"))
  (define ogl:IndexFormatNV
    (foreign-lambda*
      (function void ("GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexFormatNV);"))
  (define ogl:TexCoordFormatNV
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordFormatNV);"))
  (define ogl:EdgeFlagFormatNV
    (foreign-lambda*
      (function void ("GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EdgeFlagFormatNV);"))
  (define ogl:SecondaryColorFormatNV
    (foreign-lambda*
      (function void ("GLint" "GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorFormatNV);"))
  (define ogl:FogCoordFormatNV
    (foreign-lambda*
      (function void ("GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordFormatNV);"))
  (define ogl:VertexAttribFormatNV
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribFormatNV);"))
  (define ogl:VertexAttribIFormatNV
    (foreign-lambda*
      (function void ("GLuint" "GLint" "GLenum" "GLsizei"))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIFormatNV);"))
  (define ogl:GetIntegerui64i_vNV
    (foreign-lambda*
      (function void ("GLenum" "GLuint" (c-pointer unsigned-integer64)))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerui64i_vNV);"))
  (define ogl:TextureBarrierNV
    (foreign-lambda*
      (function void (void))
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureBarrierNV);"))
  (define make-ALLEGRO_OGL_EXT_API
    (foreign-lambda*
      (c-pointer (struct "ALLEGRO_OGL_EXT_API"))
      (((function void ("GLclampf" "GLclampf" "GLclampf" "GLclampf"))
        BlendColor)
       ((function void ("GLenum")) BlendEquation)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLsizei" "GLenum" (c-pointer "GLvoid")))
        DrawRangeElements)
       ((function
          void
          ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
        ColorTable)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        ColorTableParameterfv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        ColorTableParameteriv)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
        CopyColorTable)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetColorTable)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetColorTableParameterfv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetColorTableParameteriv)
       ((function
          void
          ("GLenum"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        ColorSubTable)
       ((function void ("GLenum" "GLsizei" "GLint" "GLint" "GLsizei"))
        CopyColorSubTable)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexImage3D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexSubImage3D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyTexSubImage3D)
       ((function
          void
          ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
        ConvolutionFilter1D)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        ConvolutionFilter2D)
       ((function void ("GLenum" "GLenum" "GLfloat")) ConvolutionParameterf)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        ConvolutionParameterfv)
       ((function void ("GLenum" "GLenum" "GLint")) ConvolutionParameteri)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        ConvolutionParameteriv)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
        CopyConvolutionFilter1D)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei" "GLsizei"))
        CopyConvolutionFilter2D)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetConvolutionFilter)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetConvolutionParameterfv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetConvolutionParameteriv)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")))
        GetSeparableFilter)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")))
        SeparableFilter2D)
       ((function
          void
          ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetHistogram)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetHistogramParameterfv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetHistogramParameteriv)
       ((function
          void
          ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetMinmax)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMinmaxParameterfv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetMinmaxParameteriv)
       ((function void ("GLenum" "GLsizei" "GLenum" "GLboolean")) Histogram)
       ((function void ("GLenum" "GLenum" "GLboolean")) Minmax)
       ((function void ("GLenum")) ResetHistogram)
       ((function void ("GLenum")) ResetMinmax)
       ((function void ("GLenum")) ActiveTexture)
       ((function void ("GLenum")) ClientActiveTexture)
       ((function void ("GLenum" "GLdouble")) MultiTexCoord1d)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord1dv)
       ((function void ("GLenum" "GLfloat")) MultiTexCoord1f)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord1fv)
       ((function void ("GLenum" "GLint")) MultiTexCoord1i)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord1iv)
       ((function void ("GLenum" "GLshort")) MultiTexCoord1s)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord1sv)
       ((function void ("GLenum" "GLdouble" "GLdouble")) MultiTexCoord2d)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord2dv)
       ((function void ("GLenum" "GLfloat" "GLfloat")) MultiTexCoord2f)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord2fv)
       ((function void ("GLenum" "GLint" "GLint")) MultiTexCoord2i)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord2iv)
       ((function void ("GLenum" "GLshort" "GLshort")) MultiTexCoord2s)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord2sv)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        MultiTexCoord3d)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord3dv)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        MultiTexCoord3f)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord3fv)
       ((function void ("GLenum" "GLint" "GLint" "GLint")) MultiTexCoord3i)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord3iv)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort"))
        MultiTexCoord3s)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord3sv)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        MultiTexCoord4d)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord4dv)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        MultiTexCoord4f)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord4fv)
       ((function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
        MultiTexCoord4i)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord4iv)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
        MultiTexCoord4s)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord4sv)
       ((function void ((c-pointer "GLfloat"))) LoadTransposeMatrixf)
       ((function void ((c-pointer "GLdouble"))) LoadTransposeMatrixd)
       ((function void ((c-pointer "GLfloat"))) MultTransposeMatrixf)
       ((function void ((c-pointer "GLdouble"))) MultTransposeMatrixd)
       ((function void ("GLclampf" "GLboolean")) SampleCoverage)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage3D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage2D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage1D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage3D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage2D)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage1D)
       ((function void ("GLenum" "GLint" (c-pointer "GLvoid")))
        GetCompressedTexImage)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum"))
        BlendFuncSeparate)
       ((function void ("GLfloat")) FogCoordf)
       ((function void ((c-pointer "GLfloat"))) FogCoordfv)
       ((function void ("GLdouble")) FogCoordd)
       ((function void ((c-pointer "GLdouble"))) FogCoorddv)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        FogCoordPointer)
       ((function
          void
          ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
        MultiDrawArrays)
       ((function
          void
          ("GLenum"
           (c-pointer "GLsizei")
           "GLenum"
           (c-pointer (c-pointer (const "GLvoid")))
           "GLsizei"))
        MultiDrawElements)
       ((function void ("GLenum" "GLfloat")) PointParameterf)
       ((function void ("GLenum" (c-pointer "GLfloat"))) PointParameterfv)
       ((function void ("GLenum" "GLint")) PointParameteri)
       ((function void ("GLenum" (c-pointer "GLint"))) PointParameteriv)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) SecondaryColor3b)
       ((function void ((c-pointer "GLbyte"))) SecondaryColor3bv)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) SecondaryColor3d)
       ((function void ((c-pointer "GLdouble"))) SecondaryColor3dv)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) SecondaryColor3f)
       ((function void ((c-pointer "GLfloat"))) SecondaryColor3fv)
       ((function void ("GLint" "GLint" "GLint")) SecondaryColor3i)
       ((function void ((c-pointer "GLint"))) SecondaryColor3iv)
       ((function void ("GLshort" "GLshort" "GLshort")) SecondaryColor3s)
       ((function void ((c-pointer "GLshort"))) SecondaryColor3sv)
       ((function void ("GLubyte" "GLubyte" "GLubyte")) SecondaryColor3ub)
       ((function void ((c-pointer "GLubyte"))) SecondaryColor3ubv)
       ((function void ("GLuint" "GLuint" "GLuint")) SecondaryColor3ui)
       ((function void ((c-pointer "GLuint"))) SecondaryColor3uiv)
       ((function void ("GLushort" "GLushort" "GLushort")) SecondaryColor3us)
       ((function void ((c-pointer "GLushort"))) SecondaryColor3usv)
       ((function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        SecondaryColorPointer)
       ((function void ("GLdouble" "GLdouble")) WindowPos2d)
       ((function void ((c-pointer "GLdouble"))) WindowPos2dv)
       ((function void ("GLfloat" "GLfloat")) WindowPos2f)
       ((function void ((c-pointer "GLfloat"))) WindowPos2fv)
       ((function void ("GLint" "GLint")) WindowPos2i)
       ((function void ((c-pointer "GLint"))) WindowPos2iv)
       ((function void ("GLshort" "GLshort")) WindowPos2s)
       ((function void ((c-pointer "GLshort"))) WindowPos2sv)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) WindowPos3d)
       ((function void ((c-pointer "GLdouble"))) WindowPos3dv)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) WindowPos3f)
       ((function void ((c-pointer "GLfloat"))) WindowPos3fv)
       ((function void ("GLint" "GLint" "GLint")) WindowPos3i)
       ((function void ((c-pointer "GLint"))) WindowPos3iv)
       ((function void ("GLshort" "GLshort" "GLshort")) WindowPos3s)
       ((function void ((c-pointer "GLshort"))) WindowPos3sv)
       ((function void ("GLenum" "GLuint")) BindBuffer)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteBuffers)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenBuffers)
       ((function "GLboolean" ("GLuint")) IsBuffer)
       ((function void ("GLenum" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
        BufferData)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        BufferSubData)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        GetBufferSubData)
       ((function (c-pointer "GLvoid") ("GLenum" "GLenum")) MapBuffer)
       ((function "GLboolean" ("GLenum")) UnmapBuffer)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetBufferParameteriv)
       ((function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetBufferPointerv)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenQueries)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteQueries)
       ((function "GLboolean" ("GLuint")) IsQuery)
       ((function void ("GLenum" "GLuint")) BeginQuery)
       ((function void ("GLenum")) EndQuery)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint"))) GetQueryiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetQueryObjectiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLuint")))
        GetQueryObjectuiv)
       ((function void ("GLenum" "GLenum")) BlendEquationSeparate)
       ((function "GLuint" (void)) CreateProgram)
       ((function "GLuint" ("GLenum")) CreateShader)
       ((function void ("GLuint")) DeleteProgram)
       ((function void ("GLuint")) DeleteShader)
       ((function void ("GLuint" "GLuint")) AttachShader)
       ((function void ("GLuint" "GLuint")) DetachShader)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer (c-pointer (const char)))
           (c-pointer "GLint")))
        ShaderSource)
       ((function void ("GLuint")) CompileShader)
       ((function "GLboolean" ("GLuint")) IsProgram)
       ((function "GLboolean" ("GLuint")) IsShader)
       ((function void ("GLuint")) LinkProgram)
       ((function void ("GLuint")) UseProgram)
       ((function void ("GLuint")) ValidateProgram)
       ((function void ("GLint" "GLfloat")) Uniform1f)
       ((function void ("GLint" "GLfloat" "GLfloat")) Uniform2f)
       ((function void ("GLint" "GLfloat" "GLfloat" "GLfloat")) Uniform3f)
       ((function void ("GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        Uniform4f)
       ((function void ("GLint" "GLint")) Uniform1i)
       ((function void ("GLint" "GLint" "GLint")) Uniform2i)
       ((function void ("GLint" "GLint" "GLint" "GLint")) Uniform3i)
       ((function void ("GLint" "GLint" "GLint" "GLint" "GLint")) Uniform4i)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat"))) Uniform1fv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat"))) Uniform2fv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat"))) Uniform3fv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat"))) Uniform4fv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform1iv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform2iv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform3iv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform4iv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix2fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix3fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix4fv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat"))) GetShaderfv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint"))) GetShaderiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat"))) GetProgramfv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint"))) GetProgramiv)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetShaderInfoLog)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetProgramInfoLog)
       ((function
          void
          ("GLuint" "GLsizei" (c-pointer "GLsizei") (c-pointer "GLuint")))
        GetAttachedShaders)
       ((function "GLint" ("GLuint" c-string)) GetUniformLocation)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           (c-pointer "GLint")
           (c-pointer "GLenum")
           c-string))
        GetActiveUniform)
       ((function void ("GLuint" "GLint" (c-pointer "GLfloat"))) GetUniformfv)
       ((function void ("GLuint" "GLint" (c-pointer "GLint"))) GetUniformiv)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetShaderSource)
       ((function void ("GLuint" "GLfloat")) VertexAttrib1f)
       ((function void ("GLuint" "GLshort")) VertexAttrib1s)
       ((function void ("GLuint" "GLdouble")) VertexAttrib1d)
       ((function void ("GLuint" "GLfloat" "GLfloat")) VertexAttrib2f)
       ((function void ("GLuint" "GLshort" "GLshort")) VertexAttrib2s)
       ((function void ("GLuint" "GLdouble" "GLdouble")) VertexAttrib2d)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib3f)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort"))
        VertexAttrib3s)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib3d)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib4f)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
        VertexAttrib4s)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib4d)
       ((function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
        VertexAttrib4Nub)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib1fv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib1sv)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib1dv)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib2fv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib2sv)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib2dv)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib3fv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib3sv)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib3dv)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib4fv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib4sv)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib4dv)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttrib4iv)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttrib4bv)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttrib4ubv)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttrib4usv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttrib4uiv)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttrib4Nbv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib4Nsv)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttrib4Niv)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttrib4Nubv)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttrib4Nusv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttrib4Nuiv)
       ((function
          void
          ("GLuint"
           "GLint"
           "GLenum"
           "GLboolean"
           "GLsizei"
           (c-pointer "GLvoid")))
        VertexAttribPointer)
       ((function void ("GLuint")) EnableVertexAttribArray)
       ((function void ("GLuint")) DisableVertexAttribArray)
       ((function void ("GLuint" "GLuint" c-string)) BindAttribLocation)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           (c-pointer "GLint")
           (c-pointer "GLenum")
           c-string))
        GetActiveAttrib)
       ((function "GLint" ("GLuint" c-string)) GetAttribLocation)
       ((function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
        GetVertexAttribdv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVertexAttribfv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribiv)
       ((function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetVertexAttribPointerv)
       ((function void ("GLsizei" (c-pointer "GLenum"))) DrawBuffers)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum"))
        StencilOpSeparate)
       ((function void ("GLenum" "GLenum" "GLint" "GLuint"))
        StencilFuncSeparate)
       ((function void ("GLenum" "GLuint")) StencilMaskSeparate)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix2x3fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix3x2fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix2x4fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix4x2fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix3x4fv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix4x3fv)
       ((function
          void
          ("GLuint" "GLboolean" "GLboolean" "GLboolean" "GLboolean"))
        ColorMaski)
       ((function void ("GLenum" "GLuint" (c-pointer "GLboolean")))
        GetBooleani_v)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint"))) GetIntegeri_v)
       ((function void ("GLenum" "GLuint")) Enablei)
       ((function void ("GLenum" "GLuint")) Disablei)
       ((function "GLboolean" ("GLenum" "GLuint")) IsEnabledi)
       ((function void ("GLenum")) BeginTransformFeedback)
       ((function void (void)) EndTransformFeedback)
       ((function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
        BindBufferRange)
       ((function void ("GLenum" "GLuint" "GLuint")) BindBufferBase)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
        TransformFeedbackVaryings)
       ((function void ("GLuint" "GLuint" (c-pointer "GLint")))
        GetTransformFeedbackVarying)
       ((function void ("GLenum" "GLenum")) ClampColor)
       ((function void ("GLuint" "GLenum")) BeginConditionalRender)
       ((function void (void)) EndConditionalRender)
       ((function void ("GLuint" "GLint")) VertexAttribI1i)
       ((function void ("GLuint" "GLint" "GLint")) VertexAttribI2i)
       ((function void ("GLuint" "GLint" "GLint" "GLint")) VertexAttribI3i)
       ((function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
        VertexAttribI4i)
       ((function void ("GLuint" "GLuint")) VertexAttribI1ui)
       ((function void ("GLuint" "GLuint" "GLuint")) VertexAttribI2ui)
       ((function void ("GLuint" "GLuint" "GLuint" "GLuint")) VertexAttribI3ui)
       ((function void ("GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        VertexAttribI4ui)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI1iv)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI2iv)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI3iv)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI4iv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI1uiv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI2uiv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI3uiv)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI4uiv)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttribI4bv)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttribI4sv)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttribI4ubv)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttribI4usv)
       ((function
          void
          ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        VertexAttribIPointer)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribIiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLuint")))
        GetVertexAttribIuiv)
       ((function void ("GLuint" "GLint" (c-pointer "GLuint"))) GetUniformuiv)
       ((function void ("GLuint" "GLuint" c-string)) BindFragDataLocation)
       ((function "GLint" ("GLuint" c-string)) GetFragDataLocation)
       ((function void ("GLint" "GLuint")) Uniform1ui)
       ((function void ("GLint" "GLuint" "GLuint")) Uniform2ui)
       ((function void ("GLint" "GLuint" "GLuint" "GLuint")) Uniform3ui)
       ((function void ("GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
        Uniform4ui)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint"))) Uniform1uiv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint"))) Uniform2uiv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint"))) Uniform3uiv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint"))) Uniform4uiv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        TexParameterIiv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        TexParameterIuiv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetTexParameterIiv)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        GetTexParameterIuiv)
       ((function void ("GLenum" "GLint" (c-pointer "GLint"))) ClearBufferiv)
       ((function void ("GLenum" "GLint" (c-pointer "GLuint"))) ClearBufferuiv)
       ((function void ("GLenum" "GLint" (c-pointer "GLfloat"))) ClearBufferfv)
       ((function void ("GLenum" "GLint" "GLfloat" "GLint")) ClearBufferfi)
       ((function (c-pointer (const "GLubyte")) ("GLenum" "GLuint"))
        GetStringi)
       ((function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
        DrawArraysInstanced)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
        DrawElementsInstanced)
       ((function void ("GLenum" "GLenum" "GLuint")) TexBuffer)
       ((function void ("GLuint")) PrimitiveRestartIndex)
       ((function void ("GLenum" "GLuint" (c-pointer integer64)))
        GetInteger64i_v)
       ((function void ("GLenum" "GLenum" (c-pointer integer64)))
        GetBufferParameteri64v)
       ((function void ("GLuint" "GLenum" "GLint")) ProgramParameteri)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTexture)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer void)))
        ClearBufferData)
       ((function
          void
          ("GLenum"
           "GLenum"
           "ptrdiff_t"
           "ptrdiff_t"
           "GLenum"
           "GLenum"
           (c-pointer void)))
        ClearBufferSubData)
       ((function void ("GLuint" "GLuint" "GLuint")) DispatchCompute)
       ((function void ("ptrdiff_t")) DispatchComputeIndirect)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"))
        CopyImageSubData)
       ((function void ("GLenum" "GLenum" "GLint")) FramebufferParameteri)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetFramebufferParameteriv)
       ((function
          void
          ("GLenum" "GLenum" "GLenum" "GLsizei" (c-pointer integer64)))
        GetInternalformati64v)
       ((function
          void
          ("GLuint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"))
        InvalidateTexSubImage)
       ((function void ("GLuint" "GLint")) InvalidateTexImage)
       ((function void ("GLuint" "ptrdiff_t" "ptrdiff_t"))
        InvalidateBufferSubData)
       ((function void ("GLuint")) InvalidateBufferData)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLenum")))
        InvalidateFramebuffer)
       ((function
          void
          ("GLenum"
           "GLsizei"
           (c-pointer "GLenum")
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        InvalidateSubFramebuffer)
       ((function void ("GLenum" (c-pointer void) "GLsizei" "GLsizei"))
        MultiDrawArraysIndirect)
       ((function
          void
          ("GLenum" "GLenum" (c-pointer void) "GLsizei" "GLsizei"))
        MultiDrawElementsIndirect)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetProgramInterfaceiv)
       ((function "GLuint" ("GLuint" "GLenum" c-string))
        GetProgramResourceIndex)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           c-string))
        GetProgramResourceName)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLsizei"
           (c-pointer "GLenum")
           "GLsizei"
           (c-pointer "GLsizei")
           (c-pointer "GLint")))
        GetProgramResourceiv)
       ((function "GLint" ("GLuint" "GLenum" c-string))
        GetProgramResourceLocation)
       ((function "GLint" ("GLuint" "GLenum" c-string))
        GetProgramResourceLocationIndex)
       ((function void ("GLuint" "GLuint" "GLuint")) ShaderStorageBlockBinding)
       ((function void ("GLenum" "GLenum" "GLuint" "ptrdiff_t" "ptrdiff_t"))
        TexBufferRange)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei" "GLboolean"))
        TexStorage2DMultisample)
       ((function
          void
          ("GLenum"
           "GLsizei"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLboolean"))
        TexStorage3DMultisample)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLenum"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"))
        TextureView)
       ((function void ("GLuint" "GLuint" "ptrdiff_t" "GLsizei"))
        BindVertexBuffer)
       ((function void ("GLuint" "GLint" "GLenum" "GLboolean" "GLuint"))
        VertexAttribFormat)
       ((function void ("GLuint" "GLint" "GLenum" "GLuint"))
        VertexAttribIFormat)
       ((function void ("GLuint" "GLint" "GLenum" "GLuint"))
        VertexAttribLFormat)
       ((function void ("GLuint" "GLuint")) VertexAttribBinding)
       ((function void ("GLuint" "GLuint")) VertexBindingDivisor)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLenum"
           "GLsizei"
           (c-pointer "GLuint")
           "GLboolean"))
        DebugMessageControl)
       ((function
          void
          ("GLenum" "GLenum" "GLuint" "GLenum" "GLsizei" c-string))
        DebugMessageInsert)
       ((function
          void
          ((function
             void
             ("GLenum"
              "GLenum"
              "GLuint"
              "GLenum"
              "GLsizei"
              c-string
              (c-pointer void)))
           (c-pointer void)))
        DebugMessageCallback)
       ((function
          "GLuint"
          ("GLuint"
           "GLsizei"
           (c-pointer "GLenum")
           (c-pointer "GLenum")
           (c-pointer "GLuint")
           (c-pointer "GLenum")
           (c-pointer "GLsizei")
           c-string))
        GetDebugMessageLog)
       ((function void ("GLenum" "GLuint" "GLsizei" c-string)) PushDebugGroup)
       ((function void (void)) PopDebugGroup)
       ((function void ("GLenum" "GLuint" "GLsizei" c-string)) ObjectLabel)
       ((function
          void
          ("GLenum" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetObjectLabel)
       ((function void ((c-pointer void) "GLsizei" c-string)) ObjectPtrLabel)
       ((function
          void
          ((c-pointer void) "GLsizei" (c-pointer "GLsizei") c-string))
        GetObjectPtrLabel)
       ((function void ("GLenum")) ActiveTextureARB)
       ((function void ("GLenum")) ClientActiveTextureARB)
       ((function void ("GLenum" "GLdouble")) MultiTexCoord1dARB)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord1dvARB)
       ((function void ("GLenum" "GLfloat")) MultiTexCoord1fARB)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord1fvARB)
       ((function void ("GLenum" "GLint")) MultiTexCoord1iARB)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord1ivARB)
       ((function void ("GLenum" "GLshort")) MultiTexCoord1sARB)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord1svARB)
       ((function void ("GLenum" "GLdouble" "GLdouble")) MultiTexCoord2dARB)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord2dvARB)
       ((function void ("GLenum" "GLfloat" "GLfloat")) MultiTexCoord2fARB)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord2fvARB)
       ((function void ("GLenum" "GLint" "GLint")) MultiTexCoord2iARB)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord2ivARB)
       ((function void ("GLenum" "GLshort" "GLshort")) MultiTexCoord2sARB)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord2svARB)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        MultiTexCoord3dARB)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord3dvARB)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        MultiTexCoord3fARB)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord3fvARB)
       ((function void ("GLenum" "GLint" "GLint" "GLint")) MultiTexCoord3iARB)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord3ivARB)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort"))
        MultiTexCoord3sARB)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord3svARB)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        MultiTexCoord4dARB)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MultiTexCoord4dvARB)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        MultiTexCoord4fARB)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MultiTexCoord4fvARB)
       ((function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
        MultiTexCoord4iARB)
       ((function void ("GLenum" (c-pointer "GLint"))) MultiTexCoord4ivARB)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
        MultiTexCoord4sARB)
       ((function void ("GLenum" (c-pointer "GLshort"))) MultiTexCoord4svARB)
       ((function void ((c-pointer "GLfloat"))) LoadTransposeMatrixfARB)
       ((function void ((c-pointer "GLdouble"))) LoadTransposeMatrixdARB)
       ((function void ((c-pointer "GLfloat"))) MultTransposeMatrixfARB)
       ((function void ((c-pointer "GLdouble"))) MultTransposeMatrixdARB)
       ((function void ("GLclampf" "GLboolean")) SampleCoverageARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage3DARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage2DARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexImage1DARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage3DARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage2DARB)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTexSubImage1DARB)
       ((function void ("GLenum" "GLint" (c-pointer "GLvoid")))
        GetCompressedTexImageARB)
       ((function void ("GLenum" "GLfloat")) PointParameterfARB)
       ((function void ("GLenum" (c-pointer "GLfloat"))) PointParameterfvARB)
       ((function void ("GLint" (c-pointer "GLbyte"))) WeightbvARB)
       ((function void ("GLint" (c-pointer "GLshort"))) WeightsvARB)
       ((function void ("GLint" (c-pointer "GLint"))) WeightivARB)
       ((function void ("GLint" (c-pointer "GLfloat"))) WeightfvARB)
       ((function void ("GLint" (c-pointer "GLdouble"))) WeightdvARB)
       ((function void ("GLint" (c-pointer "GLubyte"))) WeightubvARB)
       ((function void ("GLint" (c-pointer "GLushort"))) WeightusvARB)
       ((function void ("GLint" (c-pointer "GLuint"))) WeightuivARB)
       ((function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        WeightPointerARB)
       ((function void ("GLint")) VertexBlendARB)
       ((function void ("GLint")) CurrentPaletteMatrixARB)
       ((function void ("GLint" (c-pointer "GLubyte"))) MatrixIndexubvARB)
       ((function void ("GLint" (c-pointer "GLushort"))) MatrixIndexusvARB)
       ((function void ("GLint" (c-pointer "GLuint"))) MatrixIndexuivARB)
       ((function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        MatrixIndexPointerARB)
       ((function void ("GLdouble" "GLdouble")) WindowPos2dARB)
       ((function void ((c-pointer "GLdouble"))) WindowPos2dvARB)
       ((function void ("GLfloat" "GLfloat")) WindowPos2fARB)
       ((function void ((c-pointer "GLfloat"))) WindowPos2fvARB)
       ((function void ("GLint" "GLint")) WindowPos2iARB)
       ((function void ((c-pointer "GLint"))) WindowPos2ivARB)
       ((function void ("GLshort" "GLshort")) WindowPos2sARB)
       ((function void ((c-pointer "GLshort"))) WindowPos2svARB)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) WindowPos3dARB)
       ((function void ((c-pointer "GLdouble"))) WindowPos3dvARB)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) WindowPos3fARB)
       ((function void ((c-pointer "GLfloat"))) WindowPos3fvARB)
       ((function void ("GLint" "GLint" "GLint")) WindowPos3iARB)
       ((function void ((c-pointer "GLint"))) WindowPos3ivARB)
       ((function void ("GLshort" "GLshort" "GLshort")) WindowPos3sARB)
       ((function void ((c-pointer "GLshort"))) WindowPos3svARB)
       ((function void ("GLuint" "GLdouble")) VertexAttrib1dARB)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib1dvARB)
       ((function void ("GLuint" "GLfloat")) VertexAttrib1fARB)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib1fvARB)
       ((function void ("GLuint" "GLshort")) VertexAttrib1sARB)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib1svARB)
       ((function void ("GLuint" "GLdouble" "GLdouble")) VertexAttrib2dARB)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib2dvARB)
       ((function void ("GLuint" "GLfloat" "GLfloat")) VertexAttrib2fARB)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib2fvARB)
       ((function void ("GLuint" "GLshort" "GLshort")) VertexAttrib2sARB)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib2svARB)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib3dARB)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib3dvARB)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib3fARB)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib3fvARB)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort"))
        VertexAttrib3sARB)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib3svARB)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttrib4NbvARB)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttrib4NivARB)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib4NsvARB)
       ((function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
        VertexAttrib4NubARB)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttrib4NubvARB)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttrib4NuivARB)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttrib4NusvARB)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttrib4bvARB)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib4dARB)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib4dvARB)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib4fARB)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib4fvARB)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttrib4ivARB)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
        VertexAttrib4sARB)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib4svARB)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttrib4ubvARB)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttrib4uivARB)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttrib4usvARB)
       ((function
          void
          ("GLuint"
           "GLint"
           "GLenum"
           "GLboolean"
           "GLsizei"
           (c-pointer "GLvoid")))
        VertexAttribPointerARB)
       ((function void ("GLuint")) EnableVertexAttribArrayARB)
       ((function void ("GLuint")) DisableVertexAttribArrayARB)
       ((function void ("GLenum" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        ProgramStringARB)
       ((function void ("GLenum" "GLuint")) BindProgramARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteProgramsARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenProgramsARB)
       ((function
          void
          ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        ProgramEnvParameter4dARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        ProgramEnvParameter4dvARB)
       ((function
          void
          ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        ProgramEnvParameter4fARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        ProgramEnvParameter4fvARB)
       ((function
          void
          ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        ProgramLocalParameter4dARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        ProgramLocalParameter4dvARB)
       ((function
          void
          ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        ProgramLocalParameter4fARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        ProgramLocalParameter4fvARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        GetProgramEnvParameterdvARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        GetProgramEnvParameterfvARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        GetProgramLocalParameterdvARB)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        GetProgramLocalParameterfvARB)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetProgramivARB)
       ((function void ("GLenum" "GLenum" (c-pointer "GLvoid")))
        GetProgramStringARB)
       ((function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
        GetVertexAttribdvARB)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVertexAttribfvARB)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribivARB)
       ((function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetVertexAttribPointervARB)
       ((function "GLboolean" ("GLuint")) IsProgramARB)
       ((function void ("GLenum" "GLuint")) BindBufferARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteBuffersARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenBuffersARB)
       ((function "GLboolean" ("GLuint")) IsBufferARB)
       ((function void ("GLenum" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
        BufferDataARB)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        BufferSubDataARB)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        GetBufferSubDataARB)
       ((function (c-pointer "GLvoid") ("GLenum" "GLenum")) MapBufferARB)
       ((function "GLboolean" ("GLenum")) UnmapBufferARB)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetBufferParameterivARB)
       ((function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetBufferPointervARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenQueriesARB)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteQueriesARB)
       ((function "GLboolean" ("GLuint")) IsQueryARB)
       ((function void ("GLenum" "GLuint")) BeginQueryARB)
       ((function void ("GLenum")) EndQueryARB)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint"))) GetQueryivARB)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetQueryObjectivARB)
       ((function void ("GLuint" "GLenum" (c-pointer "GLuint")))
        GetQueryObjectuivARB)
       ((function void (unsigned-long)) DeleteObjectARB)
       ((function unsigned-long ("GLenum")) GetHandleARB)
       ((function void (unsigned-long unsigned-long)) DetachObjectARB)
       ((function unsigned-long ("GLenum")) CreateShaderObjectARB)
       ((function
          void
          (unsigned-long
            "GLsizei"
            (c-pointer (c-pointer (const char)))
            (c-pointer "GLint")))
        ShaderSourceARB)
       ((function void (unsigned-long)) CompileShaderARB)
       ((function unsigned-long (void)) CreateProgramObjectARB)
       ((function void (unsigned-long unsigned-long)) AttachObjectARB)
       ((function void (unsigned-long)) LinkProgramARB)
       ((function void (unsigned-long)) UseProgramObjectARB)
       ((function void (unsigned-long)) ValidateProgramARB)
       ((function void ("GLint" "GLfloat")) Uniform1fARB)
       ((function void ("GLint" "GLfloat" "GLfloat")) Uniform2fARB)
       ((function void ("GLint" "GLfloat" "GLfloat" "GLfloat")) Uniform3fARB)
       ((function void ("GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        Uniform4fARB)
       ((function void ("GLint" "GLint")) Uniform1iARB)
       ((function void ("GLint" "GLint" "GLint")) Uniform2iARB)
       ((function void ("GLint" "GLint" "GLint" "GLint")) Uniform3iARB)
       ((function void ("GLint" "GLint" "GLint" "GLint" "GLint")) Uniform4iARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
        Uniform1fvARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
        Uniform2fvARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
        Uniform3fvARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLfloat")))
        Uniform4fvARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform1ivARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform2ivARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform3ivARB)
       ((function void ("GLint" "GLsizei" (c-pointer "GLint"))) Uniform4ivARB)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix2fvARB)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix3fvARB)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        UniformMatrix4fvARB)
       ((function void (unsigned-long "GLenum" (c-pointer "GLfloat")))
        GetObjectParameterfvARB)
       ((function void (unsigned-long "GLenum" (c-pointer "GLint")))
        GetObjectParameterivARB)
       ((function
          void
          (unsigned-long "GLsizei" (c-pointer "GLsizei") c-string))
        GetInfoLogARB)
       ((function
          void
          (unsigned-long "GLsizei" (c-pointer "GLsizei") u32vector))
        GetAttachedObjectsARB)
       ((function "GLint" (unsigned-long c-string)) GetUniformLocationARB)
       ((function
          void
          (unsigned-long
            "GLuint"
            "GLsizei"
            (c-pointer "GLsizei")
            (c-pointer "GLint")
            (c-pointer "GLenum")
            c-string))
        GetActiveUniformARB)
       ((function void (unsigned-long "GLint" (c-pointer "GLfloat")))
        GetUniformfvARB)
       ((function void (unsigned-long "GLint" (c-pointer "GLint")))
        GetUniformivARB)
       ((function
          void
          (unsigned-long "GLsizei" (c-pointer "GLsizei") c-string))
        GetShaderSourceARB)
       ((function void (unsigned-long "GLuint" c-string))
        BindAttribLocationARB)
       ((function
          void
          (unsigned-long
            "GLuint"
            "GLsizei"
            (c-pointer "GLsizei")
            (c-pointer "GLint")
            (c-pointer "GLenum")
            c-string))
        GetActiveAttribARB)
       ((function "GLint" (unsigned-long c-string)) GetAttribLocationARB)
       ((function void ("GLsizei" (c-pointer "GLenum"))) DrawBuffersARB)
       ((function void ("GLenum" "GLenum")) ClampColorARB)
       ((function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
        DrawArraysInstancedARB)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
        DrawElementsInstancedARB)
       ((function "GLboolean" ("GLuint")) IsRenderbuffer)
       ((function void ("GLenum" "GLuint")) BindRenderbuffer)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteRenderbuffers)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenRenderbuffers)
       ((function void ("GLenum" "GLenum" "GLsizei" "GLsizei"))
        RenderbufferStorage)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetRenderbufferParameteriv)
       ((function "GLboolean" ("GLuint")) IsFramebuffer)
       ((function void ("GLenum" "GLuint")) BindFramebuffer)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteFramebuffers)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenFramebuffers)
       ((function "GLenum" ("GLenum")) CheckFramebufferStatus)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTexture1D)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTexture2D)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        FramebufferTexture3D)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint"))
        FramebufferRenderbuffer)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetFramebufferAttachmentParameteriv)
       ((function void ("GLenum")) GenerateMipmap)
       ((function
          void
          ("GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLbitfield"
           "GLenum"))
        BlitFramebuffer)
       ((function void ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
        RenderbufferStorageMultisample)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        FramebufferTextureLayer)
       ((function void ("GLuint" "GLenum" "GLint")) ProgramParameteriARB)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTextureARB)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        FramebufferTextureLayerARB)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint" "GLenum"))
        FramebufferTextureFaceARB)
       ((function void ("GLuint" "GLuint")) VertexAttribDivisor)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t" "GLbitfield"))
        MapBufferRange)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t"))
        FlushMappedBufferRange)
       ((function void ("GLenum" "GLenum" "GLuint")) TexBufferARB)
       ((function void ("GLuint")) BindVertexArray)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteVertexArrays)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenVertexArrays)
       ((function "GLboolean" ("GLuint")) IsVertexArray)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer (c-pointer (const char)))
           (c-pointer "GLuint")))
        GetUniformIndices)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer "GLuint")
           "GLenum"
           (c-pointer "GLint")))
        GetActiveUniformsiv)
       ((function
          void
          ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetActiveUniformName)
       ((function "GLuint" ("GLuint" c-string)) GetUniformBlockIndex)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
        GetActiveUniformBlockiv)
       ((function
          void
          ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetActiveUniformBlockName)
       ((function void ("GLuint" "GLuint" "GLuint")) UniformBlockBinding)
       ((function void ("GLenum" "GLenum" "ptrdiff_t" "ptrdiff_t" "ptrdiff_t"))
        CopyBufferSubData)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLint"))
        DrawElementsBaseVertex)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           "GLsizei"
           "GLenum"
           (c-pointer "GLvoid")
           "GLint"))
        DrawRangeElementsBaseVertex)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei" "GLint"))
        DrawElementsInstancedBaseVertex)
       ((function
          void
          ("GLenum"
           (c-pointer "GLsizei")
           "GLenum"
           (c-pointer (c-pointer (const "GLvoid")))
           "GLsizei"
           (c-pointer "GLint")))
        MultiDrawElementsBaseVertex)
       ((function void ("GLenum")) ProvokingVertex)
       ((function (c-pointer (struct "__GLsync")) ("GLenum" "GLbitfield"))
        FenceSync)
       ((function "GLboolean" ((c-pointer (struct "__GLsync")))) IsSync)
       ((function void ((c-pointer (struct "__GLsync")))) DeleteSync)
       ((function
          "GLenum"
          ((c-pointer (struct "__GLsync")) "GLbitfield" unsigned-integer64))
        ClientWaitSync)
       ((function
          void
          ((c-pointer (struct "__GLsync")) "GLbitfield" unsigned-integer64))
        WaitSync)
       ((function void ("GLenum" (c-pointer integer64))) GetInteger64v)
       ((function
          void
          ((c-pointer (struct "__GLsync"))
           "GLenum"
           "GLsizei"
           (c-pointer "GLsizei")
           (c-pointer "GLint")))
        GetSynciv)
       ((function
          void
          ("GLenum" "GLsizei" "GLint" "GLsizei" "GLsizei" "GLboolean"))
        TexImage2DMultisample)
       ((function
          void
          ("GLenum"
           "GLsizei"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLboolean"))
        TexImage3DMultisample)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        GetMultisamplefv)
       ((function void ("GLuint" "GLbitfield")) SampleMaski)
       ((function void ("GLuint" "GLenum")) BlendEquationi)
       ((function void ("GLuint" "GLenum" "GLenum")) BlendEquationSeparatei)
       ((function void ("GLuint" "GLenum" "GLenum")) BlendFunci)
       ((function void ("GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
        BlendFuncSeparatei)
       ((function void ("GLclampf")) MinSampleShading)
       ((function void ("GLenum" "GLint" c-string "GLint" c-string))
        NamedStringARB)
       ((function void ("GLint" c-string)) DeleteNamedStringARB)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer (c-pointer (const char)))
           (c-pointer "GLint")))
        CompileShaderIncludeARB)
       ((function "GLboolean" ("GLint" c-string)) IsNamedStringARB)
       ((function
          void
          ("GLint" c-string "GLsizei" (c-pointer "GLint") c-string))
        GetNamedStringARB)
       ((function void ("GLint" c-string "GLenum" (c-pointer "GLint")))
        GetNamedStringivARB)
       ((function void ("GLuint" "GLuint" "GLuint" c-string))
        BindFragDataLocationIndexed)
       ((function "GLint" ("GLuint" c-string)) GetFragDataIndex)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenSamplers)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteSamplers)
       ((function "GLboolean" ("GLuint")) IsSampler)
       ((function void ("GLenum" "GLuint")) BindSampler)
       ((function void ("GLuint" "GLenum" "GLint")) SamplerParameteri)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        SamplerParameteriv)
       ((function void ("GLuint" "GLenum" "GLfloat")) SamplerParameterf)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        SamplerParameterfv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        SamplerParameterIiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLuint")))
        SamplerParameterIuiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetSamplerParameteriv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetSamplerParameterIiv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetSamplerParameterfv)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetSamplerParameterIfv)
       ((function void ("GLuint" "GLenum")) QueryCounter)
       ((function void ("GLuint" "GLenum" (c-pointer integer64)))
        GetQueryObjecti64v)
       ((function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
        GetQueryObjectui64v)
       ((function void ("GLenum" "GLuint")) VertexP2ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) VertexP2uiv)
       ((function void ("GLenum" "GLuint")) VertexP3ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) VertexP3uiv)
       ((function void ("GLenum" "GLuint")) VertexP4ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) VertexP4uiv)
       ((function void ("GLenum" "GLuint")) TexCoordP1ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) TexCoordP1uiv)
       ((function void ("GLenum" "GLuint")) TexCoordP2ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) TexCoordP2uiv)
       ((function void ("GLenum" "GLuint")) TexCoordP3ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) TexCoordP3uiv)
       ((function void ("GLenum" "GLuint")) TexCoordP4ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) TexCoordP4uiv)
       ((function void ("GLenum" "GLenum" "GLuint")) MultiTexCoordP1ui)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        MultiTexCoordP1uiv)
       ((function void ("GLenum" "GLenum" "GLuint")) MultiTexCoordP2ui)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        MultiTexCoordP2uiv)
       ((function void ("GLenum" "GLenum" "GLuint")) MultiTexCoordP3ui)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        MultiTexCoordP3uiv)
       ((function void ("GLenum" "GLenum" "GLuint")) MultiTexCoordP4ui)
       ((function void ("GLenum" "GLenum" (c-pointer "GLuint")))
        MultiTexCoordP4uiv)
       ((function void ("GLenum" "GLuint")) NormalP3ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) NormalP3uiv)
       ((function void ("GLenum" "GLuint")) ColorP3ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) ColorP3uiv)
       ((function void ("GLenum" "GLuint")) ColorP4ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) ColorP4uiv)
       ((function void ("GLenum" "GLuint")) SecondaryColorP3ui)
       ((function void ("GLenum" (c-pointer "GLuint"))) SecondaryColorP3uiv)
       ((function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
        VertexAttribP1ui)
       ((function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
        VertexAttribP1uiv)
       ((function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
        VertexAttribP2ui)
       ((function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
        VertexAttribP2uiv)
       ((function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
        VertexAttribP3ui)
       ((function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
        VertexAttribP3uiv)
       ((function void ("GLuint" "GLenum" "GLboolean" "GLuint"))
        VertexAttribP4ui)
       ((function void ("GLuint" "GLenum" "GLboolean" (c-pointer "GLuint")))
        VertexAttribP4uiv)
       ((function void ("GLenum" (c-pointer "GLvoid"))) DrawArraysIndirect)
       ((function void ("GLenum" "GLenum" (c-pointer "GLvoid")))
        DrawElementsIndirect)
       ((function void ("GLint" "GLdouble")) Uniform1d)
       ((function void ("GLint" "GLdouble" "GLdouble")) Uniform2d)
       ((function void ("GLint" "GLdouble" "GLdouble" "GLdouble")) Uniform3d)
       ((function void ("GLint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        Uniform4d)
       ((function void ("GLint" "GLsizei" (c-pointer "GLdouble"))) Uniform1dv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLdouble"))) Uniform2dv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLdouble"))) Uniform3dv)
       ((function void ("GLint" "GLsizei" (c-pointer "GLdouble"))) Uniform4dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix2dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix3dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix4dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix2x3dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix2x4dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix3x2dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix3x4dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix4x2dv)
       ((function void ("GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        UniformMatrix4x3dv)
       ((function void ("GLuint" "GLint" (c-pointer "GLdouble"))) GetUniformdv)
       ((function void ("GLuint" "GLint" "GLdouble")) ProgramUniform1dEXT)
       ((function void ("GLuint" "GLint" "GLdouble" "GLdouble"))
        ProgramUniform2dEXT)
       ((function void ("GLuint" "GLint" "GLdouble" "GLdouble" "GLdouble"))
        ProgramUniform3dEXT)
       ((function
          void
          ("GLuint" "GLint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        ProgramUniform4dEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
        ProgramUniform1dvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
        ProgramUniform2dvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
        ProgramUniform3dvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLdouble")))
        ProgramUniform4dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix2dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix3dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix4dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix2x3dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix2x4dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix3x2dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix3x4dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix4x2dvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLdouble")))
        ProgramUniformMatrix4x3dvEXT)
       ((function "GLint" ("GLuint" "GLenum" c-string))
        GetSubroutineUniformLocation)
       ((function "GLuint" ("GLuint" "GLenum" c-string)) GetSubroutineIndex)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
        GetActiveSubroutineUniformiv)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           c-string))
        GetActiveSubroutineUniformName)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           c-string))
        GetActiveSubroutineName)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLuint")))
        UniformSubroutinesuiv)
       ((function void ("GLenum" "GLint" (c-pointer "GLuint")))
        GetUniformSubroutineuiv)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetProgramStageiv)
       ((function void ("GLenum" "GLint")) PatchParameteri)
       ((function void ("GLenum" (c-pointer "GLfloat"))) PatchParameterfv)
       ((function void ("GLenum" "GLuint")) BindTransformFeedback)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        DeleteTransformFeedbacks)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenTransformFeedbacks)
       ((function "GLboolean" ("GLuint")) IsTransformFeedback)
       ((function void (void)) PauseTransformFeedback)
       ((function void (void)) ResumeTransformFeedback)
       ((function void ("GLenum" "GLuint")) DrawTransformFeedback)
       ((function void ("GLenum" "GLuint" "GLuint"))
        DrawTransformFeedbackStream)
       ((function void ("GLenum" "GLuint" "GLuint")) BeginQueryIndexed)
       ((function void ("GLenum" "GLuint")) EndQueryIndexed)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
        GetQueryIndexediv)
       ((function void ("GLclampf" "GLclampf" "GLclampf" "GLclampf"))
        BlendColorEXT)
       ((function void ("GLfloat" "GLfloat")) PolygonOffsetEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexImage3DEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexSubImage3DEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetTexFilterFuncSGIS)
       ((function void ("GLenum" "GLenum" "GLsizei" (c-pointer "GLfloat")))
        TexFilterFuncSGIS)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexSubImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexSubImage2DEXT)
       ((function
          void
          ("GLenum" "GLint" "GLenum" "GLint" "GLint" "GLsizei" "GLint"))
        CopyTexImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLint"))
        CopyTexImage2DEXT)
       ((function void ("GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
        CopyTexSubImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyTexSubImage2DEXT)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyTexSubImage3DEXT)
       ((function
          void
          ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetHistogramEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetHistogramParameterfvEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetHistogramParameterivEXT)
       ((function
          void
          ("GLenum" "GLboolean" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetMinmaxEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMinmaxParameterfvEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetMinmaxParameterivEXT)
       ((function void ("GLenum" "GLsizei" "GLenum" "GLboolean")) HistogramEXT)
       ((function void ("GLenum" "GLenum" "GLboolean")) MinmaxEXT)
       ((function void ("GLenum")) ResetHistogramEXT)
       ((function void ("GLenum")) ResetMinmaxEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
        ConvolutionFilter1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        ConvolutionFilter2DEXT)
       ((function void ("GLenum" "GLenum" "GLfloat")) ConvolutionParameterfEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        ConvolutionParameterfvEXT)
       ((function void ("GLenum" "GLenum" "GLint")) ConvolutionParameteriEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        ConvolutionParameterivEXT)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
        CopyConvolutionFilter1DEXT)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei" "GLsizei"))
        CopyConvolutionFilter2DEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetConvolutionFilterEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetConvolutionParameterfvEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetConvolutionParameterivEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")))
        GetSeparableFilterEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")
           (c-pointer "GLvoid")))
        SeparableFilter2DEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
        ColorTableSGI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        ColorTableParameterfvSGI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        ColorTableParameterivSGI)
       ((function void ("GLenum" "GLenum" "GLint" "GLint" "GLsizei"))
        CopyColorTableSGI)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetColorTableSGI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetColorTableParameterfvSGI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetColorTableParameterivSGI)
       ((function void ("GLenum")) PixelTexGenSGIX)
       ((function void ("GLenum" "GLint")) PixelTexGenParameteriSGIS)
       ((function void ("GLenum" (c-pointer "GLint")))
        PixelTexGenParameterivSGIS)
       ((function void ("GLenum" "GLfloat")) PixelTexGenParameterfSGIS)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        PixelTexGenParameterfvSGIS)
       ((function void ("GLenum" (c-pointer "GLint")))
        GetPixelTexGenParameterivSGIS)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        GetPixelTexGenParameterfvSGIS)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexImage4DSGIS)
       ((function
          void
          ("GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TexSubImage4DSGIS)
       ((function
          "GLboolean"
          ("GLsizei" (c-pointer "GLuint") (c-pointer "GLboolean")))
        AreTexturesResidentEXT)
       ((function void ("GLenum" "GLuint")) BindTextureEXT)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteTexturesEXT)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenTexturesEXT)
       ((function "GLboolean" ("GLuint")) IsTextureEXT)
       ((function void ("GLsizei" (c-pointer "GLuint") (c-pointer "GLclampf")))
        PrioritizeTexturesEXT)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLfloat")))
        DetailTexFuncSGIS)
       ((function void ("GLenum" (c-pointer "GLfloat"))) GetDetailTexFuncSGIS)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLfloat")))
        SharpenTexFuncSGIS)
       ((function void ("GLenum" (c-pointer "GLfloat"))) GetSharpenTexFuncSGIS)
       ((function void ("GLclampf" "GLboolean")) SampleMaskSGIS)
       ((function void ("GLenum")) SamplePatternSGIS)
       ((function void ("GLint")) ArrayElementEXT)
       ((function
          void
          ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
        ColorPointerEXT)
       ((function void ("GLenum" "GLint" "GLsizei")) DrawArraysEXT)
       ((function void ("GLsizei" "GLsizei" (c-pointer "GLboolean")))
        EdgeFlagPointerEXT)
       ((function void ("GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetPointervEXT)
       ((function void ("GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
        IndexPointerEXT)
       ((function void ("GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
        NormalPointerEXT)
       ((function
          void
          ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
        TexCoordPointerEXT)
       ((function
          void
          ("GLint" "GLenum" "GLsizei" "GLsizei" (c-pointer "GLvoid")))
        VertexPointerEXT)
       ((function void ("GLenum")) BlendEquationEXT)
       ((function void ("GLenum" "GLfloat")) SpriteParameterfSGIX)
       ((function void ("GLenum" (c-pointer "GLfloat"))) SpriteParameterfvSGIX)
       ((function void ("GLenum" "GLint")) SpriteParameteriSGIX)
       ((function void ("GLenum" (c-pointer "GLint"))) SpriteParameterivSGIX)
       ((function void ("GLenum" "GLfloat")) PointParameterfEXT)
       ((function void ("GLenum" (c-pointer "GLfloat"))) PointParameterfvEXT)
       ((function void ("GLenum" "GLfloat")) PointParameterfSGIS)
       ((function void ("GLenum" (c-pointer "GLfloat"))) PointParameterfvSGIS)
       ((function "GLint" (void)) GetInstrumentsSGIX)
       ((function void ("GLsizei" (c-pointer "GLint"))) InstrumentsBufferSGIX)
       ((function "GLint" ((c-pointer "GLint"))) PollInstrumentsSGIX)
       ((function void ("GLint")) ReadInstrumentsSGIX)
       ((function void (void)) StartInstrumentsSGIX)
       ((function void ("GLint")) StopInstrumentsSGIX)
       ((function void ("GLint")) FrameZoomSGIX)
       ((function void (void)) TagSampleBufferSGIX)
       ((function
          void
          ("GLenum"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           (c-pointer "GLdouble")))
        DeformationMap3dSGIX)
       ((function
          void
          ("GLenum"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           (c-pointer "GLfloat")))
        DeformationMap3fSGIX)
       ((function void ("GLbitfield")) DeformSGIX)
       ((function void ("GLbitfield")) LoadIdentityDeformationMapSGIX)
       ((function void ((c-pointer "GLdouble"))) ReferencePlaneSGIX)
       ((function void (void)) FlushRasterSGIX)
       ((function void ("GLsizei" (c-pointer "GLfloat"))) FogFuncSGIS)
       ((function void ((c-pointer "GLfloat"))) GetFogFuncSGIS)
       ((function void ("GLenum" "GLenum" "GLint")) ImageTransformParameteriHP)
       ((function void ("GLenum" "GLenum" "GLfloat"))
        ImageTransformParameterfHP)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        ImageTransformParameterivHP)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        ImageTransformParameterfvHP)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetImageTransformParameterivHP)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetImageTransformParameterfvHP)
       ((function void ("GLenum" "GLsizei" "GLint" "GLint" "GLsizei"))
        CopyColorSubTableEXT)
       ((function void ("GLenum" "GLint")) HintPGI)
       ((function
          void
          ("GLenum" "GLenum" "GLsizei" "GLenum" "GLenum" (c-pointer "GLvoid")))
        ColorTableEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetColorTableEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetColorTableParameterivEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetColorTableParameterfvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetListParameterfvSGIX)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetListParameterivSGIX)
       ((function void ("GLuint" "GLenum" "GLfloat")) ListParameterfSGIX)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        ListParameterfvSGIX)
       ((function void ("GLuint" "GLenum" "GLint")) ListParameteriSGIX)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        ListParameterivSGIX)
       ((function void ("GLenum" "GLenum")) IndexMaterialEXT)
       ((function void ("GLenum" "GLclampf")) IndexFuncEXT)
       ((function void ("GLint" "GLsizei")) LockArraysEXT)
       ((function void (void)) UnlockArraysEXT)
       ((function void ("GLenum" (c-pointer "GLdouble"))) CullParameterdvEXT)
       ((function void ("GLenum" (c-pointer "GLfloat"))) CullParameterfvEXT)
       ((function void ("GLenum" "GLenum")) FragmentColorMaterialSGIX)
       ((function void ("GLenum" "GLenum" "GLfloat")) FragmentLightfSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        FragmentLightfvSGIX)
       ((function void ("GLenum" "GLenum" "GLint")) FragmentLightiSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        FragmentLightivSGIX)
       ((function void ("GLenum" "GLfloat")) FragmentLightModelfSGIX)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        FragmentLightModelfvSGIX)
       ((function void ("GLenum" "GLint")) FragmentLightModeliSGIX)
       ((function void ("GLenum" (c-pointer "GLint")))
        FragmentLightModelivSGIX)
       ((function void ("GLenum" "GLenum" "GLfloat")) FragmentMaterialfSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        FragmentMaterialfvSGIX)
       ((function void ("GLenum" "GLenum" "GLint")) FragmentMaterialiSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        FragmentMaterialivSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetFragmentLightfvSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetFragmentLightivSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetFragmentMaterialfvSGIX)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetFragmentMaterialivSGIX)
       ((function void ("GLenum" "GLint")) LightEnviSGIX)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLsizei" "GLenum" (c-pointer "GLvoid")))
        DrawRangeElementsEXT)
       ((function void ("GLenum")) ApplyTextureEXT)
       ((function void ("GLenum")) TextureLightEXT)
       ((function void ("GLenum" "GLenum")) TextureMaterialEXT)
       ((function void ("GLuint")) AsyncMarkerSGIX)
       ((function "GLint" ((c-pointer "GLuint"))) FinishAsyncSGIX)
       ((function "GLint" ((c-pointer "GLuint"))) PollAsyncSGIX)
       ((function "GLuint" ("GLsizei")) GenAsyncMarkersSGIX)
       ((function void ("GLuint" "GLsizei")) DeleteAsyncMarkersSGIX)
       ((function "GLboolean" ("GLuint")) IsAsyncMarkerSGIX)
       ((function
          void
          ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
        VertexPointervINTEL)
       ((function void ("GLenum" (c-pointer (c-pointer (const "GLvoid")))))
        NormalPointervINTEL)
       ((function
          void
          ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
        ColorPointervINTEL)
       ((function
          void
          ("GLint" "GLenum" (c-pointer (c-pointer (const "GLvoid")))))
        TexCoordPointervINTEL)
       ((function void ("GLenum" "GLenum" "GLint"))
        PixelTransformParameteriEXT)
       ((function void ("GLenum" "GLenum" "GLfloat"))
        PixelTransformParameterfEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        PixelTransformParameterivEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        PixelTransformParameterfvEXT)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) SecondaryColor3bEXT)
       ((function void ((c-pointer "GLbyte"))) SecondaryColor3bvEXT)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) SecondaryColor3dEXT)
       ((function void ((c-pointer "GLdouble"))) SecondaryColor3dvEXT)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) SecondaryColor3fEXT)
       ((function void ((c-pointer "GLfloat"))) SecondaryColor3fvEXT)
       ((function void ("GLint" "GLint" "GLint")) SecondaryColor3iEXT)
       ((function void ((c-pointer "GLint"))) SecondaryColor3ivEXT)
       ((function void ("GLshort" "GLshort" "GLshort")) SecondaryColor3sEXT)
       ((function void ((c-pointer "GLshort"))) SecondaryColor3svEXT)
       ((function void ("GLubyte" "GLubyte" "GLubyte")) SecondaryColor3ubEXT)
       ((function void ((c-pointer "GLubyte"))) SecondaryColor3ubvEXT)
       ((function void ("GLuint" "GLuint" "GLuint")) SecondaryColor3uiEXT)
       ((function void ((c-pointer "GLuint"))) SecondaryColor3uivEXT)
       ((function void ("GLushort" "GLushort" "GLushort"))
        SecondaryColor3usEXT)
       ((function void ((c-pointer "GLushort"))) SecondaryColor3usvEXT)
       ((function void ("GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        SecondaryColorPointerEXT)
       ((function void ("GLenum")) TextureNormalEXT)
       ((function
          void
          ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
        MultiDrawArraysEXT)
       ((function
          void
          ("GLenum"
           (c-pointer "GLsizei")
           "GLenum"
           (c-pointer (c-pointer (const "GLvoid")))
           "GLsizei"))
        MultiDrawElementsEXT)
       ((function void ("GLfloat")) FogCoordfEXT)
       ((function void ((c-pointer "GLfloat"))) FogCoordfvEXT)
       ((function void ("GLdouble")) FogCoorddEXT)
       ((function void ((c-pointer "GLdouble"))) FogCoorddvEXT)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        FogCoordPointerEXT)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) Tangent3bEXT)
       ((function void ((c-pointer "GLbyte"))) Tangent3bvEXT)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) Tangent3dEXT)
       ((function void ((c-pointer "GLdouble"))) Tangent3dvEXT)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) Tangent3fEXT)
       ((function void ((c-pointer "GLfloat"))) Tangent3fvEXT)
       ((function void ("GLint" "GLint" "GLint")) Tangent3iEXT)
       ((function void ((c-pointer "GLint"))) Tangent3ivEXT)
       ((function void ("GLshort" "GLshort" "GLshort")) Tangent3sEXT)
       ((function void ((c-pointer "GLshort"))) Tangent3svEXT)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) Binormal3bEXT)
       ((function void ((c-pointer "GLbyte"))) Binormal3bvEXT)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) Binormal3dEXT)
       ((function void ((c-pointer "GLdouble"))) Binormal3dvEXT)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) Binormal3fEXT)
       ((function void ((c-pointer "GLfloat"))) Binormal3fvEXT)
       ((function void ("GLint" "GLint" "GLint")) Binormal3iEXT)
       ((function void ((c-pointer "GLint"))) Binormal3ivEXT)
       ((function void ("GLshort" "GLshort" "GLshort")) Binormal3sEXT)
       ((function void ((c-pointer "GLshort"))) Binormal3svEXT)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        TangentPointerEXT)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        BinormalPointerEXT)
       ((function void (void)) FinishTextureSUNX)
       ((function void ("GLbyte")) GlobalAlphaFactorbSUN)
       ((function void ("GLshort")) GlobalAlphaFactorsSUN)
       ((function void ("GLint")) GlobalAlphaFactoriSUN)
       ((function void ("GLfloat")) GlobalAlphaFactorfSUN)
       ((function void ("GLdouble")) GlobalAlphaFactordSUN)
       ((function void ("GLubyte")) GlobalAlphaFactorubSUN)
       ((function void ("GLushort")) GlobalAlphaFactorusSUN)
       ((function void ("GLuint")) GlobalAlphaFactoruiSUN)
       ((function void ("GLuint")) ReplacementCodeuiSUN)
       ((function void ("GLushort")) ReplacementCodeusSUN)
       ((function void ("GLubyte")) ReplacementCodeubSUN)
       ((function void ((c-pointer "GLuint"))) ReplacementCodeuivSUN)
       ((function void ((c-pointer "GLushort"))) ReplacementCodeusvSUN)
       ((function void ((c-pointer "GLubyte"))) ReplacementCodeubvSUN)
       ((function
          void
          ("GLenum" "GLsizei" (c-pointer (c-pointer (const "GLvoid")))))
        ReplacementCodePointerSUN)
       ((function
          void
          ("GLubyte" "GLubyte" "GLubyte" "GLubyte" "GLfloat" "GLfloat"))
        Color4ubVertex2fSUN)
       ((function void ((c-pointer "GLubyte") (c-pointer "GLfloat")))
        Color4ubVertex2fvSUN)
       ((function
          void
          ("GLubyte"
           "GLubyte"
           "GLubyte"
           "GLubyte"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        Color4ubVertex3fSUN)
       ((function void ((c-pointer "GLubyte") (c-pointer "GLfloat")))
        Color4ubVertex3fvSUN)
       ((function
          void
          ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        Color3fVertex3fSUN)
       ((function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
        Color3fVertex3fvSUN)
       ((function
          void
          ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        Normal3fVertex3fSUN)
       ((function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
        Normal3fVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        Color4fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        Color4fNormal3fVertex3fvSUN)
       ((function void ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        TexCoord2fVertex3fSUN)
       ((function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
        TexCoord2fVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord4fVertex4fSUN)
       ((function void ((c-pointer "GLfloat") (c-pointer "GLfloat")))
        TexCoord4fVertex4fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLubyte"
           "GLubyte"
           "GLubyte"
           "GLubyte"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord2fColor4ubVertex3fSUN)
       ((function
          void
          ((c-pointer "GLfloat") (c-pointer "GLubyte") (c-pointer "GLfloat")))
        TexCoord2fColor4ubVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord2fColor3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        TexCoord2fColor3fVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord2fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLfloat") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        TexCoord2fNormal3fVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord2fColor4fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")))
        TexCoord2fColor4fNormal3fVertex3fvSUN)
       ((function
          void
          ("GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        TexCoord4fColor4fNormal3fVertex4fSUN)
       ((function
          void
          ((c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")))
        TexCoord4fColor4fNormal3fVertex4fvSUN)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
        ReplacementCodeuiVertex3fSUN)
       ((function void ((c-pointer "GLuint") (c-pointer "GLfloat")))
        ReplacementCodeuiVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLubyte"
           "GLubyte"
           "GLubyte"
           "GLubyte"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiColor4ubVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint") (c-pointer "GLubyte") (c-pointer "GLfloat")))
        ReplacementCodeuiColor4ubVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiColor3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        ReplacementCodeuiColor3fVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        ReplacementCodeuiNormal3fVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiColor4fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")))
        ReplacementCodeuiColor4fNormal3fVertex3fvSUN)
       ((function
          void
          ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        ReplacementCodeuiTexCoord2fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint") (c-pointer "GLfloat") (c-pointer "GLfloat")))
        ReplacementCodeuiTexCoord2fVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")))
        ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)
       ((function
          void
          ("GLuint"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)
       ((function
          void
          ((c-pointer "GLuint")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")
           (c-pointer "GLfloat")))
        ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum"))
        BlendFuncSeparateEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum"))
        BlendFuncSeparateINGR)
       ((function void ("GLfloat")) VertexWeightfEXT)
       ((function void ((c-pointer "GLfloat"))) VertexWeightfvEXT)
       ((function void ("GLsizei" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        VertexWeightPointerEXT)
       ((function void (void)) FlushVertexArrayRangeNV)
       ((function void ("GLsizei" (c-pointer "GLvoid"))) VertexArrayRangeNV)
       ((function void ("GLenum" (c-pointer "GLfloat"))) CombinerParameterfvNV)
       ((function void ("GLenum" "GLfloat")) CombinerParameterfNV)
       ((function void ("GLenum" (c-pointer "GLint"))) CombinerParameterivNV)
       ((function void ("GLenum" "GLint")) CombinerParameteriNV)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum" "GLenum" "GLenum"))
        CombinerInputNV)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLenum"
           "GLenum"
           "GLenum"
           "GLenum"
           "GLenum"
           "GLboolean"
           "GLboolean"
           "GLboolean"))
        CombinerOutputNV)
       ((function void ("GLenum" "GLenum" "GLenum" "GLenum"))
        FinalCombinerInputNV)
       ((function
          void
          ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetCombinerInputParameterfvNV)
       ((function
          void
          ("GLenum" "GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetCombinerInputParameterivNV)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetCombinerOutputParameterfvNV)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetCombinerOutputParameterivNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetFinalCombinerInputParameterfvNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetFinalCombinerInputParameterivNV)
       ((function void (void)) ResizeBuffersMESA)
       ((function void ("GLdouble" "GLdouble")) WindowPos2dMESA)
       ((function void ((c-pointer "GLdouble"))) WindowPos2dvMESA)
       ((function void ("GLfloat" "GLfloat")) WindowPos2fMESA)
       ((function void ((c-pointer "GLfloat"))) WindowPos2fvMESA)
       ((function void ("GLint" "GLint")) WindowPos2iMESA)
       ((function void ((c-pointer "GLint"))) WindowPos2ivMESA)
       ((function void ("GLshort" "GLshort")) WindowPos2sMESA)
       ((function void ((c-pointer "GLshort"))) WindowPos2svMESA)
       ((function void ("GLdouble" "GLdouble" "GLdouble")) WindowPos3dMESA)
       ((function void ((c-pointer "GLdouble"))) WindowPos3dvMESA)
       ((function void ("GLfloat" "GLfloat" "GLfloat")) WindowPos3fMESA)
       ((function void ((c-pointer "GLfloat"))) WindowPos3fvMESA)
       ((function void ("GLint" "GLint" "GLint")) WindowPos3iMESA)
       ((function void ((c-pointer "GLint"))) WindowPos3ivMESA)
       ((function void ("GLshort" "GLshort" "GLshort")) WindowPos3sMESA)
       ((function void ((c-pointer "GLshort"))) WindowPos3svMESA)
       ((function void ("GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        WindowPos4dMESA)
       ((function void ((c-pointer "GLdouble"))) WindowPos4dvMESA)
       ((function void ("GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        WindowPos4fMESA)
       ((function void ((c-pointer "GLfloat"))) WindowPos4fvMESA)
       ((function void ("GLint" "GLint" "GLint" "GLint")) WindowPos4iMESA)
       ((function void ((c-pointer "GLint"))) WindowPos4ivMESA)
       ((function void ("GLshort" "GLshort" "GLshort" "GLshort"))
        WindowPos4sMESA)
       ((function void ((c-pointer "GLshort"))) WindowPos4svMESA)
       ((function
          void
          ("GLenum"
           (c-pointer "GLint")
           (c-pointer "GLsizei")
           "GLsizei"
           "GLint"))
        MultiModeDrawArraysIBM)
       ((function
          void
          ((c-pointer "GLenum")
           (c-pointer "GLsizei")
           "GLenum"
           (c-pointer (c-pointer (const "GLvoid")))
           "GLsizei"
           "GLint"))
        MultiModeDrawElementsIBM)
       ((function void ("GLuint")) TbufferMask3DFX)
       ((function void ("GLclampf" "GLboolean")) SampleMaskEXT)
       ((function void ("GLenum")) SamplePatternEXT)
       ((function void ("GLboolean" "GLboolean" "GLboolean" "GLboolean"))
        TextureColorMaskSGIS)
       ((function void ("GLenum" (c-pointer "GLvoid"))) IglooInterfaceSGIX)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteFencesNV)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenFencesNV)
       ((function "GLboolean" ("GLuint")) IsFenceNV)
       ((function "GLboolean" ("GLuint")) TestFenceNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint"))) GetFenceivNV)
       ((function void ("GLuint")) FinishFenceNV)
       ((function void ("GLuint" "GLenum")) SetFenceNV)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLint"
           "GLboolean"
           (c-pointer "GLvoid")))
        MapControlPointsNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        MapParameterivNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        MapParameterfvNV)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLboolean"
           (c-pointer "GLvoid")))
        GetMapControlPointsNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetMapParameterivNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMapParameterfvNV)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
        GetMapAttribParameterivNV)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLfloat")))
        GetMapAttribParameterfvNV)
       ((function void ("GLenum" "GLenum")) EvalMapsNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        CombinerStageParameterfvNV)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetCombinerStageParameterfvNV)
       ((function
          "GLboolean"
          ("GLsizei" (c-pointer "GLuint") (c-pointer "GLboolean")))
        AreProgramsResidentNV)
       ((function void ("GLenum" "GLuint")) BindProgramNV)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteProgramsNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        ExecuteProgramNV)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenProgramsNV)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLdouble")))
        GetProgramParameterdvNV)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLfloat")))
        GetProgramParameterfvNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint"))) GetProgramivNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLubyte")))
        GetProgramStringNV)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
        GetTrackMatrixivNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLdouble")))
        GetVertexAttribdvNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVertexAttribfvNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribivNV)
       ((function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetVertexAttribPointervNV)
       ((function "GLboolean" ("GLuint")) IsProgramNV)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLubyte")))
        LoadProgramNV)
       ((function
          void
          ("GLenum" "GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        ProgramParameter4dNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        ProgramParameter4dvNV)
       ((function
          void
          ("GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        ProgramParameter4fNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        ProgramParameter4fvNV)
       ((function void ("GLenum" "GLuint" "GLuint" (c-pointer "GLdouble")))
        ProgramParameters4dvNV)
       ((function void ("GLenum" "GLuint" "GLuint" (c-pointer "GLfloat")))
        ProgramParameters4fvNV)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        RequestResidentProgramsNV)
       ((function void ("GLenum" "GLuint" "GLenum" "GLenum")) TrackMatrixNV)
       ((function
          void
          ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        VertexAttribPointerNV)
       ((function void ("GLuint" "GLdouble")) VertexAttrib1dNV)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib1dvNV)
       ((function void ("GLuint" "GLfloat")) VertexAttrib1fNV)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib1fvNV)
       ((function void ("GLuint" "GLshort")) VertexAttrib1sNV)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib1svNV)
       ((function void ("GLuint" "GLdouble" "GLdouble")) VertexAttrib2dNV)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib2dvNV)
       ((function void ("GLuint" "GLfloat" "GLfloat")) VertexAttrib2fNV)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib2fvNV)
       ((function void ("GLuint" "GLshort" "GLshort")) VertexAttrib2sNV)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib2svNV)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib3dNV)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib3dvNV)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib3fNV)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib3fvNV)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort"))
        VertexAttrib3sNV)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib3svNV)
       ((function void ("GLuint" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        VertexAttrib4dNV)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VertexAttrib4dvNV)
       ((function void ("GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        VertexAttrib4fNV)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VertexAttrib4fvNV)
       ((function void ("GLuint" "GLshort" "GLshort" "GLshort" "GLshort"))
        VertexAttrib4sNV)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttrib4svNV)
       ((function void ("GLuint" "GLubyte" "GLubyte" "GLubyte" "GLubyte"))
        VertexAttrib4ubNV)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttrib4ubvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
        VertexAttribs1dvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
        VertexAttribs1fvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
        VertexAttribs1svNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
        VertexAttribs2dvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
        VertexAttribs2fvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
        VertexAttribs2svNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
        VertexAttribs3dvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
        VertexAttribs3fvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
        VertexAttribs3svNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLdouble")))
        VertexAttribs4dvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLfloat")))
        VertexAttribs4fvNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLshort")))
        VertexAttribs4svNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLubyte")))
        VertexAttribs4ubvNV)
       ((function void ("GLenum" (c-pointer "GLint"))) TexBumpParameterivATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) TexBumpParameterfvATI)
       ((function void ("GLenum" (c-pointer "GLint")))
        GetTexBumpParameterivATI)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        GetTexBumpParameterfvATI)
       ((function "GLuint" ("GLuint")) GenFragmentShadersATI)
       ((function void ("GLuint")) BindFragmentShaderATI)
       ((function void ("GLuint")) DeleteFragmentShaderATI)
       ((function void (void)) BeginFragmentShaderATI)
       ((function void (void)) EndFragmentShaderATI)
       ((function void ("GLuint" "GLuint" "GLenum")) PassTexCoordATI)
       ((function void ("GLuint" "GLuint" "GLenum")) SampleMapATI)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        ColorFragmentOp1ATI)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"))
        ColorFragmentOp2ATI)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"))
        ColorFragmentOp3ATI)
       ((function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        AlphaFragmentOp1ATI)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"))
        AlphaFragmentOp2ATI)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"
           "GLuint"))
        AlphaFragmentOp3ATI)
       ((function void ("GLuint" (c-pointer "GLfloat")))
        SetFragmentShaderConstantATI)
       ((function void ("GLenum" "GLint")) PNTrianglesiATI)
       ((function void ("GLenum" "GLfloat")) PNTrianglesfATI)
       ((function "GLuint" ("GLsizei" (c-pointer "GLvoid") "GLenum"))
        NewObjectBufferATI)
       ((function "GLboolean" ("GLuint")) IsObjectBufferATI)
       ((function
          void
          ("GLuint" "GLuint" "GLsizei" (c-pointer "GLvoid") "GLenum"))
        UpdateObjectBufferATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetObjectBufferfvATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetObjectBufferivATI)
       ((function void ("GLuint")) FreeObjectBufferATI)
       ((function void ("GLenum" "GLint" "GLenum" "GLsizei" "GLuint" "GLuint"))
        ArrayObjectATI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLfloat")))
        GetArrayObjectfvATI)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetArrayObjectivATI)
       ((function void ("GLuint" "GLenum" "GLsizei" "GLuint" "GLuint"))
        VariantArrayObjectATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVariantArrayObjectfvATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVariantArrayObjectivATI)
       ((function void (void)) BeginVertexShaderEXT)
       ((function void (void)) EndVertexShaderEXT)
       ((function void ("GLuint")) BindVertexShaderEXT)
       ((function "GLuint" ("GLuint")) GenVertexShadersEXT)
       ((function void ("GLuint")) DeleteVertexShaderEXT)
       ((function void ("GLenum" "GLuint" "GLuint")) ShaderOp1EXT)
       ((function void ("GLenum" "GLuint" "GLuint" "GLuint")) ShaderOp2EXT)
       ((function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint"))
        ShaderOp3EXT)
       ((function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
        SwizzleEXT)
       ((function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
        WriteMaskEXT)
       ((function void ("GLuint" "GLuint" "GLuint")) InsertComponentEXT)
       ((function void ("GLuint" "GLuint" "GLuint")) ExtractComponentEXT)
       ((function "GLuint" ("GLenum" "GLenum" "GLenum" "GLuint"))
        GenSymbolsEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLvoid")))
        SetInvariantEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLvoid")))
        SetLocalConstantEXT)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VariantbvEXT)
       ((function void ("GLuint" (c-pointer "GLshort"))) VariantsvEXT)
       ((function void ("GLuint" (c-pointer "GLint"))) VariantivEXT)
       ((function void ("GLuint" (c-pointer "GLfloat"))) VariantfvEXT)
       ((function void ("GLuint" (c-pointer "GLdouble"))) VariantdvEXT)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VariantubvEXT)
       ((function void ("GLuint" (c-pointer "GLushort"))) VariantusvEXT)
       ((function void ("GLuint" (c-pointer "GLuint"))) VariantuivEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLvoid")))
        VariantPointerEXT)
       ((function void ("GLuint")) EnableVariantClientStateEXT)
       ((function void ("GLuint")) DisableVariantClientStateEXT)
       ((function "GLuint" ("GLenum" "GLenum")) BindLightParameterEXT)
       ((function "GLuint" ("GLenum" "GLenum")) BindMaterialParameterEXT)
       ((function "GLuint" ("GLenum" "GLenum" "GLenum"))
        BindTexGenParameterEXT)
       ((function "GLuint" ("GLenum" "GLenum")) BindTextureUnitParameterEXT)
       ((function "GLuint" ("GLenum")) BindParameterEXT)
       ((function "GLboolean" ("GLuint" "GLenum")) IsVariantEnabledEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
        GetVariantBooleanvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVariantIntegervEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVariantFloatvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetVariantPointervEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
        GetInvariantBooleanvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetInvariantIntegervEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetInvariantFloatvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLboolean")))
        GetLocalConstantBooleanvEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetLocalConstantIntegervEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetLocalConstantFloatvEXT)
       ((function void ("GLenum" "GLshort")) VertexStream1sATI)
       ((function void ("GLenum" (c-pointer "GLshort"))) VertexStream1svATI)
       ((function void ("GLenum" "GLint")) VertexStream1iATI)
       ((function void ("GLenum" (c-pointer "GLint"))) VertexStream1ivATI)
       ((function void ("GLenum" "GLfloat")) VertexStream1fATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) VertexStream1fvATI)
       ((function void ("GLenum" "GLdouble")) VertexStream1dATI)
       ((function void ("GLenum" (c-pointer "GLdouble"))) VertexStream1dvATI)
       ((function void ("GLenum" "GLshort" "GLshort")) VertexStream2sATI)
       ((function void ("GLenum" (c-pointer "GLshort"))) VertexStream2svATI)
       ((function void ("GLenum" "GLint" "GLint")) VertexStream2iATI)
       ((function void ("GLenum" (c-pointer "GLint"))) VertexStream2ivATI)
       ((function void ("GLenum" "GLfloat" "GLfloat")) VertexStream2fATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) VertexStream2fvATI)
       ((function void ("GLenum" "GLdouble" "GLdouble")) VertexStream2dATI)
       ((function void ("GLenum" (c-pointer "GLdouble"))) VertexStream2dvATI)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort"))
        VertexStream3sATI)
       ((function void ("GLenum" (c-pointer "GLshort"))) VertexStream3svATI)
       ((function void ("GLenum" "GLint" "GLint" "GLint")) VertexStream3iATI)
       ((function void ("GLenum" (c-pointer "GLint"))) VertexStream3ivATI)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        VertexStream3fATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) VertexStream3fvATI)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        VertexStream3dATI)
       ((function void ("GLenum" (c-pointer "GLdouble"))) VertexStream3dvATI)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort" "GLshort"))
        VertexStream4sATI)
       ((function void ("GLenum" (c-pointer "GLshort"))) VertexStream4svATI)
       ((function void ("GLenum" "GLint" "GLint" "GLint" "GLint"))
        VertexStream4iATI)
       ((function void ("GLenum" (c-pointer "GLint"))) VertexStream4ivATI)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        VertexStream4fATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) VertexStream4fvATI)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        VertexStream4dATI)
       ((function void ("GLenum" (c-pointer "GLdouble"))) VertexStream4dvATI)
       ((function void ("GLenum" "GLbyte" "GLbyte" "GLbyte"))
        NormalStream3bATI)
       ((function void ("GLenum" (c-pointer "GLbyte"))) NormalStream3bvATI)
       ((function void ("GLenum" "GLshort" "GLshort" "GLshort"))
        NormalStream3sATI)
       ((function void ("GLenum" (c-pointer "GLshort"))) NormalStream3svATI)
       ((function void ("GLenum" "GLint" "GLint" "GLint")) NormalStream3iATI)
       ((function void ("GLenum" (c-pointer "GLint"))) NormalStream3ivATI)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        NormalStream3fATI)
       ((function void ("GLenum" (c-pointer "GLfloat"))) NormalStream3fvATI)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        NormalStream3dATI)
       ((function void ("GLenum" (c-pointer "GLdouble"))) NormalStream3dvATI)
       ((function void ("GLenum")) ClientActiveVertexStreamATI)
       ((function void ("GLenum" "GLint")) VertexBlendEnviATI)
       ((function void ("GLenum" "GLfloat")) VertexBlendEnvfATI)
       ((function void ("GLenum" (c-pointer "GLvoid"))) ElementPointerATI)
       ((function void ("GLenum" "GLsizei")) DrawElementArrayATI)
       ((function void ("GLenum" "GLuint" "GLuint" "GLsizei"))
        DrawRangeElementArrayATI)
       ((function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
        DrawMeshArraysSUN)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenOcclusionQueriesNV)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        DeleteOcclusionQueriesNV)
       ((function "GLboolean" ("GLuint")) IsOcclusionQueryNV)
       ((function void ("GLuint")) BeginOcclusionQueryNV)
       ((function void (void)) EndOcclusionQueryNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetOcclusionQueryivNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLuint")))
        GetOcclusionQueryuivNV)
       ((function void ("GLenum" "GLint")) PointParameteriNV)
       ((function void ("GLenum" (c-pointer "GLint"))) PointParameterivNV)
       ((function void ("GLenum")) ActiveStencilFaceEXT)
       ((function void ("GLenum" (c-pointer "GLvoid"))) ElementPointerAPPLE)
       ((function void ("GLenum" "GLint" "GLsizei")) DrawElementArrayAPPLE)
       ((function void ("GLenum" "GLuint" "GLuint" "GLint" "GLsizei"))
        DrawRangeElementArrayAPPLE)
       ((function
          void
          ("GLenum" (c-pointer "GLint") (c-pointer "GLsizei") "GLsizei"))
        MultiDrawElementArrayAPPLE)
       ((function
          void
          ("GLenum"
           "GLuint"
           "GLuint"
           (c-pointer "GLint")
           (c-pointer "GLsizei")
           "GLsizei"))
        MultiDrawRangeElementArrayAPPLE)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenFencesAPPLE)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteFencesAPPLE)
       ((function void ("GLuint")) SetFenceAPPLE)
       ((function "GLboolean" ("GLuint")) IsFenceAPPLE)
       ((function "GLboolean" ("GLuint")) TestFenceAPPLE)
       ((function void ("GLuint")) FinishFenceAPPLE)
       ((function "GLboolean" ("GLenum" "GLuint")) TestObjectAPPLE)
       ((function void ("GLenum" "GLint")) FinishObjectAPPLE)
       ((function void ("GLuint")) BindVertexArrayAPPLE)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        DeleteVertexArraysAPPLE)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenVertexArraysAPPLE)
       ((function "GLboolean" ("GLuint")) IsVertexArrayAPPLE)
       ((function void ("GLsizei" (c-pointer "GLvoid"))) VertexArrayRangeAPPLE)
       ((function void ("GLsizei" (c-pointer "GLvoid")))
        FlushVertexArrayRangeAPPLE)
       ((function void ("GLenum" "GLint")) VertexArrayParameteriAPPLE)
       ((function void ("GLsizei" (c-pointer "GLenum"))) DrawBuffersATI)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer "GLubyte")
           "GLfloat"
           "GLfloat"
           "GLfloat"
           "GLfloat"))
        ProgramNamedParameter4fNV)
       ((function
          void
          ("GLuint"
           "GLsizei"
           (c-pointer "GLubyte")
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"))
        ProgramNamedParameter4dNV)
       ((function
          void
          ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLfloat")))
        ProgramNamedParameter4fvNV)
       ((function
          void
          ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLdouble")))
        ProgramNamedParameter4dvNV)
       ((function
          void
          ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLfloat")))
        GetProgramNamedParameterfvNV)
       ((function
          void
          ("GLuint" "GLsizei" (c-pointer "GLubyte") (c-pointer "GLdouble")))
        GetProgramNamedParameterdvNV)
       ((function void (short short)) Vertex2hNV)
       ((function void (s16vector)) Vertex2hvNV)
       ((function void (short short short)) Vertex3hNV)
       ((function void (s16vector)) Vertex3hvNV)
       ((function void (short short short short)) Vertex4hNV)
       ((function void (s16vector)) Vertex4hvNV)
       ((function void (short short short)) Normal3hNV)
       ((function void (s16vector)) Normal3hvNV)
       ((function void (short short short)) Color3hNV)
       ((function void (s16vector)) Color3hvNV)
       ((function void (short short short short)) Color4hNV)
       ((function void (s16vector)) Color4hvNV)
       ((function void (short)) TexCoord1hNV)
       ((function void (s16vector)) TexCoord1hvNV)
       ((function void (short short)) TexCoord2hNV)
       ((function void (s16vector)) TexCoord2hvNV)
       ((function void (short short short)) TexCoord3hNV)
       ((function void (s16vector)) TexCoord3hvNV)
       ((function void (short short short short)) TexCoord4hNV)
       ((function void (s16vector)) TexCoord4hvNV)
       ((function void ("GLenum" short)) MultiTexCoord1hNV)
       ((function void ("GLenum" s16vector)) MultiTexCoord1hvNV)
       ((function void ("GLenum" short short)) MultiTexCoord2hNV)
       ((function void ("GLenum" s16vector)) MultiTexCoord2hvNV)
       ((function void ("GLenum" short short short)) MultiTexCoord3hNV)
       ((function void ("GLenum" s16vector)) MultiTexCoord3hvNV)
       ((function void ("GLenum" short short short short)) MultiTexCoord4hNV)
       ((function void ("GLenum" s16vector)) MultiTexCoord4hvNV)
       ((function void (short)) FogCoordhNV)
       ((function void (s16vector)) FogCoordhvNV)
       ((function void (short short short)) SecondaryColor3hNV)
       ((function void (s16vector)) SecondaryColor3hvNV)
       ((function void (short)) VertexWeighthNV)
       ((function void (s16vector)) VertexWeighthvNV)
       ((function void ("GLuint" short)) VertexAttrib1hNV)
       ((function void ("GLuint" s16vector)) VertexAttrib1hvNV)
       ((function void ("GLuint" short short)) VertexAttrib2hNV)
       ((function void ("GLuint" s16vector)) VertexAttrib2hvNV)
       ((function void ("GLuint" short short short)) VertexAttrib3hNV)
       ((function void ("GLuint" s16vector)) VertexAttrib3hvNV)
       ((function void ("GLuint" short short short short)) VertexAttrib4hNV)
       ((function void ("GLuint" s16vector)) VertexAttrib4hvNV)
       ((function void ("GLuint" "GLsizei" s16vector)) VertexAttribs1hvNV)
       ((function void ("GLuint" "GLsizei" s16vector)) VertexAttribs2hvNV)
       ((function void ("GLuint" "GLsizei" s16vector)) VertexAttribs3hvNV)
       ((function void ("GLuint" "GLsizei" s16vector)) VertexAttribs4hvNV)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        PixelDataRangeNV)
       ((function void ("GLenum")) FlushPixelDataRangeNV)
       ((function void (void)) PrimitiveRestartNV)
       ((function void ("GLuint")) PrimitiveRestartIndexNV)
       ((function (c-pointer "GLvoid") ("GLuint")) MapObjectBufferATI)
       ((function void ("GLuint")) UnmapObjectBufferATI)
       ((function
          void
          ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei" "GLuint" "GLuint"))
        VertexAttribArrayObjectATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVertexAttribArrayObjectfvATI)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribArrayObjectivATI)
       ((function void ("GLbyte" "GLbyte")) Vertex2bOES)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) Vertex3bOES)
       ((function void ("GLbyte" "GLbyte" "GLbyte" "GLbyte")) Vertex4bOES)
       ((function void ((c-pointer "GLbyte"))) Vertex2bvOES)
       ((function void ((c-pointer "GLbyte"))) Vertex3bvOES)
       ((function void ((c-pointer "GLbyte"))) Vertex4bvOES)
       ((function void ("GLbyte")) TexCoord1bOES)
       ((function void ("GLbyte" "GLbyte")) TexCoord2bOES)
       ((function void ("GLbyte" "GLbyte" "GLbyte")) TexCoord3bOES)
       ((function void ("GLbyte" "GLbyte" "GLbyte" "GLbyte")) TexCoord4bOES)
       ((function void ((c-pointer "GLbyte"))) TexCoord1bvOES)
       ((function void ((c-pointer "GLbyte"))) TexCoord2bvOES)
       ((function void ((c-pointer "GLbyte"))) TexCoord3bvOES)
       ((function void ((c-pointer "GLbyte"))) TexCoord4bvOES)
       ((function void ("GLenum" "GLbyte")) MultiTexCoord1bOES)
       ((function void ("GLenum" "GLbyte" "GLbyte")) MultiTexCoord2bOES)
       ((function void ("GLenum" "GLbyte" "GLbyte" "GLbyte"))
        MultiTexCoord3bOES)
       ((function void ("GLenum" "GLbyte" "GLbyte" "GLbyte" "GLbyte"))
        MultiTexCoord4bOES)
       ((function void ("GLenum" (c-pointer "GLbyte"))) MultiTexCoord1bvOES)
       ((function void ("GLenum" (c-pointer "GLbyte"))) MultiTexCoord2bvOES)
       ((function void ("GLenum" (c-pointer "GLbyte"))) MultiTexCoord3bvOES)
       ((function void ("GLenum" (c-pointer "GLbyte"))) MultiTexCoord4bvOES)
       ((function void (integer integer)) Vertex2xOES)
       ((function void (integer integer integer)) Vertex3xOES)
       ((function void (integer integer integer integer)) Vertex4xOES)
       ((function void (s32vector)) Vertex2xvOES)
       ((function void (s32vector)) Vertex3xvOES)
       ((function void (s32vector)) Vertex4xvOES)
       ((function void (integer integer integer)) Normal3xOES)
       ((function void (s32vector)) Normal3xvOES)
       ((function void (integer)) TexCoord1xOES)
       ((function void (integer integer)) TexCoord2xOES)
       ((function void (integer integer integer)) TexCoord3xOES)
       ((function void (integer integer integer integer)) TexCoord4xOES)
       ((function void (s32vector)) TexCoord1xvOES)
       ((function void (s32vector)) TexCoord2xvOES)
       ((function void (s32vector)) TexCoord3xvOES)
       ((function void (s32vector)) TexCoord4xvOES)
       ((function void ("GLenum" integer)) MultiTexCoord1xOES)
       ((function void ("GLenum" integer integer)) MultiTexCoord2xOES)
       ((function void ("GLenum" integer integer integer)) MultiTexCoord3xOES)
       ((function void ("GLenum" integer integer integer integer))
        MultiTexCoord4xOES)
       ((function void ("GLenum" s32vector)) MultiTexCoord1xvOES)
       ((function void ("GLenum" s32vector)) MultiTexCoord2xvOES)
       ((function void ("GLenum" s32vector)) MultiTexCoord3xvOES)
       ((function void ("GLenum" s32vector)) MultiTexCoord4xvOES)
       ((function void (integer integer integer)) Color3xOES)
       ((function void (integer integer integer integer)) Color4xOES)
       ((function void (s32vector)) Color3xvOES)
       ((function void (s32vector)) Color4xvOES)
       ((function void (integer)) IndexxOES)
       ((function void (s32vector)) IndexxvOES)
       ((function void (integer integer integer integer)) RectxOES)
       ("_ALLEGRO_glRectxvOES_t" RectxvOES)
       ((function void (integer integer)) DepthRangexOES)
       ("_ALLEGRO_glLoadMatrixxOES_t" LoadMatrixxOES)
       ("_ALLEGRO_glMultMatrixxOES_t" MultMatrixxOES)
       ("_ALLEGRO_glLoadTransposeMatrixxOES_t" LoadTransposeMatrixxOES)
       ("_ALLEGRO_glMultTransposeMatrixxOES_t" MultTransposeMatrixxOES)
       ((function void (integer integer integer integer)) RotatexOES)
       ((function void (integer integer integer)) ScalexOES)
       ((function void (integer integer integer)) TranslatexOES)
       ((function void (integer integer integer integer integer integer))
        FrustumxOES)
       ((function void (integer integer integer integer integer integer))
        OrthoxOES)
       ((function void ("GLenum" "GLenum" integer)) TexGenxOES)
       ((function void ("GLenum" "GLenum" s32vector)) TexGenxvOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetTexGenxvOES)
       ((function void ("GLenum" s32vector)) ClipPlanexOES)
       ((function void ("GLenum" s32vector)) GetClipPlanexOES)
       ((function void (integer integer)) RasterPos2xOES)
       ((function void (integer integer integer)) RasterPos3xOES)
       ((function void (integer integer integer integer)) RasterPos4xOES)
       ((function void (s32vector)) RasterPos2xvOES)
       ((function void (s32vector)) RasterPos3xvOES)
       ((function void (s32vector)) RasterPos4xvOES)
       ((function void ("GLenum" "GLenum" integer)) MaterialxOES)
       ((function void ("GLenum" "GLenum" s32vector)) MaterialxvOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetMaterialxOES)
       ((function void ("GLenum" "GLenum" integer)) LightxOES)
       ((function void ("GLenum" "GLenum" s32vector)) LightxvOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetLightxOES)
       ((function void ("GLenum" integer)) LightModelxOES)
       ((function void ("GLenum" s32vector)) LightModelxvOES)
       ((function void (integer)) PointSizexOES)
       ((function void (integer)) LineWidthxOES)
       ((function void (integer integer)) PolygonOffsetxOES)
       ((function void ("GLenum" integer)) PixelStorex)
       ((function void ("GLenum" integer)) PixelTransferxOES)
       ((function void ("GLenum" "GLint" s32vector)) PixelMapx)
       ((function void ("GLenum" "GLint" s32vector)) GetPixelMapxv)
       ((function void ("GLenum" "GLenum" integer)) ConvolutionParameterxOES)
       ((function void ("GLenum" "GLenum" s32vector))
        ConvolutionParameterxvOES)
       ((function void ("GLenum" "GLenum" s32vector))
        GetConvolutionParameterxvOES)
       ((function void ("GLenum" "GLenum" s32vector))
        GetHistogramParameterxvOES)
       ((function void (integer integer)) PixelZoomxOES)
       ((function
          void
          ("GLsizei"
           "GLsizei"
           integer
           integer
           integer
           integer
           (c-pointer "GLubyte")))
        BitmapxOES)
       ((function void ("GLenum" "GLenum" integer)) TexParameterxOES)
       ((function void ("GLenum" "GLenum" s32vector)) TexParameterxvOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetTexParameterxvOES)
       ((function void ("GLenum" "GLint" "GLenum" s32vector))
        GetTexLevelParameterxvOES)
       ((function void ("GLsizei" (c-pointer "GLuint") s32vector))
        PrioritizeTexturesxOES)
       ((function void ("GLenum" "GLenum" integer)) TexEnvxOES)
       ((function void ("GLenum" "GLenum" s32vector)) TexEnvxvOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetTexEnvxvOES)
       ((function void ("GLenum" integer)) FogxOES)
       ((function void ("GLenum" s32vector)) FogxvOES)
       ((function void (integer "GLboolean")) SampleCoverageOES)
       ((function void ("GLenum" integer)) AlphaFuncxOES)
       ((function void (integer integer integer integer)) BlendColorxOES)
       ((function void (integer integer integer integer)) ClearColorxOES)
       ((function void (integer)) ClearDepthxOES)
       ((function void (integer integer integer integer)) ClearAccumxOES)
       ((function void ("GLenum" integer)) AccumxOES)
       ((function void ("GLenum" integer integer "GLint" "GLint" s32vector))
        Map1xOES)
       ((function
          void
          ("GLenum"
           integer
           integer
           "GLint"
           "GLint"
           integer
           integer
           "GLint"
           "GLint"
           s32vector))
        Map2xOES)
       ((function void ("GLint" integer integer)) MapGrid1xOES)
       ((function void ("GLint" integer integer integer integer)) MapGrid2xOES)
       ((function void ("GLenum" "GLenum" s32vector)) GetMapxvOES)
       ((function void (integer)) EvalCoord1xOES)
       ((function void (integer integer)) EvalCoord2xOES)
       ((function void (s32vector)) EvalCoord1xvOES)
       ((function void (s32vector)) EvalCoord2xvOES)
       ((function void ("GLsizei" "GLenum" s32vector)) FeedbackBufferxOES)
       ((function void (integer)) PassThroughxOES)
       ((function void ("GLenum" s32vector)) GetFixedvOES)
       ((function void ("GLclampf" "GLclampf")) DepthRangefOES)
       ((function
          void
          ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        FrustumfOES)
       ((function
          void
          ("GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        OrthofOES)
       ((function void ("GLenum" (c-pointer "GLfloat"))) ClipPlanefOES)
       ((function void ("GLenum" (c-pointer "GLfloat"))) GetClipPlanefOES)
       ((function void ("GLclampd")) ClearDepthfOES)
       ("_ALLEGRO_glQueryMatrixxOES_t" QueryMatrixxOES)
       ((function void ("GLclampd" "GLclampd")) DepthBoundsEXT)
       ((function void ("GLenum" "GLenum")) BlendEquationSeparateEXT)
       ((function "GLboolean" ("GLuint")) IsRenderbufferEXT)
       ((function void ("GLenum" "GLuint")) BindRenderbufferEXT)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        DeleteRenderbuffersEXT)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenRenderbuffersEXT)
       ((function void ("GLenum" "GLenum" "GLsizei" "GLsizei"))
        RenderbufferStorageEXT)
       ((function void ("GLenum" "GLenum" (c-pointer "GLint")))
        GetRenderbufferParameterivEXT)
       ((function "GLboolean" ("GLuint")) IsFramebufferEXT)
       ((function void ("GLenum" "GLuint")) BindFramebufferEXT)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeleteFramebuffersEXT)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenFramebuffersEXT)
       ((function "GLenum" ("GLenum")) CheckFramebufferStatusEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTexture1DEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTexture2DEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        FramebufferTexture3DEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint"))
        FramebufferRenderbufferEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetFramebufferAttachmentParameterivEXT)
       ((function void ("GLenum")) GenerateMipmapEXT)
       ((function void ("GLsizei" (c-pointer "GLvoid"))) StringMarkerGREMEDY)
       ((function void ("GLsizei" "GLuint")) StencilClearTagEXT)
       ((function
          void
          ("GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLbitfield"
           "GLenum"))
        BlitFramebufferEXT)
       ((function void ("GLenum" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
        RenderbufferStorageMultisampleEXT)
       ((function void ("GLuint" "GLenum" (c-pointer integer64)))
        GetQueryObjecti64vEXT)
       ((function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
        GetQueryObjectui64vEXT)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
        ProgramEnvParameters4fvEXT)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
        ProgramLocalParameters4fvEXT)
       ((function void ("GLenum" "GLenum" "GLint")) BufferParameteriAPPLE)
       ((function void ("GLenum" "ptrdiff_t" "ptrdiff_t"))
        FlushMappedBufferRangeAPPLE)
       ((function void ("GLuint" "GLint" "GLuint")) UniformBufferEXT)
       ((function "GLint" ("GLuint" "GLint")) GetUniformBufferSizeEXT)
       ((function "ptrdiff_t" ("GLuint" "GLint")) GetUniformOffsetEXT)
       ((function
          void
          ("GLuint" "GLboolean" "GLboolean" "GLboolean" "GLboolean"))
        ColorMaskIndexedEXT)
       ((function void ("GLenum" "GLuint" (c-pointer "GLboolean")))
        GetBooleanIndexedvEXT)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint")))
        GetIntegerIndexedvEXT)
       ((function void ("GLenum" "GLuint")) EnableIndexedEXT)
       ((function void ("GLenum" "GLuint")) DisableIndexedEXT)
       ((function "GLboolean" ("GLenum" "GLuint")) IsEnabledIndexedEXT)
       ((function void ("GLenum" "GLint" "GLsizei" "GLsizei"))
        DrawArraysInstancedEXT)
       ((function
          void
          ("GLenum" "GLsizei" "GLenum" (c-pointer "GLvoid") "GLsizei"))
        DrawElementsInstancedEXT)
       ((function void ("GLuint" "GLenum" "GLint")) ProgramParameteriEXT)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint"))
        FramebufferTextureEXT)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint" "GLenum"))
        FramebufferTextureFaceEXT)
       ((function void ("GLuint" "GLint")) VertexAttribI1iEXT)
       ((function void ("GLuint" "GLint" "GLint")) VertexAttribI2iEXT)
       ((function void ("GLuint" "GLint" "GLint" "GLint")) VertexAttribI3iEXT)
       ((function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
        VertexAttribI4iEXT)
       ((function void ("GLuint" "GLuint")) VertexAttribI1uiEXT)
       ((function void ("GLuint" "GLuint" "GLuint")) VertexAttribI2uiEXT)
       ((function void ("GLuint" "GLuint" "GLuint" "GLuint"))
        VertexAttribI3uiEXT)
       ((function void ("GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        VertexAttribI4uiEXT)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI1ivEXT)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI2ivEXT)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI3ivEXT)
       ((function void ("GLuint" (c-pointer "GLint"))) VertexAttribI4ivEXT)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI1uivEXT)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI2uivEXT)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI3uivEXT)
       ((function void ("GLuint" (c-pointer "GLuint"))) VertexAttribI4uivEXT)
       ((function void ("GLuint" (c-pointer "GLbyte"))) VertexAttribI4bvEXT)
       ((function void ("GLuint" (c-pointer "GLshort"))) VertexAttribI4svEXT)
       ((function void ("GLuint" (c-pointer "GLubyte"))) VertexAttribI4ubvEXT)
       ((function void ("GLuint" (c-pointer "GLushort"))) VertexAttribI4usvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        VertexAttribIPointerEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribIivEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVertexAttribIuivEXT)
       ((function void ("GLint" "GLuint")) Uniform1uiEXT)
       ((function void ("GLint" "GLuint" "GLuint")) Uniform2uiEXT)
       ((function void ("GLint" "GLuint" "GLuint" "GLuint")) Uniform3uiEXT)
       ((function void ("GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
        Uniform4uiEXT)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint")))
        Uniform1uivEXT)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint")))
        Uniform2uivEXT)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint")))
        Uniform3uivEXT)
       ((function void ("GLint" "GLsizei" (c-pointer "GLuint")))
        Uniform4uivEXT)
       ((function void ("GLuint" "GLint" (c-pointer "GLint")))
        GetUniformuivEXT)
       ((function void ("GLuint" "GLuint" c-string)) BindFragDataLocationEXT)
       ((function "GLint" ("GLuint" c-string)) GetFragDataLocationEXT)
       ((function void ("GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        FramebufferTextureLayerEXT)
       ((function void ("GLenum" "GLenum" "GLuint")) TexBufferEXT)
       ((function void ("GLdouble" "GLdouble")) DepthRangedNV)
       ((function void ("GLdouble")) ClearDepthdNV)
       ((function void ("GLdouble" "GLdouble")) DepthBoundsdNV)
       ((function
          void
          ("GLenum" "GLsizei" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
        RenderbufferStorageMultsampleCoverageNV)
       ((function void ("GLenum" "GLint")) ProgramVertexLimitNV)
       ((function void ("GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
        ProgramLocalParameterI4iNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint")))
        ProgramLocalParameterI4ivNV)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
        ProgramLocalParametersI4ivNV)
       ((function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        ProgramLocalParameterI4uiNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLuint")))
        ProgramLocalParameterI4uivNV)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
        ProgramLocalParametersI4uivNV)
       ((function void ("GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
        ProgramEnvParameterI4iNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint")))
        ProgramEnvParameterI4ivNV)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
        ProgramEnvParametersI4ivNV)
       ((function void ("GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        ProgramEnvParameterI4uiNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLuint")))
        ProgramEnvParameterI4uivNV)
       ((function void ("GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
        ProgramEnvParametersI4uivNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint")))
        GetProgramLocalParameterIivNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLuint")))
        GetProgramLocalParameterIuivNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLint")))
        GetProgramEnvParameterIivNV)
       ((function void ("GLenum" "GLuint" (c-pointer "GLuint")))
        GetProgramEnvParameterIuivNV)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLsizei" (c-pointer "GLfloat")))
        ProgramBufferParametersfvNV)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLsizei" (c-pointer "GLint")))
        ProgramBufferParametersIivNV)
       ((function
          void
          ("GLenum" "GLuint" "GLuint" "GLuint" (c-pointer "GLuint")))
        ProgramBufferParametersIuivNV)
       ((function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
        BindBufferRangeNV)
       ((function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t"))
        BindBufferOffsetNV)
       ((function void ("GLenum" "GLuint" "GLuint")) BindBufferBaseNV)
       ((function void ("GLsizei" (c-pointer "GLint") "GLenum"))
        TransformFeedbackAttribsNV)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
        TransformFeedbackVaryingsNV)
       ((function void ("GLenum")) BeginTransformFeedbackNV)
       ((function void (void)) EndTransformFeedbackNV)
       ((function "GLint" ("GLuint" c-string)) GetVaryingLocationNV)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLsizei"
           (c-pointer "GLsizei")
           (c-pointer "GLsizei")
           (c-pointer "GLenum")
           c-string))
        GetActiveVaryingNV)
       ((function void ("GLuint" c-string)) ActiveVaryingNV)
       ((function void ("GLuint" "GLuint" (c-pointer "GLint")))
        GetTransformFeedbackVaryingNV)
       ((function void (void)) FrameTerminatorGREMEDY)
       ((function void ("GLuint" "GLenum")) BeginConditionalRenderNV)
       ((function void (void)) EndConditionalRenderNV)
       ((function void ("GLenum")) BeginTransformFeedbackEXT)
       ((function void (void)) EndTransformFeedbackEXT)
       ((function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t" "ptrdiff_t"))
        BindBufferRangeEXT)
       ((function void ("GLenum" "GLuint" "GLuint" "ptrdiff_t"))
        BindBufferOffsetEXT)
       ((function void ("GLenum" "GLuint" "GLuint")) BindBufferBaseEXT)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLint") "GLenum"))
        TransformFeedbackVaryingsEXT)
       ((function void ("GLuint" "GLuint" (c-pointer "GLint")))
        GetTransformFeedbackVaryingEXT)
       ((function void ("GLbitfield")) ClientAttribDefaultEXT)
       ((function void ("GLbitfield")) PushClientAttribDefaultEXT)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MatrixLoadfEXT)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MatrixLoaddEXT)
       ((function void ("GLenum" (c-pointer "GLfloat"))) MatrixMultfEXT)
       ((function void ("GLenum" (c-pointer "GLdouble"))) MatrixMultdEXT)
       ((function void ("GLenum")) MatrixLoadIdentityEXT)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        MatrixRotatefEXT)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble" "GLdouble"))
        MatrixRotatedEXT)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        MatrixScalefEXT)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        MatrixScaledEXT)
       ((function void ("GLenum" "GLfloat" "GLfloat" "GLfloat"))
        MatrixTranslatefEXT)
       ((function void ("GLenum" "GLdouble" "GLdouble" "GLdouble"))
        MatrixTranslatedEXT)
       ((function
          void
          ("GLenum"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"))
        MatrixFrustumEXT)
       ((function
          void
          ("GLenum"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"))
        MatrixOrthoEXT)
       ((function void ("GLenum")) MatrixPopEXT)
       ((function void ("GLenum")) MatrixPushEXT)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        MatrixLoadTransposefEXT)
       ((function void ("GLenum" (c-pointer "GLdouble")))
        MatrixLoadTransposedEXT)
       ((function void ("GLenum" (c-pointer "GLfloat")))
        MatrixMultTransposefEXT)
       ((function void ("GLenum" (c-pointer "GLdouble")))
        MatrixMultTransposedEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLfloat"))
        TextureParameterfEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLfloat")))
        TextureParameterfvEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLint"))
        TextureParameteriEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        TextureParameterivEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureImage1DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureImage2DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureSubImage1DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureSubImage2DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLint"))
        CopyTextureImage1DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLint"))
        CopyTextureImage2DEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
        CopyTextureSubImage1DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyTextureSubImage2DEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLint" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetTextureImageEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetTextureParameterfvEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetTextureParameterivEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLint" "GLenum" (c-pointer "GLfloat")))
        GetTextureLevelParameterfvEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLint" "GLenum" (c-pointer "GLint")))
        GetTextureLevelParameterivEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureImage3DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        TextureSubImage3DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyTextureSubImage3DEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLfloat"))
        MultiTexParameterfEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        MultiTexParameterfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLint"))
        MultiTexParameteriEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        MultiTexParameterivEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexImage2DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexSubImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexSubImage2DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLint"))
        CopyMultiTexImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLint"))
        CopyMultiTexImage2DEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLint" "GLint" "GLint" "GLint" "GLsizei"))
        CopyMultiTexSubImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyMultiTexSubImage2DEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLint" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetMultiTexImageEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMultiTexParameterfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetMultiTexParameterivEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLint" "GLenum" (c-pointer "GLfloat")))
        GetMultiTexLevelParameterfvEXT)
       ((function
          void
          ("GLenum" "GLenum" "GLint" "GLenum" (c-pointer "GLint")))
        GetMultiTexLevelParameterivEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexImage3DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLenum"
           (c-pointer "GLvoid")))
        MultiTexSubImage3DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"))
        CopyMultiTexSubImage3DEXT)
       ((function void ("GLenum" "GLenum" "GLuint")) BindMultiTextureEXT)
       ((function void ("GLenum" "GLuint")) EnableClientStateIndexedEXT)
       ((function void ("GLenum" "GLuint")) DisableClientStateIndexedEXT)
       ((function
          void
          ("GLenum" "GLint" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        MultiTexCoordPointerEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLfloat")) MultiTexEnvfEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        MultiTexEnvfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLint")) MultiTexEnviEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        MultiTexEnvivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLdouble"))
        MultiTexGendEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLdouble")))
        MultiTexGendvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLfloat")) MultiTexGenfEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        MultiTexGenfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLint")) MultiTexGeniEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        MultiTexGenivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMultiTexEnvfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetMultiTexEnvivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLdouble")))
        GetMultiTexGendvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLfloat")))
        GetMultiTexGenfvEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetMultiTexGenivEXT)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        GetFloatIndexedvEXT)
       ((function void ("GLenum" "GLuint" (c-pointer "GLdouble")))
        GetDoubleIndexedvEXT)
       ((function void ("GLenum" "GLuint" (c-pointer (c-pointer "GLvoid"))))
        GetPointerIndexedvEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureImage3DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureImage2DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureImage1DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureSubImage3DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureSubImage2DEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedTextureSubImage1DEXT)
       ((function void ("GLuint" "GLenum" "GLint" (c-pointer "GLvoid")))
        GetCompressedTextureImageEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexImage3DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexImage2DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLenum"
           "GLsizei"
           "GLint"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexImage1DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexSubImage3DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLint"
           "GLsizei"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexSubImage2DEXT)
       ((function
          void
          ("GLenum"
           "GLenum"
           "GLint"
           "GLint"
           "GLsizei"
           "GLenum"
           "GLsizei"
           (c-pointer "GLvoid")))
        CompressedMultiTexSubImage1DEXT)
       ((function void ("GLenum" "GLenum" "GLint" (c-pointer "GLvoid")))
        GetCompressedMultiTexImageEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLenum" "GLsizei" (c-pointer "GLvoid")))
        NamedProgramStringEXT)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLuint"
           "GLdouble"
           "GLdouble"
           "GLdouble"
           "GLdouble"))
        NamedProgramLocalParameter4dEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLdouble")))
        NamedProgramLocalParameter4dvEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        NamedProgramLocalParameter4fEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLfloat")))
        NamedProgramLocalParameter4fvEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLdouble")))
        GetNamedProgramLocalParameterdvEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLfloat")))
        GetNamedProgramLocalParameterfvEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetNamedProgramivEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLvoid")))
        GetNamedProgramStringEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLfloat")))
        NamedProgramLocalParameters4fvEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLint" "GLint" "GLint" "GLint"))
        NamedProgramLocalParameterI4iEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLint")))
        NamedProgramLocalParameterI4ivEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLint")))
        NamedProgramLocalParametersI4ivEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLuint" "GLuint" "GLuint" "GLuint"))
        NamedProgramLocalParameterI4uiEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLuint")))
        NamedProgramLocalParameterI4uivEXT)
       ((function
          void
          ("GLuint" "GLenum" "GLuint" "GLsizei" (c-pointer "GLuint")))
        NamedProgramLocalParametersI4uivEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLint")))
        GetNamedProgramLocalParameterIivEXT)
       ((function void ("GLuint" "GLenum" "GLuint" (c-pointer "GLuint")))
        GetNamedProgramLocalParameterIuivEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        TextureParameterIivEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLuint")))
        TextureParameterIuivEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetTextureParameterIivEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLuint")))
        GetTextureParameterIuivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        MultiTexParameterIivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLuint")))
        MultiTexParameterIuivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLint")))
        GetMultiTexParameterIivEXT)
       ((function void ("GLenum" "GLenum" "GLenum" (c-pointer "GLuint")))
        GetMultiTexParameterIuivEXT)
       ((function void ("GLuint" "GLint" "GLfloat")) ProgramUniform1fEXT)
       ((function void ("GLuint" "GLint" "GLfloat" "GLfloat"))
        ProgramUniform2fEXT)
       ((function void ("GLuint" "GLint" "GLfloat" "GLfloat" "GLfloat"))
        ProgramUniform3fEXT)
       ((function
          void
          ("GLuint" "GLint" "GLfloat" "GLfloat" "GLfloat" "GLfloat"))
        ProgramUniform4fEXT)
       ((function void ("GLuint" "GLint" "GLint")) ProgramUniform1iEXT)
       ((function void ("GLuint" "GLint" "GLint" "GLint")) ProgramUniform2iEXT)
       ((function void ("GLuint" "GLint" "GLint" "GLint" "GLint"))
        ProgramUniform3iEXT)
       ((function void ("GLuint" "GLint" "GLint" "GLint" "GLint" "GLint"))
        ProgramUniform4iEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
        ProgramUniform1fvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
        ProgramUniform2fvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
        ProgramUniform3fvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLfloat")))
        ProgramUniform4fvEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
        ProgramUniform1ivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
        ProgramUniform2ivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
        ProgramUniform3ivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLint")))
        ProgramUniform4ivEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix2fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix3fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix4fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix2x3fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix3x2fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix2x4fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix4x2fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix3x4fvEXT)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" "GLboolean" (c-pointer "GLfloat")))
        ProgramUniformMatrix4x3fvEXT)
       ((function void ("GLuint" "GLint" "GLuint")) ProgramUniform1uiEXT)
       ((function void ("GLuint" "GLint" "GLuint" "GLuint"))
        ProgramUniform2uiEXT)
       ((function void ("GLuint" "GLint" "GLuint" "GLuint" "GLuint"))
        ProgramUniform3uiEXT)
       ((function void ("GLuint" "GLint" "GLuint" "GLuint" "GLuint" "GLuint"))
        ProgramUniform4uiEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
        ProgramUniform1uivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
        ProgramUniform2uivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
        ProgramUniform3uivEXT)
       ((function void ("GLuint" "GLint" "GLsizei" (c-pointer "GLuint")))
        ProgramUniform4uivEXT)
       ((function void ("GLuint" "ptrdiff_t" (c-pointer "GLvoid") "GLenum"))
        NamedBufferDataEXT)
       ((function void ("GLuint" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        NamedBufferSubDataEXT)
       ((function (c-pointer "GLvoid") ("GLuint" "GLenum")) MapNamedBufferEXT)
       ((function "GLboolean" ("GLuint")) UnmapNamedBufferEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetNamedBufferParameterivEXT)
       ((function void ("GLuint" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetNamedBufferPointervEXT)
       ((function void ("GLuint" "ptrdiff_t" "ptrdiff_t" (c-pointer "GLvoid")))
        GetNamedBufferSubDataEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLuint")) TextureBufferEXT)
       ((function void ("GLenum" "GLenum" "GLenum" "GLuint"))
        MultiTexBufferEXT)
       ((function void ("GLuint" "GLenum" "GLsizei" "GLsizei"))
        NamedRenderbufferStorageEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetNamedRenderbufferParameterivEXT)
       ((function "GLenum" ("GLuint" "GLenum")) CheckNamedFramebufferStatusEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint"))
        NamedFramebufferTexture1DEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint"))
        NamedFramebufferTexture2DEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLuint" "GLint" "GLint"))
        NamedFramebufferTexture3DEXT)
       ((function void ("GLuint" "GLenum" "GLenum" "GLuint"))
        NamedFramebufferRenderbufferEXT)
       ((function void ("GLuint" "GLenum" "GLenum" (c-pointer "GLint")))
        GetNamedFramebufferAttachmentParameterivEXT)
       ((function void ("GLuint" "GLenum")) GenerateTextureMipmapEXT)
       ((function void ("GLenum" "GLenum")) GenerateMultiTexMipmapEXT)
       ((function void ("GLuint" "GLenum")) FramebufferDrawBufferEXT)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLenum")))
        FramebufferDrawBuffersEXT)
       ((function void ("GLuint" "GLenum")) FramebufferReadBufferEXT)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetFramebufferParameterivEXT)
       ((function void ("GLuint" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
        NamedRenderbufferStorageMultisampleEXT)
       ((function
          void
          ("GLuint" "GLsizei" "GLsizei" "GLenum" "GLsizei" "GLsizei"))
        NamedRenderbufferStorageMultisampleCoverageEXT)
       ((function void ("GLuint" "GLenum" "GLuint" "GLint"))
        NamedFramebufferTextureEXT)
       ((function void ("GLuint" "GLenum" "GLuint" "GLint" "GLint"))
        NamedFramebufferTextureLayerEXT)
       ((function void ("GLuint" "GLenum" "GLuint" "GLint" "GLenum"))
        NamedFramebufferTextureFaceEXT)
       ((function void ("GLuint" "GLenum" "GLuint")) TextureRenderbufferEXT)
       ((function void ("GLenum" "GLenum" "GLuint")) MultiTexRenderbufferEXT)
       ((function void ("GLenum" "GLuint" (c-pointer "GLfloat")))
        GetMultisamplefvNV)
       ((function void ("GLuint" "GLbitfield")) SampleMaskIndexedNV)
       ((function void ("GLenum" "GLuint")) TexRenderbufferNV)
       ((function void ("GLenum" "GLuint")) BindTransformFeedbackNV)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        DeleteTransformFeedbacksNV)
       ((function void ("GLsizei" (c-pointer "GLuint")))
        GenTransformFeedbacksNV)
       ((function "GLboolean" ("GLuint")) IsTransformFeedbackNV)
       ((function void (void)) PauseTransformFeedbackNV)
       ((function void (void)) ResumeTransformFeedbackNV)
       ((function void ("GLenum" "GLuint")) DrawTransformFeedbackNV)
       ((function void ((c-pointer "GLint") "GLsizei" (c-pointer "GLuint")))
        GetPerfMonitorGroupsAMD)
       ((function
          void
          ("GLuint"
           (c-pointer "GLint")
           (c-pointer "GLint")
           "GLsizei"
           (c-pointer "GLuint")))
        GetPerfMonitorCountersAMD)
       ((function void ("GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetPerfMonitorGroupStringAMD)
       ((function
          void
          ("GLuint" "GLuint" "GLsizei" (c-pointer "GLsizei") c-string))
        GetPerfMonitorCounterStringAMD)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer void)))
        GetPerfMonitorCounterInfoAMD)
       ((function void ("GLsizei" (c-pointer "GLuint"))) GenPerfMonitorsAMD)
       ((function void ("GLsizei" (c-pointer "GLuint"))) DeletePerfMonitorsAMD)
       ((function
          void
          ("GLuint" "GLboolean" "GLuint" "GLint" (c-pointer "GLuint")))
        SelectPerfMonitorCountersAMD)
       ((function void ("GLuint")) BeginPerfMonitorAMD)
       ((function void ("GLuint")) EndPerfMonitorAMD)
       ((function
          void
          ("GLuint"
           "GLenum"
           "GLsizei"
           (c-pointer "GLuint")
           (c-pointer "GLint")))
        GetPerfMonitorCounterDataAMD)
       ((function void ("GLfloat")) TessellationFactorAMD)
       ((function void ("GLenum")) TessellationModeAMD)
       ((function void ("GLenum")) ProvokingVertexEXT)
       ((function void ("GLuint" "GLenum" "GLenum")) BlendFuncIndexedAMD)
       ((function void ("GLuint" "GLenum" "GLenum" "GLenum" "GLenum"))
        BlendFuncSeparateIndexedAMD)
       ((function void ("GLuint" "GLenum")) BlendEquationIndexedAMD)
       ((function void ("GLuint" "GLenum" "GLenum"))
        BlendEquationSeparateIndexedAMD)
       ((function void ("GLenum" "GLsizei" (c-pointer "GLvoid")))
        TextureRangeAPPLE)
       ((function void ("GLenum" "GLenum" (c-pointer (c-pointer "GLvoid"))))
        GetTexParameterPointervAPPLE)
       ((function void ("GLuint" "GLenum")) EnableVertexAttribAPPLE)
       ((function void ("GLuint" "GLenum")) DisableVertexAttribAPPLE)
       ((function "GLboolean" ("GLuint" "GLenum")) IsVertexAttribEnabledAPPLE)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           (c-pointer "GLdouble")))
        MapVertexAttrib1dAPPLE)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           (c-pointer "GLfloat")))
        MapVertexAttrib1fAPPLE)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           "GLdouble"
           "GLdouble"
           "GLint"
           "GLint"
           (c-pointer "GLdouble")))
        MapVertexAttrib2dAPPLE)
       ((function
          void
          ("GLuint"
           "GLuint"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           "GLfloat"
           "GLfloat"
           "GLint"
           "GLint"
           (c-pointer "GLfloat")))
        MapVertexAttrib2fAPPLE)
       ((function "GLenum" ("GLenum" "GLuint" "GLenum")) ObjectPurgeableAPPLE)
       ((function "GLenum" ("GLenum" "GLuint" "GLenum"))
        ObjectUnpurgeableAPPLE)
       ((function void ("GLenum" "GLuint" "GLenum" (c-pointer "GLint")))
        GetObjectParameterivAPPLE)
       ((function void ("GLuint")) BeginVideoCaptureNV)
       ((function void ("GLuint" "GLuint" "GLenum" "ptrdiff_t"))
        BindVideoCaptureStreamBufferNV)
       ((function void ("GLuint" "GLuint" "GLenum" "GLenum" "GLuint"))
        BindVideoCaptureStreamTextureNV)
       ((function void ("GLuint")) EndVideoCaptureNV)
       ((function void ("GLuint" "GLenum" (c-pointer "GLint")))
        GetVideoCaptureivNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
        GetVideoCaptureStreamivNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLfloat")))
        GetVideoCaptureStreamfvNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLdouble")))
        GetVideoCaptureStreamdvNV)
       ((function
          "GLenum"
          ("GLuint" (c-pointer "GLuint") (c-pointer unsigned-integer64)))
        VideoCaptureNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLint")))
        VideoCaptureStreamParameterivNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLfloat")))
        VideoCaptureStreamParameterfvNV)
       ((function void ("GLuint" "GLuint" "GLenum" (c-pointer "GLdouble")))
        VideoCaptureStreamParameterdvNV)
       ((function void ("GLenum" "GLuint")) UseShaderProgramEXT)
       ((function void ("GLuint")) ActiveProgramEXT)
       ((function "GLuint" ("GLenum" c-string)) CreateShaderProgramEXT)
       ((function void ("GLenum" "GLenum")) MakeBufferResidentNV)
       ((function void ("GLenum")) MakeBufferNonResidentNV)
       ((function "GLboolean" ("GLenum")) IsBufferResidentNV)
       ((function void ("GLuint" "GLenum")) MakeNamedBufferResidentNV)
       ((function void ("GLuint")) MakeNamedBufferNonResidentNV)
       ((function "GLboolean" ("GLuint")) IsNamedBufferResidentNV)
       ((function void ("GLenum" "GLenum" (c-pointer unsigned-integer64)))
        GetBufferParameterui64vNV)
       ((function void ("GLuint" "GLenum" (c-pointer unsigned-integer64)))
        GetNamedBufferParameterui64vNV)
       ((function void ("GLenum" (c-pointer unsigned-integer64)))
        GetIntegerui64vNV)
       ((function void ("GLint" unsigned-integer64)) Uniformui64NV)
       ((function void ("GLint" "GLsizei" (c-pointer unsigned-integer64)))
        Uniformui64vNV)
       ((function void ("GLuint" "GLint" (c-pointer unsigned-integer64)))
        GetUniformui64vNV)
       ((function void ("GLuint" "GLint" unsigned-integer64))
        ProgramUniformui64NV)
       ((function
          void
          ("GLuint" "GLint" "GLsizei" (c-pointer unsigned-integer64)))
        ProgramUniformui64vNV)
       ((function void ("GLenum" "GLuint" unsigned-integer64 "ptrdiff_t"))
        BufferAddressRangeNV)
       ((function void ("GLint" "GLenum" "GLsizei")) VertexFormatNV)
       ((function void ("GLenum" "GLsizei")) NormalFormatNV)
       ((function void ("GLint" "GLenum" "GLsizei")) ColorFormatNV)
       ((function void ("GLenum" "GLsizei")) IndexFormatNV)
       ((function void ("GLint" "GLenum" "GLsizei")) TexCoordFormatNV)
       ((function void ("GLsizei")) EdgeFlagFormatNV)
       ((function void ("GLint" "GLenum" "GLsizei")) SecondaryColorFormatNV)
       ((function void ("GLenum" "GLsizei")) FogCoordFormatNV)
       ((function void ("GLuint" "GLint" "GLenum" "GLboolean" "GLsizei"))
        VertexAttribFormatNV)
       ((function void ("GLuint" "GLint" "GLenum" "GLsizei"))
        VertexAttribIFormatNV)
       ((function void ("GLenum" "GLuint" (c-pointer unsigned-integer64)))
        GetIntegerui64i_vNV)
       ((function void (void)) TextureBarrierNV))
      "struct ALLEGRO_OGL_EXT_API *tmp_ =  (struct ALLEGRO_OGL_EXT_API *)C_malloc(sizeof(struct ALLEGRO_OGL_EXT_API));\ntmp_->BlendColor = BlendColor;\ntmp_->BlendEquation = BlendEquation;\ntmp_->DrawRangeElements = DrawRangeElements;\ntmp_->ColorTable = ColorTable;\ntmp_->ColorTableParameterfv = ColorTableParameterfv;\ntmp_->ColorTableParameteriv = ColorTableParameteriv;\ntmp_->CopyColorTable = CopyColorTable;\ntmp_->GetColorTable = GetColorTable;\ntmp_->GetColorTableParameterfv = GetColorTableParameterfv;\ntmp_->GetColorTableParameteriv = GetColorTableParameteriv;\ntmp_->ColorSubTable = ColorSubTable;\ntmp_->CopyColorSubTable = CopyColorSubTable;\ntmp_->TexImage3D = TexImage3D;\ntmp_->TexSubImage3D = TexSubImage3D;\ntmp_->CopyTexSubImage3D = CopyTexSubImage3D;\ntmp_->ConvolutionFilter1D = ConvolutionFilter1D;\ntmp_->ConvolutionFilter2D = ConvolutionFilter2D;\ntmp_->ConvolutionParameterf = ConvolutionParameterf;\ntmp_->ConvolutionParameterfv = ConvolutionParameterfv;\ntmp_->ConvolutionParameteri = ConvolutionParameteri;\ntmp_->ConvolutionParameteriv = ConvolutionParameteriv;\ntmp_->CopyConvolutionFilter1D = CopyConvolutionFilter1D;\ntmp_->CopyConvolutionFilter2D = CopyConvolutionFilter2D;\ntmp_->GetConvolutionFilter = GetConvolutionFilter;\ntmp_->GetConvolutionParameterfv = GetConvolutionParameterfv;\ntmp_->GetConvolutionParameteriv = GetConvolutionParameteriv;\ntmp_->GetSeparableFilter = GetSeparableFilter;\ntmp_->SeparableFilter2D = SeparableFilter2D;\ntmp_->GetHistogram = GetHistogram;\ntmp_->GetHistogramParameterfv = GetHistogramParameterfv;\ntmp_->GetHistogramParameteriv = GetHistogramParameteriv;\ntmp_->GetMinmax = GetMinmax;\ntmp_->GetMinmaxParameterfv = GetMinmaxParameterfv;\ntmp_->GetMinmaxParameteriv = GetMinmaxParameteriv;\ntmp_->Histogram = Histogram;\ntmp_->Minmax = Minmax;\ntmp_->ResetHistogram = ResetHistogram;\ntmp_->ResetMinmax = ResetMinmax;\ntmp_->ActiveTexture = ActiveTexture;\ntmp_->ClientActiveTexture = ClientActiveTexture;\ntmp_->MultiTexCoord1d = MultiTexCoord1d;\ntmp_->MultiTexCoord1dv = MultiTexCoord1dv;\ntmp_->MultiTexCoord1f = MultiTexCoord1f;\ntmp_->MultiTexCoord1fv = MultiTexCoord1fv;\ntmp_->MultiTexCoord1i = MultiTexCoord1i;\ntmp_->MultiTexCoord1iv = MultiTexCoord1iv;\ntmp_->MultiTexCoord1s = MultiTexCoord1s;\ntmp_->MultiTexCoord1sv = MultiTexCoord1sv;\ntmp_->MultiTexCoord2d = MultiTexCoord2d;\ntmp_->MultiTexCoord2dv = MultiTexCoord2dv;\ntmp_->MultiTexCoord2f = MultiTexCoord2f;\ntmp_->MultiTexCoord2fv = MultiTexCoord2fv;\ntmp_->MultiTexCoord2i = MultiTexCoord2i;\ntmp_->MultiTexCoord2iv = MultiTexCoord2iv;\ntmp_->MultiTexCoord2s = MultiTexCoord2s;\ntmp_->MultiTexCoord2sv = MultiTexCoord2sv;\ntmp_->MultiTexCoord3d = MultiTexCoord3d;\ntmp_->MultiTexCoord3dv = MultiTexCoord3dv;\ntmp_->MultiTexCoord3f = MultiTexCoord3f;\ntmp_->MultiTexCoord3fv = MultiTexCoord3fv;\ntmp_->MultiTexCoord3i = MultiTexCoord3i;\ntmp_->MultiTexCoord3iv = MultiTexCoord3iv;\ntmp_->MultiTexCoord3s = MultiTexCoord3s;\ntmp_->MultiTexCoord3sv = MultiTexCoord3sv;\ntmp_->MultiTexCoord4d = MultiTexCoord4d;\ntmp_->MultiTexCoord4dv = MultiTexCoord4dv;\ntmp_->MultiTexCoord4f = MultiTexCoord4f;\ntmp_->MultiTexCoord4fv = MultiTexCoord4fv;\ntmp_->MultiTexCoord4i = MultiTexCoord4i;\ntmp_->MultiTexCoord4iv = MultiTexCoord4iv;\ntmp_->MultiTexCoord4s = MultiTexCoord4s;\ntmp_->MultiTexCoord4sv = MultiTexCoord4sv;\ntmp_->LoadTransposeMatrixf = LoadTransposeMatrixf;\ntmp_->LoadTransposeMatrixd = LoadTransposeMatrixd;\ntmp_->MultTransposeMatrixf = MultTransposeMatrixf;\ntmp_->MultTransposeMatrixd = MultTransposeMatrixd;\ntmp_->SampleCoverage = SampleCoverage;\ntmp_->CompressedTexImage3D = CompressedTexImage3D;\ntmp_->CompressedTexImage2D = CompressedTexImage2D;\ntmp_->CompressedTexImage1D = CompressedTexImage1D;\ntmp_->CompressedTexSubImage3D = CompressedTexSubImage3D;\ntmp_->CompressedTexSubImage2D = CompressedTexSubImage2D;\ntmp_->CompressedTexSubImage1D = CompressedTexSubImage1D;\ntmp_->GetCompressedTexImage = GetCompressedTexImage;\ntmp_->BlendFuncSeparate = BlendFuncSeparate;\ntmp_->FogCoordf = FogCoordf;\ntmp_->FogCoordfv = FogCoordfv;\ntmp_->FogCoordd = FogCoordd;\ntmp_->FogCoorddv = FogCoorddv;\ntmp_->FogCoordPointer = FogCoordPointer;\ntmp_->MultiDrawArrays = MultiDrawArrays;\ntmp_->MultiDrawElements = MultiDrawElements;\ntmp_->PointParameterf = PointParameterf;\ntmp_->PointParameterfv = PointParameterfv;\ntmp_->PointParameteri = PointParameteri;\ntmp_->PointParameteriv = PointParameteriv;\ntmp_->SecondaryColor3b = SecondaryColor3b;\ntmp_->SecondaryColor3bv = SecondaryColor3bv;\ntmp_->SecondaryColor3d = SecondaryColor3d;\ntmp_->SecondaryColor3dv = SecondaryColor3dv;\ntmp_->SecondaryColor3f = SecondaryColor3f;\ntmp_->SecondaryColor3fv = SecondaryColor3fv;\ntmp_->SecondaryColor3i = SecondaryColor3i;\ntmp_->SecondaryColor3iv = SecondaryColor3iv;\ntmp_->SecondaryColor3s = SecondaryColor3s;\ntmp_->SecondaryColor3sv = SecondaryColor3sv;\ntmp_->SecondaryColor3ub = SecondaryColor3ub;\ntmp_->SecondaryColor3ubv = SecondaryColor3ubv;\ntmp_->SecondaryColor3ui = SecondaryColor3ui;\ntmp_->SecondaryColor3uiv = SecondaryColor3uiv;\ntmp_->SecondaryColor3us = SecondaryColor3us;\ntmp_->SecondaryColor3usv = SecondaryColor3usv;\ntmp_->SecondaryColorPointer = SecondaryColorPointer;\ntmp_->WindowPos2d = WindowPos2d;\ntmp_->WindowPos2dv = WindowPos2dv;\ntmp_->WindowPos2f = WindowPos2f;\ntmp_->WindowPos2fv = WindowPos2fv;\ntmp_->WindowPos2i = WindowPos2i;\ntmp_->WindowPos2iv = WindowPos2iv;\ntmp_->WindowPos2s = WindowPos2s;\ntmp_->WindowPos2sv = WindowPos2sv;\ntmp_->WindowPos3d = WindowPos3d;\ntmp_->WindowPos3dv = WindowPos3dv;\ntmp_->WindowPos3f = WindowPos3f;\ntmp_->WindowPos3fv = WindowPos3fv;\ntmp_->WindowPos3i = WindowPos3i;\ntmp_->WindowPos3iv = WindowPos3iv;\ntmp_->WindowPos3s = WindowPos3s;\ntmp_->WindowPos3sv = WindowPos3sv;\ntmp_->BindBuffer = BindBuffer;\ntmp_->DeleteBuffers = DeleteBuffers;\ntmp_->GenBuffers = GenBuffers;\ntmp_->IsBuffer = IsBuffer;\ntmp_->BufferData = BufferData;\ntmp_->BufferSubData = BufferSubData;\ntmp_->GetBufferSubData = GetBufferSubData;\ntmp_->MapBuffer = MapBuffer;\ntmp_->UnmapBuffer = UnmapBuffer;\ntmp_->GetBufferParameteriv = GetBufferParameteriv;\ntmp_->GetBufferPointerv = GetBufferPointerv;\ntmp_->GenQueries = GenQueries;\ntmp_->DeleteQueries = DeleteQueries;\ntmp_->IsQuery = IsQuery;\ntmp_->BeginQuery = BeginQuery;\ntmp_->EndQuery = EndQuery;\ntmp_->GetQueryiv = GetQueryiv;\ntmp_->GetQueryObjectiv = GetQueryObjectiv;\ntmp_->GetQueryObjectuiv = GetQueryObjectuiv;\ntmp_->BlendEquationSeparate = BlendEquationSeparate;\ntmp_->CreateProgram = CreateProgram;\ntmp_->CreateShader = CreateShader;\ntmp_->DeleteProgram = DeleteProgram;\ntmp_->DeleteShader = DeleteShader;\ntmp_->AttachShader = AttachShader;\ntmp_->DetachShader = DetachShader;\ntmp_->ShaderSource = ShaderSource;\ntmp_->CompileShader = CompileShader;\ntmp_->IsProgram = IsProgram;\ntmp_->IsShader = IsShader;\ntmp_->LinkProgram = LinkProgram;\ntmp_->UseProgram = UseProgram;\ntmp_->ValidateProgram = ValidateProgram;\ntmp_->Uniform1f = Uniform1f;\ntmp_->Uniform2f = Uniform2f;\ntmp_->Uniform3f = Uniform3f;\ntmp_->Uniform4f = Uniform4f;\ntmp_->Uniform1i = Uniform1i;\ntmp_->Uniform2i = Uniform2i;\ntmp_->Uniform3i = Uniform3i;\ntmp_->Uniform4i = Uniform4i;\ntmp_->Uniform1fv = Uniform1fv;\ntmp_->Uniform2fv = Uniform2fv;\ntmp_->Uniform3fv = Uniform3fv;\ntmp_->Uniform4fv = Uniform4fv;\ntmp_->Uniform1iv = Uniform1iv;\ntmp_->Uniform2iv = Uniform2iv;\ntmp_->Uniform3iv = Uniform3iv;\ntmp_->Uniform4iv = Uniform4iv;\ntmp_->UniformMatrix2fv = UniformMatrix2fv;\ntmp_->UniformMatrix3fv = UniformMatrix3fv;\ntmp_->UniformMatrix4fv = UniformMatrix4fv;\ntmp_->GetShaderfv = GetShaderfv;\ntmp_->GetShaderiv = GetShaderiv;\ntmp_->GetProgramfv = GetProgramfv;\ntmp_->GetProgramiv = GetProgramiv;\ntmp_->GetShaderInfoLog = GetShaderInfoLog;\ntmp_->GetProgramInfoLog = GetProgramInfoLog;\ntmp_->GetAttachedShaders = GetAttachedShaders;\ntmp_->GetUniformLocation = GetUniformLocation;\ntmp_->GetActiveUniform = GetActiveUniform;\ntmp_->GetUniformfv = GetUniformfv;\ntmp_->GetUniformiv = GetUniformiv;\ntmp_->GetShaderSource = GetShaderSource;\ntmp_->VertexAttrib1f = VertexAttrib1f;\ntmp_->VertexAttrib1s = VertexAttrib1s;\ntmp_->VertexAttrib1d = VertexAttrib1d;\ntmp_->VertexAttrib2f = VertexAttrib2f;\ntmp_->VertexAttrib2s = VertexAttrib2s;\ntmp_->VertexAttrib2d = VertexAttrib2d;\ntmp_->VertexAttrib3f = VertexAttrib3f;\ntmp_->VertexAttrib3s = VertexAttrib3s;\ntmp_->VertexAttrib3d = VertexAttrib3d;\ntmp_->VertexAttrib4f = VertexAttrib4f;\ntmp_->VertexAttrib4s = VertexAttrib4s;\ntmp_->VertexAttrib4d = VertexAttrib4d;\ntmp_->VertexAttrib4Nub = VertexAttrib4Nub;\ntmp_->VertexAttrib1fv = VertexAttrib1fv;\ntmp_->VertexAttrib1sv = VertexAttrib1sv;\ntmp_->VertexAttrib1dv = VertexAttrib1dv;\ntmp_->VertexAttrib2fv = VertexAttrib2fv;\ntmp_->VertexAttrib2sv = VertexAttrib2sv;\ntmp_->VertexAttrib2dv = VertexAttrib2dv;\ntmp_->VertexAttrib3fv = VertexAttrib3fv;\ntmp_->VertexAttrib3sv = VertexAttrib3sv;\ntmp_->VertexAttrib3dv = VertexAttrib3dv;\ntmp_->VertexAttrib4fv = VertexAttrib4fv;\ntmp_->VertexAttrib4sv = VertexAttrib4sv;\ntmp_->VertexAttrib4dv = VertexAttrib4dv;\ntmp_->VertexAttrib4iv = VertexAttrib4iv;\ntmp_->VertexAttrib4bv = VertexAttrib4bv;\ntmp_->VertexAttrib4ubv = VertexAttrib4ubv;\ntmp_->VertexAttrib4usv = VertexAttrib4usv;\ntmp_->VertexAttrib4uiv = VertexAttrib4uiv;\ntmp_->VertexAttrib4Nbv = VertexAttrib4Nbv;\ntmp_->VertexAttrib4Nsv = VertexAttrib4Nsv;\ntmp_->VertexAttrib4Niv = VertexAttrib4Niv;\ntmp_->VertexAttrib4Nubv = VertexAttrib4Nubv;\ntmp_->VertexAttrib4Nusv = VertexAttrib4Nusv;\ntmp_->VertexAttrib4Nuiv = VertexAttrib4Nuiv;\ntmp_->VertexAttribPointer = VertexAttribPointer;\ntmp_->EnableVertexAttribArray = EnableVertexAttribArray;\ntmp_->DisableVertexAttribArray = DisableVertexAttribArray;\ntmp_->BindAttribLocation = BindAttribLocation;\ntmp_->GetActiveAttrib = GetActiveAttrib;\ntmp_->GetAttribLocation = GetAttribLocation;\ntmp_->GetVertexAttribdv = GetVertexAttribdv;\ntmp_->GetVertexAttribfv = GetVertexAttribfv;\ntmp_->GetVertexAttribiv = GetVertexAttribiv;\ntmp_->GetVertexAttribPointerv = GetVertexAttribPointerv;\ntmp_->DrawBuffers = DrawBuffers;\ntmp_->StencilOpSeparate = StencilOpSeparate;\ntmp_->StencilFuncSeparate = StencilFuncSeparate;\ntmp_->StencilMaskSeparate = StencilMaskSeparate;\ntmp_->UniformMatrix2x3fv = UniformMatrix2x3fv;\ntmp_->UniformMatrix3x2fv = UniformMatrix3x2fv;\ntmp_->UniformMatrix2x4fv = UniformMatrix2x4fv;\ntmp_->UniformMatrix4x2fv = UniformMatrix4x2fv;\ntmp_->UniformMatrix3x4fv = UniformMatrix3x4fv;\ntmp_->UniformMatrix4x3fv = UniformMatrix4x3fv;\ntmp_->ColorMaski = ColorMaski;\ntmp_->GetBooleani_v = GetBooleani_v;\ntmp_->GetIntegeri_v = GetIntegeri_v;\ntmp_->Enablei = Enablei;\ntmp_->Disablei = Disablei;\ntmp_->IsEnabledi = IsEnabledi;\ntmp_->BeginTransformFeedback = BeginTransformFeedback;\ntmp_->EndTransformFeedback = EndTransformFeedback;\ntmp_->BindBufferRange = BindBufferRange;\ntmp_->BindBufferBase = BindBufferBase;\ntmp_->TransformFeedbackVaryings = TransformFeedbackVaryings;\ntmp_->GetTransformFeedbackVarying = GetTransformFeedbackVarying;\ntmp_->ClampColor = ClampColor;\ntmp_->BeginConditionalRender = BeginConditionalRender;\ntmp_->EndConditionalRender = EndConditionalRender;\ntmp_->VertexAttribI1i = VertexAttribI1i;\ntmp_->VertexAttribI2i = VertexAttribI2i;\ntmp_->VertexAttribI3i = VertexAttribI3i;\ntmp_->VertexAttribI4i = VertexAttribI4i;\ntmp_->VertexAttribI1ui = VertexAttribI1ui;\ntmp_->VertexAttribI2ui = VertexAttribI2ui;\ntmp_->VertexAttribI3ui = VertexAttribI3ui;\ntmp_->VertexAttribI4ui = VertexAttribI4ui;\ntmp_->VertexAttribI1iv = VertexAttribI1iv;\ntmp_->VertexAttribI2iv = VertexAttribI2iv;\ntmp_->VertexAttribI3iv = VertexAttribI3iv;\ntmp_->VertexAttribI4iv = VertexAttribI4iv;\ntmp_->VertexAttribI1uiv = VertexAttribI1uiv;\ntmp_->VertexAttribI2uiv = VertexAttribI2uiv;\ntmp_->VertexAttribI3uiv = VertexAttribI3uiv;\ntmp_->VertexAttribI4uiv = VertexAttribI4uiv;\ntmp_->VertexAttribI4bv = VertexAttribI4bv;\ntmp_->VertexAttribI4sv = VertexAttribI4sv;\ntmp_->VertexAttribI4ubv = VertexAttribI4ubv;\ntmp_->VertexAttribI4usv = VertexAttribI4usv;\ntmp_->VertexAttribIPointer = VertexAttribIPointer;\ntmp_->GetVertexAttribIiv = GetVertexAttribIiv;\ntmp_->GetVertexAttribIuiv = GetVertexAttribIuiv;\ntmp_->GetUniformuiv = GetUniformuiv;\ntmp_->BindFragDataLocation = BindFragDataLocation;\ntmp_->GetFragDataLocation = GetFragDataLocation;\ntmp_->Uniform1ui = Uniform1ui;\ntmp_->Uniform2ui = Uniform2ui;\ntmp_->Uniform3ui = Uniform3ui;\ntmp_->Uniform4ui = Uniform4ui;\ntmp_->Uniform1uiv = Uniform1uiv;\ntmp_->Uniform2uiv = Uniform2uiv;\ntmp_->Uniform3uiv = Uniform3uiv;\ntmp_->Uniform4uiv = Uniform4uiv;\ntmp_->TexParameterIiv = TexParameterIiv;\ntmp_->TexParameterIuiv = TexParameterIuiv;\ntmp_->GetTexParameterIiv = GetTexParameterIiv;\ntmp_->GetTexParameterIuiv = GetTexParameterIuiv;\ntmp_->ClearBufferiv = ClearBufferiv;\ntmp_->ClearBufferuiv = ClearBufferuiv;\ntmp_->ClearBufferfv = ClearBufferfv;\ntmp_->ClearBufferfi = ClearBufferfi;\ntmp_->GetStringi = GetStringi;\ntmp_->DrawArraysInstanced = DrawArraysInstanced;\ntmp_->DrawElementsInstanced = DrawElementsInstanced;\ntmp_->TexBuffer = TexBuffer;\ntmp_->PrimitiveRestartIndex = PrimitiveRestartIndex;\ntmp_->GetInteger64i_v = GetInteger64i_v;\ntmp_->GetBufferParameteri64v = GetBufferParameteri64v;\ntmp_->ProgramParameteri = ProgramParameteri;\ntmp_->FramebufferTexture = FramebufferTexture;\ntmp_->ClearBufferData = ClearBufferData;\ntmp_->ClearBufferSubData = ClearBufferSubData;\ntmp_->DispatchCompute = DispatchCompute;\ntmp_->DispatchComputeIndirect = DispatchComputeIndirect;\ntmp_->CopyImageSubData = CopyImageSubData;\ntmp_->FramebufferParameteri = FramebufferParameteri;\ntmp_->GetFramebufferParameteriv = GetFramebufferParameteriv;\ntmp_->GetInternalformati64v = GetInternalformati64v;\ntmp_->InvalidateTexSubImage = InvalidateTexSubImage;\ntmp_->InvalidateTexImage = InvalidateTexImage;\ntmp_->InvalidateBufferSubData = InvalidateBufferSubData;\ntmp_->InvalidateBufferData = InvalidateBufferData;\ntmp_->InvalidateFramebuffer = InvalidateFramebuffer;\ntmp_->InvalidateSubFramebuffer = InvalidateSubFramebuffer;\ntmp_->MultiDrawArraysIndirect = MultiDrawArraysIndirect;\ntmp_->MultiDrawElementsIndirect = MultiDrawElementsIndirect;\ntmp_->GetProgramInterfaceiv = GetProgramInterfaceiv;\ntmp_->GetProgramResourceIndex = GetProgramResourceIndex;\ntmp_->GetProgramResourceName = GetProgramResourceName;\ntmp_->GetProgramResourceiv = GetProgramResourceiv;\ntmp_->GetProgramResourceLocation = GetProgramResourceLocation;\ntmp_->GetProgramResourceLocationIndex = GetProgramResourceLocationIndex;\ntmp_->ShaderStorageBlockBinding = ShaderStorageBlockBinding;\ntmp_->TexBufferRange = TexBufferRange;\ntmp_->TexStorage2DMultisample = TexStorage2DMultisample;\ntmp_->TexStorage3DMultisample = TexStorage3DMultisample;\ntmp_->TextureView = TextureView;\ntmp_->BindVertexBuffer = BindVertexBuffer;\ntmp_->VertexAttribFormat = VertexAttribFormat;\ntmp_->VertexAttribIFormat = VertexAttribIFormat;\ntmp_->VertexAttribLFormat = VertexAttribLFormat;\ntmp_->VertexAttribBinding = VertexAttribBinding;\ntmp_->VertexBindingDivisor = VertexBindingDivisor;\ntmp_->DebugMessageControl = DebugMessageControl;\ntmp_->DebugMessageInsert = DebugMessageInsert;\ntmp_->DebugMessageCallback = DebugMessageCallback;\ntmp_->GetDebugMessageLog = GetDebugMessageLog;\ntmp_->PushDebugGroup = PushDebugGroup;\ntmp_->PopDebugGroup = PopDebugGroup;\ntmp_->ObjectLabel = ObjectLabel;\ntmp_->GetObjectLabel = GetObjectLabel;\ntmp_->ObjectPtrLabel = ObjectPtrLabel;\ntmp_->GetObjectPtrLabel = GetObjectPtrLabel;\ntmp_->ActiveTextureARB = ActiveTextureARB;\ntmp_->ClientActiveTextureARB = ClientActiveTextureARB;\ntmp_->MultiTexCoord1dARB = MultiTexCoord1dARB;\ntmp_->MultiTexCoord1dvARB = MultiTexCoord1dvARB;\ntmp_->MultiTexCoord1fARB = MultiTexCoord1fARB;\ntmp_->MultiTexCoord1fvARB = MultiTexCoord1fvARB;\ntmp_->MultiTexCoord1iARB = MultiTexCoord1iARB;\ntmp_->MultiTexCoord1ivARB = MultiTexCoord1ivARB;\ntmp_->MultiTexCoord1sARB = MultiTexCoord1sARB;\ntmp_->MultiTexCoord1svARB = MultiTexCoord1svARB;\ntmp_->MultiTexCoord2dARB = MultiTexCoord2dARB;\ntmp_->MultiTexCoord2dvARB = MultiTexCoord2dvARB;\ntmp_->MultiTexCoord2fARB = MultiTexCoord2fARB;\ntmp_->MultiTexCoord2fvARB = MultiTexCoord2fvARB;\ntmp_->MultiTexCoord2iARB = MultiTexCoord2iARB;\ntmp_->MultiTexCoord2ivARB = MultiTexCoord2ivARB;\ntmp_->MultiTexCoord2sARB = MultiTexCoord2sARB;\ntmp_->MultiTexCoord2svARB = MultiTexCoord2svARB;\ntmp_->MultiTexCoord3dARB = MultiTexCoord3dARB;\ntmp_->MultiTexCoord3dvARB = MultiTexCoord3dvARB;\ntmp_->MultiTexCoord3fARB = MultiTexCoord3fARB;\ntmp_->MultiTexCoord3fvARB = MultiTexCoord3fvARB;\ntmp_->MultiTexCoord3iARB = MultiTexCoord3iARB;\ntmp_->MultiTexCoord3ivARB = MultiTexCoord3ivARB;\ntmp_->MultiTexCoord3sARB = MultiTexCoord3sARB;\ntmp_->MultiTexCoord3svARB = MultiTexCoord3svARB;\ntmp_->MultiTexCoord4dARB = MultiTexCoord4dARB;\ntmp_->MultiTexCoord4dvARB = MultiTexCoord4dvARB;\ntmp_->MultiTexCoord4fARB = MultiTexCoord4fARB;\ntmp_->MultiTexCoord4fvARB = MultiTexCoord4fvARB;\ntmp_->MultiTexCoord4iARB = MultiTexCoord4iARB;\ntmp_->MultiTexCoord4ivARB = MultiTexCoord4ivARB;\ntmp_->MultiTexCoord4sARB = MultiTexCoord4sARB;\ntmp_->MultiTexCoord4svARB = MultiTexCoord4svARB;\ntmp_->LoadTransposeMatrixfARB = LoadTransposeMatrixfARB;\ntmp_->LoadTransposeMatrixdARB = LoadTransposeMatrixdARB;\ntmp_->MultTransposeMatrixfARB = MultTransposeMatrixfARB;\ntmp_->MultTransposeMatrixdARB = MultTransposeMatrixdARB;\ntmp_->SampleCoverageARB = SampleCoverageARB;\ntmp_->CompressedTexImage3DARB = CompressedTexImage3DARB;\ntmp_->CompressedTexImage2DARB = CompressedTexImage2DARB;\ntmp_->CompressedTexImage1DARB = CompressedTexImage1DARB;\ntmp_->CompressedTexSubImage3DARB = CompressedTexSubImage3DARB;\ntmp_->CompressedTexSubImage2DARB = CompressedTexSubImage2DARB;\ntmp_->CompressedTexSubImage1DARB = CompressedTexSubImage1DARB;\ntmp_->GetCompressedTexImageARB = GetCompressedTexImageARB;\ntmp_->PointParameterfARB = PointParameterfARB;\ntmp_->PointParameterfvARB = PointParameterfvARB;\ntmp_->WeightbvARB = WeightbvARB;\ntmp_->WeightsvARB = WeightsvARB;\ntmp_->WeightivARB = WeightivARB;\ntmp_->WeightfvARB = WeightfvARB;\ntmp_->WeightdvARB = WeightdvARB;\ntmp_->WeightubvARB = WeightubvARB;\ntmp_->WeightusvARB = WeightusvARB;\ntmp_->WeightuivARB = WeightuivARB;\ntmp_->WeightPointerARB = WeightPointerARB;\ntmp_->VertexBlendARB = VertexBlendARB;\ntmp_->CurrentPaletteMatrixARB = CurrentPaletteMatrixARB;\ntmp_->MatrixIndexubvARB = MatrixIndexubvARB;\ntmp_->MatrixIndexusvARB = MatrixIndexusvARB;\ntmp_->MatrixIndexuivARB = MatrixIndexuivARB;\ntmp_->MatrixIndexPointerARB = MatrixIndexPointerARB;\ntmp_->WindowPos2dARB = WindowPos2dARB;\ntmp_->WindowPos2dvARB = WindowPos2dvARB;\ntmp_->WindowPos2fARB = WindowPos2fARB;\ntmp_->WindowPos2fvARB = WindowPos2fvARB;\ntmp_->WindowPos2iARB = WindowPos2iARB;\ntmp_->WindowPos2ivARB = WindowPos2ivARB;\ntmp_->WindowPos2sARB = WindowPos2sARB;\ntmp_->WindowPos2svARB = WindowPos2svARB;\ntmp_->WindowPos3dARB = WindowPos3dARB;\ntmp_->WindowPos3dvARB = WindowPos3dvARB;\ntmp_->WindowPos3fARB = WindowPos3fARB;\ntmp_->WindowPos3fvARB = WindowPos3fvARB;\ntmp_->WindowPos3iARB = WindowPos3iARB;\ntmp_->WindowPos3ivARB = WindowPos3ivARB;\ntmp_->WindowPos3sARB = WindowPos3sARB;\ntmp_->WindowPos3svARB = WindowPos3svARB;\ntmp_->VertexAttrib1dARB = VertexAttrib1dARB;\ntmp_->VertexAttrib1dvARB = VertexAttrib1dvARB;\ntmp_->VertexAttrib1fARB = VertexAttrib1fARB;\ntmp_->VertexAttrib1fvARB = VertexAttrib1fvARB;\ntmp_->VertexAttrib1sARB = VertexAttrib1sARB;\ntmp_->VertexAttrib1svARB = VertexAttrib1svARB;\ntmp_->VertexAttrib2dARB = VertexAttrib2dARB;\ntmp_->VertexAttrib2dvARB = VertexAttrib2dvARB;\ntmp_->VertexAttrib2fARB = VertexAttrib2fARB;\ntmp_->VertexAttrib2fvARB = VertexAttrib2fvARB;\ntmp_->VertexAttrib2sARB = VertexAttrib2sARB;\ntmp_->VertexAttrib2svARB = VertexAttrib2svARB;\ntmp_->VertexAttrib3dARB = VertexAttrib3dARB;\ntmp_->VertexAttrib3dvARB = VertexAttrib3dvARB;\ntmp_->VertexAttrib3fARB = VertexAttrib3fARB;\ntmp_->VertexAttrib3fvARB = VertexAttrib3fvARB;\ntmp_->VertexAttrib3sARB = VertexAttrib3sARB;\ntmp_->VertexAttrib3svARB = VertexAttrib3svARB;\ntmp_->VertexAttrib4NbvARB = VertexAttrib4NbvARB;\ntmp_->VertexAttrib4NivARB = VertexAttrib4NivARB;\ntmp_->VertexAttrib4NsvARB = VertexAttrib4NsvARB;\ntmp_->VertexAttrib4NubARB = VertexAttrib4NubARB;\ntmp_->VertexAttrib4NubvARB = VertexAttrib4NubvARB;\ntmp_->VertexAttrib4NuivARB = VertexAttrib4NuivARB;\ntmp_->VertexAttrib4NusvARB = VertexAttrib4NusvARB;\ntmp_->VertexAttrib4bvARB = VertexAttrib4bvARB;\ntmp_->VertexAttrib4dARB = VertexAttrib4dARB;\ntmp_->VertexAttrib4dvARB = VertexAttrib4dvARB;\ntmp_->VertexAttrib4fARB = VertexAttrib4fARB;\ntmp_->VertexAttrib4fvARB = VertexAttrib4fvARB;\ntmp_->VertexAttrib4ivARB = VertexAttrib4ivARB;\ntmp_->VertexAttrib4sARB = VertexAttrib4sARB;\ntmp_->VertexAttrib4svARB = VertexAttrib4svARB;\ntmp_->VertexAttrib4ubvARB = VertexAttrib4ubvARB;\ntmp_->VertexAttrib4uivARB = VertexAttrib4uivARB;\ntmp_->VertexAttrib4usvARB = VertexAttrib4usvARB;\ntmp_->VertexAttribPointerARB = VertexAttribPointerARB;\ntmp_->EnableVertexAttribArrayARB = EnableVertexAttribArrayARB;\ntmp_->DisableVertexAttribArrayARB = DisableVertexAttribArrayARB;\ntmp_->ProgramStringARB = ProgramStringARB;\ntmp_->BindProgramARB = BindProgramARB;\ntmp_->DeleteProgramsARB = DeleteProgramsARB;\ntmp_->GenProgramsARB = GenProgramsARB;\ntmp_->ProgramEnvParameter4dARB = ProgramEnvParameter4dARB;\ntmp_->ProgramEnvParameter4dvARB = ProgramEnvParameter4dvARB;\ntmp_->ProgramEnvParameter4fARB = ProgramEnvParameter4fARB;\ntmp_->ProgramEnvParameter4fvARB = ProgramEnvParameter4fvARB;\ntmp_->ProgramLocalParameter4dARB = ProgramLocalParameter4dARB;\ntmp_->ProgramLocalParameter4dvARB = ProgramLocalParameter4dvARB;\ntmp_->ProgramLocalParameter4fARB = ProgramLocalParameter4fARB;\ntmp_->ProgramLocalParameter4fvARB = ProgramLocalParameter4fvARB;\ntmp_->GetProgramEnvParameterdvARB = GetProgramEnvParameterdvARB;\ntmp_->GetProgramEnvParameterfvARB = GetProgramEnvParameterfvARB;\ntmp_->GetProgramLocalParameterdvARB = GetProgramLocalParameterdvARB;\ntmp_->GetProgramLocalParameterfvARB = GetProgramLocalParameterfvARB;\ntmp_->GetProgramivARB = GetProgramivARB;\ntmp_->GetProgramStringARB = GetProgramStringARB;\ntmp_->GetVertexAttribdvARB = GetVertexAttribdvARB;\ntmp_->GetVertexAttribfvARB = GetVertexAttribfvARB;\ntmp_->GetVertexAttribivARB = GetVertexAttribivARB;\ntmp_->GetVertexAttribPointervARB = GetVertexAttribPointervARB;\ntmp_->IsProgramARB = IsProgramARB;\ntmp_->BindBufferARB = BindBufferARB;\ntmp_->DeleteBuffersARB = DeleteBuffersARB;\ntmp_->GenBuffersARB = GenBuffersARB;\ntmp_->IsBufferARB = IsBufferARB;\ntmp_->BufferDataARB = BufferDataARB;\ntmp_->BufferSubDataARB = BufferSubDataARB;\ntmp_->GetBufferSubDataARB = GetBufferSubDataARB;\ntmp_->MapBufferARB = MapBufferARB;\ntmp_->UnmapBufferARB = UnmapBufferARB;\ntmp_->GetBufferParameterivARB = GetBufferParameterivARB;\ntmp_->GetBufferPointervARB = GetBufferPointervARB;\ntmp_->GenQueriesARB = GenQueriesARB;\ntmp_->DeleteQueriesARB = DeleteQueriesARB;\ntmp_->IsQueryARB = IsQueryARB;\ntmp_->BeginQueryARB = BeginQueryARB;\ntmp_->EndQueryARB = EndQueryARB;\ntmp_->GetQueryivARB = GetQueryivARB;\ntmp_->GetQueryObjectivARB = GetQueryObjectivARB;\ntmp_->GetQueryObjectuivARB = GetQueryObjectuivARB;\ntmp_->DeleteObjectARB = DeleteObjectARB;\ntmp_->GetHandleARB = GetHandleARB;\ntmp_->DetachObjectARB = DetachObjectARB;\ntmp_->CreateShaderObjectARB = CreateShaderObjectARB;\ntmp_->ShaderSourceARB = ShaderSourceARB;\ntmp_->CompileShaderARB = CompileShaderARB;\ntmp_->CreateProgramObjectARB = CreateProgramObjectARB;\ntmp_->AttachObjectARB = AttachObjectARB;\ntmp_->LinkProgramARB = LinkProgramARB;\ntmp_->UseProgramObjectARB = UseProgramObjectARB;\ntmp_->ValidateProgramARB = ValidateProgramARB;\ntmp_->Uniform1fARB = Uniform1fARB;\ntmp_->Uniform2fARB = Uniform2fARB;\ntmp_->Uniform3fARB = Uniform3fARB;\ntmp_->Uniform4fARB = Uniform4fARB;\ntmp_->Uniform1iARB = Uniform1iARB;\ntmp_->Uniform2iARB = Uniform2iARB;\ntmp_->Uniform3iARB = Uniform3iARB;\ntmp_->Uniform4iARB = Uniform4iARB;\ntmp_->Uniform1fvARB = Uniform1fvARB;\ntmp_->Uniform2fvARB = Uniform2fvARB;\ntmp_->Uniform3fvARB = Uniform3fvARB;\ntmp_->Uniform4fvARB = Uniform4fvARB;\ntmp_->Uniform1ivARB = Uniform1ivARB;\ntmp_->Uniform2ivARB = Uniform2ivARB;\ntmp_->Uniform3ivARB = Uniform3ivARB;\ntmp_->Uniform4ivARB = Uniform4ivARB;\ntmp_->UniformMatrix2fvARB = UniformMatrix2fvARB;\ntmp_->UniformMatrix3fvARB = UniformMatrix3fvARB;\ntmp_->UniformMatrix4fvARB = UniformMatrix4fvARB;\ntmp_->GetObjectParameterfvARB = GetObjectParameterfvARB;\ntmp_->GetObjectParameterivARB = GetObjectParameterivARB;\ntmp_->GetInfoLogARB = GetInfoLogARB;\ntmp_->GetAttachedObjectsARB = GetAttachedObjectsARB;\ntmp_->GetUniformLocationARB = GetUniformLocationARB;\ntmp_->GetActiveUniformARB = GetActiveUniformARB;\ntmp_->GetUniformfvARB = GetUniformfvARB;\ntmp_->GetUniformivARB = GetUniformivARB;\ntmp_->GetShaderSourceARB = GetShaderSourceARB;\ntmp_->BindAttribLocationARB = BindAttribLocationARB;\ntmp_->GetActiveAttribARB = GetActiveAttribARB;\ntmp_->GetAttribLocationARB = GetAttribLocationARB;\ntmp_->DrawBuffersARB = DrawBuffersARB;\ntmp_->ClampColorARB = ClampColorARB;\ntmp_->DrawArraysInstancedARB = DrawArraysInstancedARB;\ntmp_->DrawElementsInstancedARB = DrawElementsInstancedARB;\ntmp_->IsRenderbuffer = IsRenderbuffer;\ntmp_->BindRenderbuffer = BindRenderbuffer;\ntmp_->DeleteRenderbuffers = DeleteRenderbuffers;\ntmp_->GenRenderbuffers = GenRenderbuffers;\ntmp_->RenderbufferStorage = RenderbufferStorage;\ntmp_->GetRenderbufferParameteriv = GetRenderbufferParameteriv;\ntmp_->IsFramebuffer = IsFramebuffer;\ntmp_->BindFramebuffer = BindFramebuffer;\ntmp_->DeleteFramebuffers = DeleteFramebuffers;\ntmp_->GenFramebuffers = GenFramebuffers;\ntmp_->CheckFramebufferStatus = CheckFramebufferStatus;\ntmp_->FramebufferTexture1D = FramebufferTexture1D;\ntmp_->FramebufferTexture2D = FramebufferTexture2D;\ntmp_->FramebufferTexture3D = FramebufferTexture3D;\ntmp_->FramebufferRenderbuffer = FramebufferRenderbuffer;\ntmp_->GetFramebufferAttachmentParameteriv = GetFramebufferAttachmentParameteriv;\ntmp_->GenerateMipmap = GenerateMipmap;\ntmp_->BlitFramebuffer = BlitFramebuffer;\ntmp_->RenderbufferStorageMultisample = RenderbufferStorageMultisample;\ntmp_->FramebufferTextureLayer = FramebufferTextureLayer;\ntmp_->ProgramParameteriARB = ProgramParameteriARB;\ntmp_->FramebufferTextureARB = FramebufferTextureARB;\ntmp_->FramebufferTextureLayerARB = FramebufferTextureLayerARB;\ntmp_->FramebufferTextureFaceARB = FramebufferTextureFaceARB;\ntmp_->VertexAttribDivisor = VertexAttribDivisor;\ntmp_->MapBufferRange = MapBufferRange;\ntmp_->FlushMappedBufferRange = FlushMappedBufferRange;\ntmp_->TexBufferARB = TexBufferARB;\ntmp_->BindVertexArray = BindVertexArray;\ntmp_->DeleteVertexArrays = DeleteVertexArrays;\ntmp_->GenVertexArrays = GenVertexArrays;\ntmp_->IsVertexArray = IsVertexArray;\ntmp_->GetUniformIndices = GetUniformIndices;\ntmp_->GetActiveUniformsiv = GetActiveUniformsiv;\ntmp_->GetActiveUniformName = GetActiveUniformName;\ntmp_->GetUniformBlockIndex = GetUniformBlockIndex;\ntmp_->GetActiveUniformBlockiv = GetActiveUniformBlockiv;\ntmp_->GetActiveUniformBlockName = GetActiveUniformBlockName;\ntmp_->UniformBlockBinding = UniformBlockBinding;\ntmp_->CopyBufferSubData = CopyBufferSubData;\ntmp_->DrawElementsBaseVertex = DrawElementsBaseVertex;\ntmp_->DrawRangeElementsBaseVertex = DrawRangeElementsBaseVertex;\ntmp_->DrawElementsInstancedBaseVertex = DrawElementsInstancedBaseVertex;\ntmp_->MultiDrawElementsBaseVertex = MultiDrawElementsBaseVertex;\ntmp_->ProvokingVertex = ProvokingVertex;\ntmp_->FenceSync = FenceSync;\ntmp_->IsSync = IsSync;\ntmp_->DeleteSync = DeleteSync;\ntmp_->ClientWaitSync = ClientWaitSync;\ntmp_->WaitSync = WaitSync;\ntmp_->GetInteger64v = GetInteger64v;\ntmp_->GetSynciv = GetSynciv;\ntmp_->TexImage2DMultisample = TexImage2DMultisample;\ntmp_->TexImage3DMultisample = TexImage3DMultisample;\ntmp_->GetMultisamplefv = GetMultisamplefv;\ntmp_->SampleMaski = SampleMaski;\ntmp_->BlendEquationi = BlendEquationi;\ntmp_->BlendEquationSeparatei = BlendEquationSeparatei;\ntmp_->BlendFunci = BlendFunci;\ntmp_->BlendFuncSeparatei = BlendFuncSeparatei;\ntmp_->MinSampleShading = MinSampleShading;\ntmp_->NamedStringARB = NamedStringARB;\ntmp_->DeleteNamedStringARB = DeleteNamedStringARB;\ntmp_->CompileShaderIncludeARB = CompileShaderIncludeARB;\ntmp_->IsNamedStringARB = IsNamedStringARB;\ntmp_->GetNamedStringARB = GetNamedStringARB;\ntmp_->GetNamedStringivARB = GetNamedStringivARB;\ntmp_->BindFragDataLocationIndexed = BindFragDataLocationIndexed;\ntmp_->GetFragDataIndex = GetFragDataIndex;\ntmp_->GenSamplers = GenSamplers;\ntmp_->DeleteSamplers = DeleteSamplers;\ntmp_->IsSampler = IsSampler;\ntmp_->BindSampler = BindSampler;\ntmp_->SamplerParameteri = SamplerParameteri;\ntmp_->SamplerParameteriv = SamplerParameteriv;\ntmp_->SamplerParameterf = SamplerParameterf;\ntmp_->SamplerParameterfv = SamplerParameterfv;\ntmp_->SamplerParameterIiv = SamplerParameterIiv;\ntmp_->SamplerParameterIuiv = SamplerParameterIuiv;\ntmp_->GetSamplerParameteriv = GetSamplerParameteriv;\ntmp_->GetSamplerParameterIiv = GetSamplerParameterIiv;\ntmp_->GetSamplerParameterfv = GetSamplerParameterfv;\ntmp_->GetSamplerParameterIfv = GetSamplerParameterIfv;\ntmp_->QueryCounter = QueryCounter;\ntmp_->GetQueryObjecti64v = GetQueryObjecti64v;\ntmp_->GetQueryObjectui64v = GetQueryObjectui64v;\ntmp_->VertexP2ui = VertexP2ui;\ntmp_->VertexP2uiv = VertexP2uiv;\ntmp_->VertexP3ui = VertexP3ui;\ntmp_->VertexP3uiv = VertexP3uiv;\ntmp_->VertexP4ui = VertexP4ui;\ntmp_->VertexP4uiv = VertexP4uiv;\ntmp_->TexCoordP1ui = TexCoordP1ui;\ntmp_->TexCoordP1uiv = TexCoordP1uiv;\ntmp_->TexCoordP2ui = TexCoordP2ui;\ntmp_->TexCoordP2uiv = TexCoordP2uiv;\ntmp_->TexCoordP3ui = TexCoordP3ui;\ntmp_->TexCoordP3uiv = TexCoordP3uiv;\ntmp_->TexCoordP4ui = TexCoordP4ui;\ntmp_->TexCoordP4uiv = TexCoordP4uiv;\ntmp_->MultiTexCoordP1ui = MultiTexCoordP1ui;\ntmp_->MultiTexCoordP1uiv = MultiTexCoordP1uiv;\ntmp_->MultiTexCoordP2ui = MultiTexCoordP2ui;\ntmp_->MultiTexCoordP2uiv = MultiTexCoordP2uiv;\ntmp_->MultiTexCoordP3ui = MultiTexCoordP3ui;\ntmp_->MultiTexCoordP3uiv = MultiTexCoordP3uiv;\ntmp_->MultiTexCoordP4ui = MultiTexCoordP4ui;\ntmp_->MultiTexCoordP4uiv = MultiTexCoordP4uiv;\ntmp_->NormalP3ui = NormalP3ui;\ntmp_->NormalP3uiv = NormalP3uiv;\ntmp_->ColorP3ui = ColorP3ui;\ntmp_->ColorP3uiv = ColorP3uiv;\ntmp_->ColorP4ui = ColorP4ui;\ntmp_->ColorP4uiv = ColorP4uiv;\ntmp_->SecondaryColorP3ui = SecondaryColorP3ui;\ntmp_->SecondaryColorP3uiv = SecondaryColorP3uiv;\ntmp_->VertexAttribP1ui = VertexAttribP1ui;\ntmp_->VertexAttribP1uiv = VertexAttribP1uiv;\ntmp_->VertexAttribP2ui = VertexAttribP2ui;\ntmp_->VertexAttribP2uiv = VertexAttribP2uiv;\ntmp_->VertexAttribP3ui = VertexAttribP3ui;\ntmp_->VertexAttribP3uiv = VertexAttribP3uiv;\ntmp_->VertexAttribP4ui = VertexAttribP4ui;\ntmp_->VertexAttribP4uiv = VertexAttribP4uiv;\ntmp_->DrawArraysIndirect = DrawArraysIndirect;\ntmp_->DrawElementsIndirect = DrawElementsIndirect;\ntmp_->Uniform1d = Uniform1d;\ntmp_->Uniform2d = Uniform2d;\ntmp_->Uniform3d = Uniform3d;\ntmp_->Uniform4d = Uniform4d;\ntmp_->Uniform1dv = Uniform1dv;\ntmp_->Uniform2dv = Uniform2dv;\ntmp_->Uniform3dv = Uniform3dv;\ntmp_->Uniform4dv = Uniform4dv;\ntmp_->UniformMatrix2dv = UniformMatrix2dv;\ntmp_->UniformMatrix3dv = UniformMatrix3dv;\ntmp_->UniformMatrix4dv = UniformMatrix4dv;\ntmp_->UniformMatrix2x3dv = UniformMatrix2x3dv;\ntmp_->UniformMatrix2x4dv = UniformMatrix2x4dv;\ntmp_->UniformMatrix3x2dv = UniformMatrix3x2dv;\ntmp_->UniformMatrix3x4dv = UniformMatrix3x4dv;\ntmp_->UniformMatrix4x2dv = UniformMatrix4x2dv;\ntmp_->UniformMatrix4x3dv = UniformMatrix4x3dv;\ntmp_->GetUniformdv = GetUniformdv;\ntmp_->ProgramUniform1dEXT = ProgramUniform1dEXT;\ntmp_->ProgramUniform2dEXT = ProgramUniform2dEXT;\ntmp_->ProgramUniform3dEXT = ProgramUniform3dEXT;\ntmp_->ProgramUniform4dEXT = ProgramUniform4dEXT;\ntmp_->ProgramUniform1dvEXT = ProgramUniform1dvEXT;\ntmp_->ProgramUniform2dvEXT = ProgramUniform2dvEXT;\ntmp_->ProgramUniform3dvEXT = ProgramUniform3dvEXT;\ntmp_->ProgramUniform4dvEXT = ProgramUniform4dvEXT;\ntmp_->ProgramUniformMatrix2dvEXT = ProgramUniformMatrix2dvEXT;\ntmp_->ProgramUniformMatrix3dvEXT = ProgramUniformMatrix3dvEXT;\ntmp_->ProgramUniformMatrix4dvEXT = ProgramUniformMatrix4dvEXT;\ntmp_->ProgramUniformMatrix2x3dvEXT = ProgramUniformMatrix2x3dvEXT;\ntmp_->ProgramUniformMatrix2x4dvEXT = ProgramUniformMatrix2x4dvEXT;\ntmp_->ProgramUniformMatrix3x2dvEXT = ProgramUniformMatrix3x2dvEXT;\ntmp_->ProgramUniformMatrix3x4dvEXT = ProgramUniformMatrix3x4dvEXT;\ntmp_->ProgramUniformMatrix4x2dvEXT = ProgramUniformMatrix4x2dvEXT;\ntmp_->ProgramUniformMatrix4x3dvEXT = ProgramUniformMatrix4x3dvEXT;\ntmp_->GetSubroutineUniformLocation = GetSubroutineUniformLocation;\ntmp_->GetSubroutineIndex = GetSubroutineIndex;\ntmp_->GetActiveSubroutineUniformiv = GetActiveSubroutineUniformiv;\ntmp_->GetActiveSubroutineUniformName = GetActiveSubroutineUniformName;\ntmp_->GetActiveSubroutineName = GetActiveSubroutineName;\ntmp_->UniformSubroutinesuiv = UniformSubroutinesuiv;\ntmp_->GetUniformSubroutineuiv = GetUniformSubroutineuiv;\ntmp_->GetProgramStageiv = GetProgramStageiv;\ntmp_->PatchParameteri = PatchParameteri;\ntmp_->PatchParameterfv = PatchParameterfv;\ntmp_->BindTransformFeedback = BindTransformFeedback;\ntmp_->DeleteTransformFeedbacks = DeleteTransformFeedbacks;\ntmp_->GenTransformFeedbacks = GenTransformFeedbacks;\ntmp_->IsTransformFeedback = IsTransformFeedback;\ntmp_->PauseTransformFeedback = PauseTransformFeedback;\ntmp_->ResumeTransformFeedback = ResumeTransformFeedback;\ntmp_->DrawTransformFeedback = DrawTransformFeedback;\ntmp_->DrawTransformFeedbackStream = DrawTransformFeedbackStream;\ntmp_->BeginQueryIndexed = BeginQueryIndexed;\ntmp_->EndQueryIndexed = EndQueryIndexed;\ntmp_->GetQueryIndexediv = GetQueryIndexediv;\ntmp_->BlendColorEXT = BlendColorEXT;\ntmp_->PolygonOffsetEXT = PolygonOffsetEXT;\ntmp_->TexImage3DEXT = TexImage3DEXT;\ntmp_->TexSubImage3DEXT = TexSubImage3DEXT;\ntmp_->GetTexFilterFuncSGIS = GetTexFilterFuncSGIS;\ntmp_->TexFilterFuncSGIS = TexFilterFuncSGIS;\ntmp_->TexSubImage1DEXT = TexSubImage1DEXT;\ntmp_->TexSubImage2DEXT = TexSubImage2DEXT;\ntmp_->CopyTexImage1DEXT = CopyTexImage1DEXT;\ntmp_->CopyTexImage2DEXT = CopyTexImage2DEXT;\ntmp_->CopyTexSubImage1DEXT = CopyTexSubImage1DEXT;\ntmp_->CopyTexSubImage2DEXT = CopyTexSubImage2DEXT;\ntmp_->CopyTexSubImage3DEXT = CopyTexSubImage3DEXT;\ntmp_->GetHistogramEXT = GetHistogramEXT;\ntmp_->GetHistogramParameterfvEXT = GetHistogramParameterfvEXT;\ntmp_->GetHistogramParameterivEXT = GetHistogramParameterivEXT;\ntmp_->GetMinmaxEXT = GetMinmaxEXT;\ntmp_->GetMinmaxParameterfvEXT = GetMinmaxParameterfvEXT;\ntmp_->GetMinmaxParameterivEXT = GetMinmaxParameterivEXT;\ntmp_->HistogramEXT = HistogramEXT;\ntmp_->MinmaxEXT = MinmaxEXT;\ntmp_->ResetHistogramEXT = ResetHistogramEXT;\ntmp_->ResetMinmaxEXT = ResetMinmaxEXT;\ntmp_->ConvolutionFilter1DEXT = ConvolutionFilter1DEXT;\ntmp_->ConvolutionFilter2DEXT = ConvolutionFilter2DEXT;\ntmp_->ConvolutionParameterfEXT = ConvolutionParameterfEXT;\ntmp_->ConvolutionParameterfvEXT = ConvolutionParameterfvEXT;\ntmp_->ConvolutionParameteriEXT = ConvolutionParameteriEXT;\ntmp_->ConvolutionParameterivEXT = ConvolutionParameterivEXT;\ntmp_->CopyConvolutionFilter1DEXT = CopyConvolutionFilter1DEXT;\ntmp_->CopyConvolutionFilter2DEXT = CopyConvolutionFilter2DEXT;\ntmp_->GetConvolutionFilterEXT = GetConvolutionFilterEXT;\ntmp_->GetConvolutionParameterfvEXT = GetConvolutionParameterfvEXT;\ntmp_->GetConvolutionParameterivEXT = GetConvolutionParameterivEXT;\ntmp_->GetSeparableFilterEXT = GetSeparableFilterEXT;\ntmp_->SeparableFilter2DEXT = SeparableFilter2DEXT;\ntmp_->ColorTableSGI = ColorTableSGI;\ntmp_->ColorTableParameterfvSGI = ColorTableParameterfvSGI;\ntmp_->ColorTableParameterivSGI = ColorTableParameterivSGI;\ntmp_->CopyColorTableSGI = CopyColorTableSGI;\ntmp_->GetColorTableSGI = GetColorTableSGI;\ntmp_->GetColorTableParameterfvSGI = GetColorTableParameterfvSGI;\ntmp_->GetColorTableParameterivSGI = GetColorTableParameterivSGI;\ntmp_->PixelTexGenSGIX = PixelTexGenSGIX;\ntmp_->PixelTexGenParameteriSGIS = PixelTexGenParameteriSGIS;\ntmp_->PixelTexGenParameterivSGIS = PixelTexGenParameterivSGIS;\ntmp_->PixelTexGenParameterfSGIS = PixelTexGenParameterfSGIS;\ntmp_->PixelTexGenParameterfvSGIS = PixelTexGenParameterfvSGIS;\ntmp_->GetPixelTexGenParameterivSGIS = GetPixelTexGenParameterivSGIS;\ntmp_->GetPixelTexGenParameterfvSGIS = GetPixelTexGenParameterfvSGIS;\ntmp_->TexImage4DSGIS = TexImage4DSGIS;\ntmp_->TexSubImage4DSGIS = TexSubImage4DSGIS;\ntmp_->AreTexturesResidentEXT = AreTexturesResidentEXT;\ntmp_->BindTextureEXT = BindTextureEXT;\ntmp_->DeleteTexturesEXT = DeleteTexturesEXT;\ntmp_->GenTexturesEXT = GenTexturesEXT;\ntmp_->IsTextureEXT = IsTextureEXT;\ntmp_->PrioritizeTexturesEXT = PrioritizeTexturesEXT;\ntmp_->DetailTexFuncSGIS = DetailTexFuncSGIS;\ntmp_->GetDetailTexFuncSGIS = GetDetailTexFuncSGIS;\ntmp_->SharpenTexFuncSGIS = SharpenTexFuncSGIS;\ntmp_->GetSharpenTexFuncSGIS = GetSharpenTexFuncSGIS;\ntmp_->SampleMaskSGIS = SampleMaskSGIS;\ntmp_->SamplePatternSGIS = SamplePatternSGIS;\ntmp_->ArrayElementEXT = ArrayElementEXT;\ntmp_->ColorPointerEXT = ColorPointerEXT;\ntmp_->DrawArraysEXT = DrawArraysEXT;\ntmp_->EdgeFlagPointerEXT = EdgeFlagPointerEXT;\ntmp_->GetPointervEXT = GetPointervEXT;\ntmp_->IndexPointerEXT = IndexPointerEXT;\ntmp_->NormalPointerEXT = NormalPointerEXT;\ntmp_->TexCoordPointerEXT = TexCoordPointerEXT;\ntmp_->VertexPointerEXT = VertexPointerEXT;\ntmp_->BlendEquationEXT = BlendEquationEXT;\ntmp_->SpriteParameterfSGIX = SpriteParameterfSGIX;\ntmp_->SpriteParameterfvSGIX = SpriteParameterfvSGIX;\ntmp_->SpriteParameteriSGIX = SpriteParameteriSGIX;\ntmp_->SpriteParameterivSGIX = SpriteParameterivSGIX;\ntmp_->PointParameterfEXT = PointParameterfEXT;\ntmp_->PointParameterfvEXT = PointParameterfvEXT;\ntmp_->PointParameterfSGIS = PointParameterfSGIS;\ntmp_->PointParameterfvSGIS = PointParameterfvSGIS;\ntmp_->GetInstrumentsSGIX = GetInstrumentsSGIX;\ntmp_->InstrumentsBufferSGIX = InstrumentsBufferSGIX;\ntmp_->PollInstrumentsSGIX = PollInstrumentsSGIX;\ntmp_->ReadInstrumentsSGIX = ReadInstrumentsSGIX;\ntmp_->StartInstrumentsSGIX = StartInstrumentsSGIX;\ntmp_->StopInstrumentsSGIX = StopInstrumentsSGIX;\ntmp_->FrameZoomSGIX = FrameZoomSGIX;\ntmp_->TagSampleBufferSGIX = TagSampleBufferSGIX;\ntmp_->DeformationMap3dSGIX = DeformationMap3dSGIX;\ntmp_->DeformationMap3fSGIX = DeformationMap3fSGIX;\ntmp_->DeformSGIX = DeformSGIX;\ntmp_->LoadIdentityDeformationMapSGIX = LoadIdentityDeformationMapSGIX;\ntmp_->ReferencePlaneSGIX = ReferencePlaneSGIX;\ntmp_->FlushRasterSGIX = FlushRasterSGIX;\ntmp_->FogFuncSGIS = FogFuncSGIS;\ntmp_->GetFogFuncSGIS = GetFogFuncSGIS;\ntmp_->ImageTransformParameteriHP = ImageTransformParameteriHP;\ntmp_->ImageTransformParameterfHP = ImageTransformParameterfHP;\ntmp_->ImageTransformParameterivHP = ImageTransformParameterivHP;\ntmp_->ImageTransformParameterfvHP = ImageTransformParameterfvHP;\ntmp_->GetImageTransformParameterivHP = GetImageTransformParameterivHP;\ntmp_->GetImageTransformParameterfvHP = GetImageTransformParameterfvHP;\ntmp_->CopyColorSubTableEXT = CopyColorSubTableEXT;\ntmp_->HintPGI = HintPGI;\ntmp_->ColorTableEXT = ColorTableEXT;\ntmp_->GetColorTableEXT = GetColorTableEXT;\ntmp_->GetColorTableParameterivEXT = GetColorTableParameterivEXT;\ntmp_->GetColorTableParameterfvEXT = GetColorTableParameterfvEXT;\ntmp_->GetListParameterfvSGIX = GetListParameterfvSGIX;\ntmp_->GetListParameterivSGIX = GetListParameterivSGIX;\ntmp_->ListParameterfSGIX = ListParameterfSGIX;\ntmp_->ListParameterfvSGIX = ListParameterfvSGIX;\ntmp_->ListParameteriSGIX = ListParameteriSGIX;\ntmp_->ListParameterivSGIX = ListParameterivSGIX;\ntmp_->IndexMaterialEXT = IndexMaterialEXT;\ntmp_->IndexFuncEXT = IndexFuncEXT;\ntmp_->LockArraysEXT = LockArraysEXT;\ntmp_->UnlockArraysEXT = UnlockArraysEXT;\ntmp_->CullParameterdvEXT = CullParameterdvEXT;\ntmp_->CullParameterfvEXT = CullParameterfvEXT;\ntmp_->FragmentColorMaterialSGIX = FragmentColorMaterialSGIX;\ntmp_->FragmentLightfSGIX = FragmentLightfSGIX;\ntmp_->FragmentLightfvSGIX = FragmentLightfvSGIX;\ntmp_->FragmentLightiSGIX = FragmentLightiSGIX;\ntmp_->FragmentLightivSGIX = FragmentLightivSGIX;\ntmp_->FragmentLightModelfSGIX = FragmentLightModelfSGIX;\ntmp_->FragmentLightModelfvSGIX = FragmentLightModelfvSGIX;\ntmp_->FragmentLightModeliSGIX = FragmentLightModeliSGIX;\ntmp_->FragmentLightModelivSGIX = FragmentLightModelivSGIX;\ntmp_->FragmentMaterialfSGIX = FragmentMaterialfSGIX;\ntmp_->FragmentMaterialfvSGIX = FragmentMaterialfvSGIX;\ntmp_->FragmentMaterialiSGIX = FragmentMaterialiSGIX;\ntmp_->FragmentMaterialivSGIX = FragmentMaterialivSGIX;\ntmp_->GetFragmentLightfvSGIX = GetFragmentLightfvSGIX;\ntmp_->GetFragmentLightivSGIX = GetFragmentLightivSGIX;\ntmp_->GetFragmentMaterialfvSGIX = GetFragmentMaterialfvSGIX;\ntmp_->GetFragmentMaterialivSGIX = GetFragmentMaterialivSGIX;\ntmp_->LightEnviSGIX = LightEnviSGIX;\ntmp_->DrawRangeElementsEXT = DrawRangeElementsEXT;\ntmp_->ApplyTextureEXT = ApplyTextureEXT;\ntmp_->TextureLightEXT = TextureLightEXT;\ntmp_->TextureMaterialEXT = TextureMaterialEXT;\ntmp_->AsyncMarkerSGIX = AsyncMarkerSGIX;\ntmp_->FinishAsyncSGIX = FinishAsyncSGIX;\ntmp_->PollAsyncSGIX = PollAsyncSGIX;\ntmp_->GenAsyncMarkersSGIX = GenAsyncMarkersSGIX;\ntmp_->DeleteAsyncMarkersSGIX = DeleteAsyncMarkersSGIX;\ntmp_->IsAsyncMarkerSGIX = IsAsyncMarkerSGIX;\ntmp_->VertexPointervINTEL = VertexPointervINTEL;\ntmp_->NormalPointervINTEL = NormalPointervINTEL;\ntmp_->ColorPointervINTEL = ColorPointervINTEL;\ntmp_->TexCoordPointervINTEL = TexCoordPointervINTEL;\ntmp_->PixelTransformParameteriEXT = PixelTransformParameteriEXT;\ntmp_->PixelTransformParameterfEXT = PixelTransformParameterfEXT;\ntmp_->PixelTransformParameterivEXT = PixelTransformParameterivEXT;\ntmp_->PixelTransformParameterfvEXT = PixelTransformParameterfvEXT;\ntmp_->SecondaryColor3bEXT = SecondaryColor3bEXT;\ntmp_->SecondaryColor3bvEXT = SecondaryColor3bvEXT;\ntmp_->SecondaryColor3dEXT = SecondaryColor3dEXT;\ntmp_->SecondaryColor3dvEXT = SecondaryColor3dvEXT;\ntmp_->SecondaryColor3fEXT = SecondaryColor3fEXT;\ntmp_->SecondaryColor3fvEXT = SecondaryColor3fvEXT;\ntmp_->SecondaryColor3iEXT = SecondaryColor3iEXT;\ntmp_->SecondaryColor3ivEXT = SecondaryColor3ivEXT;\ntmp_->SecondaryColor3sEXT = SecondaryColor3sEXT;\ntmp_->SecondaryColor3svEXT = SecondaryColor3svEXT;\ntmp_->SecondaryColor3ubEXT = SecondaryColor3ubEXT;\ntmp_->SecondaryColor3ubvEXT = SecondaryColor3ubvEXT;\ntmp_->SecondaryColor3uiEXT = SecondaryColor3uiEXT;\ntmp_->SecondaryColor3uivEXT = SecondaryColor3uivEXT;\ntmp_->SecondaryColor3usEXT = SecondaryColor3usEXT;\ntmp_->SecondaryColor3usvEXT = SecondaryColor3usvEXT;\ntmp_->SecondaryColorPointerEXT = SecondaryColorPointerEXT;\ntmp_->TextureNormalEXT = TextureNormalEXT;\ntmp_->MultiDrawArraysEXT = MultiDrawArraysEXT;\ntmp_->MultiDrawElementsEXT = MultiDrawElementsEXT;\ntmp_->FogCoordfEXT = FogCoordfEXT;\ntmp_->FogCoordfvEXT = FogCoordfvEXT;\ntmp_->FogCoorddEXT = FogCoorddEXT;\ntmp_->FogCoorddvEXT = FogCoorddvEXT;\ntmp_->FogCoordPointerEXT = FogCoordPointerEXT;\ntmp_->Tangent3bEXT = Tangent3bEXT;\ntmp_->Tangent3bvEXT = Tangent3bvEXT;\ntmp_->Tangent3dEXT = Tangent3dEXT;\ntmp_->Tangent3dvEXT = Tangent3dvEXT;\ntmp_->Tangent3fEXT = Tangent3fEXT;\ntmp_->Tangent3fvEXT = Tangent3fvEXT;\ntmp_->Tangent3iEXT = Tangent3iEXT;\ntmp_->Tangent3ivEXT = Tangent3ivEXT;\ntmp_->Tangent3sEXT = Tangent3sEXT;\ntmp_->Tangent3svEXT = Tangent3svEXT;\ntmp_->Binormal3bEXT = Binormal3bEXT;\ntmp_->Binormal3bvEXT = Binormal3bvEXT;\ntmp_->Binormal3dEXT = Binormal3dEXT;\ntmp_->Binormal3dvEXT = Binormal3dvEXT;\ntmp_->Binormal3fEXT = Binormal3fEXT;\ntmp_->Binormal3fvEXT = Binormal3fvEXT;\ntmp_->Binormal3iEXT = Binormal3iEXT;\ntmp_->Binormal3ivEXT = Binormal3ivEXT;\ntmp_->Binormal3sEXT = Binormal3sEXT;\ntmp_->Binormal3svEXT = Binormal3svEXT;\ntmp_->TangentPointerEXT = TangentPointerEXT;\ntmp_->BinormalPointerEXT = BinormalPointerEXT;\ntmp_->FinishTextureSUNX = FinishTextureSUNX;\ntmp_->GlobalAlphaFactorbSUN = GlobalAlphaFactorbSUN;\ntmp_->GlobalAlphaFactorsSUN = GlobalAlphaFactorsSUN;\ntmp_->GlobalAlphaFactoriSUN = GlobalAlphaFactoriSUN;\ntmp_->GlobalAlphaFactorfSUN = GlobalAlphaFactorfSUN;\ntmp_->GlobalAlphaFactordSUN = GlobalAlphaFactordSUN;\ntmp_->GlobalAlphaFactorubSUN = GlobalAlphaFactorubSUN;\ntmp_->GlobalAlphaFactorusSUN = GlobalAlphaFactorusSUN;\ntmp_->GlobalAlphaFactoruiSUN = GlobalAlphaFactoruiSUN;\ntmp_->ReplacementCodeuiSUN = ReplacementCodeuiSUN;\ntmp_->ReplacementCodeusSUN = ReplacementCodeusSUN;\ntmp_->ReplacementCodeubSUN = ReplacementCodeubSUN;\ntmp_->ReplacementCodeuivSUN = ReplacementCodeuivSUN;\ntmp_->ReplacementCodeusvSUN = ReplacementCodeusvSUN;\ntmp_->ReplacementCodeubvSUN = ReplacementCodeubvSUN;\ntmp_->ReplacementCodePointerSUN = ReplacementCodePointerSUN;\ntmp_->Color4ubVertex2fSUN = Color4ubVertex2fSUN;\ntmp_->Color4ubVertex2fvSUN = Color4ubVertex2fvSUN;\ntmp_->Color4ubVertex3fSUN = Color4ubVertex3fSUN;\ntmp_->Color4ubVertex3fvSUN = Color4ubVertex3fvSUN;\ntmp_->Color3fVertex3fSUN = Color3fVertex3fSUN;\ntmp_->Color3fVertex3fvSUN = Color3fVertex3fvSUN;\ntmp_->Normal3fVertex3fSUN = Normal3fVertex3fSUN;\ntmp_->Normal3fVertex3fvSUN = Normal3fVertex3fvSUN;\ntmp_->Color4fNormal3fVertex3fSUN = Color4fNormal3fVertex3fSUN;\ntmp_->Color4fNormal3fVertex3fvSUN = Color4fNormal3fVertex3fvSUN;\ntmp_->TexCoord2fVertex3fSUN = TexCoord2fVertex3fSUN;\ntmp_->TexCoord2fVertex3fvSUN = TexCoord2fVertex3fvSUN;\ntmp_->TexCoord4fVertex4fSUN = TexCoord4fVertex4fSUN;\ntmp_->TexCoord4fVertex4fvSUN = TexCoord4fVertex4fvSUN;\ntmp_->TexCoord2fColor4ubVertex3fSUN = TexCoord2fColor4ubVertex3fSUN;\ntmp_->TexCoord2fColor4ubVertex3fvSUN = TexCoord2fColor4ubVertex3fvSUN;\ntmp_->TexCoord2fColor3fVertex3fSUN = TexCoord2fColor3fVertex3fSUN;\ntmp_->TexCoord2fColor3fVertex3fvSUN = TexCoord2fColor3fVertex3fvSUN;\ntmp_->TexCoord2fNormal3fVertex3fSUN = TexCoord2fNormal3fVertex3fSUN;\ntmp_->TexCoord2fNormal3fVertex3fvSUN = TexCoord2fNormal3fVertex3fvSUN;\ntmp_->TexCoord2fColor4fNormal3fVertex3fSUN = TexCoord2fColor4fNormal3fVertex3fSUN;\ntmp_->TexCoord2fColor4fNormal3fVertex3fvSUN = TexCoord2fColor4fNormal3fVertex3fvSUN;\ntmp_->TexCoord4fColor4fNormal3fVertex4fSUN = TexCoord4fColor4fNormal3fVertex4fSUN;\ntmp_->TexCoord4fColor4fNormal3fVertex4fvSUN = TexCoord4fColor4fNormal3fVertex4fvSUN;\ntmp_->ReplacementCodeuiVertex3fSUN = ReplacementCodeuiVertex3fSUN;\ntmp_->ReplacementCodeuiVertex3fvSUN = ReplacementCodeuiVertex3fvSUN;\ntmp_->ReplacementCodeuiColor4ubVertex3fSUN = ReplacementCodeuiColor4ubVertex3fSUN;\ntmp_->ReplacementCodeuiColor4ubVertex3fvSUN = ReplacementCodeuiColor4ubVertex3fvSUN;\ntmp_->ReplacementCodeuiColor3fVertex3fSUN = ReplacementCodeuiColor3fVertex3fSUN;\ntmp_->ReplacementCodeuiColor3fVertex3fvSUN = ReplacementCodeuiColor3fVertex3fvSUN;\ntmp_->ReplacementCodeuiNormal3fVertex3fSUN = ReplacementCodeuiNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiNormal3fVertex3fvSUN = ReplacementCodeuiNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiColor4fNormal3fVertex3fSUN = ReplacementCodeuiColor4fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiColor4fNormal3fVertex3fvSUN = ReplacementCodeuiColor4fNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fVertex3fSUN = ReplacementCodeuiTexCoord2fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fVertex3fvSUN = ReplacementCodeuiTexCoord2fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;\ntmp_->BlendFuncSeparateEXT = BlendFuncSeparateEXT;\ntmp_->BlendFuncSeparateINGR = BlendFuncSeparateINGR;\ntmp_->VertexWeightfEXT = VertexWeightfEXT;\ntmp_->VertexWeightfvEXT = VertexWeightfvEXT;\ntmp_->VertexWeightPointerEXT = VertexWeightPointerEXT;\ntmp_->FlushVertexArrayRangeNV = FlushVertexArrayRangeNV;\ntmp_->VertexArrayRangeNV = VertexArrayRangeNV;\ntmp_->CombinerParameterfvNV = CombinerParameterfvNV;\ntmp_->CombinerParameterfNV = CombinerParameterfNV;\ntmp_->CombinerParameterivNV = CombinerParameterivNV;\ntmp_->CombinerParameteriNV = CombinerParameteriNV;\ntmp_->CombinerInputNV = CombinerInputNV;\ntmp_->CombinerOutputNV = CombinerOutputNV;\ntmp_->FinalCombinerInputNV = FinalCombinerInputNV;\ntmp_->GetCombinerInputParameterfvNV = GetCombinerInputParameterfvNV;\ntmp_->GetCombinerInputParameterivNV = GetCombinerInputParameterivNV;\ntmp_->GetCombinerOutputParameterfvNV = GetCombinerOutputParameterfvNV;\ntmp_->GetCombinerOutputParameterivNV = GetCombinerOutputParameterivNV;\ntmp_->GetFinalCombinerInputParameterfvNV = GetFinalCombinerInputParameterfvNV;\ntmp_->GetFinalCombinerInputParameterivNV = GetFinalCombinerInputParameterivNV;\ntmp_->ResizeBuffersMESA = ResizeBuffersMESA;\ntmp_->WindowPos2dMESA = WindowPos2dMESA;\ntmp_->WindowPos2dvMESA = WindowPos2dvMESA;\ntmp_->WindowPos2fMESA = WindowPos2fMESA;\ntmp_->WindowPos2fvMESA = WindowPos2fvMESA;\ntmp_->WindowPos2iMESA = WindowPos2iMESA;\ntmp_->WindowPos2ivMESA = WindowPos2ivMESA;\ntmp_->WindowPos2sMESA = WindowPos2sMESA;\ntmp_->WindowPos2svMESA = WindowPos2svMESA;\ntmp_->WindowPos3dMESA = WindowPos3dMESA;\ntmp_->WindowPos3dvMESA = WindowPos3dvMESA;\ntmp_->WindowPos3fMESA = WindowPos3fMESA;\ntmp_->WindowPos3fvMESA = WindowPos3fvMESA;\ntmp_->WindowPos3iMESA = WindowPos3iMESA;\ntmp_->WindowPos3ivMESA = WindowPos3ivMESA;\ntmp_->WindowPos3sMESA = WindowPos3sMESA;\ntmp_->WindowPos3svMESA = WindowPos3svMESA;\ntmp_->WindowPos4dMESA = WindowPos4dMESA;\ntmp_->WindowPos4dvMESA = WindowPos4dvMESA;\ntmp_->WindowPos4fMESA = WindowPos4fMESA;\ntmp_->WindowPos4fvMESA = WindowPos4fvMESA;\ntmp_->WindowPos4iMESA = WindowPos4iMESA;\ntmp_->WindowPos4ivMESA = WindowPos4ivMESA;\ntmp_->WindowPos4sMESA = WindowPos4sMESA;\ntmp_->WindowPos4svMESA = WindowPos4svMESA;\ntmp_->MultiModeDrawArraysIBM = MultiModeDrawArraysIBM;\ntmp_->MultiModeDrawElementsIBM = MultiModeDrawElementsIBM;\ntmp_->TbufferMask3DFX = TbufferMask3DFX;\ntmp_->SampleMaskEXT = SampleMaskEXT;\ntmp_->SamplePatternEXT = SamplePatternEXT;\ntmp_->TextureColorMaskSGIS = TextureColorMaskSGIS;\ntmp_->IglooInterfaceSGIX = IglooInterfaceSGIX;\ntmp_->DeleteFencesNV = DeleteFencesNV;\ntmp_->GenFencesNV = GenFencesNV;\ntmp_->IsFenceNV = IsFenceNV;\ntmp_->TestFenceNV = TestFenceNV;\ntmp_->GetFenceivNV = GetFenceivNV;\ntmp_->FinishFenceNV = FinishFenceNV;\ntmp_->SetFenceNV = SetFenceNV;\ntmp_->MapControlPointsNV = MapControlPointsNV;\ntmp_->MapParameterivNV = MapParameterivNV;\ntmp_->MapParameterfvNV = MapParameterfvNV;\ntmp_->GetMapControlPointsNV = GetMapControlPointsNV;\ntmp_->GetMapParameterivNV = GetMapParameterivNV;\ntmp_->GetMapParameterfvNV = GetMapParameterfvNV;\ntmp_->GetMapAttribParameterivNV = GetMapAttribParameterivNV;\ntmp_->GetMapAttribParameterfvNV = GetMapAttribParameterfvNV;\ntmp_->EvalMapsNV = EvalMapsNV;\ntmp_->CombinerStageParameterfvNV = CombinerStageParameterfvNV;\ntmp_->GetCombinerStageParameterfvNV = GetCombinerStageParameterfvNV;\ntmp_->AreProgramsResidentNV = AreProgramsResidentNV;\ntmp_->BindProgramNV = BindProgramNV;\ntmp_->DeleteProgramsNV = DeleteProgramsNV;\ntmp_->ExecuteProgramNV = ExecuteProgramNV;\ntmp_->GenProgramsNV = GenProgramsNV;\ntmp_->GetProgramParameterdvNV = GetProgramParameterdvNV;\ntmp_->GetProgramParameterfvNV = GetProgramParameterfvNV;\ntmp_->GetProgramivNV = GetProgramivNV;\ntmp_->GetProgramStringNV = GetProgramStringNV;\ntmp_->GetTrackMatrixivNV = GetTrackMatrixivNV;\ntmp_->GetVertexAttribdvNV = GetVertexAttribdvNV;\ntmp_->GetVertexAttribfvNV = GetVertexAttribfvNV;\ntmp_->GetVertexAttribivNV = GetVertexAttribivNV;\ntmp_->GetVertexAttribPointervNV = GetVertexAttribPointervNV;\ntmp_->IsProgramNV = IsProgramNV;\ntmp_->LoadProgramNV = LoadProgramNV;\ntmp_->ProgramParameter4dNV = ProgramParameter4dNV;\ntmp_->ProgramParameter4dvNV = ProgramParameter4dvNV;\ntmp_->ProgramParameter4fNV = ProgramParameter4fNV;\ntmp_->ProgramParameter4fvNV = ProgramParameter4fvNV;\ntmp_->ProgramParameters4dvNV = ProgramParameters4dvNV;\ntmp_->ProgramParameters4fvNV = ProgramParameters4fvNV;\ntmp_->RequestResidentProgramsNV = RequestResidentProgramsNV;\ntmp_->TrackMatrixNV = TrackMatrixNV;\ntmp_->VertexAttribPointerNV = VertexAttribPointerNV;\ntmp_->VertexAttrib1dNV = VertexAttrib1dNV;\ntmp_->VertexAttrib1dvNV = VertexAttrib1dvNV;\ntmp_->VertexAttrib1fNV = VertexAttrib1fNV;\ntmp_->VertexAttrib1fvNV = VertexAttrib1fvNV;\ntmp_->VertexAttrib1sNV = VertexAttrib1sNV;\ntmp_->VertexAttrib1svNV = VertexAttrib1svNV;\ntmp_->VertexAttrib2dNV = VertexAttrib2dNV;\ntmp_->VertexAttrib2dvNV = VertexAttrib2dvNV;\ntmp_->VertexAttrib2fNV = VertexAttrib2fNV;\ntmp_->VertexAttrib2fvNV = VertexAttrib2fvNV;\ntmp_->VertexAttrib2sNV = VertexAttrib2sNV;\ntmp_->VertexAttrib2svNV = VertexAttrib2svNV;\ntmp_->VertexAttrib3dNV = VertexAttrib3dNV;\ntmp_->VertexAttrib3dvNV = VertexAttrib3dvNV;\ntmp_->VertexAttrib3fNV = VertexAttrib3fNV;\ntmp_->VertexAttrib3fvNV = VertexAttrib3fvNV;\ntmp_->VertexAttrib3sNV = VertexAttrib3sNV;\ntmp_->VertexAttrib3svNV = VertexAttrib3svNV;\ntmp_->VertexAttrib4dNV = VertexAttrib4dNV;\ntmp_->VertexAttrib4dvNV = VertexAttrib4dvNV;\ntmp_->VertexAttrib4fNV = VertexAttrib4fNV;\ntmp_->VertexAttrib4fvNV = VertexAttrib4fvNV;\ntmp_->VertexAttrib4sNV = VertexAttrib4sNV;\ntmp_->VertexAttrib4svNV = VertexAttrib4svNV;\ntmp_->VertexAttrib4ubNV = VertexAttrib4ubNV;\ntmp_->VertexAttrib4ubvNV = VertexAttrib4ubvNV;\ntmp_->VertexAttribs1dvNV = VertexAttribs1dvNV;\ntmp_->VertexAttribs1fvNV = VertexAttribs1fvNV;\ntmp_->VertexAttribs1svNV = VertexAttribs1svNV;\ntmp_->VertexAttribs2dvNV = VertexAttribs2dvNV;\ntmp_->VertexAttribs2fvNV = VertexAttribs2fvNV;\ntmp_->VertexAttribs2svNV = VertexAttribs2svNV;\ntmp_->VertexAttribs3dvNV = VertexAttribs3dvNV;\ntmp_->VertexAttribs3fvNV = VertexAttribs3fvNV;\ntmp_->VertexAttribs3svNV = VertexAttribs3svNV;\ntmp_->VertexAttribs4dvNV = VertexAttribs4dvNV;\ntmp_->VertexAttribs4fvNV = VertexAttribs4fvNV;\ntmp_->VertexAttribs4svNV = VertexAttribs4svNV;\ntmp_->VertexAttribs4ubvNV = VertexAttribs4ubvNV;\ntmp_->TexBumpParameterivATI = TexBumpParameterivATI;\ntmp_->TexBumpParameterfvATI = TexBumpParameterfvATI;\ntmp_->GetTexBumpParameterivATI = GetTexBumpParameterivATI;\ntmp_->GetTexBumpParameterfvATI = GetTexBumpParameterfvATI;\ntmp_->GenFragmentShadersATI = GenFragmentShadersATI;\ntmp_->BindFragmentShaderATI = BindFragmentShaderATI;\ntmp_->DeleteFragmentShaderATI = DeleteFragmentShaderATI;\ntmp_->BeginFragmentShaderATI = BeginFragmentShaderATI;\ntmp_->EndFragmentShaderATI = EndFragmentShaderATI;\ntmp_->PassTexCoordATI = PassTexCoordATI;\ntmp_->SampleMapATI = SampleMapATI;\ntmp_->ColorFragmentOp1ATI = ColorFragmentOp1ATI;\ntmp_->ColorFragmentOp2ATI = ColorFragmentOp2ATI;\ntmp_->ColorFragmentOp3ATI = ColorFragmentOp3ATI;\ntmp_->AlphaFragmentOp1ATI = AlphaFragmentOp1ATI;\ntmp_->AlphaFragmentOp2ATI = AlphaFragmentOp2ATI;\ntmp_->AlphaFragmentOp3ATI = AlphaFragmentOp3ATI;\ntmp_->SetFragmentShaderConstantATI = SetFragmentShaderConstantATI;\ntmp_->PNTrianglesiATI = PNTrianglesiATI;\ntmp_->PNTrianglesfATI = PNTrianglesfATI;\ntmp_->NewObjectBufferATI = NewObjectBufferATI;\ntmp_->IsObjectBufferATI = IsObjectBufferATI;\ntmp_->UpdateObjectBufferATI = UpdateObjectBufferATI;\ntmp_->GetObjectBufferfvATI = GetObjectBufferfvATI;\ntmp_->GetObjectBufferivATI = GetObjectBufferivATI;\ntmp_->FreeObjectBufferATI = FreeObjectBufferATI;\ntmp_->ArrayObjectATI = ArrayObjectATI;\ntmp_->GetArrayObjectfvATI = GetArrayObjectfvATI;\ntmp_->GetArrayObjectivATI = GetArrayObjectivATI;\ntmp_->VariantArrayObjectATI = VariantArrayObjectATI;\ntmp_->GetVariantArrayObjectfvATI = GetVariantArrayObjectfvATI;\ntmp_->GetVariantArrayObjectivATI = GetVariantArrayObjectivATI;\ntmp_->BeginVertexShaderEXT = BeginVertexShaderEXT;\ntmp_->EndVertexShaderEXT = EndVertexShaderEXT;\ntmp_->BindVertexShaderEXT = BindVertexShaderEXT;\ntmp_->GenVertexShadersEXT = GenVertexShadersEXT;\ntmp_->DeleteVertexShaderEXT = DeleteVertexShaderEXT;\ntmp_->ShaderOp1EXT = ShaderOp1EXT;\ntmp_->ShaderOp2EXT = ShaderOp2EXT;\ntmp_->ShaderOp3EXT = ShaderOp3EXT;\ntmp_->SwizzleEXT = SwizzleEXT;\ntmp_->WriteMaskEXT = WriteMaskEXT;\ntmp_->InsertComponentEXT = InsertComponentEXT;\ntmp_->ExtractComponentEXT = ExtractComponentEXT;\ntmp_->GenSymbolsEXT = GenSymbolsEXT;\ntmp_->SetInvariantEXT = SetInvariantEXT;\ntmp_->SetLocalConstantEXT = SetLocalConstantEXT;\ntmp_->VariantbvEXT = VariantbvEXT;\ntmp_->VariantsvEXT = VariantsvEXT;\ntmp_->VariantivEXT = VariantivEXT;\ntmp_->VariantfvEXT = VariantfvEXT;\ntmp_->VariantdvEXT = VariantdvEXT;\ntmp_->VariantubvEXT = VariantubvEXT;\ntmp_->VariantusvEXT = VariantusvEXT;\ntmp_->VariantuivEXT = VariantuivEXT;\ntmp_->VariantPointerEXT = VariantPointerEXT;\ntmp_->EnableVariantClientStateEXT = EnableVariantClientStateEXT;\ntmp_->DisableVariantClientStateEXT = DisableVariantClientStateEXT;\ntmp_->BindLightParameterEXT = BindLightParameterEXT;\ntmp_->BindMaterialParameterEXT = BindMaterialParameterEXT;\ntmp_->BindTexGenParameterEXT = BindTexGenParameterEXT;\ntmp_->BindTextureUnitParameterEXT = BindTextureUnitParameterEXT;\ntmp_->BindParameterEXT = BindParameterEXT;\ntmp_->IsVariantEnabledEXT = IsVariantEnabledEXT;\ntmp_->GetVariantBooleanvEXT = GetVariantBooleanvEXT;\ntmp_->GetVariantIntegervEXT = GetVariantIntegervEXT;\ntmp_->GetVariantFloatvEXT = GetVariantFloatvEXT;\ntmp_->GetVariantPointervEXT = GetVariantPointervEXT;\ntmp_->GetInvariantBooleanvEXT = GetInvariantBooleanvEXT;\ntmp_->GetInvariantIntegervEXT = GetInvariantIntegervEXT;\ntmp_->GetInvariantFloatvEXT = GetInvariantFloatvEXT;\ntmp_->GetLocalConstantBooleanvEXT = GetLocalConstantBooleanvEXT;\ntmp_->GetLocalConstantIntegervEXT = GetLocalConstantIntegervEXT;\ntmp_->GetLocalConstantFloatvEXT = GetLocalConstantFloatvEXT;\ntmp_->VertexStream1sATI = VertexStream1sATI;\ntmp_->VertexStream1svATI = VertexStream1svATI;\ntmp_->VertexStream1iATI = VertexStream1iATI;\ntmp_->VertexStream1ivATI = VertexStream1ivATI;\ntmp_->VertexStream1fATI = VertexStream1fATI;\ntmp_->VertexStream1fvATI = VertexStream1fvATI;\ntmp_->VertexStream1dATI = VertexStream1dATI;\ntmp_->VertexStream1dvATI = VertexStream1dvATI;\ntmp_->VertexStream2sATI = VertexStream2sATI;\ntmp_->VertexStream2svATI = VertexStream2svATI;\ntmp_->VertexStream2iATI = VertexStream2iATI;\ntmp_->VertexStream2ivATI = VertexStream2ivATI;\ntmp_->VertexStream2fATI = VertexStream2fATI;\ntmp_->VertexStream2fvATI = VertexStream2fvATI;\ntmp_->VertexStream2dATI = VertexStream2dATI;\ntmp_->VertexStream2dvATI = VertexStream2dvATI;\ntmp_->VertexStream3sATI = VertexStream3sATI;\ntmp_->VertexStream3svATI = VertexStream3svATI;\ntmp_->VertexStream3iATI = VertexStream3iATI;\ntmp_->VertexStream3ivATI = VertexStream3ivATI;\ntmp_->VertexStream3fATI = VertexStream3fATI;\ntmp_->VertexStream3fvATI = VertexStream3fvATI;\ntmp_->VertexStream3dATI = VertexStream3dATI;\ntmp_->VertexStream3dvATI = VertexStream3dvATI;\ntmp_->VertexStream4sATI = VertexStream4sATI;\ntmp_->VertexStream4svATI = VertexStream4svATI;\ntmp_->VertexStream4iATI = VertexStream4iATI;\ntmp_->VertexStream4ivATI = VertexStream4ivATI;\ntmp_->VertexStream4fATI = VertexStream4fATI;\ntmp_->VertexStream4fvATI = VertexStream4fvATI;\ntmp_->VertexStream4dATI = VertexStream4dATI;\ntmp_->VertexStream4dvATI = VertexStream4dvATI;\ntmp_->NormalStream3bATI = NormalStream3bATI;\ntmp_->NormalStream3bvATI = NormalStream3bvATI;\ntmp_->NormalStream3sATI = NormalStream3sATI;\ntmp_->NormalStream3svATI = NormalStream3svATI;\ntmp_->NormalStream3iATI = NormalStream3iATI;\ntmp_->NormalStream3ivATI = NormalStream3ivATI;\ntmp_->NormalStream3fATI = NormalStream3fATI;\ntmp_->NormalStream3fvATI = NormalStream3fvATI;\ntmp_->NormalStream3dATI = NormalStream3dATI;\ntmp_->NormalStream3dvATI = NormalStream3dvATI;\ntmp_->ClientActiveVertexStreamATI = ClientActiveVertexStreamATI;\ntmp_->VertexBlendEnviATI = VertexBlendEnviATI;\ntmp_->VertexBlendEnvfATI = VertexBlendEnvfATI;\ntmp_->ElementPointerATI = ElementPointerATI;\ntmp_->DrawElementArrayATI = DrawElementArrayATI;\ntmp_->DrawRangeElementArrayATI = DrawRangeElementArrayATI;\ntmp_->DrawMeshArraysSUN = DrawMeshArraysSUN;\ntmp_->GenOcclusionQueriesNV = GenOcclusionQueriesNV;\ntmp_->DeleteOcclusionQueriesNV = DeleteOcclusionQueriesNV;\ntmp_->IsOcclusionQueryNV = IsOcclusionQueryNV;\ntmp_->BeginOcclusionQueryNV = BeginOcclusionQueryNV;\ntmp_->EndOcclusionQueryNV = EndOcclusionQueryNV;\ntmp_->GetOcclusionQueryivNV = GetOcclusionQueryivNV;\ntmp_->GetOcclusionQueryuivNV = GetOcclusionQueryuivNV;\ntmp_->PointParameteriNV = PointParameteriNV;\ntmp_->PointParameterivNV = PointParameterivNV;\ntmp_->ActiveStencilFaceEXT = ActiveStencilFaceEXT;\ntmp_->ElementPointerAPPLE = ElementPointerAPPLE;\ntmp_->DrawElementArrayAPPLE = DrawElementArrayAPPLE;\ntmp_->DrawRangeElementArrayAPPLE = DrawRangeElementArrayAPPLE;\ntmp_->MultiDrawElementArrayAPPLE = MultiDrawElementArrayAPPLE;\ntmp_->MultiDrawRangeElementArrayAPPLE = MultiDrawRangeElementArrayAPPLE;\ntmp_->GenFencesAPPLE = GenFencesAPPLE;\ntmp_->DeleteFencesAPPLE = DeleteFencesAPPLE;\ntmp_->SetFenceAPPLE = SetFenceAPPLE;\ntmp_->IsFenceAPPLE = IsFenceAPPLE;\ntmp_->TestFenceAPPLE = TestFenceAPPLE;\ntmp_->FinishFenceAPPLE = FinishFenceAPPLE;\ntmp_->TestObjectAPPLE = TestObjectAPPLE;\ntmp_->FinishObjectAPPLE = FinishObjectAPPLE;\ntmp_->BindVertexArrayAPPLE = BindVertexArrayAPPLE;\ntmp_->DeleteVertexArraysAPPLE = DeleteVertexArraysAPPLE;\ntmp_->GenVertexArraysAPPLE = GenVertexArraysAPPLE;\ntmp_->IsVertexArrayAPPLE = IsVertexArrayAPPLE;\ntmp_->VertexArrayRangeAPPLE = VertexArrayRangeAPPLE;\ntmp_->FlushVertexArrayRangeAPPLE = FlushVertexArrayRangeAPPLE;\ntmp_->VertexArrayParameteriAPPLE = VertexArrayParameteriAPPLE;\ntmp_->DrawBuffersATI = DrawBuffersATI;\ntmp_->ProgramNamedParameter4fNV = ProgramNamedParameter4fNV;\ntmp_->ProgramNamedParameter4dNV = ProgramNamedParameter4dNV;\ntmp_->ProgramNamedParameter4fvNV = ProgramNamedParameter4fvNV;\ntmp_->ProgramNamedParameter4dvNV = ProgramNamedParameter4dvNV;\ntmp_->GetProgramNamedParameterfvNV = GetProgramNamedParameterfvNV;\ntmp_->GetProgramNamedParameterdvNV = GetProgramNamedParameterdvNV;\ntmp_->Vertex2hNV = Vertex2hNV;\ntmp_->Vertex2hvNV = Vertex2hvNV;\ntmp_->Vertex3hNV = Vertex3hNV;\ntmp_->Vertex3hvNV = Vertex3hvNV;\ntmp_->Vertex4hNV = Vertex4hNV;\ntmp_->Vertex4hvNV = Vertex4hvNV;\ntmp_->Normal3hNV = Normal3hNV;\ntmp_->Normal3hvNV = Normal3hvNV;\ntmp_->Color3hNV = Color3hNV;\ntmp_->Color3hvNV = Color3hvNV;\ntmp_->Color4hNV = Color4hNV;\ntmp_->Color4hvNV = Color4hvNV;\ntmp_->TexCoord1hNV = TexCoord1hNV;\ntmp_->TexCoord1hvNV = TexCoord1hvNV;\ntmp_->TexCoord2hNV = TexCoord2hNV;\ntmp_->TexCoord2hvNV = TexCoord2hvNV;\ntmp_->TexCoord3hNV = TexCoord3hNV;\ntmp_->TexCoord3hvNV = TexCoord3hvNV;\ntmp_->TexCoord4hNV = TexCoord4hNV;\ntmp_->TexCoord4hvNV = TexCoord4hvNV;\ntmp_->MultiTexCoord1hNV = MultiTexCoord1hNV;\ntmp_->MultiTexCoord1hvNV = MultiTexCoord1hvNV;\ntmp_->MultiTexCoord2hNV = MultiTexCoord2hNV;\ntmp_->MultiTexCoord2hvNV = MultiTexCoord2hvNV;\ntmp_->MultiTexCoord3hNV = MultiTexCoord3hNV;\ntmp_->MultiTexCoord3hvNV = MultiTexCoord3hvNV;\ntmp_->MultiTexCoord4hNV = MultiTexCoord4hNV;\ntmp_->MultiTexCoord4hvNV = MultiTexCoord4hvNV;\ntmp_->FogCoordhNV = FogCoordhNV;\ntmp_->FogCoordhvNV = FogCoordhvNV;\ntmp_->SecondaryColor3hNV = SecondaryColor3hNV;\ntmp_->SecondaryColor3hvNV = SecondaryColor3hvNV;\ntmp_->VertexWeighthNV = VertexWeighthNV;\ntmp_->VertexWeighthvNV = VertexWeighthvNV;\ntmp_->VertexAttrib1hNV = VertexAttrib1hNV;\ntmp_->VertexAttrib1hvNV = VertexAttrib1hvNV;\ntmp_->VertexAttrib2hNV = VertexAttrib2hNV;\ntmp_->VertexAttrib2hvNV = VertexAttrib2hvNV;\ntmp_->VertexAttrib3hNV = VertexAttrib3hNV;\ntmp_->VertexAttrib3hvNV = VertexAttrib3hvNV;\ntmp_->VertexAttrib4hNV = VertexAttrib4hNV;\ntmp_->VertexAttrib4hvNV = VertexAttrib4hvNV;\ntmp_->VertexAttribs1hvNV = VertexAttribs1hvNV;\ntmp_->VertexAttribs2hvNV = VertexAttribs2hvNV;\ntmp_->VertexAttribs3hvNV = VertexAttribs3hvNV;\ntmp_->VertexAttribs4hvNV = VertexAttribs4hvNV;\ntmp_->PixelDataRangeNV = PixelDataRangeNV;\ntmp_->FlushPixelDataRangeNV = FlushPixelDataRangeNV;\ntmp_->PrimitiveRestartNV = PrimitiveRestartNV;\ntmp_->PrimitiveRestartIndexNV = PrimitiveRestartIndexNV;\ntmp_->MapObjectBufferATI = MapObjectBufferATI;\ntmp_->UnmapObjectBufferATI = UnmapObjectBufferATI;\ntmp_->VertexAttribArrayObjectATI = VertexAttribArrayObjectATI;\ntmp_->GetVertexAttribArrayObjectfvATI = GetVertexAttribArrayObjectfvATI;\ntmp_->GetVertexAttribArrayObjectivATI = GetVertexAttribArrayObjectivATI;\ntmp_->Vertex2bOES = Vertex2bOES;\ntmp_->Vertex3bOES = Vertex3bOES;\ntmp_->Vertex4bOES = Vertex4bOES;\ntmp_->Vertex2bvOES = Vertex2bvOES;\ntmp_->Vertex3bvOES = Vertex3bvOES;\ntmp_->Vertex4bvOES = Vertex4bvOES;\ntmp_->TexCoord1bOES = TexCoord1bOES;\ntmp_->TexCoord2bOES = TexCoord2bOES;\ntmp_->TexCoord3bOES = TexCoord3bOES;\ntmp_->TexCoord4bOES = TexCoord4bOES;\ntmp_->TexCoord1bvOES = TexCoord1bvOES;\ntmp_->TexCoord2bvOES = TexCoord2bvOES;\ntmp_->TexCoord3bvOES = TexCoord3bvOES;\ntmp_->TexCoord4bvOES = TexCoord4bvOES;\ntmp_->MultiTexCoord1bOES = MultiTexCoord1bOES;\ntmp_->MultiTexCoord2bOES = MultiTexCoord2bOES;\ntmp_->MultiTexCoord3bOES = MultiTexCoord3bOES;\ntmp_->MultiTexCoord4bOES = MultiTexCoord4bOES;\ntmp_->MultiTexCoord1bvOES = MultiTexCoord1bvOES;\ntmp_->MultiTexCoord2bvOES = MultiTexCoord2bvOES;\ntmp_->MultiTexCoord3bvOES = MultiTexCoord3bvOES;\ntmp_->MultiTexCoord4bvOES = MultiTexCoord4bvOES;\ntmp_->Vertex2xOES = Vertex2xOES;\ntmp_->Vertex3xOES = Vertex3xOES;\ntmp_->Vertex4xOES = Vertex4xOES;\ntmp_->Vertex2xvOES = Vertex2xvOES;\ntmp_->Vertex3xvOES = Vertex3xvOES;\ntmp_->Vertex4xvOES = Vertex4xvOES;\ntmp_->Normal3xOES = Normal3xOES;\ntmp_->Normal3xvOES = Normal3xvOES;\ntmp_->TexCoord1xOES = TexCoord1xOES;\ntmp_->TexCoord2xOES = TexCoord2xOES;\ntmp_->TexCoord3xOES = TexCoord3xOES;\ntmp_->TexCoord4xOES = TexCoord4xOES;\ntmp_->TexCoord1xvOES = TexCoord1xvOES;\ntmp_->TexCoord2xvOES = TexCoord2xvOES;\ntmp_->TexCoord3xvOES = TexCoord3xvOES;\ntmp_->TexCoord4xvOES = TexCoord4xvOES;\ntmp_->MultiTexCoord1xOES = MultiTexCoord1xOES;\ntmp_->MultiTexCoord2xOES = MultiTexCoord2xOES;\ntmp_->MultiTexCoord3xOES = MultiTexCoord3xOES;\ntmp_->MultiTexCoord4xOES = MultiTexCoord4xOES;\ntmp_->MultiTexCoord1xvOES = MultiTexCoord1xvOES;\ntmp_->MultiTexCoord2xvOES = MultiTexCoord2xvOES;\ntmp_->MultiTexCoord3xvOES = MultiTexCoord3xvOES;\ntmp_->MultiTexCoord4xvOES = MultiTexCoord4xvOES;\ntmp_->Color3xOES = Color3xOES;\ntmp_->Color4xOES = Color4xOES;\ntmp_->Color3xvOES = Color3xvOES;\ntmp_->Color4xvOES = Color4xvOES;\ntmp_->IndexxOES = IndexxOES;\ntmp_->IndexxvOES = IndexxvOES;\ntmp_->RectxOES = RectxOES;\ntmp_->RectxvOES = RectxvOES;\ntmp_->DepthRangexOES = DepthRangexOES;\ntmp_->LoadMatrixxOES = LoadMatrixxOES;\ntmp_->MultMatrixxOES = MultMatrixxOES;\ntmp_->LoadTransposeMatrixxOES = LoadTransposeMatrixxOES;\ntmp_->MultTransposeMatrixxOES = MultTransposeMatrixxOES;\ntmp_->RotatexOES = RotatexOES;\ntmp_->ScalexOES = ScalexOES;\ntmp_->TranslatexOES = TranslatexOES;\ntmp_->FrustumxOES = FrustumxOES;\ntmp_->OrthoxOES = OrthoxOES;\ntmp_->TexGenxOES = TexGenxOES;\ntmp_->TexGenxvOES = TexGenxvOES;\ntmp_->GetTexGenxvOES = GetTexGenxvOES;\ntmp_->ClipPlanexOES = ClipPlanexOES;\ntmp_->GetClipPlanexOES = GetClipPlanexOES;\ntmp_->RasterPos2xOES = RasterPos2xOES;\ntmp_->RasterPos3xOES = RasterPos3xOES;\ntmp_->RasterPos4xOES = RasterPos4xOES;\ntmp_->RasterPos2xvOES = RasterPos2xvOES;\ntmp_->RasterPos3xvOES = RasterPos3xvOES;\ntmp_->RasterPos4xvOES = RasterPos4xvOES;\ntmp_->MaterialxOES = MaterialxOES;\ntmp_->MaterialxvOES = MaterialxvOES;\ntmp_->GetMaterialxOES = GetMaterialxOES;\ntmp_->LightxOES = LightxOES;\ntmp_->LightxvOES = LightxvOES;\ntmp_->GetLightxOES = GetLightxOES;\ntmp_->LightModelxOES = LightModelxOES;\ntmp_->LightModelxvOES = LightModelxvOES;\ntmp_->PointSizexOES = PointSizexOES;\ntmp_->LineWidthxOES = LineWidthxOES;\ntmp_->PolygonOffsetxOES = PolygonOffsetxOES;\ntmp_->PixelStorex = PixelStorex;\ntmp_->PixelTransferxOES = PixelTransferxOES;\ntmp_->PixelMapx = PixelMapx;\ntmp_->GetPixelMapxv = GetPixelMapxv;\ntmp_->ConvolutionParameterxOES = ConvolutionParameterxOES;\ntmp_->ConvolutionParameterxvOES = ConvolutionParameterxvOES;\ntmp_->GetConvolutionParameterxvOES = GetConvolutionParameterxvOES;\ntmp_->GetHistogramParameterxvOES = GetHistogramParameterxvOES;\ntmp_->PixelZoomxOES = PixelZoomxOES;\ntmp_->BitmapxOES = BitmapxOES;\ntmp_->TexParameterxOES = TexParameterxOES;\ntmp_->TexParameterxvOES = TexParameterxvOES;\ntmp_->GetTexParameterxvOES = GetTexParameterxvOES;\ntmp_->GetTexLevelParameterxvOES = GetTexLevelParameterxvOES;\ntmp_->PrioritizeTexturesxOES = PrioritizeTexturesxOES;\ntmp_->TexEnvxOES = TexEnvxOES;\ntmp_->TexEnvxvOES = TexEnvxvOES;\ntmp_->GetTexEnvxvOES = GetTexEnvxvOES;\ntmp_->FogxOES = FogxOES;\ntmp_->FogxvOES = FogxvOES;\ntmp_->SampleCoverageOES = SampleCoverageOES;\ntmp_->AlphaFuncxOES = AlphaFuncxOES;\ntmp_->BlendColorxOES = BlendColorxOES;\ntmp_->ClearColorxOES = ClearColorxOES;\ntmp_->ClearDepthxOES = ClearDepthxOES;\ntmp_->ClearAccumxOES = ClearAccumxOES;\ntmp_->AccumxOES = AccumxOES;\ntmp_->Map1xOES = Map1xOES;\ntmp_->Map2xOES = Map2xOES;\ntmp_->MapGrid1xOES = MapGrid1xOES;\ntmp_->MapGrid2xOES = MapGrid2xOES;\ntmp_->GetMapxvOES = GetMapxvOES;\ntmp_->EvalCoord1xOES = EvalCoord1xOES;\ntmp_->EvalCoord2xOES = EvalCoord2xOES;\ntmp_->EvalCoord1xvOES = EvalCoord1xvOES;\ntmp_->EvalCoord2xvOES = EvalCoord2xvOES;\ntmp_->FeedbackBufferxOES = FeedbackBufferxOES;\ntmp_->PassThroughxOES = PassThroughxOES;\ntmp_->GetFixedvOES = GetFixedvOES;\ntmp_->DepthRangefOES = DepthRangefOES;\ntmp_->FrustumfOES = FrustumfOES;\ntmp_->OrthofOES = OrthofOES;\ntmp_->ClipPlanefOES = ClipPlanefOES;\ntmp_->GetClipPlanefOES = GetClipPlanefOES;\ntmp_->ClearDepthfOES = ClearDepthfOES;\ntmp_->QueryMatrixxOES = QueryMatrixxOES;\ntmp_->DepthBoundsEXT = DepthBoundsEXT;\ntmp_->BlendEquationSeparateEXT = BlendEquationSeparateEXT;\ntmp_->IsRenderbufferEXT = IsRenderbufferEXT;\ntmp_->BindRenderbufferEXT = BindRenderbufferEXT;\ntmp_->DeleteRenderbuffersEXT = DeleteRenderbuffersEXT;\ntmp_->GenRenderbuffersEXT = GenRenderbuffersEXT;\ntmp_->RenderbufferStorageEXT = RenderbufferStorageEXT;\ntmp_->GetRenderbufferParameterivEXT = GetRenderbufferParameterivEXT;\ntmp_->IsFramebufferEXT = IsFramebufferEXT;\ntmp_->BindFramebufferEXT = BindFramebufferEXT;\ntmp_->DeleteFramebuffersEXT = DeleteFramebuffersEXT;\ntmp_->GenFramebuffersEXT = GenFramebuffersEXT;\ntmp_->CheckFramebufferStatusEXT = CheckFramebufferStatusEXT;\ntmp_->FramebufferTexture1DEXT = FramebufferTexture1DEXT;\ntmp_->FramebufferTexture2DEXT = FramebufferTexture2DEXT;\ntmp_->FramebufferTexture3DEXT = FramebufferTexture3DEXT;\ntmp_->FramebufferRenderbufferEXT = FramebufferRenderbufferEXT;\ntmp_->GetFramebufferAttachmentParameterivEXT = GetFramebufferAttachmentParameterivEXT;\ntmp_->GenerateMipmapEXT = GenerateMipmapEXT;\ntmp_->StringMarkerGREMEDY = StringMarkerGREMEDY;\ntmp_->StencilClearTagEXT = StencilClearTagEXT;\ntmp_->BlitFramebufferEXT = BlitFramebufferEXT;\ntmp_->RenderbufferStorageMultisampleEXT = RenderbufferStorageMultisampleEXT;\ntmp_->GetQueryObjecti64vEXT = GetQueryObjecti64vEXT;\ntmp_->GetQueryObjectui64vEXT = GetQueryObjectui64vEXT;\ntmp_->ProgramEnvParameters4fvEXT = ProgramEnvParameters4fvEXT;\ntmp_->ProgramLocalParameters4fvEXT = ProgramLocalParameters4fvEXT;\ntmp_->BufferParameteriAPPLE = BufferParameteriAPPLE;\ntmp_->FlushMappedBufferRangeAPPLE = FlushMappedBufferRangeAPPLE;\ntmp_->UniformBufferEXT = UniformBufferEXT;\ntmp_->GetUniformBufferSizeEXT = GetUniformBufferSizeEXT;\ntmp_->GetUniformOffsetEXT = GetUniformOffsetEXT;\ntmp_->ColorMaskIndexedEXT = ColorMaskIndexedEXT;\ntmp_->GetBooleanIndexedvEXT = GetBooleanIndexedvEXT;\ntmp_->GetIntegerIndexedvEXT = GetIntegerIndexedvEXT;\ntmp_->EnableIndexedEXT = EnableIndexedEXT;\ntmp_->DisableIndexedEXT = DisableIndexedEXT;\ntmp_->IsEnabledIndexedEXT = IsEnabledIndexedEXT;\ntmp_->DrawArraysInstancedEXT = DrawArraysInstancedEXT;\ntmp_->DrawElementsInstancedEXT = DrawElementsInstancedEXT;\ntmp_->ProgramParameteriEXT = ProgramParameteriEXT;\ntmp_->FramebufferTextureEXT = FramebufferTextureEXT;\ntmp_->FramebufferTextureFaceEXT = FramebufferTextureFaceEXT;\ntmp_->VertexAttribI1iEXT = VertexAttribI1iEXT;\ntmp_->VertexAttribI2iEXT = VertexAttribI2iEXT;\ntmp_->VertexAttribI3iEXT = VertexAttribI3iEXT;\ntmp_->VertexAttribI4iEXT = VertexAttribI4iEXT;\ntmp_->VertexAttribI1uiEXT = VertexAttribI1uiEXT;\ntmp_->VertexAttribI2uiEXT = VertexAttribI2uiEXT;\ntmp_->VertexAttribI3uiEXT = VertexAttribI3uiEXT;\ntmp_->VertexAttribI4uiEXT = VertexAttribI4uiEXT;\ntmp_->VertexAttribI1ivEXT = VertexAttribI1ivEXT;\ntmp_->VertexAttribI2ivEXT = VertexAttribI2ivEXT;\ntmp_->VertexAttribI3ivEXT = VertexAttribI3ivEXT;\ntmp_->VertexAttribI4ivEXT = VertexAttribI4ivEXT;\ntmp_->VertexAttribI1uivEXT = VertexAttribI1uivEXT;\ntmp_->VertexAttribI2uivEXT = VertexAttribI2uivEXT;\ntmp_->VertexAttribI3uivEXT = VertexAttribI3uivEXT;\ntmp_->VertexAttribI4uivEXT = VertexAttribI4uivEXT;\ntmp_->VertexAttribI4bvEXT = VertexAttribI4bvEXT;\ntmp_->VertexAttribI4svEXT = VertexAttribI4svEXT;\ntmp_->VertexAttribI4ubvEXT = VertexAttribI4ubvEXT;\ntmp_->VertexAttribI4usvEXT = VertexAttribI4usvEXT;\ntmp_->VertexAttribIPointerEXT = VertexAttribIPointerEXT;\ntmp_->GetVertexAttribIivEXT = GetVertexAttribIivEXT;\ntmp_->GetVertexAttribIuivEXT = GetVertexAttribIuivEXT;\ntmp_->Uniform1uiEXT = Uniform1uiEXT;\ntmp_->Uniform2uiEXT = Uniform2uiEXT;\ntmp_->Uniform3uiEXT = Uniform3uiEXT;\ntmp_->Uniform4uiEXT = Uniform4uiEXT;\ntmp_->Uniform1uivEXT = Uniform1uivEXT;\ntmp_->Uniform2uivEXT = Uniform2uivEXT;\ntmp_->Uniform3uivEXT = Uniform3uivEXT;\ntmp_->Uniform4uivEXT = Uniform4uivEXT;\ntmp_->GetUniformuivEXT = GetUniformuivEXT;\ntmp_->BindFragDataLocationEXT = BindFragDataLocationEXT;\ntmp_->GetFragDataLocationEXT = GetFragDataLocationEXT;\ntmp_->FramebufferTextureLayerEXT = FramebufferTextureLayerEXT;\ntmp_->TexBufferEXT = TexBufferEXT;\ntmp_->DepthRangedNV = DepthRangedNV;\ntmp_->ClearDepthdNV = ClearDepthdNV;\ntmp_->DepthBoundsdNV = DepthBoundsdNV;\ntmp_->RenderbufferStorageMultsampleCoverageNV = RenderbufferStorageMultsampleCoverageNV;\ntmp_->ProgramVertexLimitNV = ProgramVertexLimitNV;\ntmp_->ProgramLocalParameterI4iNV = ProgramLocalParameterI4iNV;\ntmp_->ProgramLocalParameterI4ivNV = ProgramLocalParameterI4ivNV;\ntmp_->ProgramLocalParametersI4ivNV = ProgramLocalParametersI4ivNV;\ntmp_->ProgramLocalParameterI4uiNV = ProgramLocalParameterI4uiNV;\ntmp_->ProgramLocalParameterI4uivNV = ProgramLocalParameterI4uivNV;\ntmp_->ProgramLocalParametersI4uivNV = ProgramLocalParametersI4uivNV;\ntmp_->ProgramEnvParameterI4iNV = ProgramEnvParameterI4iNV;\ntmp_->ProgramEnvParameterI4ivNV = ProgramEnvParameterI4ivNV;\ntmp_->ProgramEnvParametersI4ivNV = ProgramEnvParametersI4ivNV;\ntmp_->ProgramEnvParameterI4uiNV = ProgramEnvParameterI4uiNV;\ntmp_->ProgramEnvParameterI4uivNV = ProgramEnvParameterI4uivNV;\ntmp_->ProgramEnvParametersI4uivNV = ProgramEnvParametersI4uivNV;\ntmp_->GetProgramLocalParameterIivNV = GetProgramLocalParameterIivNV;\ntmp_->GetProgramLocalParameterIuivNV = GetProgramLocalParameterIuivNV;\ntmp_->GetProgramEnvParameterIivNV = GetProgramEnvParameterIivNV;\ntmp_->GetProgramEnvParameterIuivNV = GetProgramEnvParameterIuivNV;\ntmp_->ProgramBufferParametersfvNV = ProgramBufferParametersfvNV;\ntmp_->ProgramBufferParametersIivNV = ProgramBufferParametersIivNV;\ntmp_->ProgramBufferParametersIuivNV = ProgramBufferParametersIuivNV;\ntmp_->BindBufferRangeNV = BindBufferRangeNV;\ntmp_->BindBufferOffsetNV = BindBufferOffsetNV;\ntmp_->BindBufferBaseNV = BindBufferBaseNV;\ntmp_->TransformFeedbackAttribsNV = TransformFeedbackAttribsNV;\ntmp_->TransformFeedbackVaryingsNV = TransformFeedbackVaryingsNV;\ntmp_->BeginTransformFeedbackNV = BeginTransformFeedbackNV;\ntmp_->EndTransformFeedbackNV = EndTransformFeedbackNV;\ntmp_->GetVaryingLocationNV = GetVaryingLocationNV;\ntmp_->GetActiveVaryingNV = GetActiveVaryingNV;\ntmp_->ActiveVaryingNV = ActiveVaryingNV;\ntmp_->GetTransformFeedbackVaryingNV = GetTransformFeedbackVaryingNV;\ntmp_->FrameTerminatorGREMEDY = FrameTerminatorGREMEDY;\ntmp_->BeginConditionalRenderNV = BeginConditionalRenderNV;\ntmp_->EndConditionalRenderNV = EndConditionalRenderNV;\ntmp_->BeginTransformFeedbackEXT = BeginTransformFeedbackEXT;\ntmp_->EndTransformFeedbackEXT = EndTransformFeedbackEXT;\ntmp_->BindBufferRangeEXT = BindBufferRangeEXT;\ntmp_->BindBufferOffsetEXT = BindBufferOffsetEXT;\ntmp_->BindBufferBaseEXT = BindBufferBaseEXT;\ntmp_->TransformFeedbackVaryingsEXT = TransformFeedbackVaryingsEXT;\ntmp_->GetTransformFeedbackVaryingEXT = GetTransformFeedbackVaryingEXT;\ntmp_->ClientAttribDefaultEXT = ClientAttribDefaultEXT;\ntmp_->PushClientAttribDefaultEXT = PushClientAttribDefaultEXT;\ntmp_->MatrixLoadfEXT = MatrixLoadfEXT;\ntmp_->MatrixLoaddEXT = MatrixLoaddEXT;\ntmp_->MatrixMultfEXT = MatrixMultfEXT;\ntmp_->MatrixMultdEXT = MatrixMultdEXT;\ntmp_->MatrixLoadIdentityEXT = MatrixLoadIdentityEXT;\ntmp_->MatrixRotatefEXT = MatrixRotatefEXT;\ntmp_->MatrixRotatedEXT = MatrixRotatedEXT;\ntmp_->MatrixScalefEXT = MatrixScalefEXT;\ntmp_->MatrixScaledEXT = MatrixScaledEXT;\ntmp_->MatrixTranslatefEXT = MatrixTranslatefEXT;\ntmp_->MatrixTranslatedEXT = MatrixTranslatedEXT;\ntmp_->MatrixFrustumEXT = MatrixFrustumEXT;\ntmp_->MatrixOrthoEXT = MatrixOrthoEXT;\ntmp_->MatrixPopEXT = MatrixPopEXT;\ntmp_->MatrixPushEXT = MatrixPushEXT;\ntmp_->MatrixLoadTransposefEXT = MatrixLoadTransposefEXT;\ntmp_->MatrixLoadTransposedEXT = MatrixLoadTransposedEXT;\ntmp_->MatrixMultTransposefEXT = MatrixMultTransposefEXT;\ntmp_->MatrixMultTransposedEXT = MatrixMultTransposedEXT;\ntmp_->TextureParameterfEXT = TextureParameterfEXT;\ntmp_->TextureParameterfvEXT = TextureParameterfvEXT;\ntmp_->TextureParameteriEXT = TextureParameteriEXT;\ntmp_->TextureParameterivEXT = TextureParameterivEXT;\ntmp_->TextureImage1DEXT = TextureImage1DEXT;\ntmp_->TextureImage2DEXT = TextureImage2DEXT;\ntmp_->TextureSubImage1DEXT = TextureSubImage1DEXT;\ntmp_->TextureSubImage2DEXT = TextureSubImage2DEXT;\ntmp_->CopyTextureImage1DEXT = CopyTextureImage1DEXT;\ntmp_->CopyTextureImage2DEXT = CopyTextureImage2DEXT;\ntmp_->CopyTextureSubImage1DEXT = CopyTextureSubImage1DEXT;\ntmp_->CopyTextureSubImage2DEXT = CopyTextureSubImage2DEXT;\ntmp_->GetTextureImageEXT = GetTextureImageEXT;\ntmp_->GetTextureParameterfvEXT = GetTextureParameterfvEXT;\ntmp_->GetTextureParameterivEXT = GetTextureParameterivEXT;\ntmp_->GetTextureLevelParameterfvEXT = GetTextureLevelParameterfvEXT;\ntmp_->GetTextureLevelParameterivEXT = GetTextureLevelParameterivEXT;\ntmp_->TextureImage3DEXT = TextureImage3DEXT;\ntmp_->TextureSubImage3DEXT = TextureSubImage3DEXT;\ntmp_->CopyTextureSubImage3DEXT = CopyTextureSubImage3DEXT;\ntmp_->MultiTexParameterfEXT = MultiTexParameterfEXT;\ntmp_->MultiTexParameterfvEXT = MultiTexParameterfvEXT;\ntmp_->MultiTexParameteriEXT = MultiTexParameteriEXT;\ntmp_->MultiTexParameterivEXT = MultiTexParameterivEXT;\ntmp_->MultiTexImage1DEXT = MultiTexImage1DEXT;\ntmp_->MultiTexImage2DEXT = MultiTexImage2DEXT;\ntmp_->MultiTexSubImage1DEXT = MultiTexSubImage1DEXT;\ntmp_->MultiTexSubImage2DEXT = MultiTexSubImage2DEXT;\ntmp_->CopyMultiTexImage1DEXT = CopyMultiTexImage1DEXT;\ntmp_->CopyMultiTexImage2DEXT = CopyMultiTexImage2DEXT;\ntmp_->CopyMultiTexSubImage1DEXT = CopyMultiTexSubImage1DEXT;\ntmp_->CopyMultiTexSubImage2DEXT = CopyMultiTexSubImage2DEXT;\ntmp_->GetMultiTexImageEXT = GetMultiTexImageEXT;\ntmp_->GetMultiTexParameterfvEXT = GetMultiTexParameterfvEXT;\ntmp_->GetMultiTexParameterivEXT = GetMultiTexParameterivEXT;\ntmp_->GetMultiTexLevelParameterfvEXT = GetMultiTexLevelParameterfvEXT;\ntmp_->GetMultiTexLevelParameterivEXT = GetMultiTexLevelParameterivEXT;\ntmp_->MultiTexImage3DEXT = MultiTexImage3DEXT;\ntmp_->MultiTexSubImage3DEXT = MultiTexSubImage3DEXT;\ntmp_->CopyMultiTexSubImage3DEXT = CopyMultiTexSubImage3DEXT;\ntmp_->BindMultiTextureEXT = BindMultiTextureEXT;\ntmp_->EnableClientStateIndexedEXT = EnableClientStateIndexedEXT;\ntmp_->DisableClientStateIndexedEXT = DisableClientStateIndexedEXT;\ntmp_->MultiTexCoordPointerEXT = MultiTexCoordPointerEXT;\ntmp_->MultiTexEnvfEXT = MultiTexEnvfEXT;\ntmp_->MultiTexEnvfvEXT = MultiTexEnvfvEXT;\ntmp_->MultiTexEnviEXT = MultiTexEnviEXT;\ntmp_->MultiTexEnvivEXT = MultiTexEnvivEXT;\ntmp_->MultiTexGendEXT = MultiTexGendEXT;\ntmp_->MultiTexGendvEXT = MultiTexGendvEXT;\ntmp_->MultiTexGenfEXT = MultiTexGenfEXT;\ntmp_->MultiTexGenfvEXT = MultiTexGenfvEXT;\ntmp_->MultiTexGeniEXT = MultiTexGeniEXT;\ntmp_->MultiTexGenivEXT = MultiTexGenivEXT;\ntmp_->GetMultiTexEnvfvEXT = GetMultiTexEnvfvEXT;\ntmp_->GetMultiTexEnvivEXT = GetMultiTexEnvivEXT;\ntmp_->GetMultiTexGendvEXT = GetMultiTexGendvEXT;\ntmp_->GetMultiTexGenfvEXT = GetMultiTexGenfvEXT;\ntmp_->GetMultiTexGenivEXT = GetMultiTexGenivEXT;\ntmp_->GetFloatIndexedvEXT = GetFloatIndexedvEXT;\ntmp_->GetDoubleIndexedvEXT = GetDoubleIndexedvEXT;\ntmp_->GetPointerIndexedvEXT = GetPointerIndexedvEXT;\ntmp_->CompressedTextureImage3DEXT = CompressedTextureImage3DEXT;\ntmp_->CompressedTextureImage2DEXT = CompressedTextureImage2DEXT;\ntmp_->CompressedTextureImage1DEXT = CompressedTextureImage1DEXT;\ntmp_->CompressedTextureSubImage3DEXT = CompressedTextureSubImage3DEXT;\ntmp_->CompressedTextureSubImage2DEXT = CompressedTextureSubImage2DEXT;\ntmp_->CompressedTextureSubImage1DEXT = CompressedTextureSubImage1DEXT;\ntmp_->GetCompressedTextureImageEXT = GetCompressedTextureImageEXT;\ntmp_->CompressedMultiTexImage3DEXT = CompressedMultiTexImage3DEXT;\ntmp_->CompressedMultiTexImage2DEXT = CompressedMultiTexImage2DEXT;\ntmp_->CompressedMultiTexImage1DEXT = CompressedMultiTexImage1DEXT;\ntmp_->CompressedMultiTexSubImage3DEXT = CompressedMultiTexSubImage3DEXT;\ntmp_->CompressedMultiTexSubImage2DEXT = CompressedMultiTexSubImage2DEXT;\ntmp_->CompressedMultiTexSubImage1DEXT = CompressedMultiTexSubImage1DEXT;\ntmp_->GetCompressedMultiTexImageEXT = GetCompressedMultiTexImageEXT;\ntmp_->NamedProgramStringEXT = NamedProgramStringEXT;\ntmp_->NamedProgramLocalParameter4dEXT = NamedProgramLocalParameter4dEXT;\ntmp_->NamedProgramLocalParameter4dvEXT = NamedProgramLocalParameter4dvEXT;\ntmp_->NamedProgramLocalParameter4fEXT = NamedProgramLocalParameter4fEXT;\ntmp_->NamedProgramLocalParameter4fvEXT = NamedProgramLocalParameter4fvEXT;\ntmp_->GetNamedProgramLocalParameterdvEXT = GetNamedProgramLocalParameterdvEXT;\ntmp_->GetNamedProgramLocalParameterfvEXT = GetNamedProgramLocalParameterfvEXT;\ntmp_->GetNamedProgramivEXT = GetNamedProgramivEXT;\ntmp_->GetNamedProgramStringEXT = GetNamedProgramStringEXT;\ntmp_->NamedProgramLocalParameters4fvEXT = NamedProgramLocalParameters4fvEXT;\ntmp_->NamedProgramLocalParameterI4iEXT = NamedProgramLocalParameterI4iEXT;\ntmp_->NamedProgramLocalParameterI4ivEXT = NamedProgramLocalParameterI4ivEXT;\ntmp_->NamedProgramLocalParametersI4ivEXT = NamedProgramLocalParametersI4ivEXT;\ntmp_->NamedProgramLocalParameterI4uiEXT = NamedProgramLocalParameterI4uiEXT;\ntmp_->NamedProgramLocalParameterI4uivEXT = NamedProgramLocalParameterI4uivEXT;\ntmp_->NamedProgramLocalParametersI4uivEXT = NamedProgramLocalParametersI4uivEXT;\ntmp_->GetNamedProgramLocalParameterIivEXT = GetNamedProgramLocalParameterIivEXT;\ntmp_->GetNamedProgramLocalParameterIuivEXT = GetNamedProgramLocalParameterIuivEXT;\ntmp_->TextureParameterIivEXT = TextureParameterIivEXT;\ntmp_->TextureParameterIuivEXT = TextureParameterIuivEXT;\ntmp_->GetTextureParameterIivEXT = GetTextureParameterIivEXT;\ntmp_->GetTextureParameterIuivEXT = GetTextureParameterIuivEXT;\ntmp_->MultiTexParameterIivEXT = MultiTexParameterIivEXT;\ntmp_->MultiTexParameterIuivEXT = MultiTexParameterIuivEXT;\ntmp_->GetMultiTexParameterIivEXT = GetMultiTexParameterIivEXT;\ntmp_->GetMultiTexParameterIuivEXT = GetMultiTexParameterIuivEXT;\ntmp_->ProgramUniform1fEXT = ProgramUniform1fEXT;\ntmp_->ProgramUniform2fEXT = ProgramUniform2fEXT;\ntmp_->ProgramUniform3fEXT = ProgramUniform3fEXT;\ntmp_->ProgramUniform4fEXT = ProgramUniform4fEXT;\ntmp_->ProgramUniform1iEXT = ProgramUniform1iEXT;\ntmp_->ProgramUniform2iEXT = ProgramUniform2iEXT;\ntmp_->ProgramUniform3iEXT = ProgramUniform3iEXT;\ntmp_->ProgramUniform4iEXT = ProgramUniform4iEXT;\ntmp_->ProgramUniform1fvEXT = ProgramUniform1fvEXT;\ntmp_->ProgramUniform2fvEXT = ProgramUniform2fvEXT;\ntmp_->ProgramUniform3fvEXT = ProgramUniform3fvEXT;\ntmp_->ProgramUniform4fvEXT = ProgramUniform4fvEXT;\ntmp_->ProgramUniform1ivEXT = ProgramUniform1ivEXT;\ntmp_->ProgramUniform2ivEXT = ProgramUniform2ivEXT;\ntmp_->ProgramUniform3ivEXT = ProgramUniform3ivEXT;\ntmp_->ProgramUniform4ivEXT = ProgramUniform4ivEXT;\ntmp_->ProgramUniformMatrix2fvEXT = ProgramUniformMatrix2fvEXT;\ntmp_->ProgramUniformMatrix3fvEXT = ProgramUniformMatrix3fvEXT;\ntmp_->ProgramUniformMatrix4fvEXT = ProgramUniformMatrix4fvEXT;\ntmp_->ProgramUniformMatrix2x3fvEXT = ProgramUniformMatrix2x3fvEXT;\ntmp_->ProgramUniformMatrix3x2fvEXT = ProgramUniformMatrix3x2fvEXT;\ntmp_->ProgramUniformMatrix2x4fvEXT = ProgramUniformMatrix2x4fvEXT;\ntmp_->ProgramUniformMatrix4x2fvEXT = ProgramUniformMatrix4x2fvEXT;\ntmp_->ProgramUniformMatrix3x4fvEXT = ProgramUniformMatrix3x4fvEXT;\ntmp_->ProgramUniformMatrix4x3fvEXT = ProgramUniformMatrix4x3fvEXT;\ntmp_->ProgramUniform1uiEXT = ProgramUniform1uiEXT;\ntmp_->ProgramUniform2uiEXT = ProgramUniform2uiEXT;\ntmp_->ProgramUniform3uiEXT = ProgramUniform3uiEXT;\ntmp_->ProgramUniform4uiEXT = ProgramUniform4uiEXT;\ntmp_->ProgramUniform1uivEXT = ProgramUniform1uivEXT;\ntmp_->ProgramUniform2uivEXT = ProgramUniform2uivEXT;\ntmp_->ProgramUniform3uivEXT = ProgramUniform3uivEXT;\ntmp_->ProgramUniform4uivEXT = ProgramUniform4uivEXT;\ntmp_->NamedBufferDataEXT = NamedBufferDataEXT;\ntmp_->NamedBufferSubDataEXT = NamedBufferSubDataEXT;\ntmp_->MapNamedBufferEXT = MapNamedBufferEXT;\ntmp_->UnmapNamedBufferEXT = UnmapNamedBufferEXT;\ntmp_->GetNamedBufferParameterivEXT = GetNamedBufferParameterivEXT;\ntmp_->GetNamedBufferPointervEXT = GetNamedBufferPointervEXT;\ntmp_->GetNamedBufferSubDataEXT = GetNamedBufferSubDataEXT;\ntmp_->TextureBufferEXT = TextureBufferEXT;\ntmp_->MultiTexBufferEXT = MultiTexBufferEXT;\ntmp_->NamedRenderbufferStorageEXT = NamedRenderbufferStorageEXT;\ntmp_->GetNamedRenderbufferParameterivEXT = GetNamedRenderbufferParameterivEXT;\ntmp_->CheckNamedFramebufferStatusEXT = CheckNamedFramebufferStatusEXT;\ntmp_->NamedFramebufferTexture1DEXT = NamedFramebufferTexture1DEXT;\ntmp_->NamedFramebufferTexture2DEXT = NamedFramebufferTexture2DEXT;\ntmp_->NamedFramebufferTexture3DEXT = NamedFramebufferTexture3DEXT;\ntmp_->NamedFramebufferRenderbufferEXT = NamedFramebufferRenderbufferEXT;\ntmp_->GetNamedFramebufferAttachmentParameterivEXT = GetNamedFramebufferAttachmentParameterivEXT;\ntmp_->GenerateTextureMipmapEXT = GenerateTextureMipmapEXT;\ntmp_->GenerateMultiTexMipmapEXT = GenerateMultiTexMipmapEXT;\ntmp_->FramebufferDrawBufferEXT = FramebufferDrawBufferEXT;\ntmp_->FramebufferDrawBuffersEXT = FramebufferDrawBuffersEXT;\ntmp_->FramebufferReadBufferEXT = FramebufferReadBufferEXT;\ntmp_->GetFramebufferParameterivEXT = GetFramebufferParameterivEXT;\ntmp_->NamedRenderbufferStorageMultisampleEXT = NamedRenderbufferStorageMultisampleEXT;\ntmp_->NamedRenderbufferStorageMultisampleCoverageEXT = NamedRenderbufferStorageMultisampleCoverageEXT;\ntmp_->NamedFramebufferTextureEXT = NamedFramebufferTextureEXT;\ntmp_->NamedFramebufferTextureLayerEXT = NamedFramebufferTextureLayerEXT;\ntmp_->NamedFramebufferTextureFaceEXT = NamedFramebufferTextureFaceEXT;\ntmp_->TextureRenderbufferEXT = TextureRenderbufferEXT;\ntmp_->MultiTexRenderbufferEXT = MultiTexRenderbufferEXT;\ntmp_->GetMultisamplefvNV = GetMultisamplefvNV;\ntmp_->SampleMaskIndexedNV = SampleMaskIndexedNV;\ntmp_->TexRenderbufferNV = TexRenderbufferNV;\ntmp_->BindTransformFeedbackNV = BindTransformFeedbackNV;\ntmp_->DeleteTransformFeedbacksNV = DeleteTransformFeedbacksNV;\ntmp_->GenTransformFeedbacksNV = GenTransformFeedbacksNV;\ntmp_->IsTransformFeedbackNV = IsTransformFeedbackNV;\ntmp_->PauseTransformFeedbackNV = PauseTransformFeedbackNV;\ntmp_->ResumeTransformFeedbackNV = ResumeTransformFeedbackNV;\ntmp_->DrawTransformFeedbackNV = DrawTransformFeedbackNV;\ntmp_->GetPerfMonitorGroupsAMD = GetPerfMonitorGroupsAMD;\ntmp_->GetPerfMonitorCountersAMD = GetPerfMonitorCountersAMD;\ntmp_->GetPerfMonitorGroupStringAMD = GetPerfMonitorGroupStringAMD;\ntmp_->GetPerfMonitorCounterStringAMD = GetPerfMonitorCounterStringAMD;\ntmp_->GetPerfMonitorCounterInfoAMD = GetPerfMonitorCounterInfoAMD;\ntmp_->GenPerfMonitorsAMD = GenPerfMonitorsAMD;\ntmp_->DeletePerfMonitorsAMD = DeletePerfMonitorsAMD;\ntmp_->SelectPerfMonitorCountersAMD = SelectPerfMonitorCountersAMD;\ntmp_->BeginPerfMonitorAMD = BeginPerfMonitorAMD;\ntmp_->EndPerfMonitorAMD = EndPerfMonitorAMD;\ntmp_->GetPerfMonitorCounterDataAMD = GetPerfMonitorCounterDataAMD;\ntmp_->TessellationFactorAMD = TessellationFactorAMD;\ntmp_->TessellationModeAMD = TessellationModeAMD;\ntmp_->ProvokingVertexEXT = ProvokingVertexEXT;\ntmp_->BlendFuncIndexedAMD = BlendFuncIndexedAMD;\ntmp_->BlendFuncSeparateIndexedAMD = BlendFuncSeparateIndexedAMD;\ntmp_->BlendEquationIndexedAMD = BlendEquationIndexedAMD;\ntmp_->BlendEquationSeparateIndexedAMD = BlendEquationSeparateIndexedAMD;\ntmp_->TextureRangeAPPLE = TextureRangeAPPLE;\ntmp_->GetTexParameterPointervAPPLE = GetTexParameterPointervAPPLE;\ntmp_->EnableVertexAttribAPPLE = EnableVertexAttribAPPLE;\ntmp_->DisableVertexAttribAPPLE = DisableVertexAttribAPPLE;\ntmp_->IsVertexAttribEnabledAPPLE = IsVertexAttribEnabledAPPLE;\ntmp_->MapVertexAttrib1dAPPLE = MapVertexAttrib1dAPPLE;\ntmp_->MapVertexAttrib1fAPPLE = MapVertexAttrib1fAPPLE;\ntmp_->MapVertexAttrib2dAPPLE = MapVertexAttrib2dAPPLE;\ntmp_->MapVertexAttrib2fAPPLE = MapVertexAttrib2fAPPLE;\ntmp_->ObjectPurgeableAPPLE = ObjectPurgeableAPPLE;\ntmp_->ObjectUnpurgeableAPPLE = ObjectUnpurgeableAPPLE;\ntmp_->GetObjectParameterivAPPLE = GetObjectParameterivAPPLE;\ntmp_->BeginVideoCaptureNV = BeginVideoCaptureNV;\ntmp_->BindVideoCaptureStreamBufferNV = BindVideoCaptureStreamBufferNV;\ntmp_->BindVideoCaptureStreamTextureNV = BindVideoCaptureStreamTextureNV;\ntmp_->EndVideoCaptureNV = EndVideoCaptureNV;\ntmp_->GetVideoCaptureivNV = GetVideoCaptureivNV;\ntmp_->GetVideoCaptureStreamivNV = GetVideoCaptureStreamivNV;\ntmp_->GetVideoCaptureStreamfvNV = GetVideoCaptureStreamfvNV;\ntmp_->GetVideoCaptureStreamdvNV = GetVideoCaptureStreamdvNV;\ntmp_->VideoCaptureNV = VideoCaptureNV;\ntmp_->VideoCaptureStreamParameterivNV = VideoCaptureStreamParameterivNV;\ntmp_->VideoCaptureStreamParameterfvNV = VideoCaptureStreamParameterfvNV;\ntmp_->VideoCaptureStreamParameterdvNV = VideoCaptureStreamParameterdvNV;\ntmp_->UseShaderProgramEXT = UseShaderProgramEXT;\ntmp_->ActiveProgramEXT = ActiveProgramEXT;\ntmp_->CreateShaderProgramEXT = CreateShaderProgramEXT;\ntmp_->MakeBufferResidentNV = MakeBufferResidentNV;\ntmp_->MakeBufferNonResidentNV = MakeBufferNonResidentNV;\ntmp_->IsBufferResidentNV = IsBufferResidentNV;\ntmp_->MakeNamedBufferResidentNV = MakeNamedBufferResidentNV;\ntmp_->MakeNamedBufferNonResidentNV = MakeNamedBufferNonResidentNV;\ntmp_->IsNamedBufferResidentNV = IsNamedBufferResidentNV;\ntmp_->GetBufferParameterui64vNV = GetBufferParameterui64vNV;\ntmp_->GetNamedBufferParameterui64vNV = GetNamedBufferParameterui64vNV;\ntmp_->GetIntegerui64vNV = GetIntegerui64vNV;\ntmp_->Uniformui64NV = Uniformui64NV;\ntmp_->Uniformui64vNV = Uniformui64vNV;\ntmp_->GetUniformui64vNV = GetUniformui64vNV;\ntmp_->ProgramUniformui64NV = ProgramUniformui64NV;\ntmp_->ProgramUniformui64vNV = ProgramUniformui64vNV;\ntmp_->BufferAddressRangeNV = BufferAddressRangeNV;\ntmp_->VertexFormatNV = VertexFormatNV;\ntmp_->NormalFormatNV = NormalFormatNV;\ntmp_->ColorFormatNV = ColorFormatNV;\ntmp_->IndexFormatNV = IndexFormatNV;\ntmp_->TexCoordFormatNV = TexCoordFormatNV;\ntmp_->EdgeFlagFormatNV = EdgeFlagFormatNV;\ntmp_->SecondaryColorFormatNV = SecondaryColorFormatNV;\ntmp_->FogCoordFormatNV = FogCoordFormatNV;\ntmp_->VertexAttribFormatNV = VertexAttribFormatNV;\ntmp_->VertexAttribIFormatNV = VertexAttribIFormatNV;\ntmp_->GetIntegerui64i_vNV = GetIntegerui64i_vNV;\ntmp_->TextureBarrierNV = TextureBarrierNV;\nreturn(tmp_);;\n")))

;;; END OF FILE
