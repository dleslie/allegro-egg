
;;; GENERATED BY CHICKEN-BIND FROM -

(begin
  (begin
    (define gldebugproc
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         (c-string a5)
         ((c-pointer void) a6))
        "GLDEBUGPROC(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:blend-color
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLclampf" a1) ("GLclampf" a2) ("GLclampf" a3))
        "_ALLEGRO_glBlendColor_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-equation
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glBlendEquation_t(a0);")))
  (begin
    (define gl:draw-range-elements
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glDrawRangeElements_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glColorTable_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glColorTableParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:color-table-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glColorTableParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-table
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyColorTable_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-color-table
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetColorTable_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-color-table-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetColorTableParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-color-table-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetColorTableParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:color-sub-table
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glColorSubTable_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:copy-color-sub-table
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyColorSubTable_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-image3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glTexImage3D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:tex-sub-image3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLenum" a8)
         ("GLenum" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glTexSubImage3D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:copy-tex-sub-image3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ("GLsizei" a8))
        "_ALLEGRO_glCopyTexSubImage3D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:convolution-filter1d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glConvolutionFilter1D_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:convolution-filter2d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glConvolutionFilter2D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:convolution-parameterf
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glConvolutionParameterf_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glConvolutionParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteri
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glConvolutionParameteri_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glConvolutionParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-convolution-filter1d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyConvolutionFilter1D_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:copy-convolution-filter2d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLsizei" a5))
        "_ALLEGRO_glCopyConvolutionFilter2D_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-convolution-filter
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetConvolutionFilter_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-convolution-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetConvolutionParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetConvolutionParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-separable-filter
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ((c-pointer "GLvoid") a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glGetSeparableFilter_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:separable-filter2d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer "GLvoid") a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glSeparableFilter2D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-histogram
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLboolean" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glGetHistogram_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-histogram-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetHistogramParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetHistogramParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLboolean" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glGetMinmax_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-minmax-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetMinmaxParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetMinmaxParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:histogram
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLenum" a2) ("GLboolean" a3))
        "_ALLEGRO_glHistogram_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:minmax
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLboolean" a2))
        "_ALLEGRO_glMinmax_t(a0 , a1 , a2);")))
  (begin
    (define gl:reset-histogram
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glResetHistogram_t(a0);")))
  (begin
    (define gl:reset-minmax
      (foreign-lambda* void (("GLenum" a0)) "_ALLEGRO_glResetMinmax_t(a0);")))
  (begin
    (define gl:active-texture
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glActiveTexture_t(a0);")))
  (begin
    (define gl:client-active-texture
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glClientActiveTexture_t(a0);")))
  (begin
    (define gl:multi-tex-coord1d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1))
        "_ALLEGRO_glMultiTexCoord1d_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1dv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord1dv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1f
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glMultiTexCoord1f_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1fv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord1fv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1i
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glMultiTexCoord1i_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1iv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord1iv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1s
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1))
        "_ALLEGRO_glMultiTexCoord1s_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1sv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord1sv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glMultiTexCoord2d_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2dv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord2dv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2f
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glMultiTexCoord2f_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2fv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord2fv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2i
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glMultiTexCoord2i_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2iv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord2iv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2s
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glMultiTexCoord2s_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2sv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord2sv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glMultiTexCoord3d_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3dv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord3dv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3f
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glMultiTexCoord3f_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3fv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord3fv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3i
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glMultiTexCoord3i_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3iv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord3iv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3s
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glMultiTexCoord3s_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3sv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord3sv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glMultiTexCoord4d_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4dv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord4dv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4f
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glMultiTexCoord4f_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4fv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord4fv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4i
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glMultiTexCoord4i_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4iv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord4iv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4s
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glMultiTexCoord4s_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4sv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord4sv_t(a0 , a1);")))
  (begin
    (define gl:load-transpose-matrixf
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glLoadTransposeMatrixf_t(a0);")))
  (begin
    (define gl:load-transpose-matrixd
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glLoadTransposeMatrixd_t(a0);")))
  (begin
    (define gl:mult-transpose-matrixf
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glMultTransposeMatrixf_t(a0);")))
  (begin
    (define gl:mult-transpose-matrixd
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glMultTransposeMatrixd_t(a0);")))
  (begin
    (define gl:sample-coverage
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLboolean" a1))
        "_ALLEGRO_glSampleCoverage_t(a0 , a1);")))
  (begin
    (define gl:compressed-tex-image3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedTexImage3D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-image2d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedTexImage2D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-tex-image1d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glCompressedTexImage1D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:compressed-tex-sub-image3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLenum" a8)
         ("GLsizei" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glCompressedTexSubImage3D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:compressed-tex-sub-image2d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLenum" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedTexSubImage2D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-sub-image1d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLsizei" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glCompressedTexSubImage1D_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-compressed-tex-image
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glGetCompressedTexImage_t(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separate
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glBlendFuncSeparate_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:fog-coordf
      (foreign-lambda* void (("GLfloat" a0)) "_ALLEGRO_glFogCoordf_t(a0);")))
  (begin
    (define gl:fog-coordfv
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glFogCoordfv_t(a0);")))
  (begin
    (define gl:fog-coordd
      (foreign-lambda* void (("GLdouble" a0)) "_ALLEGRO_glFogCoordd_t(a0);")))
  (begin
    (define gl:fog-coorddv
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glFogCoorddv_t(a0);")))
  (begin
    (define gl:fog-coord-pointer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glFogCoordPointer_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-draw-arrays
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLint") a1)
         ((c-pointer "GLsizei") a2)
         ("GLsizei" a3))
        "_ALLEGRO_glMultiDrawArrays_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLsizei") a1)
         ("GLenum" a2)
         ((c-pointer (c-pointer (const "GLvoid"))) a3)
         ("GLsizei" a4))
        "_ALLEGRO_glMultiDrawElements_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:point-parameterf
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPointParameterf_t(a0 , a1);")))
  (begin
    (define gl:point-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPointParameterfv_t(a0 , a1);")))
  (begin
    (define gl:point-parameteri
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glPointParameteri_t(a0 , a1);")))
  (begin
    (define gl:point-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glPointParameteriv_t(a0 , a1);")))
  (begin
    (define gl:secondary-color3b
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glSecondaryColor3b_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3bv
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glSecondaryColor3bv_t(a0);")))
  (begin
    (define gl:secondary-color3d
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glSecondaryColor3d_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3dv
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glSecondaryColor3dv_t(a0);")))
  (begin
    (define gl:secondary-color3f
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glSecondaryColor3f_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3fv
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glSecondaryColor3fv_t(a0);")))
  (begin
    (define gl:secondary-color3i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glSecondaryColor3i_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3iv
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glSecondaryColor3iv_t(a0);")))
  (begin
    (define gl:secondary-color3s
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glSecondaryColor3s_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3sv
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glSecondaryColor3sv_t(a0);")))
  (begin
    (define gl:secondary-color3ub
      (foreign-lambda*
        void
        (("GLubyte" a0) ("GLubyte" a1) ("GLubyte" a2))
        "_ALLEGRO_glSecondaryColor3ub_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3ubv
      (foreign-lambda*
        void
        (((c-pointer "GLubyte") a0))
        "_ALLEGRO_glSecondaryColor3ubv_t(a0);")))
  (begin
    (define gl:secondary-color3ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glSecondaryColor3ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3uiv
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0))
        "_ALLEGRO_glSecondaryColor3uiv_t(a0);")))
  (begin
    (define gl:secondary-color3us
      (foreign-lambda*
        void
        (("GLushort" a0) ("GLushort" a1) ("GLushort" a2))
        "_ALLEGRO_glSecondaryColor3us_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3usv
      (foreign-lambda*
        void
        (((c-pointer "GLushort") a0))
        "_ALLEGRO_glSecondaryColor3usv_t(a0);")))
  (begin
    (define gl:secondary-color-pointer
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glSecondaryColorPointer_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos2d
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1))
        "_ALLEGRO_glWindowPos2d_t(a0 , a1);")))
  (begin
    (define gl:window-pos2dv
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos2dv_t(a0);")))
  (begin
    (define gl:window-pos2f
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1))
        "_ALLEGRO_glWindowPos2f_t(a0 , a1);")))
  (begin
    (define gl:window-pos2fv
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos2fv_t(a0);")))
  (begin
    (define gl:window-pos2i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1))
        "_ALLEGRO_glWindowPos2i_t(a0 , a1);")))
  (begin
    (define gl:window-pos2iv
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos2iv_t(a0);")))
  (begin
    (define gl:window-pos2s
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1))
        "_ALLEGRO_glWindowPos2s_t(a0 , a1);")))
  (begin
    (define gl:window-pos2sv
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos2sv_t(a0);")))
  (begin
    (define gl:window-pos3d
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glWindowPos3d_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos3dv_t(a0);")))
  (begin
    (define gl:window-pos3f
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glWindowPos3f_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos3fv_t(a0);")))
  (begin
    (define gl:window-pos3i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glWindowPos3i_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos3iv_t(a0);")))
  (begin
    (define gl:window-pos3s
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glWindowPos3s_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos3sv_t(a0);")))
  (begin
    (define gl:bind-buffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindBuffer_t(a0 , a1);")))
  (begin
    (define gl:delete-buffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteBuffers_t(a0 , a1);")))
  (begin
    (define gl:gen-buffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenBuffers_t(a0 , a1);")))
  (begin
    (define gl:is-buffer
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsBuffer_t(a0));")))
  (begin
    (define gl:buffer-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ((c-pointer "GLvoid") a2)
         ("GLenum" a3))
        "_ALLEGRO_glBufferData_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-sub-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glBufferSubData_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-buffer-sub-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetBufferSubData_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-buffer
      (foreign-lambda*
        (c-pointer "GLvoid")
        (("GLenum" a0) ("GLenum" a1))
        "return(_ALLEGRO_glMapBuffer_t(a0 , a1));")))
  (begin
    (define gl:unmap-buffer
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0))
        "return(_ALLEGRO_glUnmapBuffer_t(a0));")))
  (begin
    (define gl:get-buffer-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetBufferParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-pointerv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetBufferPointerv_t(a0 , a1 , a2);")))
  (begin
    (define gl:gen-queries
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenQueries_t(a0 , a1);")))
  (begin
    (define gl:delete-queries
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteQueries_t(a0 , a1);")))
  (begin
    (define gl:is-query
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsQuery_t(a0));")))
  (begin
    (define gl:begin-query
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBeginQuery_t(a0 , a1);")))
  (begin
    (define gl:end-query
      (foreign-lambda* void (("GLenum" a0)) "_ALLEGRO_glEndQuery_t(a0);")))
  (begin
    (define gl:get-queryiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetQueryiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetQueryObjectiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectuiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetQueryObjectuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:blend-equation-separate
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glBlendEquationSeparate_t(a0 , a1);")))
  (begin
    (define gl:create-program
      (foreign-lambda* "GLuint" () "return(_ALLEGRO_glCreateProgram_t());")))
  (begin
    (define gl:create-shader
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0))
        "return(_ALLEGRO_glCreateShader_t(a0));")))
  (begin
    (define gl:delete-program
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDeleteProgram_t(a0);")))
  (begin
    (define gl:delete-shader
      (foreign-lambda* void (("GLuint" a0)) "_ALLEGRO_glDeleteShader_t(a0);")))
  (begin
    (define gl:attach-shader
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glAttachShader_t(a0 , a1);")))
  (begin
    (define gl:detach-shader
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glDetachShader_t(a0 , a1);")))
  (begin
    (define gl:shader-source
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer (c-pointer (const char))) a2)
         ((c-pointer "GLint") a3))
        "_ALLEGRO_glShaderSource_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compile-shader
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glCompileShader_t(a0);")))
  (begin
    (define gl:is-program
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsProgram_t(a0));")))
  (begin
    (define gl:is-shader
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsShader_t(a0));")))
  (begin
    (define gl:link-program
      (foreign-lambda* void (("GLuint" a0)) "_ALLEGRO_glLinkProgram_t(a0);")))
  (begin
    (define gl:use-program
      (foreign-lambda* void (("GLuint" a0)) "_ALLEGRO_glUseProgram_t(a0);")))
  (begin
    (define gl:validate-program
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glValidateProgram_t(a0);")))
  (begin
    (define gl:uniform1f
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1))
        "_ALLEGRO_glUniform1f_t(a0 , a1);")))
  (begin
    (define gl:uniform2f
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glUniform2f_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3f
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glUniform3f_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4f
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glUniform4f_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1))
        "_ALLEGRO_glUniform1i_t(a0 , a1);")))
  (begin
    (define gl:uniform2i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glUniform2i_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glUniform3i_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4i
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glUniform4i_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1fv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform1fv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2fv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform2fv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3fv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform3fv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4fv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform4fv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1iv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform1iv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2iv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform2iv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3iv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform3iv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4iv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform4iv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix2fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix3fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix4fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-shaderfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetShaderfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-shaderiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetShaderiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-programfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetProgramfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-programiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetProgramiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-info-log
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLsizei") a2) (c-string a3))
        "_ALLEGRO_glGetShaderInfoLog_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-info-log
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLsizei") a2) (c-string a3))
        "_ALLEGRO_glGetProgramInfoLog_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-attached-shaders
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLsizei") a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glGetAttachedShaders_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniform-location
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetUniformLocation_t(a0 , a1));")))
  (begin
    (define gl:get-active-uniform
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLint") a4)
         ((c-pointer "GLenum") a5)
         (c-string a6))
        "_ALLEGRO_glGetActiveUniform_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-uniformfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetUniformfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetUniformiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-source
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLsizei") a2) (c-string a3))
        "_ALLEGRO_glGetShaderSource_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib1f
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1))
        "_ALLEGRO_glVertexAttrib1f_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1))
        "_ALLEGRO_glVertexAttrib1s_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1d
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1))
        "_ALLEGRO_glVertexAttrib1d_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glVertexAttrib2f_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2s
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glVertexAttrib2s_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2d
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glVertexAttrib2d_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib3f
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glVertexAttrib3f_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3s
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glVertexAttrib3s_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3d
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glVertexAttrib3d_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib4f
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glVertexAttrib4f_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4s
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glVertexAttrib4s_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4d
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glVertexAttrib4d_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4nub
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLubyte" a4))
        "_ALLEGRO_glVertexAttrib4Nub_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib1fv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib1fv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib1sv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib1dv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2fv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib2fv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2sv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib2sv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2dv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib2dv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3fv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib3fv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3sv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib3sv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3dv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib3dv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4fv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib4fv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4sv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib4sv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4dv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib4dv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4iv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttrib4iv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4bv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttrib4bv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ubv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttrib4ubv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4usv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttrib4usv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4uiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttrib4uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nbv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttrib4Nbv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nsv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib4Nsv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4niv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttrib4Niv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nubv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttrib4Nubv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nusv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttrib4Nusv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nuiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttrib4Nuiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-pointer
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLboolean" a3)
         ("GLsizei" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glVertexAttribPointer_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:enable-vertex-attrib-array
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glEnableVertexAttribArray_t(a0);")))
  (begin
    (define gl:disable-vertex-attrib-array
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDisableVertexAttribArray_t(a0);")))
  (begin
    (define gl:bind-attrib-location
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) (c-string a2))
        "_ALLEGRO_glBindAttribLocation_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-active-attrib
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLint") a4)
         ((c-pointer "GLenum") a5)
         (c-string a6))
        "_ALLEGRO_glGetActiveAttrib_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-attrib-location
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetAttribLocation_t(a0 , a1));")))
  (begin
    (define gl:get-vertex-attribdv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetVertexAttribdv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVertexAttribfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetVertexAttribPointerv_t(a0 , a1 , a2);")))
  (begin
    (define gl:draw-buffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLenum") a1))
        "_ALLEGRO_glDrawBuffers_t(a0 , a1);")))
  (begin
    (define gl:stencil-op-separate
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glStencilOpSeparate_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:stencil-func-separate
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ("GLuint" a3))
        "_ALLEGRO_glStencilFuncSeparate_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:stencil-mask-separate
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glStencilMaskSeparate_t(a0 , a1);")))
  (begin
    (define gl:uniform-matrix2x3fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix2x3fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x2fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix3x2fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x4fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix2x4fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x2fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix4x2fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x4fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix3x4fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x3fv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix4x3fv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color-maski
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLboolean" a1)
         ("GLboolean" a2)
         ("GLboolean" a3)
         ("GLboolean" a4))
        "_ALLEGRO_glColorMaski_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-booleani-v
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glGetBooleani_v_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-integeri-v
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetIntegeri_v_t(a0 , a1 , a2);")))
  (begin
    (define gl:enablei
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glEnablei_t(a0 , a1);")))
  (begin
    (define gl:disablei
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glDisablei_t(a0 , a1);")))
  (begin
    (define gl:is-enabledi
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0) ("GLuint" a1))
        "return(_ALLEGRO_glIsEnabledi_t(a0 , a1));")))
  (begin
    (define gl:begin-transform-feedback
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glBeginTransformFeedback_t(a0);")))
  (begin
    (define gl:end-transform-feedback
      (foreign-lambda* void () "_ALLEGRO_glEndTransformFeedback_t();")))
  (begin
    (define gl:bind-buffer-range
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("ptrdiff_t" a3)
         ("ptrdiff_t" a4))
        "_ALLEGRO_glBindBufferRange_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-base
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glBindBufferBase_t(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2) ("GLenum" a3))
        "_ALLEGRO_glTransformFeedbackVaryings_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-transform-feedback-varying
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetTransformFeedbackVarying_t(a0 , a1 , a2);")))
  (begin
    (define gl:clamp-color
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glClampColor_t(a0 , a1);")))
  (begin
    (define gl:begin-conditional-render
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glBeginConditionalRender_t(a0 , a1);")))
  (begin
    (define gl:end-conditional-render
      (foreign-lambda* void () "_ALLEGRO_glEndConditionalRender_t();")))
  (begin
    (define gl:vertex-attrib-i1i
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1))
        "_ALLEGRO_glVertexAttribI1i_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2i
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glVertexAttribI2i_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3i
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glVertexAttribI3i_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4i
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glVertexAttribI4i_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexAttribI1ui_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glVertexAttribI2ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribI3ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glVertexAttribI4ui_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1iv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI1iv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2iv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI2iv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3iv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI3iv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4iv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI4iv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i1uiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI1uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2uiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI2uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3uiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI3uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4uiv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI4uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4bv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttribI4bv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4sv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttribI4sv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4ubv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttribI4ubv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4usv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttribI4usv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-ipointer
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glVertexAttribIPointer_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-vertex-attrib-iiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribIiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-iuiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetVertexAttribIuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformuiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetUniformuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:bind-frag-data-location
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) (c-string a2))
        "_ALLEGRO_glBindFragDataLocation_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-frag-data-location
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetFragDataLocation_t(a0 , a1));")))
  (begin
    (define gl:uniform1ui
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1))
        "_ALLEGRO_glUniform1ui_t(a0 , a1);")))
  (begin
    (define gl:uniform2ui
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glUniform2ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3ui
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glUniform3ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4ui
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glUniform4ui_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1uiv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform1uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2uiv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform2uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3uiv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform3uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4uiv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform4uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameter-iiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glTexParameterIiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameter-iuiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glTexParameterIuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-iiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetTexParameterIiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-iuiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetTexParameterIuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glClearBufferiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferuiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glClearBufferuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferfv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glClearBufferfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:clear-bufferfi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLfloat" a2) ("GLint" a3))
        "_ALLEGRO_glClearBufferfi_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-stringi
      (foreign-lambda*
        (c-pointer (const "GLubyte"))
        (("GLenum" a0) ("GLuint" a1))
        "return(_ALLEGRO_glGetStringi_t(a0 , a1));")))
  (begin
    (define gl:draw-arrays-instanced
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glDrawArraysInstanced_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ("GLsizei" a4))
        "_ALLEGRO_glDrawElementsInstanced_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-buffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glTexBuffer_t(a0 , a1 , a2);")))
  (begin
    (define gl:primitive-restart-index
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glPrimitiveRestartIndex_t(a0);")))
  (begin
    (define gl:get-integer64i-v
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer integer64) a2))
        "_ALLEGRO_glGetInteger64i_v_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-parameteri64v
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer integer64) a2))
        "_ALLEGRO_glGetBufferParameteri64v_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameteri
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glProgramParameteri_t(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3))
        "_ALLEGRO_glFramebufferTexture_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-buffer-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer void) a4))
        "_ALLEGRO_glClearBufferData_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:clear-buffer-sub-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("ptrdiff_t" a2)
         ("ptrdiff_t" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer void) a6))
        "_ALLEGRO_glClearBufferSubData_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:dispatch-compute
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glDispatchCompute_t(a0 , a1 , a2);")))
  (begin
    (define gl:dispatch-compute-indirect
      (foreign-lambda*
        void
        (("ptrdiff_t" a0))
        "_ALLEGRO_glDispatchComputeIndirect_t(a0);")))
  (begin
    (define gl:copy-image-sub-data
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLuint" a6)
         ("GLenum" a7)
         ("GLint" a8)
         ("GLint" a9)
         ("GLint" a10)
         ("GLint" a11)
         ("GLsizei" a12)
         ("GLsizei" a13)
         ("GLsizei" a14))
        "_ALLEGRO_glCopyImageSubData_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14);")))
  (begin
    (define gl:framebuffer-parameteri
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glFramebufferParameteri_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-framebuffer-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFramebufferParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-internalformati64v
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer integer64) a4))
        "_ALLEGRO_glGetInternalformati64v_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:invalidate-tex-sub-image
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLsizei" a7))
        "_ALLEGRO_glInvalidateTexSubImage_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:invalidate-tex-image
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1))
        "_ALLEGRO_glInvalidateTexImage_t(a0 , a1);")))
  (begin
    (define gl:invalidate-buffer-sub-data
      (foreign-lambda*
        void
        (("GLuint" a0) ("ptrdiff_t" a1) ("ptrdiff_t" a2))
        "_ALLEGRO_glInvalidateBufferSubData_t(a0 , a1 , a2);")))
  (begin
    (define gl:invalidate-buffer-data
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glInvalidateBufferData_t(a0);")))
  (begin
    (define gl:invalidate-framebuffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLenum") a2))
        "_ALLEGRO_glInvalidateFramebuffer_t(a0 , a1 , a2);")))
  (begin
    (define gl:invalidate-sub-framebuffer
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ((c-pointer "GLenum") a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6))
        "_ALLEGRO_glInvalidateSubFramebuffer_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:multi-draw-arrays-indirect
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer void) a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glMultiDrawArraysIndirect_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements-indirect
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ((c-pointer void) a2)
         ("GLsizei" a3)
         ("GLsizei" a4))
        "_ALLEGRO_glMultiDrawElementsIndirect_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-program-interfaceiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetProgramInterfaceiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-resource-index
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0) ("GLenum" a1) (c-string a2))
        "return(_ALLEGRO_glGetProgramResourceIndex_t(a0 , a1 , a2));")))
  (begin
    (define gl:get-program-resource-name
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLsizei") a4)
         (c-string a5))
        "_ALLEGRO_glGetProgramResourceName_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-program-resourceiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLenum") a4)
         ("GLsizei" a5)
         ((c-pointer "GLsizei") a6)
         ((c-pointer "GLint") a7))
        "_ALLEGRO_glGetProgramResourceiv_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-program-resource-location
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) ("GLenum" a1) (c-string a2))
        "return(_ALLEGRO_glGetProgramResourceLocation_t(a0 , a1 , a2));")))
  (begin
    (define gl:get-program-resource-location-index
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) ("GLenum" a1) (c-string a2))
        "return(_ALLEGRO_glGetProgramResourceLocationIndex_t(a0 , a1 , a2));")))
  (begin
    (define gl:shader-storage-block-binding
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glShaderStorageBlockBinding_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-buffer-range
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("ptrdiff_t" a3)
         ("ptrdiff_t" a4))
        "_ALLEGRO_glTexBufferRange_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-storage2dmultisample
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLboolean" a5))
        "_ALLEGRO_glTexStorage2DMultisample_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-storage3dmultisample
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLboolean" a6))
        "_ALLEGRO_glTexStorage3DMultisample_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:texture-view
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLenum" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6)
         ("GLuint" a7))
        "_ALLEGRO_glTextureView_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:bind-vertex-buffer
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("ptrdiff_t" a2) ("GLsizei" a3))
        "_ALLEGRO_glBindVertexBuffer_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-format
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLboolean" a3)
         ("GLuint" a4))
        "_ALLEGRO_glVertexAttribFormat_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-iformat
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribIFormat_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-lformat
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribLFormat_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-binding
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexAttribBinding_t(a0 , a1);")))
  (begin
    (define gl:vertex-binding-divisor
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexBindingDivisor_t(a0 , a1);")))
  (begin
    (define gl:debug-message-control
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLuint") a4)
         ("GLboolean" a5))
        "_ALLEGRO_glDebugMessageControl_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:debug-message-insert
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         (c-string a5))
        "_ALLEGRO_glDebugMessageInsert_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:debug-message-callback
      (foreign-lambda*
        void
        (("GLDEBUGPROC" a0) ((c-pointer void) a1))
        "_ALLEGRO_glDebugMessageCallback_t(a0 , a1);")))
  (begin
    (define gl:get-debug-message-log
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLenum") a2)
         ((c-pointer "GLenum") a3)
         ((c-pointer "GLuint") a4)
         ((c-pointer "GLenum") a5)
         ((c-pointer "GLsizei") a6)
         (c-string a7))
        "return(_ALLEGRO_glGetDebugMessageLog_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7));")))
  (begin
    (define gl:push-debug-group
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) (c-string a3))
        "_ALLEGRO_glPushDebugGroup_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:pop-debug-group
      (foreign-lambda* void () "_ALLEGRO_glPopDebugGroup_t();")))
  (begin
    (define gl:object-label
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) (c-string a3))
        "_ALLEGRO_glObjectLabel_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-object-label
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         (c-string a4))
        "_ALLEGRO_glGetObjectLabel_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:object-ptr-label
      (foreign-lambda*
        void
        (((c-pointer void) a0) ("GLsizei" a1) (c-string a2))
        "_ALLEGRO_glObjectPtrLabel_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-ptr-label
      (foreign-lambda*
        void
        (((c-pointer void) a0)
         ("GLsizei" a1)
         ((c-pointer "GLsizei") a2)
         (c-string a3))
        "_ALLEGRO_glGetObjectPtrLabel_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:active-texture-arb
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glActiveTextureARB_t(a0);")))
  (begin
    (define gl:client-active-texture-arb
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glClientActiveTextureARB_t(a0);")))
  (begin
    (define gl:multi-tex-coord1d-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1))
        "_ALLEGRO_glMultiTexCoord1dARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord1dvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1f-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glMultiTexCoord1fARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord1fvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1i-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glMultiTexCoord1iARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1iv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord1ivARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1s-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1))
        "_ALLEGRO_glMultiTexCoord1sARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1sv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord1svARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2d-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glMultiTexCoord2dARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord2dvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2f-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glMultiTexCoord2fARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord2fvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2i-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glMultiTexCoord2iARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2iv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord2ivARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2s-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glMultiTexCoord2sARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2sv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord2svARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3d-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glMultiTexCoord3dARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord3dvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3f-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glMultiTexCoord3fARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord3fvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3i-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glMultiTexCoord3iARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3iv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord3ivARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3s-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glMultiTexCoord3sARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3sv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord3svARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4d-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glMultiTexCoord4dARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMultiTexCoord4dvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4f-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glMultiTexCoord4fARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMultiTexCoord4fvARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4i-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glMultiTexCoord4iARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4iv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glMultiTexCoord4ivARB_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4s-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glMultiTexCoord4sARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4sv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glMultiTexCoord4svARB_t(a0 , a1);")))
  (begin
    (define gl:load-transpose-matrixf-arb
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glLoadTransposeMatrixfARB_t(a0);")))
  (begin
    (define gl:load-transpose-matrixd-arb
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glLoadTransposeMatrixdARB_t(a0);")))
  (begin
    (define gl:mult-transpose-matrixf-arb
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glMultTransposeMatrixfARB_t(a0);")))
  (begin
    (define gl:mult-transpose-matrixd-arb
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glMultTransposeMatrixdARB_t(a0);")))
  (begin
    (define gl:sample-coverage-arb
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLboolean" a1))
        "_ALLEGRO_glSampleCoverageARB_t(a0 , a1);")))
  (begin
    (define gl:compressed-tex-image3darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedTexImage3DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-image2darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedTexImage2DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-tex-image1darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glCompressedTexImage1DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:compressed-tex-sub-image3darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLenum" a8)
         ("GLsizei" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glCompressedTexSubImage3DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:compressed-tex-sub-image2darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLenum" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedTexSubImage2DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-tex-sub-image1darb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLsizei" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glCompressedTexSubImage1DARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-compressed-tex-image-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glGetCompressedTexImageARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:point-parameterf-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPointParameterfARB_t(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPointParameterfvARB_t(a0 , a1);")))
  (begin
    (define gl:weightbv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glWeightbvARB_t(a0 , a1);")))
  (begin
    (define gl:weightsv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glWeightsvARB_t(a0 , a1);")))
  (begin
    (define gl:weightiv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glWeightivARB_t(a0 , a1);")))
  (begin
    (define gl:weightfv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glWeightfvARB_t(a0 , a1);")))
  (begin
    (define gl:weightdv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glWeightdvARB_t(a0 , a1);")))
  (begin
    (define gl:weightubv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glWeightubvARB_t(a0 , a1);")))
  (begin
    (define gl:weightusv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glWeightusvARB_t(a0 , a1);")))
  (begin
    (define gl:weightuiv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glWeightuivARB_t(a0 , a1);")))
  (begin
    (define gl:weight-pointer-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glWeightPointerARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-blend-arb
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glVertexBlendARB_t(a0);")))
  (begin
    (define gl:current-palette-matrix-arb
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glCurrentPaletteMatrixARB_t(a0);")))
  (begin
    (define gl:matrix-indexubv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glMatrixIndexubvARB_t(a0 , a1);")))
  (begin
    (define gl:matrix-indexusv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glMatrixIndexusvARB_t(a0 , a1);")))
  (begin
    (define gl:matrix-indexuiv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glMatrixIndexuivARB_t(a0 , a1);")))
  (begin
    (define gl:matrix-index-pointer-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glMatrixIndexPointerARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos2d-arb
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1))
        "_ALLEGRO_glWindowPos2dARB_t(a0 , a1);")))
  (begin
    (define gl:window-pos2dv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos2dvARB_t(a0);")))
  (begin
    (define gl:window-pos2f-arb
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1))
        "_ALLEGRO_glWindowPos2fARB_t(a0 , a1);")))
  (begin
    (define gl:window-pos2fv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos2fvARB_t(a0);")))
  (begin
    (define gl:window-pos2i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1))
        "_ALLEGRO_glWindowPos2iARB_t(a0 , a1);")))
  (begin
    (define gl:window-pos2iv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos2ivARB_t(a0);")))
  (begin
    (define gl:window-pos2s-arb
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1))
        "_ALLEGRO_glWindowPos2sARB_t(a0 , a1);")))
  (begin
    (define gl:window-pos2sv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos2svARB_t(a0);")))
  (begin
    (define gl:window-pos3d-arb
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glWindowPos3dARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos3dvARB_t(a0);")))
  (begin
    (define gl:window-pos3f-arb
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glWindowPos3fARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos3fvARB_t(a0);")))
  (begin
    (define gl:window-pos3i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glWindowPos3iARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos3ivARB_t(a0);")))
  (begin
    (define gl:window-pos3s-arb
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glWindowPos3sARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv-arb
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos3svARB_t(a0);")))
  (begin
    (define gl:vertex-attrib1d-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1))
        "_ALLEGRO_glVertexAttrib1dARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib1dvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1f-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1))
        "_ALLEGRO_glVertexAttrib1fARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1fv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib1fvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1))
        "_ALLEGRO_glVertexAttrib1sARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib1svARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2d-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glVertexAttrib2dARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2dv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib2dvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glVertexAttrib2fARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2fv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib2fvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2s-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glVertexAttrib2sARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2sv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib2svARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3d-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glVertexAttrib3dARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3dv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib3dvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3f-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glVertexAttrib3fARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3fv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib3fvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3s-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glVertexAttrib3sARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3sv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib3svARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nbv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttrib4NbvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4niv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttrib4NivARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nsv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib4NsvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nub-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLubyte" a4))
        "_ALLEGRO_glVertexAttrib4NubARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4nubv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttrib4NubvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nuiv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttrib4NuivARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4nusv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttrib4NusvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4bv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttrib4bvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4d-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glVertexAttrib4dARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4dv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib4dvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4f-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glVertexAttrib4fARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4fv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib4fvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4iv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttrib4ivARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4s-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glVertexAttrib4sARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4sv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib4svARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ubv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttrib4ubvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4uiv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttrib4uivARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4usv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttrib4usvARB_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-pointer-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLboolean" a3)
         ("GLsizei" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glVertexAttribPointerARB_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:enable-vertex-attrib-array-arb
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glEnableVertexAttribArrayARB_t(a0);")))
  (begin
    (define gl:disable-vertex-attrib-array-arb
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDisableVertexAttribArrayARB_t(a0);")))
  (begin
    (define gl:program-string-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glProgramStringARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-program-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindProgramARB_t(a0 , a1);")))
  (begin
    (define gl:delete-programs-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteProgramsARB_t(a0 , a1);")))
  (begin
    (define gl:gen-programs-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenProgramsARB_t(a0 , a1);")))
  (begin
    (define gl:program-env-parameter4d-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5))
        "_ALLEGRO_glProgramEnvParameter4dARB_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter4dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glProgramEnvParameter4dvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameter4f-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glProgramEnvParameter4fARB_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter4fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glProgramEnvParameter4fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameter4d-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5))
        "_ALLEGRO_glProgramLocalParameter4dARB_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter4dv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glProgramLocalParameter4dvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameter4f-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glProgramLocalParameter4fARB_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter4fv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glProgramLocalParameter4fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameterdv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetProgramEnvParameterdvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameterfv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetProgramEnvParameterfvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameterdv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetProgramLocalParameterdvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameterfv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetProgramLocalParameterfvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-programiv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetProgramivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-string-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glGetProgramStringARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribdv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetVertexAttribdvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVertexAttribfvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetVertexAttribPointervARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:is-program-arb
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsProgramARB_t(a0));")))
  (begin
    (define gl:bind-buffer-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindBufferARB_t(a0 , a1);")))
  (begin
    (define gl:delete-buffers-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteBuffersARB_t(a0 , a1);")))
  (begin
    (define gl:gen-buffers-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenBuffersARB_t(a0 , a1);")))
  (begin
    (define gl:is-buffer-arb
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsBufferARB_t(a0));")))
  (begin
    (define gl:buffer-data-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ((c-pointer "GLvoid") a2)
         ("GLenum" a3))
        "_ALLEGRO_glBufferDataARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-sub-data-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glBufferSubDataARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-buffer-sub-data-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetBufferSubDataARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-buffer-arb
      (foreign-lambda*
        (c-pointer "GLvoid")
        (("GLenum" a0) ("GLenum" a1))
        "return(_ALLEGRO_glMapBufferARB_t(a0 , a1));")))
  (begin
    (define gl:unmap-buffer-arb
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0))
        "return(_ALLEGRO_glUnmapBufferARB_t(a0));")))
  (begin
    (define gl:get-buffer-parameteriv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetBufferParameterivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-buffer-pointerv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetBufferPointervARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:gen-queries-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenQueriesARB_t(a0 , a1);")))
  (begin
    (define gl:delete-queries-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteQueriesARB_t(a0 , a1);")))
  (begin
    (define gl:is-query-arb
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsQueryARB_t(a0));")))
  (begin
    (define gl:begin-query-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBeginQueryARB_t(a0 , a1);")))
  (begin
    (define gl:end-query-arb
      (foreign-lambda* void (("GLenum" a0)) "_ALLEGRO_glEndQueryARB_t(a0);")))
  (begin
    (define gl:get-queryiv-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetQueryivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectiv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetQueryObjectivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectuiv-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetQueryObjectuivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:delete-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "_ALLEGRO_glDeleteObjectARB_t(a0);")))
  (begin
    (define gl:get-handle-arb
      (foreign-lambda*
        unsigned-long
        (("GLenum" a0))
        "return(_ALLEGRO_glGetHandleARB_t(a0));")))
  (begin
    (define gl:detach-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-long a1))
        "_ALLEGRO_glDetachObjectARB_t(a0 , a1);")))
  (begin
    (define gl:create-shader-object-arb
      (foreign-lambda*
        unsigned-long
        (("GLenum" a0))
        "return(_ALLEGRO_glCreateShaderObjectARB_t(a0));")))
  (begin
    (define gl:shader-source-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLsizei" a1)
         ((c-pointer (c-pointer (const char))) a2)
         ((c-pointer "GLint") a3))
        "_ALLEGRO_glShaderSourceARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compile-shader-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "_ALLEGRO_glCompileShaderARB_t(a0);")))
  (begin
    (define gl:create-program-object-arb
      (foreign-lambda*
        unsigned-long
        ()
        "return(_ALLEGRO_glCreateProgramObjectARB_t());")))
  (begin
    (define gl:attach-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) (unsigned-long a1))
        "_ALLEGRO_glAttachObjectARB_t(a0 , a1);")))
  (begin
    (define gl:link-program-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "_ALLEGRO_glLinkProgramARB_t(a0);")))
  (begin
    (define gl:use-program-object-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "_ALLEGRO_glUseProgramObjectARB_t(a0);")))
  (begin
    (define gl:validate-program-arb
      (foreign-lambda*
        void
        ((unsigned-long a0))
        "_ALLEGRO_glValidateProgramARB_t(a0);")))
  (begin
    (define gl:uniform1f-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1))
        "_ALLEGRO_glUniform1fARB_t(a0 , a1);")))
  (begin
    (define gl:uniform2f-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glUniform2fARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3f-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glUniform3fARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4f-arb
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glUniform4fARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1))
        "_ALLEGRO_glUniform1iARB_t(a0 , a1);")))
  (begin
    (define gl:uniform2i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glUniform2iARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glUniform3iARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4i-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glUniform4iARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1fv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform1fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2fv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform2fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3fv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform3fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4fv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glUniform4fvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1iv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform1ivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2iv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform2ivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3iv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform3ivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4iv-arb
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glUniform4ivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2fv-arb
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix2fvARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3fv-arb
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix3fvARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4fv-arb
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glUniformMatrix4fvARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-object-parameterfv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetObjectParameterfvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-parameteriv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetObjectParameterivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-info-log-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLsizei" a1)
         ((c-pointer "GLsizei") a2)
         (c-string a3))
        "_ALLEGRO_glGetInfoLogARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-attached-objects-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLsizei" a1)
         ((c-pointer "GLsizei") a2)
         (u32vector a3))
        "_ALLEGRO_glGetAttachedObjectsARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniform-location-arb
      (foreign-lambda*
        "GLint"
        ((unsigned-long a0) (c-string a1))
        "return(_ALLEGRO_glGetUniformLocationARB_t(a0 , a1));")))
  (begin
    (define gl:get-active-uniform-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLint") a4)
         ((c-pointer "GLenum") a5)
         (c-string a6))
        "_ALLEGRO_glGetActiveUniformARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-uniformfv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) ("GLint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetUniformfvARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformiv-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) ("GLint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetUniformivARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-shader-source-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLsizei" a1)
         ((c-pointer "GLsizei") a2)
         (c-string a3))
        "_ALLEGRO_glGetShaderSourceARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-attrib-location-arb
      (foreign-lambda*
        void
        ((unsigned-long a0) ("GLuint" a1) (c-string a2))
        "_ALLEGRO_glBindAttribLocationARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-active-attrib-arb
      (foreign-lambda*
        void
        ((unsigned-long a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLint") a4)
         ((c-pointer "GLenum") a5)
         (c-string a6))
        "_ALLEGRO_glGetActiveAttribARB_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-attrib-location-arb
      (foreign-lambda*
        "GLint"
        ((unsigned-long a0) (c-string a1))
        "return(_ALLEGRO_glGetAttribLocationARB_t(a0 , a1));")))
  (begin
    (define gl:draw-buffers-arb
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLenum") a1))
        "_ALLEGRO_glDrawBuffersARB_t(a0 , a1);")))
  (begin
    (define gl:clamp-color-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glClampColorARB_t(a0 , a1);")))
  (begin
    (define gl:draw-arrays-instanced-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glDrawArraysInstancedARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced-arb
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ("GLsizei" a4))
        "_ALLEGRO_glDrawElementsInstancedARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:is-renderbuffer
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsRenderbuffer_t(a0));")))
  (begin
    (define gl:bind-renderbuffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindRenderbuffer_t(a0 , a1);")))
  (begin
    (define gl:delete-renderbuffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteRenderbuffers_t(a0 , a1);")))
  (begin
    (define gl:gen-renderbuffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenRenderbuffers_t(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glRenderbufferStorage_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-renderbuffer-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetRenderbufferParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:is-framebuffer
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsFramebuffer_t(a0));")))
  (begin
    (define gl:bind-framebuffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindFramebuffer_t(a0 , a1);")))
  (begin
    (define gl:delete-framebuffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteFramebuffers_t(a0 , a1);")))
  (begin
    (define gl:gen-framebuffers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenFramebuffers_t(a0 , a1);")))
  (begin
    (define gl:check-framebuffer-status
      (foreign-lambda*
        "GLenum"
        (("GLenum" a0))
        "return(_ALLEGRO_glCheckFramebufferStatus_t(a0));")))
  (begin
    (define gl:framebuffer-texture1d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTexture1D_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture2d
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTexture2D_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture3d
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLuint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glFramebufferTexture3D_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:framebuffer-renderbuffer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glFramebufferRenderbuffer_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-framebuffer-attachment-parameteriv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetFramebufferAttachmentParameteriv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-mipmap
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glGenerateMipmap_t(a0);")))
  (begin
    (define gl:blit-framebuffer
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLint" a7)
         ("GLbitfield" a8)
         ("GLenum" a9))
        "_ALLEGRO_glBlitFramebuffer_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:renderbuffer-storage-multisample
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4))
        "_ALLEGRO_glRenderbufferStorageMultisample_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture-layer
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTextureLayer_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-parameteri-arb
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glProgramParameteriARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3))
        "_ALLEGRO_glFramebufferTextureARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:framebuffer-texture-layer-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTextureLayerARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture-face-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLenum" a4))
        "_ALLEGRO_glFramebufferTextureFaceARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-divisor
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexAttribDivisor_t(a0 , a1);")))
  (begin
    (define gl:map-buffer-range
      (foreign-lambda*
        void
        (("GLenum" a0) ("ptrdiff_t" a1) ("ptrdiff_t" a2) ("GLbitfield" a3))
        "_ALLEGRO_glMapBufferRange_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:flush-mapped-buffer-range
      (foreign-lambda*
        void
        (("GLenum" a0) ("ptrdiff_t" a1) ("ptrdiff_t" a2))
        "_ALLEGRO_glFlushMappedBufferRange_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-buffer-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glTexBufferARB_t(a0 , a1 , a2);")))
  (begin
    (define gl:bind-vertex-array
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBindVertexArray_t(a0);")))
  (begin
    (define gl:delete-vertex-arrays
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteVertexArrays_t(a0 , a1);")))
  (begin
    (define gl:gen-vertex-arrays
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenVertexArrays_t(a0 , a1);")))
  (begin
    (define gl:is-vertex-array
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsVertexArray_t(a0));")))
  (begin
    (define gl:get-uniform-indices
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer (c-pointer (const char))) a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glGetUniformIndices_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-active-uniformsiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLuint") a2)
         ("GLenum" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetActiveUniformsiv_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-active-uniform-name
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         (c-string a4))
        "_ALLEGRO_glGetActiveUniformName_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-uniform-block-index
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetUniformBlockIndex_t(a0 , a1));")))
  (begin
    (define gl:get-active-uniform-blockiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetActiveUniformBlockiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-active-uniform-block-name
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         (c-string a4))
        "_ALLEGRO_glGetActiveUniformBlockName_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform-block-binding
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glUniformBlockBinding_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-buffer-sub-data
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("ptrdiff_t" a2)
         ("ptrdiff_t" a3)
         ("ptrdiff_t" a4))
        "_ALLEGRO_glCopyBufferSubData_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:draw-elements-base-vertex
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ("GLint" a4))
        "_ALLEGRO_glDrawElementsBaseVertex_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:draw-range-elements-base-vertex
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5)
         ("GLint" a6))
        "_ALLEGRO_glDrawRangeElementsBaseVertex_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:draw-elements-instanced-base-vertex
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ("GLsizei" a4)
         ("GLint" a5))
        "_ALLEGRO_glDrawElementsInstancedBaseVertex_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:multi-draw-elements-base-vertex
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLsizei") a1)
         ("GLenum" a2)
         ((c-pointer (c-pointer (const "GLvoid"))) a3)
         ("GLsizei" a4)
         ((c-pointer "GLint") a5))
        "_ALLEGRO_glMultiDrawElementsBaseVertex_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:provoking-vertex
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glProvokingVertex_t(a0);")))
  (begin
    (define gl:fence-sync
      (foreign-lambda*
        (c-pointer (struct "__GLsync"))
        (("GLenum" a0) ("GLbitfield" a1))
        "return(_ALLEGRO_glFenceSync_t(a0 , a1));")))
  (begin
    (define gl:is-sync
      (foreign-lambda*
        "GLboolean"
        (((c-pointer (struct "__GLsync")) a0))
        "return(_ALLEGRO_glIsSync_t(a0));")))
  (begin
    (define gl:delete-sync
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0))
        "_ALLEGRO_glDeleteSync_t(a0);")))
  (begin
    (define gl:client-wait-sync
      (foreign-lambda*
        "GLenum"
        (((c-pointer (struct "__GLsync")) a0)
         ("GLbitfield" a1)
         (unsigned-integer64 a2))
        "return(_ALLEGRO_glClientWaitSync_t(a0 , a1 , a2));")))
  (begin
    (define gl:wait-sync
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0)
         ("GLbitfield" a1)
         (unsigned-integer64 a2))
        "_ALLEGRO_glWaitSync_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-integer64v
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer integer64) a1))
        "_ALLEGRO_glGetInteger64v_t(a0 , a1);")))
  (begin
    (define gl:get-synciv
      (foreign-lambda*
        void
        (((c-pointer (struct "__GLsync")) a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetSynciv_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-image2dmultisample
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLboolean" a5))
        "_ALLEGRO_glTexImage2DMultisample_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-image3dmultisample
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLboolean" a6))
        "_ALLEGRO_glTexImage3DMultisample_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-multisamplefv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetMultisamplefv_t(a0 , a1 , a2);")))
  (begin
    (define gl:sample-maski
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLbitfield" a1))
        "_ALLEGRO_glSampleMaski_t(a0 , a1);")))
  (begin
    (define gl:blend-equationi
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glBlendEquationi_t(a0 , a1);")))
  (begin
    (define gl:blend-equation-separatei
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2))
        "_ALLEGRO_glBlendEquationSeparatei_t(a0 , a1 , a2);")))
  (begin
    (define gl:blend-funci
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2))
        "_ALLEGRO_glBlendFunci_t(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separatei
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3) ("GLenum" a4))
        "_ALLEGRO_glBlendFuncSeparatei_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:min-sample-shading
      (foreign-lambda*
        void
        (("GLclampf" a0))
        "_ALLEGRO_glMinSampleShading_t(a0);")))
  (begin
    (define gl:named-string-arb
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) (c-string a2) ("GLint" a3) (c-string a4))
        "_ALLEGRO_glNamedStringARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:delete-named-string-arb
      (foreign-lambda*
        void
        (("GLint" a0) (c-string a1))
        "_ALLEGRO_glDeleteNamedStringARB_t(a0 , a1);")))
  (begin
    (define gl:compile-shader-include-arb
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer (c-pointer (const char))) a2)
         ((c-pointer "GLint") a3))
        "_ALLEGRO_glCompileShaderIncludeARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:is-named-string-arb
      (foreign-lambda*
        "GLboolean"
        (("GLint" a0) (c-string a1))
        "return(_ALLEGRO_glIsNamedStringARB_t(a0 , a1));")))
  (begin
    (define gl:get-named-string-arb
      (foreign-lambda*
        void
        (("GLint" a0)
         (c-string a1)
         ("GLsizei" a2)
         ((c-pointer "GLint") a3)
         (c-string a4))
        "_ALLEGRO_glGetNamedStringARB_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-named-stringiv-arb
      (foreign-lambda*
        void
        (("GLint" a0) (c-string a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetNamedStringivARB_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-frag-data-location-indexed
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2) (c-string a3))
        "_ALLEGRO_glBindFragDataLocationIndexed_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-frag-data-index
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetFragDataIndex_t(a0 , a1));")))
  (begin
    (define gl:gen-samplers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenSamplers_t(a0 , a1);")))
  (begin
    (define gl:delete-samplers
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteSamplers_t(a0 , a1);")))
  (begin
    (define gl:is-sampler
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsSampler_t(a0));")))
  (begin
    (define gl:bind-sampler
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindSampler_t(a0 , a1);")))
  (begin
    (define gl:sampler-parameteri
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glSamplerParameteri_t(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameteriv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glSamplerParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameterf
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glSamplerParameterf_t(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameterfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glSamplerParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameter-iiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glSamplerParameterIiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:sampler-parameter-iuiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glSamplerParameterIuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameteriv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetSamplerParameteriv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameter-iiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetSamplerParameterIiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameterfv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetSamplerParameterfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-sampler-parameter-ifv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetSamplerParameterIfv_t(a0 , a1 , a2);")))
  (begin
    (define gl:query-counter
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glQueryCounter_t(a0 , a1);")))
  (begin
    (define gl:get-query-objecti64v
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer integer64) a2))
        "_ALLEGRO_glGetQueryObjecti64v_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectui64v
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetQueryObjectui64v_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-p2ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexP2ui_t(a0 , a1);")))
  (begin
    (define gl:vertex-p2uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexP2uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexP3ui_t(a0 , a1);")))
  (begin
    (define gl:vertex-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexP3uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-p4ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexP4ui_t(a0 , a1);")))
  (begin
    (define gl:vertex-p4uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexP4uiv_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p1ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glTexCoordP1ui_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p1uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glTexCoordP1uiv_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p2ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glTexCoordP2ui_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p2uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glTexCoordP2uiv_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glTexCoordP3ui_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glTexCoordP3uiv_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p4ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glTexCoordP4ui_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-p4uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glTexCoordP4uiv_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord-p1ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glMultiTexCoordP1ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p1uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glMultiTexCoordP1uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p2ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glMultiTexCoordP2ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p2uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glMultiTexCoordP2uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glMultiTexCoordP3ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glMultiTexCoordP3uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p4ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glMultiTexCoordP4ui_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord-p4uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glMultiTexCoordP4uiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:normal-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glNormalP3ui_t(a0 , a1);")))
  (begin
    (define gl:normal-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glNormalP3uiv_t(a0 , a1);")))
  (begin
    (define gl:color-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glColorP3ui_t(a0 , a1);")))
  (begin
    (define gl:color-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glColorP3uiv_t(a0 , a1);")))
  (begin
    (define gl:color-p4ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glColorP4ui_t(a0 , a1);")))
  (begin
    (define gl:color-p4uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glColorP4uiv_t(a0 , a1);")))
  (begin
    (define gl:secondary-color-p3ui
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glSecondaryColorP3ui_t(a0 , a1);")))
  (begin
    (define gl:secondary-color-p3uiv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glSecondaryColorP3uiv_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-p1ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLboolean" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribP1ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p1uiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLboolean" a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glVertexAttribP1uiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p2ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLboolean" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribP2ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p2uiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLboolean" a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glVertexAttribP2uiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p3ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLboolean" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribP3ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p3uiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLboolean" a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glVertexAttribP3uiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p4ui
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLboolean" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribP4ui_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-p4uiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLboolean" a2)
         ((c-pointer "GLuint") a3))
        "_ALLEGRO_glVertexAttribP4uiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-arrays-indirect
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glDrawArraysIndirect_t(a0 , a1);")))
  (begin
    (define gl:draw-elements-indirect
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glDrawElementsIndirect_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1d
      (foreign-lambda*
        void
        (("GLint" a0) ("GLdouble" a1))
        "_ALLEGRO_glUniform1d_t(a0 , a1);")))
  (begin
    (define gl:uniform2d
      (foreign-lambda*
        void
        (("GLint" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glUniform2d_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3d
      (foreign-lambda*
        void
        (("GLint" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glUniform3d_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4d
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glUniform4d_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1dv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glUniform1dv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2dv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glUniform2dv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3dv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glUniform3dv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4dv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glUniform4dv_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-matrix2dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix2dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix3dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix4dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x3dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix2x3dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix2x4dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix2x4dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x2dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix3x2dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix3x4dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix3x4dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x2dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix4x2dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform-matrix4x3dv
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLsizei" a1)
         ("GLboolean" a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glUniformMatrix4x3dv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-uniformdv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetUniformdv_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform1d-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLdouble" a2))
        "_ALLEGRO_glProgramUniform1dEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2d-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glProgramUniform2dEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3d-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glProgramUniform3dEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4d-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5))
        "_ALLEGRO_glProgramUniform4dEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramUniform1dvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramUniform2dvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramUniform3dvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramUniform4dvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform-matrix2dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix2dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix3dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix4dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x3dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix2x3dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x4dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix2x4dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x2dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix3x2dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x4dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix3x4dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x2dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix4x2dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x3dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLdouble") a4))
        "_ALLEGRO_glProgramUniformMatrix4x3dvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-subroutine-uniform-location
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) ("GLenum" a1) (c-string a2))
        "return(_ALLEGRO_glGetSubroutineUniformLocation_t(a0 , a1 , a2));")))
  (begin
    (define gl:get-subroutine-index
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0) ("GLenum" a1) (c-string a2))
        "return(_ALLEGRO_glGetSubroutineIndex_t(a0 , a1 , a2));")))
  (begin
    (define gl:get-active-subroutine-uniformiv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLenum" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetActiveSubroutineUniformiv_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-active-subroutine-uniform-name
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLsizei") a4)
         (c-string a5))
        "_ALLEGRO_glGetActiveSubroutineUniformName_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-active-subroutine-name
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLsizei") a4)
         (c-string a5))
        "_ALLEGRO_glGetActiveSubroutineName_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:uniform-subroutinesuiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniformSubroutinesuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniform-subroutineuiv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetUniformSubroutineuiv_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-stageiv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetProgramStageiv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:patch-parameteri
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glPatchParameteri_t(a0 , a1);")))
  (begin
    (define gl:patch-parameterfv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPatchParameterfv_t(a0 , a1);")))
  (begin
    (define gl:bind-transform-feedback
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindTransformFeedback_t(a0 , a1);")))
  (begin
    (define gl:delete-transform-feedbacks
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteTransformFeedbacks_t(a0 , a1);")))
  (begin
    (define gl:gen-transform-feedbacks
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenTransformFeedbacks_t(a0 , a1);")))
  (begin
    (define gl:is-transform-feedback
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsTransformFeedback_t(a0));")))
  (begin
    (define gl:pause-transform-feedback
      (foreign-lambda* void () "_ALLEGRO_glPauseTransformFeedback_t();")))
  (begin
    (define gl:resume-transform-feedback
      (foreign-lambda* void () "_ALLEGRO_glResumeTransformFeedback_t();")))
  (begin
    (define gl:draw-transform-feedback
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glDrawTransformFeedback_t(a0 , a1);")))
  (begin
    (define gl:draw-transform-feedback-stream
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glDrawTransformFeedbackStream_t(a0 , a1 , a2);")))
  (begin
    (define gl:begin-query-indexed
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glBeginQueryIndexed_t(a0 , a1 , a2);")))
  (begin
    (define gl:end-query-indexed
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glEndQueryIndexed_t(a0 , a1);")))
  (begin
    (define gl:get-query-indexediv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetQueryIndexediv_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-color-ext
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLclampf" a1) ("GLclampf" a2) ("GLclampf" a3))
        "_ALLEGRO_glBlendColorEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:polygon-offset-ext
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1))
        "_ALLEGRO_glPolygonOffsetEXT_t(a0 , a1);")))
  (begin
    (define gl:tex-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glTexImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:tex-sub-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLenum" a8)
         ("GLenum" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glTexSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:get-tex-filter-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetTexFilterFuncSGIS_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-filter-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glTexFilterFuncSGIS_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-sub-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glTexSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:tex-sub-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLenum" a6)
         ("GLenum" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glTexSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-tex-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLint" a6))
        "_ALLEGRO_glCopyTexImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-tex-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7))
        "_ALLEGRO_glCopyTexImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-tex-sub-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5))
        "_ALLEGRO_glCopyTexSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:copy-tex-sub-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7))
        "_ALLEGRO_glCopyTexSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-tex-sub-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ("GLsizei" a8))
        "_ALLEGRO_glCopyTexSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-histogram-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLboolean" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glGetHistogramEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-histogram-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetHistogramParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetHistogramParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLboolean" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glGetMinmaxEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-minmax-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetMinmaxParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-minmax-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetMinmaxParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:histogram-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLenum" a2) ("GLboolean" a3))
        "_ALLEGRO_glHistogramEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:minmax-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLboolean" a2))
        "_ALLEGRO_glMinmaxEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:reset-histogram-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glResetHistogramEXT_t(a0);")))
  (begin
    (define gl:reset-minmax-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glResetMinmaxEXT_t(a0);")))
  (begin
    (define gl:convolution-filter1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glConvolutionFilter1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:convolution-filter2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glConvolutionFilter2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:convolution-parameterf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glConvolutionParameterfEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glConvolutionParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteri-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glConvolutionParameteriEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glConvolutionParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-convolution-filter1dext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyConvolutionFilter1DEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:copy-convolution-filter2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLsizei" a5))
        "_ALLEGRO_glCopyConvolutionFilter2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-convolution-filter-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetConvolutionFilterEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-convolution-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetConvolutionParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetConvolutionParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-separable-filter-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ((c-pointer "GLvoid") a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glGetSeparableFilterEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:separable-filter2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ((c-pointer "GLvoid") a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glSeparableFilter2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:color-table-sgi
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glColorTableSGI_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color-table-parameterfv-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glColorTableParameterfvSGI_t(a0 , a1 , a2);")))
  (begin
    (define gl:color-table-parameteriv-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glColorTableParameterivSGI_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-table-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyColorTableSGI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-color-table-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetColorTableSGI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-color-table-parameterfv-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetColorTableParameterfvSGI_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-color-table-parameteriv-sgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetColorTableParameterivSGI_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-tex-gen-sgix
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glPixelTexGenSGIX_t(a0);")))
  (begin
    (define gl:pixel-tex-gen-parameteri-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glPixelTexGenParameteriSGIS_t(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameteriv-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glPixelTexGenParameterivSGIS_t(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameterf-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPixelTexGenParameterfSGIS_t(a0 , a1);")))
  (begin
    (define gl:pixel-tex-gen-parameterfv-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPixelTexGenParameterfvSGIS_t(a0 , a1);")))
  (begin
    (define gl:get-pixel-tex-gen-parameteriv-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glGetPixelTexGenParameterivSGIS_t(a0 , a1);")))
  (begin
    (define gl:get-pixel-tex-gen-parameterfv-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glGetPixelTexGenParameterfvSGIS_t(a0 , a1);")))
  (begin
    (define gl:tex-image4dsgis
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7)
         ("GLenum" a8)
         ("GLenum" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glTexImage4DSGIS_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:tex-sub-image4dsgis
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLsizei" a8)
         ("GLsizei" a9)
         ("GLenum" a10)
         ("GLenum" a11)
         ((c-pointer "GLvoid") a12))
        "_ALLEGRO_glTexSubImage4DSGIS_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:are-textures-resident-ext
      (foreign-lambda*
        "GLboolean"
        (("GLsizei" a0) ((c-pointer "GLuint") a1) ((c-pointer "GLboolean") a2))
        "return(_ALLEGRO_glAreTexturesResidentEXT_t(a0 , a1 , a2));")))
  (begin
    (define gl:bind-texture-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindTextureEXT_t(a0 , a1);")))
  (begin
    (define gl:delete-textures-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteTexturesEXT_t(a0 , a1);")))
  (begin
    (define gl:gen-textures-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenTexturesEXT_t(a0 , a1);")))
  (begin
    (define gl:is-texture-ext
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsTextureEXT_t(a0));")))
  (begin
    (define gl:prioritize-textures-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1) ((c-pointer "GLclampf") a2))
        "_ALLEGRO_glPrioritizeTexturesEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:detail-tex-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glDetailTexFuncSGIS_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-detail-tex-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glGetDetailTexFuncSGIS_t(a0 , a1);")))
  (begin
    (define gl:sharpen-tex-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glSharpenTexFuncSGIS_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-sharpen-tex-func-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glGetSharpenTexFuncSGIS_t(a0 , a1);")))
  (begin
    (define gl:sample-mask-sgis
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLboolean" a1))
        "_ALLEGRO_glSampleMaskSGIS_t(a0 , a1);")))
  (begin
    (define gl:sample-pattern-sgis
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glSamplePatternSGIS_t(a0);")))
  (begin
    (define gl:array-element-ext
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glArrayElementEXT_t(a0);")))
  (begin
    (define gl:color-pointer-ext
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glColorPointerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:draw-arrays-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2))
        "_ALLEGRO_glDrawArraysEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:edge-flag-pointer-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ("GLsizei" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glEdgeFlagPointerEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-pointerv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer (c-pointer "GLvoid")) a1))
        "_ALLEGRO_glGetPointervEXT_t(a0 , a1);")))
  (begin
    (define gl:index-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glIndexPointerEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glNormalPointerEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord-pointer-ext
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glTexCoordPointerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-pointer-ext
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glVertexPointerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:blend-equation-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glBlendEquationEXT_t(a0);")))
  (begin
    (define gl:sprite-parameterf-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glSpriteParameterfSGIX_t(a0 , a1);")))
  (begin
    (define gl:sprite-parameterfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glSpriteParameterfvSGIX_t(a0 , a1);")))
  (begin
    (define gl:sprite-parameteri-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glSpriteParameteriSGIX_t(a0 , a1);")))
  (begin
    (define gl:sprite-parameteriv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glSpriteParameterivSGIX_t(a0 , a1);")))
  (begin
    (define gl:point-parameterf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPointParameterfEXT_t(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPointParameterfvEXT_t(a0 , a1);")))
  (begin
    (define gl:point-parameterf-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPointParameterfSGIS_t(a0 , a1);")))
  (begin
    (define gl:point-parameterfv-sgis
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glPointParameterfvSGIS_t(a0 , a1);")))
  (begin
    (define gl:get-instruments-sgix
      (foreign-lambda*
        "GLint"
        ()
        "return(_ALLEGRO_glGetInstrumentsSGIX_t());")))
  (begin
    (define gl:instruments-buffer-sgix
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glInstrumentsBufferSGIX_t(a0 , a1);")))
  (begin
    (define gl:poll-instruments-sgix
      (foreign-lambda*
        "GLint"
        (((c-pointer "GLint") a0))
        "return(_ALLEGRO_glPollInstrumentsSGIX_t(a0));")))
  (begin
    (define gl:read-instruments-sgix
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glReadInstrumentsSGIX_t(a0);")))
  (begin
    (define gl:start-instruments-sgix
      (foreign-lambda* void () "_ALLEGRO_glStartInstrumentsSGIX_t();")))
  (begin
    (define gl:stop-instruments-sgix
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glStopInstrumentsSGIX_t(a0);")))
  (begin
    (define gl:frame-zoom-sgix
      (foreign-lambda* void (("GLint" a0)) "_ALLEGRO_glFrameZoomSGIX_t(a0);")))
  (begin
    (define gl:tag-sample-buffer-sgix
      (foreign-lambda* void () "_ALLEGRO_glTagSampleBufferSGIX_t();")))
  (begin
    (define gl:deformation-map3d-sgix
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLdouble" a5)
         ("GLdouble" a6)
         ("GLint" a7)
         ("GLint" a8)
         ("GLdouble" a9)
         ("GLdouble" a10)
         ("GLint" a11)
         ("GLint" a12)
         ((c-pointer "GLdouble") a13))
        "_ALLEGRO_glDeformationMap3dSGIX_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13);")))
  (begin
    (define gl:deformation-map3f-sgix
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLint" a7)
         ("GLint" a8)
         ("GLfloat" a9)
         ("GLfloat" a10)
         ("GLint" a11)
         ("GLint" a12)
         ((c-pointer "GLfloat") a13))
        "_ALLEGRO_glDeformationMap3fSGIX_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13);")))
  (begin
    (define gl:deform-sgix
      (foreign-lambda*
        void
        (("GLbitfield" a0))
        "_ALLEGRO_glDeformSGIX_t(a0);")))
  (begin
    (define gl:load-identity-deformation-map-sgix
      (foreign-lambda*
        void
        (("GLbitfield" a0))
        "_ALLEGRO_glLoadIdentityDeformationMapSGIX_t(a0);")))
  (begin
    (define gl:reference-plane-sgix
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glReferencePlaneSGIX_t(a0);")))
  (begin
    (define gl:flush-raster-sgix
      (foreign-lambda* void () "_ALLEGRO_glFlushRasterSGIX_t();")))
  (begin
    (define gl:fog-func-sgis
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glFogFuncSGIS_t(a0 , a1);")))
  (begin
    (define gl:get-fog-func-sgis
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glGetFogFuncSGIS_t(a0);")))
  (begin
    (define gl:image-transform-parameteri-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glImageTransformParameteriHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameterf-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glImageTransformParameterfHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameteriv-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glImageTransformParameterivHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:image-transform-parameterfv-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glImageTransformParameterfvHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-image-transform-parameteriv-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetImageTransformParameterivHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-image-transform-parameterfv-hp
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetImageTransformParameterfvHP_t(a0 , a1 , a2);")))
  (begin
    (define gl:copy-color-sub-table-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ("GLint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glCopyColorSubTableEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:hint-pgi
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glHintPGI_t(a0 , a1);")))
  (begin
    (define gl:color-table-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glColorTableEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-color-table-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetColorTableEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-color-table-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetColorTableParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-color-table-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetColorTableParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-list-parameterfv-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetListParameterfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-list-parameteriv-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetListParameterivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameterf-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glListParameterfSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameterfv-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glListParameterfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameteri-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glListParameteriSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:list-parameteriv-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glListParameterivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:index-material-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glIndexMaterialEXT_t(a0 , a1);")))
  (begin
    (define gl:index-func-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLclampf" a1))
        "_ALLEGRO_glIndexFuncEXT_t(a0 , a1);")))
  (begin
    (define gl:lock-arrays-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1))
        "_ALLEGRO_glLockArraysEXT_t(a0 , a1);")))
  (begin
    (define gl:unlock-arrays-ext
      (foreign-lambda* void () "_ALLEGRO_glUnlockArraysEXT_t();")))
  (begin
    (define gl:cull-parameterdv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glCullParameterdvEXT_t(a0 , a1);")))
  (begin
    (define gl:cull-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glCullParameterfvEXT_t(a0 , a1);")))
  (begin
    (define gl:fragment-color-material-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glFragmentColorMaterialSGIX_t(a0 , a1);")))
  (begin
    (define gl:fragment-lightf-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glFragmentLightfSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lightfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glFragmentLightfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lighti-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glFragmentLightiSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-lightiv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glFragmentLightivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-light-modelf-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glFragmentLightModelfSGIX_t(a0 , a1);")))
  (begin
    (define gl:fragment-light-modelfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glFragmentLightModelfvSGIX_t(a0 , a1);")))
  (begin
    (define gl:fragment-light-modeli-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glFragmentLightModeliSGIX_t(a0 , a1);")))
  (begin
    (define gl:fragment-light-modeliv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glFragmentLightModelivSGIX_t(a0 , a1);")))
  (begin
    (define gl:fragment-materialf-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glFragmentMaterialfSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materialfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glFragmentMaterialfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materiali-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glFragmentMaterialiSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:fragment-materialiv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glFragmentMaterialivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-lightfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetFragmentLightfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-lightiv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFragmentLightivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-materialfv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetFragmentMaterialfvSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-fragment-materialiv-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFragmentMaterialivSGIX_t(a0 , a1 , a2);")))
  (begin
    (define gl:light-envi-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glLightEnviSGIX_t(a0 , a1);")))
  (begin
    (define gl:draw-range-elements-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glDrawRangeElementsEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:apply-texture-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glApplyTextureEXT_t(a0);")))
  (begin
    (define gl:texture-light-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glTextureLightEXT_t(a0);")))
  (begin
    (define gl:texture-material-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glTextureMaterialEXT_t(a0 , a1);")))
  (begin
    (define gl:async-marker-sgix
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glAsyncMarkerSGIX_t(a0);")))
  (begin
    (define gl:finish-async-sgix
      (foreign-lambda*
        "GLint"
        (((c-pointer "GLuint") a0))
        "return(_ALLEGRO_glFinishAsyncSGIX_t(a0));")))
  (begin
    (define gl:poll-async-sgix
      (foreign-lambda*
        "GLint"
        (((c-pointer "GLuint") a0))
        "return(_ALLEGRO_glPollAsyncSGIX_t(a0));")))
  (begin
    (define gl:gen-async-markers-sgix
      (foreign-lambda*
        "GLuint"
        (("GLsizei" a0))
        "return(_ALLEGRO_glGenAsyncMarkersSGIX_t(a0));")))
  (begin
    (define gl:delete-async-markers-sgix
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1))
        "_ALLEGRO_glDeleteAsyncMarkersSGIX_t(a0 , a1);")))
  (begin
    (define gl:is-async-marker-sgix
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsAsyncMarkerSGIX_t(a0));")))
  (begin
    (define gl:vertex-pointerv-intel
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ((c-pointer (c-pointer (const "GLvoid"))) a2))
        "_ALLEGRO_glVertexPointervINTEL_t(a0 , a1 , a2);")))
  (begin
    (define gl:normal-pointerv-intel
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer (c-pointer (const "GLvoid"))) a1))
        "_ALLEGRO_glNormalPointervINTEL_t(a0 , a1);")))
  (begin
    (define gl:color-pointerv-intel
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ((c-pointer (c-pointer (const "GLvoid"))) a2))
        "_ALLEGRO_glColorPointervINTEL_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord-pointerv-intel
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLenum" a1)
         ((c-pointer (c-pointer (const "GLvoid"))) a2))
        "_ALLEGRO_glTexCoordPointervINTEL_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameteri-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glPixelTransformParameteriEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameterf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLfloat" a2))
        "_ALLEGRO_glPixelTransformParameterfEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glPixelTransformParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-transform-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glPixelTransformParameterfvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3b-ext
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glSecondaryColor3bEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3bv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glSecondaryColor3bvEXT_t(a0);")))
  (begin
    (define gl:secondary-color3d-ext
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glSecondaryColor3dEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3dv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glSecondaryColor3dvEXT_t(a0);")))
  (begin
    (define gl:secondary-color3f-ext
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glSecondaryColor3fEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3fv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glSecondaryColor3fvEXT_t(a0);")))
  (begin
    (define gl:secondary-color3i-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glSecondaryColor3iEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3iv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glSecondaryColor3ivEXT_t(a0);")))
  (begin
    (define gl:secondary-color3s-ext
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glSecondaryColor3sEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3sv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glSecondaryColor3svEXT_t(a0);")))
  (begin
    (define gl:secondary-color3ub-ext
      (foreign-lambda*
        void
        (("GLubyte" a0) ("GLubyte" a1) ("GLubyte" a2))
        "_ALLEGRO_glSecondaryColor3ubEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3ubv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLubyte") a0))
        "_ALLEGRO_glSecondaryColor3ubvEXT_t(a0);")))
  (begin
    (define gl:secondary-color3ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glSecondaryColor3uiEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3uiv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0))
        "_ALLEGRO_glSecondaryColor3uivEXT_t(a0);")))
  (begin
    (define gl:secondary-color3us-ext
      (foreign-lambda*
        void
        (("GLushort" a0) ("GLushort" a1) ("GLushort" a2))
        "_ALLEGRO_glSecondaryColor3usEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3usv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLushort") a0))
        "_ALLEGRO_glSecondaryColor3usvEXT_t(a0);")))
  (begin
    (define gl:secondary-color-pointer-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glSecondaryColorPointerEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-normal-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glTextureNormalEXT_t(a0);")))
  (begin
    (define gl:multi-draw-arrays-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLint") a1)
         ((c-pointer "GLsizei") a2)
         ("GLsizei" a3))
        "_ALLEGRO_glMultiDrawArraysEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-elements-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLsizei") a1)
         ("GLenum" a2)
         ((c-pointer (c-pointer (const "GLvoid"))) a3)
         ("GLsizei" a4))
        "_ALLEGRO_glMultiDrawElementsEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:fog-coordf-ext
      (foreign-lambda*
        void
        (("GLfloat" a0))
        "_ALLEGRO_glFogCoordfEXT_t(a0);")))
  (begin
    (define gl:fog-coordfv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glFogCoordfvEXT_t(a0);")))
  (begin
    (define gl:fog-coordd-ext
      (foreign-lambda*
        void
        (("GLdouble" a0))
        "_ALLEGRO_glFogCoorddEXT_t(a0);")))
  (begin
    (define gl:fog-coorddv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glFogCoorddvEXT_t(a0);")))
  (begin
    (define gl:fog-coord-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glFogCoordPointerEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3b-ext
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glTangent3bEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3bv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glTangent3bvEXT_t(a0);")))
  (begin
    (define gl:tangent3d-ext
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glTangent3dEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3dv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glTangent3dvEXT_t(a0);")))
  (begin
    (define gl:tangent3f-ext
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glTangent3fEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3fv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glTangent3fvEXT_t(a0);")))
  (begin
    (define gl:tangent3i-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glTangent3iEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3iv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glTangent3ivEXT_t(a0);")))
  (begin
    (define gl:tangent3s-ext
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glTangent3sEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:tangent3sv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glTangent3svEXT_t(a0);")))
  (begin
    (define gl:binormal3b-ext
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glBinormal3bEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3bv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glBinormal3bvEXT_t(a0);")))
  (begin
    (define gl:binormal3d-ext
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glBinormal3dEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3dv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glBinormal3dvEXT_t(a0);")))
  (begin
    (define gl:binormal3f-ext
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glBinormal3fEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3fv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glBinormal3fvEXT_t(a0);")))
  (begin
    (define gl:binormal3i-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glBinormal3iEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3iv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glBinormal3ivEXT_t(a0);")))
  (begin
    (define gl:binormal3s-ext
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glBinormal3sEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal3sv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glBinormal3svEXT_t(a0);")))
  (begin
    (define gl:tangent-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glTangentPointerEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:binormal-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glBinormalPointerEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:finish-texture-sunx
      (foreign-lambda* void () "_ALLEGRO_glFinishTextureSUNX_t();")))
  (begin
    (define gl:global-alpha-factorb-sun
      (foreign-lambda*
        void
        (("GLbyte" a0))
        "_ALLEGRO_glGlobalAlphaFactorbSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factors-sun
      (foreign-lambda*
        void
        (("GLshort" a0))
        "_ALLEGRO_glGlobalAlphaFactorsSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factori-sun
      (foreign-lambda*
        void
        (("GLint" a0))
        "_ALLEGRO_glGlobalAlphaFactoriSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factorf-sun
      (foreign-lambda*
        void
        (("GLfloat" a0))
        "_ALLEGRO_glGlobalAlphaFactorfSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factord-sun
      (foreign-lambda*
        void
        (("GLdouble" a0))
        "_ALLEGRO_glGlobalAlphaFactordSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factorub-sun
      (foreign-lambda*
        void
        (("GLubyte" a0))
        "_ALLEGRO_glGlobalAlphaFactorubSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factorus-sun
      (foreign-lambda*
        void
        (("GLushort" a0))
        "_ALLEGRO_glGlobalAlphaFactorusSUN_t(a0);")))
  (begin
    (define gl:global-alpha-factorui-sun
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glGlobalAlphaFactoruiSUN_t(a0);")))
  (begin
    (define gl:replacement-codeui-sun
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glReplacementCodeuiSUN_t(a0);")))
  (begin
    (define gl:replacement-codeus-sun
      (foreign-lambda*
        void
        (("GLushort" a0))
        "_ALLEGRO_glReplacementCodeusSUN_t(a0);")))
  (begin
    (define gl:replacement-codeub-sun
      (foreign-lambda*
        void
        (("GLubyte" a0))
        "_ALLEGRO_glReplacementCodeubSUN_t(a0);")))
  (begin
    (define gl:replacement-codeuiv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0))
        "_ALLEGRO_glReplacementCodeuivSUN_t(a0);")))
  (begin
    (define gl:replacement-codeusv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLushort") a0))
        "_ALLEGRO_glReplacementCodeusvSUN_t(a0);")))
  (begin
    (define gl:replacement-codeubv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLubyte") a0))
        "_ALLEGRO_glReplacementCodeubvSUN_t(a0);")))
  (begin
    (define gl:replacement-code-pointer-sun
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ((c-pointer (c-pointer (const "GLvoid"))) a2))
        "_ALLEGRO_glReplacementCodePointerSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:color4ub-vertex2f-sun
      (foreign-lambda*
        void
        (("GLubyte" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glColor4ubVertex2fSUN_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color4ub-vertex2fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLubyte") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glColor4ubVertex2fvSUN_t(a0 , a1);")))
  (begin
    (define gl:color4ub-vertex3f-sun
      (foreign-lambda*
        void
        (("GLubyte" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6))
        "_ALLEGRO_glColor4ubVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLubyte") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glColor4ubVertex3fvSUN_t(a0 , a1);")))
  (begin
    (define gl:color3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glColor3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:color3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glColor3fVertex3fvSUN_t(a0 , a1);")))
  (begin
    (define gl:normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glNormal3fVertex3fvSUN_t(a0 , a1);")))
  (begin
    (define gl:color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8)
         ("GLfloat" a9))
        "_ALLEGRO_glColor4fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glColor4fNormal3fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glTexCoord2fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-coord2f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glTexCoord2fVertex3fvSUN_t(a0 , a1);")))
  (begin
    (define gl:tex-coord4f-vertex4f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7))
        "_ALLEGRO_glTexCoord4fVertex4fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord4f-vertex4fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glTexCoord4fVertex4fvSUN_t(a0 , a1);")))
  (begin
    (define gl:tex-coord2f-color4ub-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLubyte" a4)
         ("GLubyte" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8))
        "_ALLEGRO_glTexCoord2fColor4ubVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:tex-coord2f-color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLubyte") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glTexCoord2fColor4ubVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-color3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7))
        "_ALLEGRO_glTexCoord2fColor3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord2f-color3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glTexCoord2fColor3fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7))
        "_ALLEGRO_glTexCoord2fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:tex-coord2f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glTexCoord2fNormal3fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord2f-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8)
         ("GLfloat" a9)
         ("GLfloat" a10)
         ("GLfloat" a11))
        "_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:tex-coord2f-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fvSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4f-color4f-normal3f-vertex4f-sun
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8)
         ("GLfloat" a9)
         ("GLfloat" a10)
         ("GLfloat" a11)
         ("GLfloat" a12)
         ("GLfloat" a13)
         ("GLfloat" a14))
        "_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14);")))
  (begin
    (define gl:tex-coord4f-color4f-normal3f-vertex4fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fvSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glReplacementCodeuiVertex3fSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glReplacementCodeuiVertex3fvSUN_t(a0 , a1);")))
  (begin
    (define gl:replacement-codeui-color4ub-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLubyte" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7))
        "_ALLEGRO_glReplacementCodeuiColor4ubVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:replacement-codeui-color4ub-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLubyte") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glReplacementCodeuiColor4ubVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-color3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6))
        "_ALLEGRO_glReplacementCodeuiColor3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:replacement-codeui-color3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glReplacementCodeuiColor3fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6))
        "_ALLEGRO_glReplacementCodeuiNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:replacement-codeui-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glReplacementCodeuiNormal3fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8)
         ("GLfloat" a9)
         ("GLfloat" a10))
        "_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:replacement-codeui-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fvSUN_t(a0 , a1 , a2);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3f-sun
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLfloat" a8)
         ("GLfloat" a9)
         ("GLfloat" a10)
         ("GLfloat" a11)
         ("GLfloat" a12))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3fv-sun
      (foreign-lambda*
        void
        (((c-pointer "GLuint") a0)
         ((c-pointer "GLfloat") a1)
         ((c-pointer "GLfloat") a2)
         ((c-pointer "GLfloat") a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:blend-func-separate-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glBlendFuncSeparateEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:blend-func-separate-ingr
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glBlendFuncSeparateINGR_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-weightf-ext
      (foreign-lambda*
        void
        (("GLfloat" a0))
        "_ALLEGRO_glVertexWeightfEXT_t(a0);")))
  (begin
    (define gl:vertex-weightfv-ext
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glVertexWeightfvEXT_t(a0);")))
  (begin
    (define gl:vertex-weight-pointer-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ("GLenum" a1) ("GLsizei" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glVertexWeightPointerEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:flush-vertex-array-range-nv
      (foreign-lambda* void () "_ALLEGRO_glFlushVertexArrayRangeNV_t();")))
  (begin
    (define gl:vertex-array-range-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glVertexArrayRangeNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glCombinerParameterfvNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-parameterf-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glCombinerParameterfNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glCombinerParameterivNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-parameteri-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glCombinerParameteriNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-input-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ("GLenum" a5))
        "_ALLEGRO_glCombinerInputNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:combiner-output-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ("GLenum" a5)
         ("GLenum" a6)
         ("GLboolean" a7)
         ("GLboolean" a8)
         ("GLboolean" a9))
        "_ALLEGRO_glCombinerOutputNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:final-combiner-input-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glFinalCombinerInputNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-combiner-input-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glGetCombinerInputParameterfvNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-combiner-input-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetCombinerInputParameterivNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-combiner-output-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetCombinerOutputParameterfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-combiner-output-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetCombinerOutputParameterivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-final-combiner-input-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetFinalCombinerInputParameterfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-final-combiner-input-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFinalCombinerInputParameterivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:resize-buffers-mesa
      (foreign-lambda* void () "_ALLEGRO_glResizeBuffersMESA_t();")))
  (begin
    (define gl:window-pos2d-mesa
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1))
        "_ALLEGRO_glWindowPos2dMESA_t(a0 , a1);")))
  (begin
    (define gl:window-pos2dv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos2dvMESA_t(a0);")))
  (begin
    (define gl:window-pos2f-mesa
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1))
        "_ALLEGRO_glWindowPos2fMESA_t(a0 , a1);")))
  (begin
    (define gl:window-pos2fv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos2fvMESA_t(a0);")))
  (begin
    (define gl:window-pos2i-mesa
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1))
        "_ALLEGRO_glWindowPos2iMESA_t(a0 , a1);")))
  (begin
    (define gl:window-pos2iv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos2ivMESA_t(a0);")))
  (begin
    (define gl:window-pos2s-mesa
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1))
        "_ALLEGRO_glWindowPos2sMESA_t(a0 , a1);")))
  (begin
    (define gl:window-pos2sv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos2svMESA_t(a0);")))
  (begin
    (define gl:window-pos3d-mesa
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glWindowPos3dMESA_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3dv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos3dvMESA_t(a0);")))
  (begin
    (define gl:window-pos3f-mesa
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glWindowPos3fMESA_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3fv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos3fvMESA_t(a0);")))
  (begin
    (define gl:window-pos3i-mesa
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glWindowPos3iMESA_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3iv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos3ivMESA_t(a0);")))
  (begin
    (define gl:window-pos3s-mesa
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glWindowPos3sMESA_t(a0 , a1 , a2);")))
  (begin
    (define gl:window-pos3sv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos3svMESA_t(a0);")))
  (begin
    (define gl:window-pos4d-mesa
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glWindowPos4dMESA_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4dv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLdouble") a0))
        "_ALLEGRO_glWindowPos4dvMESA_t(a0);")))
  (begin
    (define gl:window-pos4f-mesa
      (foreign-lambda*
        void
        (("GLfloat" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glWindowPos4fMESA_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4fv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLfloat") a0))
        "_ALLEGRO_glWindowPos4fvMESA_t(a0);")))
  (begin
    (define gl:window-pos4i-mesa
      (foreign-lambda*
        void
        (("GLint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glWindowPos4iMESA_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4iv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0))
        "_ALLEGRO_glWindowPos4ivMESA_t(a0);")))
  (begin
    (define gl:window-pos4s-mesa
      (foreign-lambda*
        void
        (("GLshort" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glWindowPos4sMESA_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:window-pos4sv-mesa
      (foreign-lambda*
        void
        (((c-pointer "GLshort") a0))
        "_ALLEGRO_glWindowPos4svMESA_t(a0);")))
  (begin
    (define gl:multi-mode-draw-arrays-ibm
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLint") a1)
         ((c-pointer "GLsizei") a2)
         ("GLsizei" a3)
         ("GLint" a4))
        "_ALLEGRO_glMultiModeDrawArraysIBM_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-mode-draw-elements-ibm
      (foreign-lambda*
        void
        (((c-pointer "GLenum") a0)
         ((c-pointer "GLsizei") a1)
         ("GLenum" a2)
         ((c-pointer (c-pointer (const "GLvoid"))) a3)
         ("GLsizei" a4)
         ("GLint" a5))
        "_ALLEGRO_glMultiModeDrawElementsIBM_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tbuffer-mask3dfx
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glTbufferMask3DFX_t(a0);")))
  (begin
    (define gl:sample-mask-ext
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLboolean" a1))
        "_ALLEGRO_glSampleMaskEXT_t(a0 , a1);")))
  (begin
    (define gl:sample-pattern-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glSamplePatternEXT_t(a0);")))
  (begin
    (define gl:texture-color-mask-sgis
      (foreign-lambda*
        void
        (("GLboolean" a0) ("GLboolean" a1) ("GLboolean" a2) ("GLboolean" a3))
        "_ALLEGRO_glTextureColorMaskSGIS_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:igloo-interface-sgix
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glIglooInterfaceSGIX_t(a0 , a1);")))
  (begin
    (define gl:delete-fences-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteFencesNV_t(a0 , a1);")))
  (begin
    (define gl:gen-fences-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenFencesNV_t(a0 , a1);")))
  (begin
    (define gl:is-fence-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsFenceNV_t(a0));")))
  (begin
    (define gl:test-fence-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glTestFenceNV_t(a0));")))
  (begin
    (define gl:get-fenceiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFenceivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:finish-fence-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glFinishFenceNV_t(a0);")))
  (begin
    (define gl:set-fence-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glSetFenceNV_t(a0 , a1);")))
  (begin
    (define gl:map-control-points-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLboolean" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glMapControlPointsNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:map-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glMapParameterivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:map-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glMapParameterfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-control-points-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4)
         ("GLboolean" a5)
         ((c-pointer "GLvoid") a6))
        "_ALLEGRO_glGetMapControlPointsNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-map-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetMapParameterivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetMapParameterfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-map-attrib-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetMapAttribParameterivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-map-attrib-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetMapAttribParameterfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:eval-maps-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glEvalMapsNV_t(a0 , a1);")))
  (begin
    (define gl:combiner-stage-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glCombinerStageParameterfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-combiner-stage-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetCombinerStageParameterfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:are-programs-resident-nv
      (foreign-lambda*
        "GLboolean"
        (("GLsizei" a0) ((c-pointer "GLuint") a1) ((c-pointer "GLboolean") a2))
        "return(_ALLEGRO_glAreProgramsResidentNV_t(a0 , a1 , a2));")))
  (begin
    (define gl:bind-program-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindProgramNV_t(a0 , a1);")))
  (begin
    (define gl:delete-programs-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteProgramsNV_t(a0 , a1);")))
  (begin
    (define gl:execute-program-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glExecuteProgramNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:gen-programs-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenProgramsNV_t(a0 , a1);")))
  (begin
    (define gl:get-program-parameterdv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glGetProgramParameterdvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-parameterfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetProgramParameterfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-programiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetProgramivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-string-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLubyte") a2))
        "_ALLEGRO_glGetProgramStringNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-track-matrixiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetTrackMatrixivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-vertex-attribdv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetVertexAttribdvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribfv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVertexAttribfvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attribiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-pointerv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetVertexAttribPointervNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:is-program-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsProgramNV_t(a0));")))
  (begin
    (define gl:load-program-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLubyte") a3))
        "_ALLEGRO_glLoadProgramNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-parameter4d-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5))
        "_ALLEGRO_glProgramParameter4dNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-parameter4dv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glProgramParameter4dvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameter4f-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glProgramParameter4fNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-parameter4fv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glProgramParameter4fvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-parameters4dv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramParameters4dvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-parameters4fv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramParameters4fvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:request-resident-programs-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glRequestResidentProgramsNV_t(a0 , a1);")))
  (begin
    (define gl:track-matrix-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ("GLenum" a3))
        "_ALLEGRO_glTrackMatrixNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-pointer-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glVertexAttribPointerNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib1d-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1))
        "_ALLEGRO_glVertexAttrib1dNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib1dvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1f-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1))
        "_ALLEGRO_glVertexAttrib1fNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib1fvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1s-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1))
        "_ALLEGRO_glVertexAttrib1sNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib1svNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2d-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glVertexAttrib2dNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib2dvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2f-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glVertexAttrib2fNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib2fvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2s-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glVertexAttrib2sNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib2svNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3d-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glVertexAttrib3dNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib3dvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3f-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glVertexAttrib3fNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib3fvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3s-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glVertexAttrib3sNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib3svNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4d-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glVertexAttrib4dNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexAttrib4dvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4f-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glVertexAttrib4fNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexAttrib4fvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4s-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glVertexAttrib4sNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttrib4svNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4ub-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLubyte" a1)
         ("GLubyte" a2)
         ("GLubyte" a3)
         ("GLubyte" a4))
        "_ALLEGRO_glVertexAttrib4ubNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4ubv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttrib4ubvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attribs1dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glVertexAttribs1dvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs1fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glVertexAttribs1fvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs1sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLshort") a2))
        "_ALLEGRO_glVertexAttribs1svNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glVertexAttribs2dvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glVertexAttribs2fvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLshort") a2))
        "_ALLEGRO_glVertexAttribs2svNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glVertexAttribs3dvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glVertexAttribs3fvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLshort") a2))
        "_ALLEGRO_glVertexAttribs3svNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glVertexAttribs4dvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glVertexAttribs4fvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4sv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLshort") a2))
        "_ALLEGRO_glVertexAttribs4svNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4ubv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLubyte") a2))
        "_ALLEGRO_glVertexAttribs4ubvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-bump-parameteriv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glTexBumpParameterivATI_t(a0 , a1);")))
  (begin
    (define gl:tex-bump-parameterfv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glTexBumpParameterfvATI_t(a0 , a1);")))
  (begin
    (define gl:get-tex-bump-parameteriv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glGetTexBumpParameterivATI_t(a0 , a1);")))
  (begin
    (define gl:get-tex-bump-parameterfv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glGetTexBumpParameterfvATI_t(a0 , a1);")))
  (begin
    (define gl:gen-fragment-shaders-ati
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0))
        "return(_ALLEGRO_glGenFragmentShadersATI_t(a0));")))
  (begin
    (define gl:bind-fragment-shader-ati
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBindFragmentShaderATI_t(a0);")))
  (begin
    (define gl:delete-fragment-shader-ati
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDeleteFragmentShaderATI_t(a0);")))
  (begin
    (define gl:begin-fragment-shader-ati
      (foreign-lambda* void () "_ALLEGRO_glBeginFragmentShaderATI_t();")))
  (begin
    (define gl:end-fragment-shader-ati
      (foreign-lambda* void () "_ALLEGRO_glEndFragmentShaderATI_t();")))
  (begin
    (define gl:pass-tex-coord-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2))
        "_ALLEGRO_glPassTexCoordATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:sample-map-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2))
        "_ALLEGRO_glSampleMapATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:color-fragment-op1ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6))
        "_ALLEGRO_glColorFragmentOp1ATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:color-fragment-op2ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6)
         ("GLuint" a7)
         ("GLuint" a8)
         ("GLuint" a9))
        "_ALLEGRO_glColorFragmentOp2ATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:color-fragment-op3ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6)
         ("GLuint" a7)
         ("GLuint" a8)
         ("GLuint" a9)
         ("GLuint" a10)
         ("GLuint" a11)
         ("GLuint" a12))
        "_ALLEGRO_glColorFragmentOp3ATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12);")))
  (begin
    (define gl:alpha-fragment-op1ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5))
        "_ALLEGRO_glAlphaFragmentOp1ATI_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:alpha-fragment-op2ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6)
         ("GLuint" a7)
         ("GLuint" a8))
        "_ALLEGRO_glAlphaFragmentOp2ATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:alpha-fragment-op3ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6)
         ("GLuint" a7)
         ("GLuint" a8)
         ("GLuint" a9)
         ("GLuint" a10)
         ("GLuint" a11))
        "_ALLEGRO_glAlphaFragmentOp3ATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:set-fragment-shader-constant-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glSetFragmentShaderConstantATI_t(a0 , a1);")))
  (begin
    (define gl:pntrianglesi-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glPNTrianglesiATI_t(a0 , a1);")))
  (begin
    (define gl:pntrianglesf-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glPNTrianglesfATI_t(a0 , a1);")))
  (begin
    (define gl:new-object-buffer-ati
      (foreign-lambda*
        "GLuint"
        (("GLsizei" a0) ((c-pointer "GLvoid") a1) ("GLenum" a2))
        "return(_ALLEGRO_glNewObjectBufferATI_t(a0 , a1 , a2));")))
  (begin
    (define gl:is-object-buffer-ati
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsObjectBufferATI_t(a0));")))
  (begin
    (define gl:update-object-buffer-ati
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLvoid") a3)
         ("GLenum" a4))
        "_ALLEGRO_glUpdateObjectBufferATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-object-bufferfv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetObjectBufferfvATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-object-bufferiv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetObjectBufferivATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:free-object-buffer-ati
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glFreeObjectBufferATI_t(a0);")))
  (begin
    (define gl:array-object-ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLuint" a4)
         ("GLuint" a5))
        "_ALLEGRO_glArrayObjectATI_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-array-objectfv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetArrayObjectfvATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-array-objectiv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetArrayObjectivATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:variant-array-object-ati
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ("GLuint" a3)
         ("GLuint" a4))
        "_ALLEGRO_glVariantArrayObjectATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-variant-array-objectfv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVariantArrayObjectfvATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-array-objectiv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVariantArrayObjectivATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:begin-vertex-shader-ext
      (foreign-lambda* void () "_ALLEGRO_glBeginVertexShaderEXT_t();")))
  (begin
    (define gl:end-vertex-shader-ext
      (foreign-lambda* void () "_ALLEGRO_glEndVertexShaderEXT_t();")))
  (begin
    (define gl:bind-vertex-shader-ext
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBindVertexShaderEXT_t(a0);")))
  (begin
    (define gl:gen-vertex-shaders-ext
      (foreign-lambda*
        "GLuint"
        (("GLuint" a0))
        "return(_ALLEGRO_glGenVertexShadersEXT_t(a0));")))
  (begin
    (define gl:delete-vertex-shader-ext
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDeleteVertexShaderEXT_t(a0);")))
  (begin
    (define gl:shader-op1ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glShaderOp1EXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:shader-op2ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glShaderOp2EXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:shader-op3ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glShaderOp3EXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:swizzle-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ("GLenum" a5))
        "_ALLEGRO_glSwizzleEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:write-mask-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLenum" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ("GLenum" a5))
        "_ALLEGRO_glWriteMaskEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:insert-component-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glInsertComponentEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:extract-component-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glExtractComponentEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:gen-symbols-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "return(_ALLEGRO_glGenSymbolsEXT_t(a0 , a1 , a2 , a3));")))
  (begin
    (define gl:set-invariant-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glSetInvariantEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:set-local-constant-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glSetLocalConstantEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:variantbv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVariantbvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantsv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVariantsvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVariantivEXT_t(a0 , a1);")))
  (begin
    (define gl:variantfv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVariantfvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantdv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVariantdvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantubv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVariantubvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantusv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVariantusvEXT_t(a0 , a1);")))
  (begin
    (define gl:variantuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVariantuivEXT_t(a0 , a1);")))
  (begin
    (define gl:variant-pointer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glVariantPointerEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:enable-variant-client-state-ext
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glEnableVariantClientStateEXT_t(a0);")))
  (begin
    (define gl:disable-variant-client-state-ext
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glDisableVariantClientStateEXT_t(a0);")))
  (begin
    (define gl:bind-light-parameter-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) ("GLenum" a1))
        "return(_ALLEGRO_glBindLightParameterEXT_t(a0 , a1));")))
  (begin
    (define gl:bind-material-parameter-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) ("GLenum" a1))
        "return(_ALLEGRO_glBindMaterialParameterEXT_t(a0 , a1));")))
  (begin
    (define gl:bind-tex-gen-parameter-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2))
        "return(_ALLEGRO_glBindTexGenParameterEXT_t(a0 , a1 , a2));")))
  (begin
    (define gl:bind-texture-unit-parameter-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) ("GLenum" a1))
        "return(_ALLEGRO_glBindTextureUnitParameterEXT_t(a0 , a1));")))
  (begin
    (define gl:bind-parameter-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0))
        "return(_ALLEGRO_glBindParameterEXT_t(a0));")))
  (begin
    (define gl:is-variant-enabled-ext
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0) ("GLenum" a1))
        "return(_ALLEGRO_glIsVariantEnabledEXT_t(a0 , a1));")))
  (begin
    (define gl:get-variant-booleanv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glGetVariantBooleanvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-integerv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVariantIntegervEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-floatv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVariantFloatvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-variant-pointerv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetVariantPointervEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-booleanv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glGetInvariantBooleanvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-integerv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetInvariantIntegervEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-invariant-floatv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetInvariantFloatvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-booleanv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glGetLocalConstantBooleanvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-integerv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetLocalConstantIntegervEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-local-constant-floatv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetLocalConstantFloatvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream1s-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1))
        "_ALLEGRO_glVertexStream1sATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1sv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexStream1svATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1i-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glVertexStream1iATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1iv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexStream1ivATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1f-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glVertexStream1fATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1fv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexStream1fvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1d-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1))
        "_ALLEGRO_glVertexStream1dATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream1dv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexStream1dvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream2s-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2))
        "_ALLEGRO_glVertexStream2sATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2sv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexStream2svATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream2i-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glVertexStream2iATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2iv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexStream2ivATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream2f-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2))
        "_ALLEGRO_glVertexStream2fATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2fv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexStream2fvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream2d-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2))
        "_ALLEGRO_glVertexStream2dATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-stream2dv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexStream2dvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream3s-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glVertexStream3sATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3sv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexStream3svATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream3i-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glVertexStream3iATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3iv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexStream3ivATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream3f-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glVertexStream3fATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3fv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexStream3fvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream3d-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glVertexStream3dATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-stream3dv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexStream3dvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream4s-ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLshort" a1)
         ("GLshort" a2)
         ("GLshort" a3)
         ("GLshort" a4))
        "_ALLEGRO_glVertexStream4sATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4sv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexStream4svATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream4i-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glVertexStream4iATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4iv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexStream4ivATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream4f-ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glVertexStream4fATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4fv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glVertexStream4fvATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-stream4d-ati
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glVertexStream4dATI_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-stream4dv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glVertexStream4dvATI_t(a0 , a1);")))
  (begin
    (define gl:normal-stream3b-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLbyte" a1) ("GLbyte" a2) ("GLbyte" a3))
        "_ALLEGRO_glNormalStream3bATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3bv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glNormalStream3bvATI_t(a0 , a1);")))
  (begin
    (define gl:normal-stream3s-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLshort" a1) ("GLshort" a2) ("GLshort" a3))
        "_ALLEGRO_glNormalStream3sATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3sv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glNormalStream3svATI_t(a0 , a1);")))
  (begin
    (define gl:normal-stream3i-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glNormalStream3iATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3iv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glNormalStream3ivATI_t(a0 , a1);")))
  (begin
    (define gl:normal-stream3f-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glNormalStream3fATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3fv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glNormalStream3fvATI_t(a0 , a1);")))
  (begin
    (define gl:normal-stream3d-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glNormalStream3dATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:normal-stream3dv-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glNormalStream3dvATI_t(a0 , a1);")))
  (begin
    (define gl:client-active-vertex-stream-ati
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glClientActiveVertexStreamATI_t(a0);")))
  (begin
    (define gl:vertex-blend-envi-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glVertexBlendEnviATI_t(a0 , a1);")))
  (begin
    (define gl:vertex-blend-envf-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1))
        "_ALLEGRO_glVertexBlendEnvfATI_t(a0 , a1);")))
  (begin
    (define gl:element-pointer-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glElementPointerATI_t(a0 , a1);")))
  (begin
    (define gl:draw-element-array-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1))
        "_ALLEGRO_glDrawElementArrayATI_t(a0 , a1);")))
  (begin
    (define gl:draw-range-element-array-ati
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("GLsizei" a3))
        "_ALLEGRO_glDrawRangeElementArrayATI_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-mesh-arrays-sun
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glDrawMeshArraysSUN_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:gen-occlusion-queries-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenOcclusionQueriesNV_t(a0 , a1);")))
  (begin
    (define gl:delete-occlusion-queries-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteOcclusionQueriesNV_t(a0 , a1);")))
  (begin
    (define gl:is-occlusion-query-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsOcclusionQueryNV_t(a0));")))
  (begin
    (define gl:begin-occlusion-query-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBeginOcclusionQueryNV_t(a0);")))
  (begin
    (define gl:end-occlusion-query-nv
      (foreign-lambda* void () "_ALLEGRO_glEndOcclusionQueryNV_t();")))
  (begin
    (define gl:get-occlusion-queryiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetOcclusionQueryivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-occlusion-queryuiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetOcclusionQueryuivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:point-parameteri-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glPointParameteriNV_t(a0 , a1);")))
  (begin
    (define gl:point-parameteriv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glPointParameterivNV_t(a0 , a1);")))
  (begin
    (define gl:active-stencil-face-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glActiveStencilFaceEXT_t(a0);")))
  (begin
    (define gl:element-pointer-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glElementPointerAPPLE_t(a0 , a1);")))
  (begin
    (define gl:draw-element-array-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2))
        "_ALLEGRO_glDrawElementArrayAPPLE_t(a0 , a1 , a2);")))
  (begin
    (define gl:draw-range-element-array-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("GLint" a3) ("GLsizei" a4))
        "_ALLEGRO_glDrawRangeElementArrayAPPLE_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-draw-element-array-apple
      (foreign-lambda*
        void
        (("GLenum" a0)
         ((c-pointer "GLint") a1)
         ((c-pointer "GLsizei") a2)
         ("GLsizei" a3))
        "_ALLEGRO_glMultiDrawElementArrayAPPLE_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-draw-range-element-array-apple
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ((c-pointer "GLint") a3)
         ((c-pointer "GLsizei") a4)
         ("GLsizei" a5))
        "_ALLEGRO_glMultiDrawRangeElementArrayAPPLE_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:gen-fences-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenFencesAPPLE_t(a0 , a1);")))
  (begin
    (define gl:delete-fences-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteFencesAPPLE_t(a0 , a1);")))
  (begin
    (define gl:set-fence-apple
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glSetFenceAPPLE_t(a0);")))
  (begin
    (define gl:is-fence-apple
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsFenceAPPLE_t(a0));")))
  (begin
    (define gl:test-fence-apple
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glTestFenceAPPLE_t(a0));")))
  (begin
    (define gl:finish-fence-apple
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glFinishFenceAPPLE_t(a0);")))
  (begin
    (define gl:test-object-apple
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0) ("GLuint" a1))
        "return(_ALLEGRO_glTestObjectAPPLE_t(a0 , a1));")))
  (begin
    (define gl:finish-object-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glFinishObjectAPPLE_t(a0 , a1);")))
  (begin
    (define gl:bind-vertex-array-apple
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBindVertexArrayAPPLE_t(a0);")))
  (begin
    (define gl:delete-vertex-arrays-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteVertexArraysAPPLE_t(a0 , a1);")))
  (begin
    (define gl:gen-vertex-arrays-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenVertexArraysAPPLE_t(a0 , a1);")))
  (begin
    (define gl:is-vertex-array-apple
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsVertexArrayAPPLE_t(a0));")))
  (begin
    (define gl:vertex-array-range-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glVertexArrayRangeAPPLE_t(a0 , a1);")))
  (begin
    (define gl:flush-vertex-array-range-apple
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glFlushVertexArrayRangeAPPLE_t(a0 , a1);")))
  (begin
    (define gl:vertex-array-parameteri-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glVertexArrayParameteriAPPLE_t(a0 , a1);")))
  (begin
    (define gl:draw-buffers-ati
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLenum") a1))
        "_ALLEGRO_glDrawBuffersATI_t(a0 , a1);")))
  (begin
    (define gl:program-named-parameter4f-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6))
        "_ALLEGRO_glProgramNamedParameter4fNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:program-named-parameter4d-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5)
         ("GLdouble" a6))
        "_ALLEGRO_glProgramNamedParameter4dNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:program-named-parameter4fv-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramNamedParameter4fvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-named-parameter4dv-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glProgramNamedParameter4dvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-named-parameterfv-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetProgramNamedParameterfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-named-parameterdv-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ((c-pointer "GLubyte") a2)
         ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glGetProgramNamedParameterdvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "_ALLEGRO_glVertex2hNV_t(a0 , a1);")))
  (begin
    (define gl:vertex2hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glVertex2hvNV_t(a0);")))
  (begin
    (define gl:vertex3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "_ALLEGRO_glVertex3hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex3hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glVertex3hvNV_t(a0);")))
  (begin
    (define gl:vertex4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "_ALLEGRO_glVertex4hNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex4hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glVertex4hvNV_t(a0);")))
  (begin
    (define gl:normal3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "_ALLEGRO_glNormal3hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:normal3hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glNormal3hvNV_t(a0);")))
  (begin
    (define gl:color3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "_ALLEGRO_glColor3hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:color3hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glColor3hvNV_t(a0);")))
  (begin
    (define gl:color4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "_ALLEGRO_glColor4hNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color4hv-nv
      (foreign-lambda* void ((s16vector a0)) "_ALLEGRO_glColor4hvNV_t(a0);")))
  (begin
    (define gl:tex-coord1h-nv
      (foreign-lambda* void ((short a0)) "_ALLEGRO_glTexCoord1hNV_t(a0);")))
  (begin
    (define gl:tex-coord1hv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glTexCoord1hvNV_t(a0);")))
  (begin
    (define gl:tex-coord2h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1))
        "_ALLEGRO_glTexCoord2hNV_t(a0 , a1);")))
  (begin
    (define gl:tex-coord2hv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glTexCoord2hvNV_t(a0);")))
  (begin
    (define gl:tex-coord3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "_ALLEGRO_glTexCoord3hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord3hv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glTexCoord3hvNV_t(a0);")))
  (begin
    (define gl:tex-coord4h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2) (short a3))
        "_ALLEGRO_glTexCoord4hNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord4hv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glTexCoord4hvNV_t(a0);")))
  (begin
    (define gl:multi-tex-coord1h-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (short a1))
        "_ALLEGRO_glMultiTexCoord1hNV_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord1hv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (s16vector a1))
        "_ALLEGRO_glMultiTexCoord1hvNV_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2h-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (short a1) (short a2))
        "_ALLEGRO_glMultiTexCoord2hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord2hv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (s16vector a1))
        "_ALLEGRO_glMultiTexCoord2hvNV_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3h-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (short a1) (short a2) (short a3))
        "_ALLEGRO_glMultiTexCoord3hNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord3hv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (s16vector a1))
        "_ALLEGRO_glMultiTexCoord3hvNV_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4h-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (short a1) (short a2) (short a3) (short a4))
        "_ALLEGRO_glMultiTexCoord4hNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord4hv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) (s16vector a1))
        "_ALLEGRO_glMultiTexCoord4hvNV_t(a0 , a1);")))
  (begin
    (define gl:fog-coordh-nv
      (foreign-lambda* void ((short a0)) "_ALLEGRO_glFogCoordhNV_t(a0);")))
  (begin
    (define gl:fog-coordhv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glFogCoordhvNV_t(a0);")))
  (begin
    (define gl:secondary-color3h-nv
      (foreign-lambda*
        void
        ((short a0) (short a1) (short a2))
        "_ALLEGRO_glSecondaryColor3hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:secondary-color3hv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glSecondaryColor3hvNV_t(a0);")))
  (begin
    (define gl:vertex-weighth-nv
      (foreign-lambda* void ((short a0)) "_ALLEGRO_glVertexWeighthNV_t(a0);")))
  (begin
    (define gl:vertex-weighthv-nv
      (foreign-lambda*
        void
        ((s16vector a0))
        "_ALLEGRO_glVertexWeighthvNV_t(a0);")))
  (begin
    (define gl:vertex-attrib1h-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (short a1))
        "_ALLEGRO_glVertexAttrib1hNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib1hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (s16vector a1))
        "_ALLEGRO_glVertexAttrib1hvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib2h-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (short a1) (short a2))
        "_ALLEGRO_glVertexAttrib2hNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib2hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (s16vector a1))
        "_ALLEGRO_glVertexAttrib2hvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib3h-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (short a1) (short a2) (short a3))
        "_ALLEGRO_glVertexAttrib3hNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib3hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (s16vector a1))
        "_ALLEGRO_glVertexAttrib3hvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib4h-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (short a1) (short a2) (short a3) (short a4))
        "_ALLEGRO_glVertexAttrib4hNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib4hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (s16vector a1))
        "_ALLEGRO_glVertexAttrib4hvNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attribs1hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) (s16vector a2))
        "_ALLEGRO_glVertexAttribs1hvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs2hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) (s16vector a2))
        "_ALLEGRO_glVertexAttribs2hvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs3hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) (s16vector a2))
        "_ALLEGRO_glVertexAttribs3hvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attribs4hv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) (s16vector a2))
        "_ALLEGRO_glVertexAttribs4hvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-data-range-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glPixelDataRangeNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:flush-pixel-data-range-nv
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glFlushPixelDataRangeNV_t(a0);")))
  (begin
    (define gl:primitive-restart-nv
      (foreign-lambda* void () "_ALLEGRO_glPrimitiveRestartNV_t();")))
  (begin
    (define gl:primitive-restart-index-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glPrimitiveRestartIndexNV_t(a0);")))
  (begin
    (define gl:map-object-buffer-ati
      (foreign-lambda*
        (c-pointer "GLvoid")
        (("GLuint" a0))
        "return(_ALLEGRO_glMapObjectBufferATI_t(a0));")))
  (begin
    (define gl:unmap-object-buffer-ati
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glUnmapObjectBufferATI_t(a0);")))
  (begin
    (define gl:vertex-attrib-array-object-ati
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLboolean" a3)
         ("GLsizei" a4)
         ("GLuint" a5)
         ("GLuint" a6))
        "_ALLEGRO_glVertexAttribArrayObjectATI_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:get-vertex-attrib-array-objectfv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetVertexAttribArrayObjectfvATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-array-objectiv-ati
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribArrayObjectivATI_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex2b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1))
        "_ALLEGRO_glVertex2bOES_t(a0 , a1);")))
  (begin
    (define gl:vertex3b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glVertex3bOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex4b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2) ("GLbyte" a3))
        "_ALLEGRO_glVertex4bOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glVertex2bvOES_t(a0);")))
  (begin
    (define gl:vertex3bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glVertex3bvOES_t(a0);")))
  (begin
    (define gl:vertex4bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glVertex4bvOES_t(a0);")))
  (begin
    (define gl:tex-coord1b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0))
        "_ALLEGRO_glTexCoord1bOES_t(a0);")))
  (begin
    (define gl:tex-coord2b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1))
        "_ALLEGRO_glTexCoord2bOES_t(a0 , a1);")))
  (begin
    (define gl:tex-coord3b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glTexCoord3bOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord4b-oes
      (foreign-lambda*
        void
        (("GLbyte" a0) ("GLbyte" a1) ("GLbyte" a2) ("GLbyte" a3))
        "_ALLEGRO_glTexCoord4bOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord1bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glTexCoord1bvOES_t(a0);")))
  (begin
    (define gl:tex-coord2bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glTexCoord2bvOES_t(a0);")))
  (begin
    (define gl:tex-coord3bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glTexCoord3bvOES_t(a0);")))
  (begin
    (define gl:tex-coord4bv-oes
      (foreign-lambda*
        void
        (((c-pointer "GLbyte") a0))
        "_ALLEGRO_glTexCoord4bvOES_t(a0);")))
  (begin
    (define gl:multi-tex-coord1b-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLbyte" a1))
        "_ALLEGRO_glMultiTexCoord1bOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2b-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLbyte" a1) ("GLbyte" a2))
        "_ALLEGRO_glMultiTexCoord2bOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord3b-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLbyte" a1) ("GLbyte" a2) ("GLbyte" a3))
        "_ALLEGRO_glMultiTexCoord3bOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord4b-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLbyte" a1) ("GLbyte" a2) ("GLbyte" a3) ("GLbyte" a4))
        "_ALLEGRO_glMultiTexCoord4bOES_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord1bv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glMultiTexCoord1bvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2bv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glMultiTexCoord2bvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3bv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glMultiTexCoord3bvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4bv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glMultiTexCoord4bvOES_t(a0 , a1);")))
  (begin
    (define gl:vertex2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glVertex2xOES_t(a0 , a1);")))
  (begin
    (define gl:vertex3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glVertex3xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glVertex4xOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex2xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glVertex2xvOES_t(a0);")))
  (begin
    (define gl:vertex3xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glVertex3xvOES_t(a0);")))
  (begin
    (define gl:vertex4xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glVertex4xvOES_t(a0);")))
  (begin
    (define gl:normal3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glNormal3xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:normal3xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glNormal3xvOES_t(a0);")))
  (begin
    (define gl:tex-coord1x-oes
      (foreign-lambda* void ((integer a0)) "_ALLEGRO_glTexCoord1xOES_t(a0);")))
  (begin
    (define gl:tex-coord2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glTexCoord2xOES_t(a0 , a1);")))
  (begin
    (define gl:tex-coord3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glTexCoord3xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-coord4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glTexCoord4xOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:tex-coord1xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glTexCoord1xvOES_t(a0);")))
  (begin
    (define gl:tex-coord2xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glTexCoord2xvOES_t(a0);")))
  (begin
    (define gl:tex-coord3xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glTexCoord3xvOES_t(a0);")))
  (begin
    (define gl:tex-coord4xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glTexCoord4xvOES_t(a0);")))
  (begin
    (define gl:multi-tex-coord1x-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glMultiTexCoord1xOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2x-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1) (integer a2))
        "_ALLEGRO_glMultiTexCoord2xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-coord3x-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glMultiTexCoord3xOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-coord4x-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1) (integer a2) (integer a3) (integer a4))
        "_ALLEGRO_glMultiTexCoord4xOES_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-coord1xv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glMultiTexCoord1xvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord2xv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glMultiTexCoord2xvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord3xv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glMultiTexCoord3xvOES_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord4xv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glMultiTexCoord4xvOES_t(a0 , a1);")))
  (begin
    (define gl:color3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glColor3xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:color4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glColor4xOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:color3xv-oes
      (foreign-lambda* void ((s32vector a0)) "_ALLEGRO_glColor3xvOES_t(a0);")))
  (begin
    (define gl:color4xv-oes
      (foreign-lambda* void ((s32vector a0)) "_ALLEGRO_glColor4xvOES_t(a0);")))
  (begin
    (define gl:indexx-oes
      (foreign-lambda* void ((integer a0)) "_ALLEGRO_glIndexxOES_t(a0);")))
  (begin
    (define gl:indexxv-oes
      (foreign-lambda* void ((s32vector a0)) "_ALLEGRO_glIndexxvOES_t(a0);")))
  (begin
    (define gl:rectx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glRectxOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:depth-rangex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glDepthRangexOES_t(a0 , a1);")))
  (begin
    (define gl:rotatex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glRotatexOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:scalex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glScalexOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:translatex-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glTranslatexOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:frustumx-oes
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "_ALLEGRO_glFrustumxOES_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:orthox-oes
      (foreign-lambda*
        void
        ((integer a0)
         (integer a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5))
        "_ALLEGRO_glOrthoxOES_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:tex-genx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glTexGenxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-genxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glTexGenxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-genxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetTexGenxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:clip-planex-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glClipPlanexOES_t(a0 , a1);")))
  (begin
    (define gl:get-clip-planex-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glGetClipPlanexOES_t(a0 , a1);")))
  (begin
    (define gl:raster-pos2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glRasterPos2xOES_t(a0 , a1);")))
  (begin
    (define gl:raster-pos3x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2))
        "_ALLEGRO_glRasterPos3xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:raster-pos4x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glRasterPos4xOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:raster-pos2xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glRasterPos2xvOES_t(a0);")))
  (begin
    (define gl:raster-pos3xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glRasterPos3xvOES_t(a0);")))
  (begin
    (define gl:raster-pos4xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glRasterPos4xvOES_t(a0);")))
  (begin
    (define gl:materialx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glMaterialxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:materialxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glMaterialxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-materialx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetMaterialxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:lightx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glLightxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:lightxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glLightxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-lightx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetLightxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:light-modelx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glLightModelxOES_t(a0 , a1);")))
  (begin
    (define gl:light-modelxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glLightModelxvOES_t(a0 , a1);")))
  (begin
    (define gl:point-sizex-oes
      (foreign-lambda* void ((integer a0)) "_ALLEGRO_glPointSizexOES_t(a0);")))
  (begin
    (define gl:line-widthx-oes
      (foreign-lambda* void ((integer a0)) "_ALLEGRO_glLineWidthxOES_t(a0);")))
  (begin
    (define gl:polygon-offsetx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glPolygonOffsetxOES_t(a0 , a1);")))
  (begin
    (define gl:pixel-storex
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glPixelStorex_t(a0 , a1);")))
  (begin
    (define gl:pixel-transferx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glPixelTransferxOES_t(a0 , a1);")))
  (begin
    (define gl:pixel-mapx
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) (s32vector a2))
        "_ALLEGRO_glPixelMapx_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-pixel-mapxv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) (s32vector a2))
        "_ALLEGRO_glGetPixelMapxv_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glConvolutionParameterxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:convolution-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glConvolutionParameterxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-convolution-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetConvolutionParameterxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-histogram-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetHistogramParameterxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:pixel-zoomx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glPixelZoomxOES_t(a0 , a1);")))
  (begin
    (define gl:bitmapx-oes
      (foreign-lambda*
        void
        (("GLsizei" a0)
         ("GLsizei" a1)
         (integer a2)
         (integer a3)
         (integer a4)
         (integer a5)
         ((c-pointer "GLubyte") a6))
        "_ALLEGRO_glBitmapxOES_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:tex-parameterx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glTexParameterxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glTexParameterxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetTexParameterxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-level-parameterxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLenum" a2) (s32vector a3))
        "_ALLEGRO_glGetTexLevelParameterxvOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:prioritize-texturesx-oes
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1) (s32vector a2))
        "_ALLEGRO_glPrioritizeTexturesxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (integer a2))
        "_ALLEGRO_glTexEnvxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:tex-envxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glTexEnvxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-envxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetTexEnvxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:fogx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glFogxOES_t(a0 , a1);")))
  (begin
    (define gl:fogxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glFogxvOES_t(a0 , a1);")))
  (begin
    (define gl:sample-coverage-oes
      (foreign-lambda*
        void
        ((integer a0) ("GLboolean" a1))
        "_ALLEGRO_glSampleCoverageOES_t(a0 , a1);")))
  (begin
    (define gl:alpha-funcx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glAlphaFuncxOES_t(a0 , a1);")))
  (begin
    (define gl:blend-colorx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glBlendColorxOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-colorx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glClearColorxOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:clear-depthx-oes
      (foreign-lambda*
        void
        ((integer a0))
        "_ALLEGRO_glClearDepthxOES_t(a0);")))
  (begin
    (define gl:clear-accumx-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1) (integer a2) (integer a3))
        "_ALLEGRO_glClearAccumxOES_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:accumx-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (integer a1))
        "_ALLEGRO_glAccumxOES_t(a0 , a1);")))
  (begin
    (define gl:map1x-oes
      (foreign-lambda*
        void
        (("GLenum" a0)
         (integer a1)
         (integer a2)
         ("GLint" a3)
         ("GLint" a4)
         (s32vector a5))
        "_ALLEGRO_glMap1xOES_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:map2x-oes
      (foreign-lambda*
        void
        (("GLenum" a0)
         (integer a1)
         (integer a2)
         ("GLint" a3)
         ("GLint" a4)
         (integer a5)
         (integer a6)
         ("GLint" a7)
         ("GLint" a8)
         (s32vector a9))
        "_ALLEGRO_glMap2xOES_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:map-grid1x-oes
      (foreign-lambda*
        void
        (("GLint" a0) (integer a1) (integer a2))
        "_ALLEGRO_glMapGrid1xOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:map-grid2x-oes
      (foreign-lambda*
        void
        (("GLint" a0) (integer a1) (integer a2) (integer a3) (integer a4))
        "_ALLEGRO_glMapGrid2xOES_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-mapxv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glGetMapxvOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:eval-coord1x-oes
      (foreign-lambda*
        void
        ((integer a0))
        "_ALLEGRO_glEvalCoord1xOES_t(a0);")))
  (begin
    (define gl:eval-coord2x-oes
      (foreign-lambda*
        void
        ((integer a0) (integer a1))
        "_ALLEGRO_glEvalCoord2xOES_t(a0 , a1);")))
  (begin
    (define gl:eval-coord1xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glEvalCoord1xvOES_t(a0);")))
  (begin
    (define gl:eval-coord2xv-oes
      (foreign-lambda*
        void
        ((s32vector a0))
        "_ALLEGRO_glEvalCoord2xvOES_t(a0);")))
  (begin
    (define gl:feedback-bufferx-oes
      (foreign-lambda*
        void
        (("GLsizei" a0) ("GLenum" a1) (s32vector a2))
        "_ALLEGRO_glFeedbackBufferxOES_t(a0 , a1 , a2);")))
  (begin
    (define gl:pass-throughx-oes
      (foreign-lambda*
        void
        ((integer a0))
        "_ALLEGRO_glPassThroughxOES_t(a0);")))
  (begin
    (define gl:get-fixedv-oes
      (foreign-lambda*
        void
        (("GLenum" a0) (s32vector a1))
        "_ALLEGRO_glGetFixedvOES_t(a0 , a1);")))
  (begin
    (define gl:depth-rangef-oes
      (foreign-lambda*
        void
        (("GLclampf" a0) ("GLclampf" a1))
        "_ALLEGRO_glDepthRangefOES_t(a0 , a1);")))
  (begin
    (define gl:frustumf-oes
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glFrustumfOES_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:orthof-oes
      (foreign-lambda*
        void
        (("GLfloat" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glOrthofOES_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:clip-planef-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glClipPlanefOES_t(a0 , a1);")))
  (begin
    (define gl:get-clip-planef-oes
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glGetClipPlanefOES_t(a0 , a1);")))
  (begin
    (define gl:clear-depthf-oes
      (foreign-lambda*
        void
        (("GLclampd" a0))
        "_ALLEGRO_glClearDepthfOES_t(a0);")))
  (begin
    (define gl:depth-bounds-ext
      (foreign-lambda*
        void
        (("GLclampd" a0) ("GLclampd" a1))
        "_ALLEGRO_glDepthBoundsEXT_t(a0 , a1);")))
  (begin
    (define gl:blend-equation-separate-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glBlendEquationSeparateEXT_t(a0 , a1);")))
  (begin
    (define gl:is-renderbuffer-ext
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsRenderbufferEXT_t(a0));")))
  (begin
    (define gl:bind-renderbuffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindRenderbufferEXT_t(a0 , a1);")))
  (begin
    (define gl:delete-renderbuffers-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteRenderbuffersEXT_t(a0 , a1);")))
  (begin
    (define gl:gen-renderbuffers-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenRenderbuffersEXT_t(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glRenderbufferStorageEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-renderbuffer-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetRenderbufferParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:is-framebuffer-ext
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsFramebufferEXT_t(a0));")))
  (begin
    (define gl:bind-framebuffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindFramebufferEXT_t(a0 , a1);")))
  (begin
    (define gl:delete-framebuffers-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteFramebuffersEXT_t(a0 , a1);")))
  (begin
    (define gl:gen-framebuffers-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenFramebuffersEXT_t(a0 , a1);")))
  (begin
    (define gl:check-framebuffer-status-ext
      (foreign-lambda*
        "GLenum"
        (("GLenum" a0))
        "return(_ALLEGRO_glCheckFramebufferStatusEXT_t(a0));")))
  (begin
    (define gl:framebuffer-texture1dext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTexture1DEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture2dext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTexture2DEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:framebuffer-texture3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLuint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glFramebufferTexture3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:framebuffer-renderbuffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glFramebufferRenderbufferEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-framebuffer-attachment-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetFramebufferAttachmentParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-mipmap-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glGenerateMipmapEXT_t(a0);")))
  (begin
    (define gl:string-marker-gremedy
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLvoid") a1))
        "_ALLEGRO_glStringMarkerGREMEDY_t(a0 , a1);")))
  (begin
    (define gl:stencil-clear-tag-ext
      (foreign-lambda*
        void
        (("GLsizei" a0) ("GLuint" a1))
        "_ALLEGRO_glStencilClearTagEXT_t(a0 , a1);")))
  (begin
    (define gl:blit-framebuffer-ext
      (foreign-lambda*
        void
        (("GLint" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLint" a7)
         ("GLbitfield" a8)
         ("GLenum" a9))
        "_ALLEGRO_glBlitFramebufferEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:renderbuffer-storage-multisample-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4))
        "_ALLEGRO_glRenderbufferStorageMultisampleEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-query-objecti64v-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer integer64) a2))
        "_ALLEGRO_glGetQueryObjecti64vEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-query-objectui64v-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetQueryObjectui64vEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters4fv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramEnvParameters4fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-local-parameters4fv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramLocalParameters4fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-parameteri-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glBufferParameteriAPPLE_t(a0 , a1 , a2);")))
  (begin
    (define gl:flush-mapped-buffer-range-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("ptrdiff_t" a1) ("ptrdiff_t" a2))
        "_ALLEGRO_glFlushMappedBufferRangeAPPLE_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform-buffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLuint" a2))
        "_ALLEGRO_glUniformBufferEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniform-buffer-size-ext
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) ("GLint" a1))
        "return(_ALLEGRO_glGetUniformBufferSizeEXT_t(a0 , a1));")))
  (begin
    (define gl:get-uniform-offset-ext
      (foreign-lambda*
        "ptrdiff_t"
        (("GLuint" a0) ("GLint" a1))
        "return(_ALLEGRO_glGetUniformOffsetEXT_t(a0 , a1));")))
  (begin
    (define gl:color-mask-indexed-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLboolean" a1)
         ("GLboolean" a2)
         ("GLboolean" a3)
         ("GLboolean" a4))
        "_ALLEGRO_glColorMaskIndexedEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-boolean-indexedv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLboolean") a2))
        "_ALLEGRO_glGetBooleanIndexedvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-integer-indexedv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetIntegerIndexedvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:enable-indexed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glEnableIndexedEXT_t(a0 , a1);")))
  (begin
    (define gl:disable-indexed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glDisableIndexedEXT_t(a0 , a1);")))
  (begin
    (define gl:is-enabled-indexed-ext
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0) ("GLuint" a1))
        "return(_ALLEGRO_glIsEnabledIndexedEXT_t(a0 , a1));")))
  (begin
    (define gl:draw-arrays-instanced-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glDrawArraysInstancedEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:draw-elements-instanced-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ((c-pointer "GLvoid") a3)
         ("GLsizei" a4))
        "_ALLEGRO_glDrawElementsInstancedEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-parameteri-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2))
        "_ALLEGRO_glProgramParameteriEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-texture-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3))
        "_ALLEGRO_glFramebufferTextureEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:framebuffer-texture-face-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLenum" a4))
        "_ALLEGRO_glFramebufferTextureFaceEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1))
        "_ALLEGRO_glVertexAttribI1iEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glVertexAttribI2iEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glVertexAttribI3iEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glVertexAttribI4iEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1))
        "_ALLEGRO_glVertexAttribI1uiEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glVertexAttribI2uiEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:vertex-attrib-i3ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glVertexAttribI3uiEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-attrib-i4ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glVertexAttribI4uiEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-i1iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI1ivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI2ivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI3ivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLint") a1))
        "_ALLEGRO_glVertexAttribI4ivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i1uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI1uivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i2uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI2uivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i3uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI3uivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glVertexAttribI4uivEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4bv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLbyte") a1))
        "_ALLEGRO_glVertexAttribI4bvEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4sv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLshort") a1))
        "_ALLEGRO_glVertexAttribI4svEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4ubv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLubyte") a1))
        "_ALLEGRO_glVertexAttribI4ubvEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-i4usv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ((c-pointer "GLushort") a1))
        "_ALLEGRO_glVertexAttribI4usvEXT_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-ipointer-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glVertexAttribIPointerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-vertex-attrib-iiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribIivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-vertex-attrib-iuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVertexAttribIuivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform1ui-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1))
        "_ALLEGRO_glUniform1uiEXT_t(a0 , a1);")))
  (begin
    (define gl:uniform2ui-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glUniform2uiEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3ui-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glUniform3uiEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:uniform4ui-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLuint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glUniform4uiEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:uniform1uiv-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform1uivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform2uiv-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform2uivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform3uiv-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform3uivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:uniform4uiv-ext
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glUniform4uivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetUniformuivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:bind-frag-data-location-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) (c-string a2))
        "_ALLEGRO_glBindFragDataLocationEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-frag-data-location-ext
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetFragDataLocationEXT_t(a0 , a1));")))
  (begin
    (define gl:framebuffer-texture-layer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glFramebufferTextureLayerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tex-buffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glTexBufferEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:depth-ranged-nv
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1))
        "_ALLEGRO_glDepthRangedNV_t(a0 , a1);")))
  (begin
    (define gl:clear-depthd-nv
      (foreign-lambda*
        void
        (("GLdouble" a0))
        "_ALLEGRO_glClearDepthdNV_t(a0);")))
  (begin
    (define gl:depth-boundsd-nv
      (foreign-lambda*
        void
        (("GLdouble" a0) ("GLdouble" a1))
        "_ALLEGRO_glDepthBoundsdNV_t(a0 , a1);")))
  (begin
    (define gl:renderbuffer-storage-multsample-coverage-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLsizei" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5))
        "_ALLEGRO_glRenderbufferStorageMultsampleCoverageNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-vertex-limit-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLint" a1))
        "_ALLEGRO_glProgramVertexLimitNV_t(a0 , a1);")))
  (begin
    (define gl:program-local-parameter-i4i-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glProgramLocalParameterI4iNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter-i4iv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glProgramLocalParameterI4ivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameters-i4iv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramLocalParametersI4ivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-local-parameter-i4ui-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5))
        "_ALLEGRO_glProgramLocalParameterI4uiNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-local-parameter-i4uiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glProgramLocalParameterI4uivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-local-parameters-i4uiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramLocalParametersI4uivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-env-parameter-i4i-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glProgramEnvParameterI4iNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter-i4iv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glProgramEnvParameterI4ivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters-i4iv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramEnvParametersI4ivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-env-parameter-i4ui-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5))
        "_ALLEGRO_glProgramEnvParameterI4uiNV_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-env-parameter-i4uiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glProgramEnvParameterI4uivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-env-parameters-i4uiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramEnvParametersI4uivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-program-local-parameter-iiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetProgramLocalParameterIivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-local-parameter-iuiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetProgramLocalParameterIuivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameter-iiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetProgramEnvParameterIivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-program-env-parameter-iuiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetProgramEnvParameterIuivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-buffer-parametersfv-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramBufferParametersfvNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-buffer-parameters-iiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glProgramBufferParametersIivNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-buffer-parameters-iuiv-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ((c-pointer "GLuint") a4))
        "_ALLEGRO_glProgramBufferParametersIuivNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-range-nv
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("ptrdiff_t" a3)
         ("ptrdiff_t" a4))
        "_ALLEGRO_glBindBufferRangeNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-offset-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("ptrdiff_t" a3))
        "_ALLEGRO_glBindBufferOffsetNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-buffer-base-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glBindBufferBaseNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-attribs-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLint") a1) ("GLenum" a2))
        "_ALLEGRO_glTransformFeedbackAttribsNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2) ("GLenum" a3))
        "_ALLEGRO_glTransformFeedbackVaryingsNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:begin-transform-feedback-nv
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glBeginTransformFeedbackNV_t(a0);")))
  (begin
    (define gl:end-transform-feedback-nv
      (foreign-lambda* void () "_ALLEGRO_glEndTransformFeedbackNV_t();")))
  (begin
    (define gl:get-varying-location-nv
      (foreign-lambda*
        "GLint"
        (("GLuint" a0) (c-string a1))
        "return(_ALLEGRO_glGetVaryingLocationNV_t(a0 , a1));")))
  (begin
    (define gl:get-active-varying-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         ((c-pointer "GLsizei") a4)
         ((c-pointer "GLenum") a5)
         (c-string a6))
        "_ALLEGRO_glGetActiveVaryingNV_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:active-varying-nv
      (foreign-lambda*
        void
        (("GLuint" a0) (c-string a1))
        "_ALLEGRO_glActiveVaryingNV_t(a0 , a1);")))
  (begin
    (define gl:get-transform-feedback-varying-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetTransformFeedbackVaryingNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:frame-terminator-gremedy
      (foreign-lambda* void () "_ALLEGRO_glFrameTerminatorGREMEDY_t();")))
  (begin
    (define gl:begin-conditional-render-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glBeginConditionalRenderNV_t(a0 , a1);")))
  (begin
    (define gl:end-conditional-render-nv
      (foreign-lambda* void () "_ALLEGRO_glEndConditionalRenderNV_t();")))
  (begin
    (define gl:begin-transform-feedback-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glBeginTransformFeedbackEXT_t(a0);")))
  (begin
    (define gl:end-transform-feedback-ext
      (foreign-lambda* void () "_ALLEGRO_glEndTransformFeedbackEXT_t();")))
  (begin
    (define gl:bind-buffer-range-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLuint" a1)
         ("GLuint" a2)
         ("ptrdiff_t" a3)
         ("ptrdiff_t" a4))
        "_ALLEGRO_glBindBufferRangeEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:bind-buffer-offset-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2) ("ptrdiff_t" a3))
        "_ALLEGRO_glBindBufferOffsetEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-buffer-base-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLuint" a2))
        "_ALLEGRO_glBindBufferBaseEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:transform-feedback-varyings-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLint") a2) ("GLenum" a3))
        "_ALLEGRO_glTransformFeedbackVaryingsEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-transform-feedback-varying-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetTransformFeedbackVaryingEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:client-attrib-default-ext
      (foreign-lambda*
        void
        (("GLbitfield" a0))
        "_ALLEGRO_glClientAttribDefaultEXT_t(a0);")))
  (begin
    (define gl:push-client-attrib-default-ext
      (foreign-lambda*
        void
        (("GLbitfield" a0))
        "_ALLEGRO_glPushClientAttribDefaultEXT_t(a0);")))
  (begin
    (define gl:matrix-loadf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMatrixLoadfEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-loadd-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMatrixLoaddEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-multf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMatrixMultfEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-multd-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMatrixMultdEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-load-identity-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glMatrixLoadIdentityEXT_t(a0);")))
  (begin
    (define gl:matrix-rotatef-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLfloat" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glMatrixRotatefEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:matrix-rotated-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4))
        "_ALLEGRO_glMatrixRotatedEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:matrix-scalef-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glMatrixScalefEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-scaled-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glMatrixScaledEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-translatef-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLfloat" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glMatrixTranslatefEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-translated-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLdouble" a1) ("GLdouble" a2) ("GLdouble" a3))
        "_ALLEGRO_glMatrixTranslatedEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:matrix-frustum-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5)
         ("GLdouble" a6))
        "_ALLEGRO_glMatrixFrustumEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:matrix-ortho-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLdouble" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5)
         ("GLdouble" a6))
        "_ALLEGRO_glMatrixOrthoEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:matrix-pop-ext
      (foreign-lambda* void (("GLenum" a0)) "_ALLEGRO_glMatrixPopEXT_t(a0);")))
  (begin
    (define gl:matrix-push-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glMatrixPushEXT_t(a0);")))
  (begin
    (define gl:matrix-load-transposef-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMatrixLoadTransposefEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-load-transposed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMatrixLoadTransposedEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-mult-transposef-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLfloat") a1))
        "_ALLEGRO_glMatrixMultTransposefEXT_t(a0 , a1);")))
  (begin
    (define gl:matrix-mult-transposed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer "GLdouble") a1))
        "_ALLEGRO_glMatrixMultTransposedEXT_t(a0 , a1);")))
  (begin
    (define gl:texture-parameterf-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLfloat" a3))
        "_ALLEGRO_glTextureParameterfEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameterfv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glTextureParameterfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameteri-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLint" a3))
        "_ALLEGRO_glTextureParameteriEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glTextureParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLenum" a6)
         ("GLenum" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glTextureImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:texture-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glTextureImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:texture-sub-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLenum" a5)
         ("GLenum" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glTextureSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:texture-sub-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glTextureSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:copy-texture-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLint" a7))
        "_ALLEGRO_glCopyTextureImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-texture-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLint" a8))
        "_ALLEGRO_glCopyTextureImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-texture-sub-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6))
        "_ALLEGRO_glCopyTextureSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-texture-sub-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ("GLsizei" a8))
        "_ALLEGRO_glCopyTextureSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-texture-image-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glGetTextureImageEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-texture-parameterfv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetTextureParameterfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetTextureParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-level-parameterfv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glGetTextureLevelParameterfvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-texture-level-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetTextureLevelParameterivEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:texture-image3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7)
         ("GLenum" a8)
         ("GLenum" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glTextureImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:texture-sub-image3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLsizei" a8)
         ("GLenum" a9)
         ("GLenum" a10)
         ((c-pointer "GLvoid") a11))
        "_ALLEGRO_glTextureSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:copy-texture-sub-image3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLint" a7)
         ("GLsizei" a8)
         ("GLsizei" a9))
        "_ALLEGRO_glCopyTextureSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:multi-tex-parameterf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLfloat" a3))
        "_ALLEGRO_glMultiTexParameterfEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glMultiTexParameterfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameteri-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLint" a3))
        "_ALLEGRO_glMultiTexParameteriEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glMultiTexParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLenum" a6)
         ("GLenum" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glMultiTexImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:multi-tex-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glMultiTexImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:multi-tex-sub-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLenum" a5)
         ("GLenum" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glMultiTexSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:multi-tex-sub-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLenum" a7)
         ("GLenum" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glMultiTexSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:copy-multi-tex-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLint" a7))
        "_ALLEGRO_glCopyMultiTexImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:copy-multi-tex-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLint" a8))
        "_ALLEGRO_glCopyMultiTexImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:copy-multi-tex-sub-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6))
        "_ALLEGRO_glCopyMultiTexSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:copy-multi-tex-sub-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ("GLsizei" a8))
        "_ALLEGRO_glCopyMultiTexSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:get-multi-tex-image-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLenum" a4)
         ((c-pointer "GLvoid") a5))
        "_ALLEGRO_glGetMultiTexImageEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:get-multi-tex-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetMultiTexParameterfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetMultiTexParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-level-parameterfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glGetMultiTexLevelParameterfvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-multi-tex-level-parameteriv-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetMultiTexLevelParameterivEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7)
         ("GLenum" a8)
         ("GLenum" a9)
         ((c-pointer "GLvoid") a10))
        "_ALLEGRO_glMultiTexImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:multi-tex-sub-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLsizei" a8)
         ("GLenum" a9)
         ("GLenum" a10)
         ((c-pointer "GLvoid") a11))
        "_ALLEGRO_glMultiTexSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:copy-multi-tex-sub-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6)
         ("GLint" a7)
         ("GLsizei" a8)
         ("GLsizei" a9))
        "_ALLEGRO_glCopyMultiTexSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:bind-multi-texture-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glBindMultiTextureEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:enable-client-state-indexed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glEnableClientStateIndexedEXT_t(a0 , a1);")))
  (begin
    (define gl:disable-client-state-indexed-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glDisableClientStateIndexedEXT_t(a0 , a1);")))
  (begin
    (define gl:multi-tex-coord-pointer-ext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glMultiTexCoordPointerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:multi-tex-envf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLfloat" a3))
        "_ALLEGRO_glMultiTexEnvfEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-envfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glMultiTexEnvfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-envi-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLint" a3))
        "_ALLEGRO_glMultiTexEnviEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-enviv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glMultiTexEnvivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-gend-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLdouble" a3))
        "_ALLEGRO_glMultiTexGendEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-gendv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glMultiTexGendvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-genf-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLfloat" a3))
        "_ALLEGRO_glMultiTexGenfEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-genfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glMultiTexGenfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-geni-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLint" a3))
        "_ALLEGRO_glMultiTexGeniEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-geniv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glMultiTexGenivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-envfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetMultiTexEnvfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-enviv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetMultiTexEnvivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-gendv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glGetMultiTexGendvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-genfv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetMultiTexGenfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-geniv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetMultiTexGenivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-float-indexedv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetFloatIndexedvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-double-indexedv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLdouble") a2))
        "_ALLEGRO_glGetDoubleIndexedvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-pointer-indexedv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetPointerIndexedvEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:compressed-texture-image3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7)
         ("GLsizei" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glCompressedTextureImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-texture-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedTextureImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-texture-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedTextureImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-texture-sub-image3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLsizei" a8)
         ("GLenum" a9)
         ("GLsizei" a10)
         ((c-pointer "GLvoid") a11))
        "_ALLEGRO_glCompressedTextureSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:compressed-texture-sub-image2dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLenum" a7)
         ("GLsizei" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glCompressedTextureSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-texture-sub-image1dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLenum" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedTextureSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-compressed-texture-image-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLint" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetCompressedTextureImageEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:compressed-multi-tex-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLint" a7)
         ("GLsizei" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glCompressedMultiTexImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-multi-tex-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5)
         ("GLint" a6)
         ("GLsizei" a7)
         ((c-pointer "GLvoid") a8))
        "_ALLEGRO_glCompressedMultiTexImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8);")))
  (begin
    (define gl:compressed-multi-tex-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedMultiTexImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:compressed-multi-tex-sub-image3dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLsizei" a6)
         ("GLsizei" a7)
         ("GLsizei" a8)
         ("GLenum" a9)
         ("GLsizei" a10)
         ((c-pointer "GLvoid") a11))
        "_ALLEGRO_glCompressedMultiTexSubImage3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11);")))
  (begin
    (define gl:compressed-multi-tex-sub-image2dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLsizei" a5)
         ("GLsizei" a6)
         ("GLenum" a7)
         ("GLsizei" a8)
         ((c-pointer "GLvoid") a9))
        "_ALLEGRO_glCompressedMultiTexSubImage2DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9);")))
  (begin
    (define gl:compressed-multi-tex-sub-image1dext
      (foreign-lambda*
        void
        (("GLenum" a0)
         ("GLenum" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLsizei" a4)
         ("GLenum" a5)
         ("GLsizei" a6)
         ((c-pointer "GLvoid") a7))
        "_ALLEGRO_glCompressedMultiTexSubImage1DEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7);")))
  (begin
    (define gl:get-compressed-multi-tex-image-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLint" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetCompressedMultiTexImageEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-string-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ((c-pointer "GLvoid") a4))
        "_ALLEGRO_glNamedProgramStringEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter4d-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLdouble" a3)
         ("GLdouble" a4)
         ("GLdouble" a5)
         ("GLdouble" a6))
        "_ALLEGRO_glNamedProgramLocalParameter4dEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter4dv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glNamedProgramLocalParameter4dvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameter4f-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5)
         ("GLfloat" a6))
        "_ALLEGRO_glNamedProgramLocalParameter4fEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glNamedProgramLocalParameter4fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameterdv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glGetNamedProgramLocalParameterdvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameterfv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetNamedProgramLocalParameterfvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-programiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetNamedProgramivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-string-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetNamedProgramStringEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glNamedProgramLocalParameters4fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter-i4i-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLint" a6))
        "_ALLEGRO_glNamedProgramLocalParameterI4iEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter-i4iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glNamedProgramLocalParameterI4ivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters-i4iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glNamedProgramLocalParametersI4ivEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-program-local-parameter-i4ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5)
         ("GLuint" a6))
        "_ALLEGRO_glNamedProgramLocalParameterI4uiEXT_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:named-program-local-parameter-i4uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glNamedProgramLocalParameterI4uivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-program-local-parameters-i4uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLuint" a2)
         ("GLsizei" a3)
         ((c-pointer "GLuint") a4))
        "_ALLEGRO_glNamedProgramLocalParametersI4uivEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-named-program-local-parameter-iiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetNamedProgramLocalParameterIivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-program-local-parameter-iuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glGetNamedProgramLocalParameterIuivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameter-iiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glTextureParameterIivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-parameter-iuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glTextureParameterIuivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameter-iiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetTextureParameterIivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-texture-parameter-iuiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glGetTextureParameterIuivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameter-iiv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glMultiTexParameterIivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-parameter-iuiv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glMultiTexParameterIuivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameter-iiv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetMultiTexParameterIivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-multi-tex-parameter-iuiv-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glGetMultiTexParameterIuivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform1f-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLfloat" a2))
        "_ALLEGRO_glProgramUniform1fEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2f-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLfloat" a2) ("GLfloat" a3))
        "_ALLEGRO_glProgramUniform2fEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3f-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4))
        "_ALLEGRO_glProgramUniform3fEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4f-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLfloat" a4)
         ("GLfloat" a5))
        "_ALLEGRO_glProgramUniform4fEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2))
        "_ALLEGRO_glProgramUniform1iEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3))
        "_ALLEGRO_glProgramUniform2iEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3i-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glProgramUniform3iEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4i-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLint" a2)
         ("GLint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glProgramUniform4iEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramUniform1fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramUniform2fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramUniform3fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glProgramUniform4fvEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform1iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramUniform1ivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramUniform2ivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramUniform3ivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4iv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glProgramUniform4ivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform-matrix2fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix2fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix3fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix4fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x3fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix2x3fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x2fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix3x2fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix2x4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix2x4fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x2fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix4x2fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix3x4fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix3x4fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform-matrix4x3fv-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ("GLboolean" a3)
         ((c-pointer "GLfloat") a4))
        "_ALLEGRO_glProgramUniformMatrix4x3fvEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform1ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLuint" a2))
        "_ALLEGRO_glProgramUniform1uiEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniform2ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLuint" a2) ("GLuint" a3))
        "_ALLEGRO_glProgramUniform2uiEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLuint" a2) ("GLuint" a3) ("GLuint" a4))
        "_ALLEGRO_glProgramUniform3uiEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:program-uniform4ui-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLuint" a2)
         ("GLuint" a3)
         ("GLuint" a4)
         ("GLuint" a5))
        "_ALLEGRO_glProgramUniform4uiEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:program-uniform1uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramUniform1uivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform2uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramUniform2uivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform3uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramUniform3uivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:program-uniform4uiv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLsizei" a2) ((c-pointer "GLuint") a3))
        "_ALLEGRO_glProgramUniform4uivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-buffer-data-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("ptrdiff_t" a1)
         ((c-pointer "GLvoid") a2)
         ("GLenum" a3))
        "_ALLEGRO_glNamedBufferDataEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-buffer-sub-data-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glNamedBufferSubDataEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:map-named-buffer-ext
      (foreign-lambda*
        (c-pointer "GLvoid")
        (("GLuint" a0) ("GLenum" a1))
        "return(_ALLEGRO_glMapNamedBufferEXT_t(a0 , a1));")))
  (begin
    (define gl:unmap-named-buffer-ext
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glUnmapNamedBufferEXT_t(a0));")))
  (begin
    (define gl:get-named-buffer-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetNamedBufferParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-pointerv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetNamedBufferPointervEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-sub-data-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("ptrdiff_t" a1)
         ("ptrdiff_t" a2)
         ((c-pointer "GLvoid") a3))
        "_ALLEGRO_glGetNamedBufferSubDataEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:texture-buffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glTextureBufferEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:multi-tex-buffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glMultiTexBufferEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-renderbuffer-storage-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLsizei" a2) ("GLsizei" a3))
        "_ALLEGRO_glNamedRenderbufferStorageEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-renderbuffer-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetNamedRenderbufferParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:check-named-framebuffer-status-ext
      (foreign-lambda*
        "GLenum"
        (("GLuint" a0) ("GLenum" a1))
        "return(_ALLEGRO_glCheckNamedFramebufferStatusEXT_t(a0 , a1));")))
  (begin
    (define gl:named-framebuffer-texture1dext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glNamedFramebufferTexture1DEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture2dext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3) ("GLint" a4))
        "_ALLEGRO_glNamedFramebufferTexture2DEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture3dext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLenum" a2)
         ("GLuint" a3)
         ("GLint" a4)
         ("GLint" a5))
        "_ALLEGRO_glNamedFramebufferTexture3DEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:named-framebuffer-renderbuffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLuint" a3))
        "_ALLEGRO_glNamedFramebufferRenderbufferEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-named-framebuffer-attachment-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetNamedFramebufferAttachmentParameterivEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:generate-texture-mipmap-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glGenerateTextureMipmapEXT_t(a0 , a1);")))
  (begin
    (define gl:generate-multi-tex-mipmap-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glGenerateMultiTexMipmapEXT_t(a0 , a1);")))
  (begin
    (define gl:framebuffer-draw-buffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glFramebufferDrawBufferEXT_t(a0 , a1);")))
  (begin
    (define gl:framebuffer-draw-buffers-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLenum") a2))
        "_ALLEGRO_glFramebufferDrawBuffersEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:framebuffer-read-buffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glFramebufferReadBufferEXT_t(a0 , a1);")))
  (begin
    (define gl:get-framebuffer-parameteriv-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetFramebufferParameterivEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:named-renderbuffer-storage-multisample-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ("GLenum" a2)
         ("GLsizei" a3)
         ("GLsizei" a4))
        "_ALLEGRO_glNamedRenderbufferStorageMultisampleEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-renderbuffer-storage-multisample-coverage-ext
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLsizei" a1)
         ("GLsizei" a2)
         ("GLenum" a3)
         ("GLsizei" a4)
         ("GLsizei" a5))
        "_ALLEGRO_glNamedRenderbufferStorageMultisampleCoverageEXT_t(a0 , a1 , a2 , a3 , a4 , a5);")))
  (begin
    (define gl:named-framebuffer-texture-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3))
        "_ALLEGRO_glNamedFramebufferTextureEXT_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:named-framebuffer-texture-layer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLint" a4))
        "_ALLEGRO_glNamedFramebufferTextureLayerEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:named-framebuffer-texture-face-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2) ("GLint" a3) ("GLenum" a4))
        "_ALLEGRO_glNamedFramebufferTextureFaceEXT_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:texture-renderbuffer-ext
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glTextureRenderbufferEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:multi-tex-renderbuffer-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ("GLuint" a2))
        "_ALLEGRO_glMultiTexRenderbufferEXT_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-multisamplefv-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer "GLfloat") a2))
        "_ALLEGRO_glGetMultisamplefvNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:sample-mask-indexed-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLbitfield" a1))
        "_ALLEGRO_glSampleMaskIndexedNV_t(a0 , a1);")))
  (begin
    (define gl:tex-renderbuffer-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glTexRenderbufferNV_t(a0 , a1);")))
  (begin
    (define gl:bind-transform-feedback-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glBindTransformFeedbackNV_t(a0 , a1);")))
  (begin
    (define gl:delete-transform-feedbacks-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeleteTransformFeedbacksNV_t(a0 , a1);")))
  (begin
    (define gl:gen-transform-feedbacks-nv
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenTransformFeedbacksNV_t(a0 , a1);")))
  (begin
    (define gl:is-transform-feedback-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsTransformFeedbackNV_t(a0));")))
  (begin
    (define gl:pause-transform-feedback-nv
      (foreign-lambda* void () "_ALLEGRO_glPauseTransformFeedbackNV_t();")))
  (begin
    (define gl:resume-transform-feedback-nv
      (foreign-lambda* void () "_ALLEGRO_glResumeTransformFeedbackNV_t();")))
  (begin
    (define gl:draw-transform-feedback-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glDrawTransformFeedbackNV_t(a0 , a1);")))
  (begin
    (define gl:get-perf-monitor-groups-amd
      (foreign-lambda*
        void
        (((c-pointer "GLint") a0) ("GLsizei" a1) ((c-pointer "GLuint") a2))
        "_ALLEGRO_glGetPerfMonitorGroupsAMD_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-perf-monitor-counters-amd
      (foreign-lambda*
        void
        (("GLuint" a0)
         ((c-pointer "GLint") a1)
         ((c-pointer "GLint") a2)
         ("GLsizei" a3)
         ((c-pointer "GLuint") a4))
        "_ALLEGRO_glGetPerfMonitorCountersAMD_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-perf-monitor-group-string-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLsizei" a1) ((c-pointer "GLsizei") a2) (c-string a3))
        "_ALLEGRO_glGetPerfMonitorGroupStringAMD_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-perf-monitor-counter-string-amd
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLsizei" a2)
         ((c-pointer "GLsizei") a3)
         (c-string a4))
        "_ALLEGRO_glGetPerfMonitorCounterStringAMD_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:get-perf-monitor-counter-info-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer void) a3))
        "_ALLEGRO_glGetPerfMonitorCounterInfoAMD_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:gen-perf-monitors-amd
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glGenPerfMonitorsAMD_t(a0 , a1);")))
  (begin
    (define gl:delete-perf-monitors-amd
      (foreign-lambda*
        void
        (("GLsizei" a0) ((c-pointer "GLuint") a1))
        "_ALLEGRO_glDeletePerfMonitorsAMD_t(a0 , a1);")))
  (begin
    (define gl:select-perf-monitor-counters-amd
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLboolean" a1)
         ("GLuint" a2)
         ("GLint" a3)
         ((c-pointer "GLuint") a4))
        "_ALLEGRO_glSelectPerfMonitorCountersAMD_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:begin-perf-monitor-amd
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBeginPerfMonitorAMD_t(a0);")))
  (begin
    (define gl:end-perf-monitor-amd
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glEndPerfMonitorAMD_t(a0);")))
  (begin
    (define gl:get-perf-monitor-counter-data-amd
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLenum" a1)
         ("GLsizei" a2)
         ((c-pointer "GLuint") a3)
         ((c-pointer "GLint") a4))
        "_ALLEGRO_glGetPerfMonitorCounterDataAMD_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:tessellation-factor-amd
      (foreign-lambda*
        void
        (("GLfloat" a0))
        "_ALLEGRO_glTessellationFactorAMD_t(a0);")))
  (begin
    (define gl:tessellation-mode-amd
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glTessellationModeAMD_t(a0);")))
  (begin
    (define gl:provoking-vertex-ext
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glProvokingVertexEXT_t(a0);")))
  (begin
    (define gl:blend-func-indexed-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2))
        "_ALLEGRO_glBlendFuncIndexedAMD_t(a0 , a1 , a2);")))
  (begin
    (define gl:blend-func-separate-indexed-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2) ("GLenum" a3) ("GLenum" a4))
        "_ALLEGRO_glBlendFuncSeparateIndexedAMD_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:blend-equation-indexed-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glBlendEquationIndexedAMD_t(a0 , a1);")))
  (begin
    (define gl:blend-equation-separate-indexed-amd
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ("GLenum" a2))
        "_ALLEGRO_glBlendEquationSeparateIndexedAMD_t(a0 , a1 , a2);")))
  (begin
    (define gl:texture-range-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1) ((c-pointer "GLvoid") a2))
        "_ALLEGRO_glTextureRangeAPPLE_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-tex-parameter-pointerv-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer (c-pointer "GLvoid")) a2))
        "_ALLEGRO_glGetTexParameterPointervAPPLE_t(a0 , a1 , a2);")))
  (begin
    (define gl:enable-vertex-attrib-apple
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glEnableVertexAttribAPPLE_t(a0 , a1);")))
  (begin
    (define gl:disable-vertex-attrib-apple
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glDisableVertexAttribAPPLE_t(a0 , a1);")))
  (begin
    (define gl:is-vertex-attrib-enabled-apple
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0) ("GLenum" a1))
        "return(_ALLEGRO_glIsVertexAttribEnabledAPPLE_t(a0 , a1));")))
  (begin
    (define gl:map-vertex-attrib1d-apple
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLint" a4)
         ("GLint" a5)
         ((c-pointer "GLdouble") a6))
        "_ALLEGRO_glMapVertexAttrib1dAPPLE_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:map-vertex-attrib1f-apple
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLint" a4)
         ("GLint" a5)
         ((c-pointer "GLfloat") a6))
        "_ALLEGRO_glMapVertexAttrib1fAPPLE_t(a0 , a1 , a2 , a3 , a4 , a5 , a6);")))
  (begin
    (define gl:map-vertex-attrib2d-apple
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLdouble" a2)
         ("GLdouble" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLdouble" a6)
         ("GLdouble" a7)
         ("GLint" a8)
         ("GLint" a9)
         ((c-pointer "GLdouble") a10))
        "_ALLEGRO_glMapVertexAttrib2dAPPLE_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:map-vertex-attrib2f-apple
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLuint" a1)
         ("GLfloat" a2)
         ("GLfloat" a3)
         ("GLint" a4)
         ("GLint" a5)
         ("GLfloat" a6)
         ("GLfloat" a7)
         ("GLint" a8)
         ("GLint" a9)
         ((c-pointer "GLfloat") a10))
        "_ALLEGRO_glMapVertexAttrib2fAPPLE_t(a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10);")))
  (begin
    (define gl:object-purgeable-apple
      (foreign-lambda*
        "GLenum"
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2))
        "return(_ALLEGRO_glObjectPurgeableAPPLE_t(a0 , a1 , a2));")))
  (begin
    (define gl:object-unpurgeable-apple
      (foreign-lambda*
        "GLenum"
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2))
        "return(_ALLEGRO_glObjectUnpurgeableAPPLE_t(a0 , a1 , a2));")))
  (begin
    (define gl:get-object-parameteriv-apple
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetObjectParameterivAPPLE_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:begin-video-capture-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glBeginVideoCaptureNV_t(a0);")))
  (begin
    (define gl:bind-video-capture-stream-buffer-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ("ptrdiff_t" a3))
        "_ALLEGRO_glBindVideoCaptureStreamBufferNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:bind-video-capture-stream-texture-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ("GLenum" a3) ("GLuint" a4))
        "_ALLEGRO_glBindVideoCaptureStreamTextureNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:end-video-capture-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glEndVideoCaptureNV_t(a0);")))
  (begin
    (define gl:get-video-captureiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer "GLint") a2))
        "_ALLEGRO_glGetVideoCaptureivNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-video-capture-streamiv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glGetVideoCaptureStreamivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-video-capture-streamfv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glGetVideoCaptureStreamfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-video-capture-streamdv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glGetVideoCaptureStreamdvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-nv
      (foreign-lambda*
        "GLenum"
        (("GLuint" a0)
         ((c-pointer "GLuint") a1)
         ((c-pointer unsigned-integer64) a2))
        "return(_ALLEGRO_glVideoCaptureNV_t(a0 , a1 , a2));")))
  (begin
    (define gl:video-capture-stream-parameteriv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLint") a3))
        "_ALLEGRO_glVideoCaptureStreamParameterivNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-stream-parameterfv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLfloat") a3))
        "_ALLEGRO_glVideoCaptureStreamParameterfvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:video-capture-stream-parameterdv-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLuint" a1) ("GLenum" a2) ((c-pointer "GLdouble") a3))
        "_ALLEGRO_glVideoCaptureStreamParameterdvNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:use-shader-program-ext
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1))
        "_ALLEGRO_glUseShaderProgramEXT_t(a0 , a1);")))
  (begin
    (define gl:active-program-ext
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glActiveProgramEXT_t(a0);")))
  (begin
    (define gl:create-shader-program-ext
      (foreign-lambda*
        "GLuint"
        (("GLenum" a0) (c-string a1))
        "return(_ALLEGRO_glCreateShaderProgramEXT_t(a0 , a1));")))
  (begin
    (define gl:make-buffer-resident-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1))
        "_ALLEGRO_glMakeBufferResidentNV_t(a0 , a1);")))
  (begin
    (define gl:make-buffer-non-resident-nv
      (foreign-lambda*
        void
        (("GLenum" a0))
        "_ALLEGRO_glMakeBufferNonResidentNV_t(a0);")))
  (begin
    (define gl:is-buffer-resident-nv
      (foreign-lambda*
        "GLboolean"
        (("GLenum" a0))
        "return(_ALLEGRO_glIsBufferResidentNV_t(a0));")))
  (begin
    (define gl:make-named-buffer-resident-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1))
        "_ALLEGRO_glMakeNamedBufferResidentNV_t(a0 , a1);")))
  (begin
    (define gl:make-named-buffer-non-resident-nv
      (foreign-lambda*
        void
        (("GLuint" a0))
        "_ALLEGRO_glMakeNamedBufferNonResidentNV_t(a0);")))
  (begin
    (define gl:is-named-buffer-resident-nv
      (foreign-lambda*
        "GLboolean"
        (("GLuint" a0))
        "return(_ALLEGRO_glIsNamedBufferResidentNV_t(a0));")))
  (begin
    (define gl:get-buffer-parameterui64v-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLenum" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetBufferParameterui64vNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-named-buffer-parameterui64v-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLenum" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetNamedBufferParameterui64vNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-integerui64v-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ((c-pointer unsigned-integer64) a1))
        "_ALLEGRO_glGetIntegerui64vNV_t(a0 , a1);")))
  (begin
    (define gl:uniformui64nv
      (foreign-lambda*
        void
        (("GLint" a0) (unsigned-integer64 a1))
        "_ALLEGRO_glUniformui64NV_t(a0 , a1);")))
  (begin
    (define gl:uniformui64v-nv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLsizei" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glUniformui64vNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:get-uniformui64v-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetUniformui64vNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniformui64nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) (unsigned-integer64 a2))
        "_ALLEGRO_glProgramUniformui64NV_t(a0 , a1 , a2);")))
  (begin
    (define gl:program-uniformui64v-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLsizei" a2)
         ((c-pointer unsigned-integer64) a3))
        "_ALLEGRO_glProgramUniformui64vNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:buffer-address-range-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) (unsigned-integer64 a2) ("ptrdiff_t" a3))
        "_ALLEGRO_glBufferAddressRangeNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:vertex-format-nv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2))
        "_ALLEGRO_glVertexFormatNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:normal-format-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1))
        "_ALLEGRO_glNormalFormatNV_t(a0 , a1);")))
  (begin
    (define gl:color-format-nv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2))
        "_ALLEGRO_glColorFormatNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:index-format-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1))
        "_ALLEGRO_glIndexFormatNV_t(a0 , a1);")))
  (begin
    (define gl:tex-coord-format-nv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2))
        "_ALLEGRO_glTexCoordFormatNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:edge-flag-format-nv
      (foreign-lambda*
        void
        (("GLsizei" a0))
        "_ALLEGRO_glEdgeFlagFormatNV_t(a0);")))
  (begin
    (define gl:secondary-color-format-nv
      (foreign-lambda*
        void
        (("GLint" a0) ("GLenum" a1) ("GLsizei" a2))
        "_ALLEGRO_glSecondaryColorFormatNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:fog-coord-format-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLsizei" a1))
        "_ALLEGRO_glFogCoordFormatNV_t(a0 , a1);")))
  (begin
    (define gl:vertex-attrib-format-nv
      (foreign-lambda*
        void
        (("GLuint" a0)
         ("GLint" a1)
         ("GLenum" a2)
         ("GLboolean" a3)
         ("GLsizei" a4))
        "_ALLEGRO_glVertexAttribFormatNV_t(a0 , a1 , a2 , a3 , a4);")))
  (begin
    (define gl:vertex-attrib-iformat-nv
      (foreign-lambda*
        void
        (("GLuint" a0) ("GLint" a1) ("GLenum" a2) ("GLsizei" a3))
        "_ALLEGRO_glVertexAttribIFormatNV_t(a0 , a1 , a2 , a3);")))
  (begin
    (define gl:get-integerui64i-v-nv
      (foreign-lambda*
        void
        (("GLenum" a0) ("GLuint" a1) ((c-pointer unsigned-integer64) a2))
        "_ALLEGRO_glGetIntegerui64i_vNV_t(a0 , a1 , a2);")))
  (begin
    (define gl:texture-barrier-nv
      (foreign-lambda* void () "_ALLEGRO_glTextureBarrierNV_t();")))
  (define gl-ext-list:arb:imaging
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_imaging);"))
  (define gl-ext-list:arb:multitexture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_multitexture);"))
  (define gl-ext-list:arb:transpose-matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transpose_matrix);"))
  (define gl-ext-list:arb:multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_multisample);"))
  (define gl-ext-list:arb:texture-env-add
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_add);"))
  (define gl-ext-list:arb:texture-cube-map
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_cube_map);"))
  (define gl-ext-list:arb:texture-compression
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression);"))
  (define gl-ext-list:arb:texture-border-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_border_clamp);"))
  (define gl-ext-list:arb:point-parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_point_parameters);"))
  (define gl-ext-list:arb:vertex-blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_blend);"))
  (define gl-ext-list:arb:texture-env-combine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_combine);"))
  (define gl-ext-list:arb:texture-env-crossbar
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_crossbar);"))
  (define gl-ext-list:arb:texture-env-dot3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_env_dot3);"))
  (define gl-ext-list:arb:texture-mirrored-repeat
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_mirrored_repeat);"))
  (define gl-ext-list:arb:depth-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_texture);"))
  (define gl-ext-list:arb:shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shadow);"))
  (define gl-ext-list:arb:shadow-ambient
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shadow_ambient);"))
  (define gl-ext-list:arb:window-pos
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_window_pos);"))
  (define gl-ext-list:arb:vertex-program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_program);"))
  (define gl-ext-list:arb:fragment-program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_program);"))
  (define gl-ext-list:arb:vertex-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_buffer_object);"))
  (define gl-ext-list:arb:occlusion-query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_occlusion_query);"))
  (define gl-ext-list:arb:shader-objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_objects);"))
  (define gl-ext-list:arb:vertex-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_shader);"))
  (define gl-ext-list:arb:fragment-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_shader);"))
  (define gl-ext-list:arb:shading-language-100
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shading_language_100);"))
  (define gl-ext-list:arb:texture-non-power-of-two
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_non_power_of_two);"))
  (define gl-ext-list:arb:point-sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_point_sprite);"))
  (define gl-ext-list:arb:fragment-program-shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_program_shadow);"))
  (define gl-ext-list:arb:draw-buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_buffers);"))
  (define gl-ext-list:arb:texture-rectangle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rectangle);"))
  (define gl-ext-list:arb:color-buffer-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_color_buffer_float);"))
  (define gl-ext-list:arb:half-float-pixel
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_half_float_pixel);"))
  (define gl-ext-list:arb:texture-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_float);"))
  (define gl-ext-list:arb:pixel-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_pixel_buffer_object);"))
  (define gl-ext-list:arb:instanced-arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_instanced_arrays);"))
  (define gl-ext-list:arb:draw-instanced
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_instanced);"))
  (define gl-ext-list:arb:geometry-shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_geometry_shader4);"))
  (define gl-ext-list:arb:texture-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_buffer_object);"))
  (define gl-ext-list:arb:depth-buffer-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_buffer_float);"))
  (define gl-ext-list:arb:framebuffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_framebuffer_object);"))
  (define gl-ext-list:arb:framebuffer-s-rgb
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_framebuffer_sRGB);"))
  (define gl-ext-list:arb:half-float-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_half_float_vertex);"))
  (define gl-ext-list:arb:map-buffer-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_map_buffer_range);"))
  (define gl-ext-list:arb:texture-compression-rgtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression_rgtc);"))
  (define gl-ext-list:arb:texture-rg
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rg);"))
  (define gl-ext-list:arb:vertex-array-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_array_object);"))
  (define gl-ext-list:arb:copy-buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_copy_buffer);"))
  (define gl-ext-list:arb:compatibility
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_compatibility);"))
  (define gl-ext-list:arb:uniform-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_uniform_buffer_object);"))
  (define gl-ext-list:arb:shader-texture-lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_texture_lod);"))
  (define gl-ext-list:arb:depth-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_depth_clamp);"))
  (define gl-ext-list:arb:draw-elements-base-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_elements_base_vertex);"))
  (define gl-ext-list:arb:fragment-coord-conventions
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_fragment_coord_conventions);"))
  (define gl-ext-list:arb:provoking-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_provoking_vertex);"))
  (define gl-ext-list:arb:seamless-cube-map
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_seamless_cube_map);"))
  (define gl-ext-list:arb:sync
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sync);"))
  (define gl-ext-list:arb:texture-multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_multisample);"))
  (define gl-ext-list:arb:vertex-array-bgra
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_array_bgra);"))
  (define gl-ext-list:arb:draw-buffers-blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_buffers_blend);"))
  (define gl-ext-list:arb:sample-shading
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sample_shading);"))
  (define gl-ext-list:arb:texture-cube-map-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_cube_map_array);"))
  (define gl-ext-list:arb:texture-gather
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_gather);"))
  (define gl-ext-list:arb:texture-query-lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_query_lod);"))
  (define gl-ext-list:arb:shading-language-include
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shading_language_include);"))
  (define gl-ext-list:arb:texture-compression-bptc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_compression_bptc);"))
  (define gl-ext-list:arb:blend-func-extended
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_blend_func_extended);"))
  (define gl-ext-list:arb:explicit-attrib-location
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_explicit_attrib_location);"))
  (define gl-ext-list:arb:occlusion-query2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_occlusion_query2);"))
  (define gl-ext-list:arb:sampler-objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_sampler_objects);"))
  (define gl-ext-list:arb:shader-bit-encoding
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_bit_encoding);"))
  (define gl-ext-list:arb:texture-rgb10-a2ui
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_rgb10_a2ui);"))
  (define gl-ext-list:arb:texture-swizzle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_swizzle);"))
  (define gl-ext-list:arb:timer-query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_timer_query);"))
  (define gl-ext-list:arb:vertex-type-2-10-10-10-rev
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev);"))
  (define gl-ext-list:arb:draw-indirect
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_draw_indirect);"))
  (define gl-ext-list:arb:gpu-shader5
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_gpu_shader5);"))
  (define gl-ext-list:arb:gpu-shader-fp64
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_gpu_shader_fp64);"))
  (define gl-ext-list:arb:shader-subroutine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_shader_subroutine);"))
  (define gl-ext-list:arb:tessellation-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_tessellation_shader);"))
  (define gl-ext-list:arb:texture-buffer-object-rgb32
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_texture_buffer_object_rgb32);"))
  (define gl-ext-list:arb:transform-feedback2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transform_feedback2);"))
  (define gl-ext-list:arb:transform-feedback3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ARB_transform_feedback3);"))
  (define gl-ext-list:ext:abgr
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_abgr);"))
  (define gl-ext-list:ext:blend-color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_color);"))
  (define gl-ext-list:ext:polygon-offset
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_polygon_offset);"))
  (define gl-ext-list:ext:texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture);"))
  (define gl-ext-list:ext:texture3d
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture3D);"))
  (define gl-ext-list:sgis:texture-filter4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_filter4);"))
  (define gl-ext-list:ext:subtexture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_subtexture);"))
  (define gl-ext-list:ext:copy-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_copy_texture);"))
  (define gl-ext-list:ext:histogram
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_histogram);"))
  (define gl-ext-list:ext:convolution
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_convolution);"))
  (define gl-ext-list:sgi:color-matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_color_matrix);"))
  (define gl-ext-list:sgi:color-table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_color_table);"))
  (define gl-ext-list:sgis:pixel-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_pixel_texture);"))
  (define gl-ext-list:sgix:pixel-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_pixel_texture);"))
  (define gl-ext-list:sgis:texture4d
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture4D);"))
  (define gl-ext-list:sgi:texture-color-table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGI_texture_color_table);"))
  (define gl-ext-list:ext:cmyka
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_cmyka);"))
  (define gl-ext-list:ext:texture-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_object);"))
  (define gl-ext-list:sgis:detail-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_detail_texture);"))
  (define gl-ext-list:sgis:sharpen-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_sharpen_texture);"))
  (define gl-ext-list:ext:packed-pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_pixels);"))
  (define gl-ext-list:sgis:texture-lod
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_lod);"))
  (define gl-ext-list:sgis:multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_multisample);"))
  (define gl-ext-list:ext:rescale-normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_rescale_normal);"))
  (define gl-ext-list:ext:vertex-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_array);"))
  (define gl-ext-list:ext:misc-attribute
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_misc_attribute);"))
  (define gl-ext-list:sgis:generate-mipmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_generate_mipmap);"))
  (define gl-ext-list:sgix:clipmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_clipmap);"))
  (define gl-ext-list:sgix:shadow
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_shadow);"))
  (define gl-ext-list:sgis:texture-edge-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_edge_clamp);"))
  (define gl-ext-list:sgis:texture-border-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_border_clamp);"))
  (define gl-ext-list:ext:blend-minmax
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_minmax);"))
  (define gl-ext-list:ext:blend-subtract
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_subtract);"))
  (define gl-ext-list:ext:blend-logic-op
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_logic_op);"))
  (define gl-ext-list:sgix:interlace
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_interlace);"))
  (define gl-ext-list:sgis:texture-select
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_select);"))
  (define gl-ext-list:sgix:sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_sprite);"))
  (define gl-ext-list:sgix:texture-multi-buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_multi_buffer);"))
  (define gl-ext-list:ext:point-parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_point_parameters);"))
  (define gl-ext-list:sgix:instruments
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_instruments);"))
  (define gl-ext-list:sgix:texture-scale-bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_scale_bias);"))
  (define gl-ext-list:sgix:framezoom
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_framezoom);"))
  (define gl-ext-list:sgix:tag-sample-buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_tag_sample_buffer);"))
  (define gl-ext-list:sgix:reference-plane
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_reference_plane);"))
  (define gl-ext-list:sgix:flush-raster
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_flush_raster);"))
  (define gl-ext-list:sgix:depth-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_depth_texture);"))
  (define gl-ext-list:sgis:fog-function
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_fog_function);"))
  (define gl-ext-list:sgix:fog-offset
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_fog_offset);"))
  (define gl-ext-list:hp:image-transform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_image_transform);"))
  (define gl-ext-list:hp:convolution-border-modes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_convolution_border_modes);"))
  (define gl-ext-list:sgix:texture-add-env
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_add_env);"))
  (define gl-ext-list:ext:color-subtable
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_color_subtable);"))
  (define gl-ext-list:pgi:vertex-hints
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_PGI_vertex_hints);"))
  (define gl-ext-list:pgi:misc-hints
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_PGI_misc_hints);"))
  (define gl-ext-list:ext:paletted-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_paletted_texture);"))
  (define gl-ext-list:ext:clip-volume-hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_clip_volume_hint);"))
  (define gl-ext-list:sgix:list-priority
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_list_priority);"))
  (define gl-ext-list:sgix:ir-instrument1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_ir_instrument1);"))
  (define gl-ext-list:sgix:texture-lod-bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_lod_bias);"))
  (define gl-ext-list:sgix:shadow-ambient
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_shadow_ambient);"))
  (define gl-ext-list:ext:index-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_texture);"))
  (define gl-ext-list:ext:index-material
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_material);"))
  (define gl-ext-list:ext:index-func
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_func);"))
  (define gl-ext-list:ext:index-array-formats
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_index_array_formats);"))
  (define gl-ext-list:ext:compiled-vertex-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_compiled_vertex_array);"))
  (define gl-ext-list:ext:cull-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_cull_vertex);"))
  (define gl-ext-list:sgix:ycrcb
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_ycrcb);"))
  (define gl-ext-list:ext:fragment-lighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_fragment_lighting);"))
  (define gl-ext-list:ibm:rasterpos-clip
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_rasterpos_clip);"))
  (define gl-ext-list:hp:texture-lighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_texture_lighting);"))
  (define gl-ext-list:ext:draw-range-elements
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_range_elements);"))
  (define gl-ext-list:win:phong-shading
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_WIN_phong_shading);"))
  (define gl-ext-list:win:specular-fog
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_WIN_specular_fog);"))
  (define gl-ext-list:ext:light-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_light_texture);"))
  (define gl-ext-list:sgix:blend-alpha-minmax
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_blend_alpha_minmax);"))
  (define gl-ext-list:ext:scene-marker
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_scene_marker);"))
  (define gl-ext-list:sgix:pixel-texture-bits
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_pixel_texture_bits);"))
  (define gl-ext-list:ext:bgra
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_bgra);"))
  (define gl-ext-list:sgix:async
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async);"))
  (define gl-ext-list:sgix:async-pixel
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async_pixel);"))
  (define gl-ext-list:sgix:async-histogram
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_async_histogram);"))
  (define gl-ext-list:intel:texture-scissor
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INTEL_texture_scissor);"))
  (define gl-ext-list:intel:parallel-arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INTEL_parallel_arrays);"))
  (define gl-ext-list:hp:occlusion-test
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_HP_occlusion_test);"))
  (define gl-ext-list:ext:pixel-transform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_transform);"))
  (define gl-ext-list:ext:pixel-transform-color-table
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_transform_color_table);"))
  (define gl-ext-list:ext:shared-texture-palette
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_shared_texture_palette);"))
  (define gl-ext-list:ext:separate-specular-color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_separate_specular_color);"))
  (define gl-ext-list:ext:secondary-color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_secondary_color);"))
  (define gl-ext-list:ext:texture-env
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env);"))
  (define gl-ext-list:ext:texture-perturb-normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_perturb_normal);"))
  (define gl-ext-list:ext:multi-draw-arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_multi_draw_arrays);"))
  (define gl-ext-list:ext:fog-coord
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_fog_coord);"))
  (define gl-ext-list:allegro-gl-rend-screen-coordinates
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_REND_screen_coordinates);"))
  (define gl-ext-list:ext:coordinate-frame
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_coordinate_frame);"))
  (define gl-ext-list:ext:texture-env-combine
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_combine);"))
  (define gl-ext-list:apple:specular-vector
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_specular_vector);"))
  (define gl-ext-list:apple:transform-hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_transform_hint);"))
  (define gl-ext-list:allegro-gl-sunx-constant-data
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUNX_constant_data);"))
  (define gl-ext-list:sun:global-alpha
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_global_alpha);"))
  (define gl-ext-list:sun:triangle-list
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_triangle_list);"))
  (define gl-ext-list:sun:vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_vertex);"))
  (define gl-ext-list:ext:blend-func-separate
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_func_separate);"))
  (define gl-ext-list:allegro-gl-ingr-color-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INGR_color_clamp);"))
  (define gl-ext-list:allegro-gl-ingr-interlace-read
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_INGR_interlace_read);"))
  (define gl-ext-list:ext:stencil-wrap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_wrap);"))
  (define gl-ext-list:ext:422-pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_422_pixels);"))
  (define gl-ext-list:nv:texgen-reflection
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texgen_reflection);"))
  (define gl-ext-list:sgix:texture-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_range);"))
  (define gl-ext-list:sun:convolution-border-modes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_convolution_border_modes);"))
  (define gl-ext-list:ext:texture-env-add
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_add);"))
  (define gl-ext-list:ext:texture-lod-bias
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_lod_bias);"))
  (define gl-ext-list:ext:texture-filter-anisotropic
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_filter_anisotropic);"))
  (define gl-ext-list:ext:vertex-weighting
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_weighting);"))
  (define gl-ext-list:nv:light-max-exponent
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_light_max_exponent);"))
  (define gl-ext-list:nv:vertex-array-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_array_range);"))
  (define gl-ext-list:nv:register-combiners
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_register_combiners);"))
  (define gl-ext-list:nv:fog-distance
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fog_distance);"))
  (define gl-ext-list:nv:texgen-emboss
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texgen_emboss);"))
  (define gl-ext-list:nv:blend-square
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_blend_square);"))
  (define gl-ext-list:nv:texture-env-combine4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_env_combine4);"))
  (define gl-ext-list:allegro-gl-mesa-resize-buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_resize_buffers);"))
  (define gl-ext-list:allegro-gl-mesa-window-pos
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_window_pos);"))
  (define gl-ext-list:ext:texture-compression-s3tc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_s3tc);"))
  (define gl-ext-list:ibm:cull-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_cull_vertex);"))
  (define gl-ext-list:ibm:multimode-draw-arrays
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_multimode_draw_arrays);"))
  (define gl-ext-list:ibm:vertex-array-lists
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_vertex_array_lists);"))
  (define gl-ext-list:allegro-gl-3dfx-texture-compression-fxt1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_texture_compression_FXT1);"))
  (define gl-ext-list:allegro-gl-3dfx-multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_multisample);"))
  (define gl-ext-list:allegro-gl-3dfx-tbuffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_3DFX_tbuffer);"))
  (define gl-ext-list:sgix:vertex-preclip
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_vertex_preclip);"))
  (define gl-ext-list:sgix:resample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_resample);"))
  (define gl-ext-list:sgis:texture-color-mask
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIS_texture_color_mask);"))
  (define gl-ext-list:ext:texture-env-dot3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_env_dot3);"))
  (define gl-ext-list:allegro-gl-ati-texture-mirror-once
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_mirror_once);"))
  (define gl-ext-list:nv:fence
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fence);"))
  (define gl-ext-list:ibm:static-data
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_static_data);"))
  (define gl-ext-list:ibm:texture-mirrored-repeat
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_IBM_texture_mirrored_repeat);"))
  (define gl-ext-list:nv:evaluators
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_evaluators);"))
  (define gl-ext-list:nv:packed-depth-stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_packed_depth_stencil);"))
  (define gl-ext-list:nv:register-combiners2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_register_combiners2);"))
  (define gl-ext-list:nv:texture-compression-vtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_compression_vtc);"))
  (define gl-ext-list:nv:texture-rectangle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_rectangle);"))
  (define gl-ext-list:nv:texture-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader);"))
  (define gl-ext-list:nv:texture-shader2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader2);"))
  (define gl-ext-list:nv:vertex-array-range2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_array_range2);"))
  (define gl-ext-list:nv:vertex-program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program);"))
  (define gl-ext-list:sgix:texture-coordinate-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SGIX_texture_coordinate_clamp);"))
  (define gl-ext-list:allegro-gl-oml-interlace
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_interlace);"))
  (define gl-ext-list:allegro-gl-oml-subsample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_subsample);"))
  (define gl-ext-list:allegro-gl-oml-resample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OML_resample);"))
  (define gl-ext-list:nv:copy-depth-to-color
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_copy_depth_to_color);"))
  (define gl-ext-list:allegro-gl-ati-envmap-bumpmap
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_envmap_bumpmap);"))
  (define gl-ext-list:allegro-gl-ati-fragment-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_fragment_shader);"))
  (define gl-ext-list:allegro-gl-ati-pn-triangles
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_pn_triangles);"))
  (define gl-ext-list:allegro-gl-ati-vertex-array-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_array_object);"))
  (define gl-ext-list:ext:vertex-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_vertex_shader);"))
  (define gl-ext-list:allegro-gl-ati-vertex-streams
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_streams);"))
  (define gl-ext-list:allegro-gl-ati-element-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_element_array);"))
  (define gl-ext-list:sun:mesh-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_mesh_array);"))
  (define gl-ext-list:sun:slice-accum
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_SUN_slice_accum);"))
  (define gl-ext-list:nv:multisample-filter-hint
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_multisample_filter_hint);"))
  (define gl-ext-list:nv:depth-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_depth_clamp);"))
  (define gl-ext-list:nv:occlusion-query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_occlusion_query);"))
  (define gl-ext-list:nv:point-sprite
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_point_sprite);"))
  (define gl-ext-list:nv:texture-shader3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_shader3);"))
  (define gl-ext-list:nv:vertex-program1-1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program1_1);"))
  (define gl-ext-list:ext:shadow-funcs
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_shadow_funcs);"))
  (define gl-ext-list:ext:stencil-two-side
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_two_side);"))
  (define gl-ext-list:allegro-gl-ati-text-fragment-shader
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_text_fragment_shader);"))
  (define gl-ext-list:apple:client-storage
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_client_storage);"))
  (define gl-ext-list:apple:element-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_element_array);"))
  (define gl-ext-list:apple:fence
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_fence);"))
  (define gl-ext-list:apple:vertex-array-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_array_object);"))
  (define gl-ext-list:apple:vertex-array-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_array_range);"))
  (define gl-ext-list:apple:ycbcr-422
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_ycbcr_422);"))
  (define gl-ext-list:allegro-gl-s3-s3tc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_S3_s3tc);"))
  (define gl-ext-list:allegro-gl-ati-draw-buffers
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_draw_buffers);"))
  (define gl-ext-list:allegro-gl-ati-texture-env-combine3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_env_combine3);"))
  (define gl-ext-list:allegro-gl-ati-texture-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_texture_float);"))
  (define gl-ext-list:nv:float-buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_float_buffer);"))
  (define gl-ext-list:nv:fragment-program
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program);"))
  (define gl-ext-list:nv:half-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_half_float);"))
  (define gl-ext-list:nv:pixel-data-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_pixel_data_range);"))
  (define gl-ext-list:nv:primitive-restart
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_primitive_restart);"))
  (define gl-ext-list:nv:texture-expand-normal
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_expand_normal);"))
  (define gl-ext-list:nv:vertex-program2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program2);"))
  (define gl-ext-list:allegro-gl-ati-map-object-buffer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_map_object_buffer);"))
  (define gl-ext-list:allegro-gl-ati-separate-stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_separate_stencil);"))
  (define gl-ext-list:allegro-gl-ati-vertex-attrib-array-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_vertex_attrib_array_object);"))
  (define gl-ext-list:allegro-gl-oes-byte-coordinates
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_byte_coordinates);"))
  (define gl-ext-list:allegro-gl-oes-fixed-point
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_fixed_point);"))
  (define gl-ext-list:allegro-gl-oes-single-precision
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_single_precision);"))
  (define gl-ext-list:allegro-gl-oes-compressed-paletted-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_compressed_paletted_texture);"))
  (define gl-ext-list:allegro-gl-oes-read-format
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_read_format);"))
  (define gl-ext-list:allegro-gl-oes-query-matrix
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_query_matrix);"))
  (define gl-ext-list:allegro-gl-oes-framebuffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_framebuffer_object);"))
  (define gl-ext-list:allegro-gl-oes-texture-npot
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_OES_texture_npot);"))
  (define gl-ext-list:ext:depth-bounds-test
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_depth_bounds_test);"))
  (define gl-ext-list:ext:texture-mirror-clamp
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_mirror_clamp);"))
  (define gl-ext-list:ext:blend-equation-separate
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_blend_equation_separate);"))
  (define gl-ext-list:allegro-gl-mesa-pack-invert
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_pack_invert);"))
  (define gl-ext-list:allegro-gl-mesa-ycbcr-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESA_ycbcr_texture);"))
  (define gl-ext-list:ext:pixel-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_pixel_buffer_object);"))
  (define gl-ext-list:nv:fragment-program-option
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program_option);"))
  (define gl-ext-list:nv:fragment-program2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program2);"))
  (define gl-ext-list:nv:vertex-program2-option
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program2_option);"))
  (define gl-ext-list:nv:vertex-program3
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program3);"))
  (define gl-ext-list:ext:texture-compression-dxt1
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_dxt1);"))
  (define gl-ext-list:ext:framebuffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_object);"))
  (define gl-ext-list:allegro-gl-gremedy-string-marker
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_GREMEDY_string_marker);"))
  (define gl-ext-list:ext:packed-depth-stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_depth_stencil);"))
  (define gl-ext-list:ext:stencil-clear-tag
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_stencil_clear_tag);"))
  (define gl-ext-list:ext:texture-s-rgb
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_sRGB);"))
  (define gl-ext-list:ext:framebuffer-blit
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_blit);"))
  (define gl-ext-list:ext:framebuffer-multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_multisample);"))
  (define gl-ext-list:allegro-gl-mesax-texture-stack
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_MESAX_texture_stack);"))
  (define gl-ext-list:ext:timer-query
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_timer_query);"))
  (define gl-ext-list:ext:gpu-program-parameters
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_gpu_program_parameters);"))
  (define gl-ext-list:apple:flush-buffer-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_flush_buffer_range);"))
  (define gl-ext-list:ext:bindable-uniform
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_bindable_uniform);"))
  (define gl-ext-list:ext:draw-buffers2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_buffers2);"))
  (define gl-ext-list:ext:draw-instanced
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_draw_instanced);"))
  (define gl-ext-list:ext:framebuffer-s-rgb
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_framebuffer_sRGB);"))
  (define gl-ext-list:ext:geometry-shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_geometry_shader4);"))
  (define gl-ext-list:ext:gpu-shader4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_gpu_shader4);"))
  (define gl-ext-list:ext:packed-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_packed_float);"))
  (define gl-ext-list:ext:texture-array
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_array);"))
  (define gl-ext-list:ext:texture-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_buffer_object);"))
  (define gl-ext-list:ext:texture-compression-latc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_latc);"))
  (define gl-ext-list:ext:texture-compression-rgtc
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_compression_rgtc);"))
  (define gl-ext-list:ext:texture-integer
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_integer);"))
  (define gl-ext-list:ext:texture-shared-exponent
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_shared_exponent);"))
  (define gl-ext-list:nv:depth-buffer-float
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_depth_buffer_float);"))
  (define gl-ext-list:nv:fragment-program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_fragment_program4);"))
  (define gl-ext-list:nv:framebuffer-multisample-coverage
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_framebuffer_multisample_coverage);"))
  (define gl-ext-list:nv:geometry-program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_geometry_program4);"))
  (define gl-ext-list:nv:gpu-program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_gpu_program4);"))
  (define gl-ext-list:nv:parameter-buffer-object
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_parameter_buffer_object);"))
  (define gl-ext-list:nv:transform-feedback
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_transform_feedback);"))
  (define gl-ext-list:nv:vertex-program4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_program4);"))
  (define gl-ext-list:allegro-gl-gremedy-frame-terminator
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_GREMEDY_frame_terminator);"))
  (define gl-ext-list:nv:conditional-render
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_conditional_render);"))
  (define gl-ext-list:nv:present-video
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_present_video);"))
  (define gl-ext-list:ext:direct-state-access
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_direct_state_access);"))
  (define gl-ext-list:ext:transform-feedback
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_transform_feedback);"))
  (define gl-ext-list:ext:texture-swizzle
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_swizzle);"))
  (define gl-ext-list:nv:explicit-multisample
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_explicit_multisample);"))
  (define gl-ext-list:nv:transform-feedback2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_transform_feedback2);"))
  (define gl-ext-list:allegro-gl-ati-meminfo
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_ATI_meminfo);"))
  (define gl-ext-list:allegro-gl-amd-performance-monitor
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_performance_monitor);"))
  (define gl-ext-list:allegro-gl-amd-texture-texture4
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_texture_texture4);"))
  (define gl-ext-list:allegro-gl-amd-vertex-shader-tesselator
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_vertex_shader_tesselator);"))
  (define gl-ext-list:ext:provoking-vertex
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_provoking_vertex);"))
  (define gl-ext-list:ext:texture-snorm
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_texture_snorm);"))
  (define gl-ext-list:allegro-gl-amd-draw-buffers-blend
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_draw_buffers_blend);"))
  (define gl-ext-list:apple:texture-range
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_texture_range);"))
  (define gl-ext-list:apple:float-pixels
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_float_pixels);"))
  (define gl-ext-list:apple:vertex-program-evaluators
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_vertex_program_evaluators);"))
  (define gl-ext-list:apple:aux-depth-stencil
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_aux_depth_stencil);"))
  (define gl-ext-list:apple:object-purgeable
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_object_purgeable);"))
  (define gl-ext-list:apple:row-bytes
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_row_bytes);"))
  (define gl-ext-list:apple:rgb-422
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_APPLE_rgb_422);"))
  (define gl-ext-list:nv:video-capture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_video_capture);"))
  (define gl-ext-list:ext:separate-shader-objects
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_EXT_separate_shader_objects);"))
  (define gl-ext-list:nv:parameter-buffer-object2
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_parameter_buffer_object2);"))
  (define gl-ext-list:nv:shader-buffer-load
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_shader_buffer_load);"))
  (define gl-ext-list:nv:vertex-buffer-unified-memory
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_vertex_buffer_unified_memory);"))
  (define gl-ext-list:nv:texture-barrier
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_NV_texture_barrier);"))
  (define gl-ext-list:allegro-gl-amd-shader-stencil-export
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_shader_stencil_export);"))
  (define gl-ext-list:allegro-gl-amd-seamless-cubemap-per-texture
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_seamless_cubemap_per_texture);"))
  (define gl-ext-list:allegro-gl-amd-conservative-depth
    (foreign-lambda*
      integer
      (((c-pointer (struct "ALLEGRO_OGL_EXT_LIST")) s))
      "return(s->ALLEGRO_GL_AMD_conservative_depth);"))
  (define make-allegro-ogl-ext-list
    (foreign-lambda*
      (c-pointer (struct "ALLEGRO_OGL_EXT_LIST"))
      ((integer ALLEGRO_GL_ARB_imaging)
       (integer ALLEGRO_GL_ARB_multitexture)
       (integer ALLEGRO_GL_ARB_transpose_matrix)
       (integer ALLEGRO_GL_ARB_multisample)
       (integer ALLEGRO_GL_ARB_texture_env_add)
       (integer ALLEGRO_GL_ARB_texture_cube_map)
       (integer ALLEGRO_GL_ARB_texture_compression)
       (integer ALLEGRO_GL_ARB_texture_border_clamp)
       (integer ALLEGRO_GL_ARB_point_parameters)
       (integer ALLEGRO_GL_ARB_vertex_blend)
       (integer ALLEGRO_GL_ARB_texture_env_combine)
       (integer ALLEGRO_GL_ARB_texture_env_crossbar)
       (integer ALLEGRO_GL_ARB_texture_env_dot3)
       (integer ALLEGRO_GL_ARB_texture_mirrored_repeat)
       (integer ALLEGRO_GL_ARB_depth_texture)
       (integer ALLEGRO_GL_ARB_shadow)
       (integer ALLEGRO_GL_ARB_shadow_ambient)
       (integer ALLEGRO_GL_ARB_window_pos)
       (integer ALLEGRO_GL_ARB_vertex_program)
       (integer ALLEGRO_GL_ARB_fragment_program)
       (integer ALLEGRO_GL_ARB_vertex_buffer_object)
       (integer ALLEGRO_GL_ARB_occlusion_query)
       (integer ALLEGRO_GL_ARB_shader_objects)
       (integer ALLEGRO_GL_ARB_vertex_shader)
       (integer ALLEGRO_GL_ARB_fragment_shader)
       (integer ALLEGRO_GL_ARB_shading_language_100)
       (integer ALLEGRO_GL_ARB_texture_non_power_of_two)
       (integer ALLEGRO_GL_ARB_point_sprite)
       (integer ALLEGRO_GL_ARB_fragment_program_shadow)
       (integer ALLEGRO_GL_ARB_draw_buffers)
       (integer ALLEGRO_GL_ARB_texture_rectangle)
       (integer ALLEGRO_GL_ARB_color_buffer_float)
       (integer ALLEGRO_GL_ARB_half_float_pixel)
       (integer ALLEGRO_GL_ARB_texture_float)
       (integer ALLEGRO_GL_ARB_pixel_buffer_object)
       (integer ALLEGRO_GL_ARB_instanced_arrays)
       (integer ALLEGRO_GL_ARB_draw_instanced)
       (integer ALLEGRO_GL_ARB_geometry_shader4)
       (integer ALLEGRO_GL_ARB_texture_buffer_object)
       (integer ALLEGRO_GL_ARB_depth_buffer_float)
       (integer ALLEGRO_GL_ARB_framebuffer_object)
       (integer ALLEGRO_GL_ARB_framebuffer_sRGB)
       (integer ALLEGRO_GL_ARB_half_float_vertex)
       (integer ALLEGRO_GL_ARB_map_buffer_range)
       (integer ALLEGRO_GL_ARB_texture_compression_rgtc)
       (integer ALLEGRO_GL_ARB_texture_rg)
       (integer ALLEGRO_GL_ARB_vertex_array_object)
       (integer ALLEGRO_GL_ARB_copy_buffer)
       (integer ALLEGRO_GL_ARB_compatibility)
       (integer ALLEGRO_GL_ARB_uniform_buffer_object)
       (integer ALLEGRO_GL_ARB_shader_texture_lod)
       (integer ALLEGRO_GL_ARB_depth_clamp)
       (integer ALLEGRO_GL_ARB_draw_elements_base_vertex)
       (integer ALLEGRO_GL_ARB_fragment_coord_conventions)
       (integer ALLEGRO_GL_ARB_provoking_vertex)
       (integer ALLEGRO_GL_ARB_seamless_cube_map)
       (integer ALLEGRO_GL_ARB_sync)
       (integer ALLEGRO_GL_ARB_texture_multisample)
       (integer ALLEGRO_GL_ARB_vertex_array_bgra)
       (integer ALLEGRO_GL_ARB_draw_buffers_blend)
       (integer ALLEGRO_GL_ARB_sample_shading)
       (integer ALLEGRO_GL_ARB_texture_cube_map_array)
       (integer ALLEGRO_GL_ARB_texture_gather)
       (integer ALLEGRO_GL_ARB_texture_query_lod)
       (integer ALLEGRO_GL_ARB_shading_language_include)
       (integer ALLEGRO_GL_ARB_texture_compression_bptc)
       (integer ALLEGRO_GL_ARB_blend_func_extended)
       (integer ALLEGRO_GL_ARB_explicit_attrib_location)
       (integer ALLEGRO_GL_ARB_occlusion_query2)
       (integer ALLEGRO_GL_ARB_sampler_objects)
       (integer ALLEGRO_GL_ARB_shader_bit_encoding)
       (integer ALLEGRO_GL_ARB_texture_rgb10_a2ui)
       (integer ALLEGRO_GL_ARB_texture_swizzle)
       (integer ALLEGRO_GL_ARB_timer_query)
       (integer ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev)
       (integer ALLEGRO_GL_ARB_draw_indirect)
       (integer ALLEGRO_GL_ARB_gpu_shader5)
       (integer ALLEGRO_GL_ARB_gpu_shader_fp64)
       (integer ALLEGRO_GL_ARB_shader_subroutine)
       (integer ALLEGRO_GL_ARB_tessellation_shader)
       (integer ALLEGRO_GL_ARB_texture_buffer_object_rgb32)
       (integer ALLEGRO_GL_ARB_transform_feedback2)
       (integer ALLEGRO_GL_ARB_transform_feedback3)
       (integer ALLEGRO_GL_EXT_abgr)
       (integer ALLEGRO_GL_EXT_blend_color)
       (integer ALLEGRO_GL_EXT_polygon_offset)
       (integer ALLEGRO_GL_EXT_texture)
       (integer ALLEGRO_GL_EXT_texture3D)
       (integer ALLEGRO_GL_SGIS_texture_filter4)
       (integer ALLEGRO_GL_EXT_subtexture)
       (integer ALLEGRO_GL_EXT_copy_texture)
       (integer ALLEGRO_GL_EXT_histogram)
       (integer ALLEGRO_GL_EXT_convolution)
       (integer ALLEGRO_GL_SGI_color_matrix)
       (integer ALLEGRO_GL_SGI_color_table)
       (integer ALLEGRO_GL_SGIS_pixel_texture)
       (integer ALLEGRO_GL_SGIX_pixel_texture)
       (integer ALLEGRO_GL_SGIS_texture4D)
       (integer ALLEGRO_GL_SGI_texture_color_table)
       (integer ALLEGRO_GL_EXT_cmyka)
       (integer ALLEGRO_GL_EXT_texture_object)
       (integer ALLEGRO_GL_SGIS_detail_texture)
       (integer ALLEGRO_GL_SGIS_sharpen_texture)
       (integer ALLEGRO_GL_EXT_packed_pixels)
       (integer ALLEGRO_GL_SGIS_texture_lod)
       (integer ALLEGRO_GL_SGIS_multisample)
       (integer ALLEGRO_GL_EXT_rescale_normal)
       (integer ALLEGRO_GL_EXT_vertex_array)
       (integer ALLEGRO_GL_EXT_misc_attribute)
       (integer ALLEGRO_GL_SGIS_generate_mipmap)
       (integer ALLEGRO_GL_SGIX_clipmap)
       (integer ALLEGRO_GL_SGIX_shadow)
       (integer ALLEGRO_GL_SGIS_texture_edge_clamp)
       (integer ALLEGRO_GL_SGIS_texture_border_clamp)
       (integer ALLEGRO_GL_EXT_blend_minmax)
       (integer ALLEGRO_GL_EXT_blend_subtract)
       (integer ALLEGRO_GL_EXT_blend_logic_op)
       (integer ALLEGRO_GL_SGIX_interlace)
       (integer ALLEGRO_GL_SGIS_texture_select)
       (integer ALLEGRO_GL_SGIX_sprite)
       (integer ALLEGRO_GL_SGIX_texture_multi_buffer)
       (integer ALLEGRO_GL_EXT_point_parameters)
       (integer ALLEGRO_GL_SGIX_instruments)
       (integer ALLEGRO_GL_SGIX_texture_scale_bias)
       (integer ALLEGRO_GL_SGIX_framezoom)
       (integer ALLEGRO_GL_SGIX_tag_sample_buffer)
       (integer ALLEGRO_GL_SGIX_reference_plane)
       (integer ALLEGRO_GL_SGIX_flush_raster)
       (integer ALLEGRO_GL_SGIX_depth_texture)
       (integer ALLEGRO_GL_SGIS_fog_function)
       (integer ALLEGRO_GL_SGIX_fog_offset)
       (integer ALLEGRO_GL_HP_image_transform)
       (integer ALLEGRO_GL_HP_convolution_border_modes)
       (integer ALLEGRO_GL_SGIX_texture_add_env)
       (integer ALLEGRO_GL_EXT_color_subtable)
       (integer ALLEGRO_GL_PGI_vertex_hints)
       (integer ALLEGRO_GL_PGI_misc_hints)
       (integer ALLEGRO_GL_EXT_paletted_texture)
       (integer ALLEGRO_GL_EXT_clip_volume_hint)
       (integer ALLEGRO_GL_SGIX_list_priority)
       (integer ALLEGRO_GL_SGIX_ir_instrument1)
       (integer ALLEGRO_GL_SGIX_texture_lod_bias)
       (integer ALLEGRO_GL_SGIX_shadow_ambient)
       (integer ALLEGRO_GL_EXT_index_texture)
       (integer ALLEGRO_GL_EXT_index_material)
       (integer ALLEGRO_GL_EXT_index_func)
       (integer ALLEGRO_GL_EXT_index_array_formats)
       (integer ALLEGRO_GL_EXT_compiled_vertex_array)
       (integer ALLEGRO_GL_EXT_cull_vertex)
       (integer ALLEGRO_GL_SGIX_ycrcb)
       (integer ALLEGRO_GL_EXT_fragment_lighting)
       (integer ALLEGRO_GL_IBM_rasterpos_clip)
       (integer ALLEGRO_GL_HP_texture_lighting)
       (integer ALLEGRO_GL_EXT_draw_range_elements)
       (integer ALLEGRO_GL_WIN_phong_shading)
       (integer ALLEGRO_GL_WIN_specular_fog)
       (integer ALLEGRO_GL_EXT_light_texture)
       (integer ALLEGRO_GL_SGIX_blend_alpha_minmax)
       (integer ALLEGRO_GL_EXT_scene_marker)
       (integer ALLEGRO_GL_SGIX_pixel_texture_bits)
       (integer ALLEGRO_GL_EXT_bgra)
       (integer ALLEGRO_GL_SGIX_async)
       (integer ALLEGRO_GL_SGIX_async_pixel)
       (integer ALLEGRO_GL_SGIX_async_histogram)
       (integer ALLEGRO_GL_INTEL_texture_scissor)
       (integer ALLEGRO_GL_INTEL_parallel_arrays)
       (integer ALLEGRO_GL_HP_occlusion_test)
       (integer ALLEGRO_GL_EXT_pixel_transform)
       (integer ALLEGRO_GL_EXT_pixel_transform_color_table)
       (integer ALLEGRO_GL_EXT_shared_texture_palette)
       (integer ALLEGRO_GL_EXT_separate_specular_color)
       (integer ALLEGRO_GL_EXT_secondary_color)
       (integer ALLEGRO_GL_EXT_texture_env)
       (integer ALLEGRO_GL_EXT_texture_perturb_normal)
       (integer ALLEGRO_GL_EXT_multi_draw_arrays)
       (integer ALLEGRO_GL_EXT_fog_coord)
       (integer ALLEGRO_GL_REND_screen_coordinates)
       (integer ALLEGRO_GL_EXT_coordinate_frame)
       (integer ALLEGRO_GL_EXT_texture_env_combine)
       (integer ALLEGRO_GL_APPLE_specular_vector)
       (integer ALLEGRO_GL_APPLE_transform_hint)
       (integer ALLEGRO_GL_SUNX_constant_data)
       (integer ALLEGRO_GL_SUN_global_alpha)
       (integer ALLEGRO_GL_SUN_triangle_list)
       (integer ALLEGRO_GL_SUN_vertex)
       (integer ALLEGRO_GL_EXT_blend_func_separate)
       (integer ALLEGRO_GL_INGR_color_clamp)
       (integer ALLEGRO_GL_INGR_interlace_read)
       (integer ALLEGRO_GL_EXT_stencil_wrap)
       (integer ALLEGRO_GL_EXT_422_pixels)
       (integer ALLEGRO_GL_NV_texgen_reflection)
       (integer ALLEGRO_GL_SGIX_texture_range)
       (integer ALLEGRO_GL_SUN_convolution_border_modes)
       (integer ALLEGRO_GL_EXT_texture_env_add)
       (integer ALLEGRO_GL_EXT_texture_lod_bias)
       (integer ALLEGRO_GL_EXT_texture_filter_anisotropic)
       (integer ALLEGRO_GL_EXT_vertex_weighting)
       (integer ALLEGRO_GL_NV_light_max_exponent)
       (integer ALLEGRO_GL_NV_vertex_array_range)
       (integer ALLEGRO_GL_NV_register_combiners)
       (integer ALLEGRO_GL_NV_fog_distance)
       (integer ALLEGRO_GL_NV_texgen_emboss)
       (integer ALLEGRO_GL_NV_blend_square)
       (integer ALLEGRO_GL_NV_texture_env_combine4)
       (integer ALLEGRO_GL_MESA_resize_buffers)
       (integer ALLEGRO_GL_MESA_window_pos)
       (integer ALLEGRO_GL_EXT_texture_compression_s3tc)
       (integer ALLEGRO_GL_IBM_cull_vertex)
       (integer ALLEGRO_GL_IBM_multimode_draw_arrays)
       (integer ALLEGRO_GL_IBM_vertex_array_lists)
       (integer ALLEGRO_GL_3DFX_texture_compression_FXT1)
       (integer ALLEGRO_GL_3DFX_multisample)
       (integer ALLEGRO_GL_3DFX_tbuffer)
       (integer ALLEGRO_GL_SGIX_vertex_preclip)
       (integer ALLEGRO_GL_SGIX_resample)
       (integer ALLEGRO_GL_SGIS_texture_color_mask)
       (integer ALLEGRO_GL_EXT_texture_env_dot3)
       (integer ALLEGRO_GL_ATI_texture_mirror_once)
       (integer ALLEGRO_GL_NV_fence)
       (integer ALLEGRO_GL_IBM_static_data)
       (integer ALLEGRO_GL_IBM_texture_mirrored_repeat)
       (integer ALLEGRO_GL_NV_evaluators)
       (integer ALLEGRO_GL_NV_packed_depth_stencil)
       (integer ALLEGRO_GL_NV_register_combiners2)
       (integer ALLEGRO_GL_NV_texture_compression_vtc)
       (integer ALLEGRO_GL_NV_texture_rectangle)
       (integer ALLEGRO_GL_NV_texture_shader)
       (integer ALLEGRO_GL_NV_texture_shader2)
       (integer ALLEGRO_GL_NV_vertex_array_range2)
       (integer ALLEGRO_GL_NV_vertex_program)
       (integer ALLEGRO_GL_SGIX_texture_coordinate_clamp)
       (integer ALLEGRO_GL_OML_interlace)
       (integer ALLEGRO_GL_OML_subsample)
       (integer ALLEGRO_GL_OML_resample)
       (integer ALLEGRO_GL_NV_copy_depth_to_color)
       (integer ALLEGRO_GL_ATI_envmap_bumpmap)
       (integer ALLEGRO_GL_ATI_fragment_shader)
       (integer ALLEGRO_GL_ATI_pn_triangles)
       (integer ALLEGRO_GL_ATI_vertex_array_object)
       (integer ALLEGRO_GL_EXT_vertex_shader)
       (integer ALLEGRO_GL_ATI_vertex_streams)
       (integer ALLEGRO_GL_ATI_element_array)
       (integer ALLEGRO_GL_SUN_mesh_array)
       (integer ALLEGRO_GL_SUN_slice_accum)
       (integer ALLEGRO_GL_NV_multisample_filter_hint)
       (integer ALLEGRO_GL_NV_depth_clamp)
       (integer ALLEGRO_GL_NV_occlusion_query)
       (integer ALLEGRO_GL_NV_point_sprite)
       (integer ALLEGRO_GL_NV_texture_shader3)
       (integer ALLEGRO_GL_NV_vertex_program1_1)
       (integer ALLEGRO_GL_EXT_shadow_funcs)
       (integer ALLEGRO_GL_EXT_stencil_two_side)
       (integer ALLEGRO_GL_ATI_text_fragment_shader)
       (integer ALLEGRO_GL_APPLE_client_storage)
       (integer ALLEGRO_GL_APPLE_element_array)
       (integer ALLEGRO_GL_APPLE_fence)
       (integer ALLEGRO_GL_APPLE_vertex_array_object)
       (integer ALLEGRO_GL_APPLE_vertex_array_range)
       (integer ALLEGRO_GL_APPLE_ycbcr_422)
       (integer ALLEGRO_GL_S3_s3tc)
       (integer ALLEGRO_GL_ATI_draw_buffers)
       (integer ALLEGRO_GL_ATI_texture_env_combine3)
       (integer ALLEGRO_GL_ATI_texture_float)
       (integer ALLEGRO_GL_NV_float_buffer)
       (integer ALLEGRO_GL_NV_fragment_program)
       (integer ALLEGRO_GL_NV_half_float)
       (integer ALLEGRO_GL_NV_pixel_data_range)
       (integer ALLEGRO_GL_NV_primitive_restart)
       (integer ALLEGRO_GL_NV_texture_expand_normal)
       (integer ALLEGRO_GL_NV_vertex_program2)
       (integer ALLEGRO_GL_ATI_map_object_buffer)
       (integer ALLEGRO_GL_ATI_separate_stencil)
       (integer ALLEGRO_GL_ATI_vertex_attrib_array_object)
       (integer ALLEGRO_GL_OES_byte_coordinates)
       (integer ALLEGRO_GL_OES_fixed_point)
       (integer ALLEGRO_GL_OES_single_precision)
       (integer ALLEGRO_GL_OES_compressed_paletted_texture)
       (integer ALLEGRO_GL_OES_read_format)
       (integer ALLEGRO_GL_OES_query_matrix)
       (integer ALLEGRO_GL_OES_framebuffer_object)
       (integer ALLEGRO_GL_OES_texture_npot)
       (integer ALLEGRO_GL_EXT_depth_bounds_test)
       (integer ALLEGRO_GL_EXT_texture_mirror_clamp)
       (integer ALLEGRO_GL_EXT_blend_equation_separate)
       (integer ALLEGRO_GL_MESA_pack_invert)
       (integer ALLEGRO_GL_MESA_ycbcr_texture)
       (integer ALLEGRO_GL_EXT_pixel_buffer_object)
       (integer ALLEGRO_GL_NV_fragment_program_option)
       (integer ALLEGRO_GL_NV_fragment_program2)
       (integer ALLEGRO_GL_NV_vertex_program2_option)
       (integer ALLEGRO_GL_NV_vertex_program3)
       (integer ALLEGRO_GL_EXT_texture_compression_dxt1)
       (integer ALLEGRO_GL_EXT_framebuffer_object)
       (integer ALLEGRO_GL_GREMEDY_string_marker)
       (integer ALLEGRO_GL_EXT_packed_depth_stencil)
       (integer ALLEGRO_GL_EXT_stencil_clear_tag)
       (integer ALLEGRO_GL_EXT_texture_sRGB)
       (integer ALLEGRO_GL_EXT_framebuffer_blit)
       (integer ALLEGRO_GL_EXT_framebuffer_multisample)
       (integer ALLEGRO_GL_MESAX_texture_stack)
       (integer ALLEGRO_GL_EXT_timer_query)
       (integer ALLEGRO_GL_EXT_gpu_program_parameters)
       (integer ALLEGRO_GL_APPLE_flush_buffer_range)
       (integer ALLEGRO_GL_EXT_bindable_uniform)
       (integer ALLEGRO_GL_EXT_draw_buffers2)
       (integer ALLEGRO_GL_EXT_draw_instanced)
       (integer ALLEGRO_GL_EXT_framebuffer_sRGB)
       (integer ALLEGRO_GL_EXT_geometry_shader4)
       (integer ALLEGRO_GL_EXT_gpu_shader4)
       (integer ALLEGRO_GL_EXT_packed_float)
       (integer ALLEGRO_GL_EXT_texture_array)
       (integer ALLEGRO_GL_EXT_texture_buffer_object)
       (integer ALLEGRO_GL_EXT_texture_compression_latc)
       (integer ALLEGRO_GL_EXT_texture_compression_rgtc)
       (integer ALLEGRO_GL_EXT_texture_integer)
       (integer ALLEGRO_GL_EXT_texture_shared_exponent)
       (integer ALLEGRO_GL_NV_depth_buffer_float)
       (integer ALLEGRO_GL_NV_fragment_program4)
       (integer ALLEGRO_GL_NV_framebuffer_multisample_coverage)
       (integer ALLEGRO_GL_NV_geometry_program4)
       (integer ALLEGRO_GL_NV_gpu_program4)
       (integer ALLEGRO_GL_NV_parameter_buffer_object)
       (integer ALLEGRO_GL_NV_transform_feedback)
       (integer ALLEGRO_GL_NV_vertex_program4)
       (integer ALLEGRO_GL_GREMEDY_frame_terminator)
       (integer ALLEGRO_GL_NV_conditional_render)
       (integer ALLEGRO_GL_NV_present_video)
       (integer ALLEGRO_GL_EXT_direct_state_access)
       (integer ALLEGRO_GL_EXT_transform_feedback)
       (integer ALLEGRO_GL_EXT_texture_swizzle)
       (integer ALLEGRO_GL_NV_explicit_multisample)
       (integer ALLEGRO_GL_NV_transform_feedback2)
       (integer ALLEGRO_GL_ATI_meminfo)
       (integer ALLEGRO_GL_AMD_performance_monitor)
       (integer ALLEGRO_GL_AMD_texture_texture4)
       (integer ALLEGRO_GL_AMD_vertex_shader_tesselator)
       (integer ALLEGRO_GL_EXT_provoking_vertex)
       (integer ALLEGRO_GL_EXT_texture_snorm)
       (integer ALLEGRO_GL_AMD_draw_buffers_blend)
       (integer ALLEGRO_GL_APPLE_texture_range)
       (integer ALLEGRO_GL_APPLE_float_pixels)
       (integer ALLEGRO_GL_APPLE_vertex_program_evaluators)
       (integer ALLEGRO_GL_APPLE_aux_depth_stencil)
       (integer ALLEGRO_GL_APPLE_object_purgeable)
       (integer ALLEGRO_GL_APPLE_row_bytes)
       (integer ALLEGRO_GL_APPLE_rgb_422)
       (integer ALLEGRO_GL_NV_video_capture)
       (integer ALLEGRO_GL_EXT_separate_shader_objects)
       (integer ALLEGRO_GL_NV_parameter_buffer_object2)
       (integer ALLEGRO_GL_NV_shader_buffer_load)
       (integer ALLEGRO_GL_NV_vertex_buffer_unified_memory)
       (integer ALLEGRO_GL_NV_texture_barrier)
       (integer ALLEGRO_GL_AMD_shader_stencil_export)
       (integer ALLEGRO_GL_AMD_seamless_cubemap_per_texture)
       (integer ALLEGRO_GL_AMD_conservative_depth))
      "struct ALLEGRO_OGL_EXT_LIST *tmp_ =  (struct ALLEGRO_OGL_EXT_LIST *)C_malloc(sizeof(struct ALLEGRO_OGL_EXT_LIST));\ntmp_->ALLEGRO_GL_ARB_imaging = ALLEGRO_GL_ARB_imaging;\ntmp_->ALLEGRO_GL_ARB_multitexture = ALLEGRO_GL_ARB_multitexture;\ntmp_->ALLEGRO_GL_ARB_transpose_matrix = ALLEGRO_GL_ARB_transpose_matrix;\ntmp_->ALLEGRO_GL_ARB_multisample = ALLEGRO_GL_ARB_multisample;\ntmp_->ALLEGRO_GL_ARB_texture_env_add = ALLEGRO_GL_ARB_texture_env_add;\ntmp_->ALLEGRO_GL_ARB_texture_cube_map = ALLEGRO_GL_ARB_texture_cube_map;\ntmp_->ALLEGRO_GL_ARB_texture_compression = ALLEGRO_GL_ARB_texture_compression;\ntmp_->ALLEGRO_GL_ARB_texture_border_clamp = ALLEGRO_GL_ARB_texture_border_clamp;\ntmp_->ALLEGRO_GL_ARB_point_parameters = ALLEGRO_GL_ARB_point_parameters;\ntmp_->ALLEGRO_GL_ARB_vertex_blend = ALLEGRO_GL_ARB_vertex_blend;\ntmp_->ALLEGRO_GL_ARB_texture_env_combine = ALLEGRO_GL_ARB_texture_env_combine;\ntmp_->ALLEGRO_GL_ARB_texture_env_crossbar = ALLEGRO_GL_ARB_texture_env_crossbar;\ntmp_->ALLEGRO_GL_ARB_texture_env_dot3 = ALLEGRO_GL_ARB_texture_env_dot3;\ntmp_->ALLEGRO_GL_ARB_texture_mirrored_repeat = ALLEGRO_GL_ARB_texture_mirrored_repeat;\ntmp_->ALLEGRO_GL_ARB_depth_texture = ALLEGRO_GL_ARB_depth_texture;\ntmp_->ALLEGRO_GL_ARB_shadow = ALLEGRO_GL_ARB_shadow;\ntmp_->ALLEGRO_GL_ARB_shadow_ambient = ALLEGRO_GL_ARB_shadow_ambient;\ntmp_->ALLEGRO_GL_ARB_window_pos = ALLEGRO_GL_ARB_window_pos;\ntmp_->ALLEGRO_GL_ARB_vertex_program = ALLEGRO_GL_ARB_vertex_program;\ntmp_->ALLEGRO_GL_ARB_fragment_program = ALLEGRO_GL_ARB_fragment_program;\ntmp_->ALLEGRO_GL_ARB_vertex_buffer_object = ALLEGRO_GL_ARB_vertex_buffer_object;\ntmp_->ALLEGRO_GL_ARB_occlusion_query = ALLEGRO_GL_ARB_occlusion_query;\ntmp_->ALLEGRO_GL_ARB_shader_objects = ALLEGRO_GL_ARB_shader_objects;\ntmp_->ALLEGRO_GL_ARB_vertex_shader = ALLEGRO_GL_ARB_vertex_shader;\ntmp_->ALLEGRO_GL_ARB_fragment_shader = ALLEGRO_GL_ARB_fragment_shader;\ntmp_->ALLEGRO_GL_ARB_shading_language_100 = ALLEGRO_GL_ARB_shading_language_100;\ntmp_->ALLEGRO_GL_ARB_texture_non_power_of_two = ALLEGRO_GL_ARB_texture_non_power_of_two;\ntmp_->ALLEGRO_GL_ARB_point_sprite = ALLEGRO_GL_ARB_point_sprite;\ntmp_->ALLEGRO_GL_ARB_fragment_program_shadow = ALLEGRO_GL_ARB_fragment_program_shadow;\ntmp_->ALLEGRO_GL_ARB_draw_buffers = ALLEGRO_GL_ARB_draw_buffers;\ntmp_->ALLEGRO_GL_ARB_texture_rectangle = ALLEGRO_GL_ARB_texture_rectangle;\ntmp_->ALLEGRO_GL_ARB_color_buffer_float = ALLEGRO_GL_ARB_color_buffer_float;\ntmp_->ALLEGRO_GL_ARB_half_float_pixel = ALLEGRO_GL_ARB_half_float_pixel;\ntmp_->ALLEGRO_GL_ARB_texture_float = ALLEGRO_GL_ARB_texture_float;\ntmp_->ALLEGRO_GL_ARB_pixel_buffer_object = ALLEGRO_GL_ARB_pixel_buffer_object;\ntmp_->ALLEGRO_GL_ARB_instanced_arrays = ALLEGRO_GL_ARB_instanced_arrays;\ntmp_->ALLEGRO_GL_ARB_draw_instanced = ALLEGRO_GL_ARB_draw_instanced;\ntmp_->ALLEGRO_GL_ARB_geometry_shader4 = ALLEGRO_GL_ARB_geometry_shader4;\ntmp_->ALLEGRO_GL_ARB_texture_buffer_object = ALLEGRO_GL_ARB_texture_buffer_object;\ntmp_->ALLEGRO_GL_ARB_depth_buffer_float = ALLEGRO_GL_ARB_depth_buffer_float;\ntmp_->ALLEGRO_GL_ARB_framebuffer_object = ALLEGRO_GL_ARB_framebuffer_object;\ntmp_->ALLEGRO_GL_ARB_framebuffer_sRGB = ALLEGRO_GL_ARB_framebuffer_sRGB;\ntmp_->ALLEGRO_GL_ARB_half_float_vertex = ALLEGRO_GL_ARB_half_float_vertex;\ntmp_->ALLEGRO_GL_ARB_map_buffer_range = ALLEGRO_GL_ARB_map_buffer_range;\ntmp_->ALLEGRO_GL_ARB_texture_compression_rgtc = ALLEGRO_GL_ARB_texture_compression_rgtc;\ntmp_->ALLEGRO_GL_ARB_texture_rg = ALLEGRO_GL_ARB_texture_rg;\ntmp_->ALLEGRO_GL_ARB_vertex_array_object = ALLEGRO_GL_ARB_vertex_array_object;\ntmp_->ALLEGRO_GL_ARB_copy_buffer = ALLEGRO_GL_ARB_copy_buffer;\ntmp_->ALLEGRO_GL_ARB_compatibility = ALLEGRO_GL_ARB_compatibility;\ntmp_->ALLEGRO_GL_ARB_uniform_buffer_object = ALLEGRO_GL_ARB_uniform_buffer_object;\ntmp_->ALLEGRO_GL_ARB_shader_texture_lod = ALLEGRO_GL_ARB_shader_texture_lod;\ntmp_->ALLEGRO_GL_ARB_depth_clamp = ALLEGRO_GL_ARB_depth_clamp;\ntmp_->ALLEGRO_GL_ARB_draw_elements_base_vertex = ALLEGRO_GL_ARB_draw_elements_base_vertex;\ntmp_->ALLEGRO_GL_ARB_fragment_coord_conventions = ALLEGRO_GL_ARB_fragment_coord_conventions;\ntmp_->ALLEGRO_GL_ARB_provoking_vertex = ALLEGRO_GL_ARB_provoking_vertex;\ntmp_->ALLEGRO_GL_ARB_seamless_cube_map = ALLEGRO_GL_ARB_seamless_cube_map;\ntmp_->ALLEGRO_GL_ARB_sync = ALLEGRO_GL_ARB_sync;\ntmp_->ALLEGRO_GL_ARB_texture_multisample = ALLEGRO_GL_ARB_texture_multisample;\ntmp_->ALLEGRO_GL_ARB_vertex_array_bgra = ALLEGRO_GL_ARB_vertex_array_bgra;\ntmp_->ALLEGRO_GL_ARB_draw_buffers_blend = ALLEGRO_GL_ARB_draw_buffers_blend;\ntmp_->ALLEGRO_GL_ARB_sample_shading = ALLEGRO_GL_ARB_sample_shading;\ntmp_->ALLEGRO_GL_ARB_texture_cube_map_array = ALLEGRO_GL_ARB_texture_cube_map_array;\ntmp_->ALLEGRO_GL_ARB_texture_gather = ALLEGRO_GL_ARB_texture_gather;\ntmp_->ALLEGRO_GL_ARB_texture_query_lod = ALLEGRO_GL_ARB_texture_query_lod;\ntmp_->ALLEGRO_GL_ARB_shading_language_include = ALLEGRO_GL_ARB_shading_language_include;\ntmp_->ALLEGRO_GL_ARB_texture_compression_bptc = ALLEGRO_GL_ARB_texture_compression_bptc;\ntmp_->ALLEGRO_GL_ARB_blend_func_extended = ALLEGRO_GL_ARB_blend_func_extended;\ntmp_->ALLEGRO_GL_ARB_explicit_attrib_location = ALLEGRO_GL_ARB_explicit_attrib_location;\ntmp_->ALLEGRO_GL_ARB_occlusion_query2 = ALLEGRO_GL_ARB_occlusion_query2;\ntmp_->ALLEGRO_GL_ARB_sampler_objects = ALLEGRO_GL_ARB_sampler_objects;\ntmp_->ALLEGRO_GL_ARB_shader_bit_encoding = ALLEGRO_GL_ARB_shader_bit_encoding;\ntmp_->ALLEGRO_GL_ARB_texture_rgb10_a2ui = ALLEGRO_GL_ARB_texture_rgb10_a2ui;\ntmp_->ALLEGRO_GL_ARB_texture_swizzle = ALLEGRO_GL_ARB_texture_swizzle;\ntmp_->ALLEGRO_GL_ARB_timer_query = ALLEGRO_GL_ARB_timer_query;\ntmp_->ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev = ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev;\ntmp_->ALLEGRO_GL_ARB_draw_indirect = ALLEGRO_GL_ARB_draw_indirect;\ntmp_->ALLEGRO_GL_ARB_gpu_shader5 = ALLEGRO_GL_ARB_gpu_shader5;\ntmp_->ALLEGRO_GL_ARB_gpu_shader_fp64 = ALLEGRO_GL_ARB_gpu_shader_fp64;\ntmp_->ALLEGRO_GL_ARB_shader_subroutine = ALLEGRO_GL_ARB_shader_subroutine;\ntmp_->ALLEGRO_GL_ARB_tessellation_shader = ALLEGRO_GL_ARB_tessellation_shader;\ntmp_->ALLEGRO_GL_ARB_texture_buffer_object_rgb32 = ALLEGRO_GL_ARB_texture_buffer_object_rgb32;\ntmp_->ALLEGRO_GL_ARB_transform_feedback2 = ALLEGRO_GL_ARB_transform_feedback2;\ntmp_->ALLEGRO_GL_ARB_transform_feedback3 = ALLEGRO_GL_ARB_transform_feedback3;\ntmp_->ALLEGRO_GL_EXT_abgr = ALLEGRO_GL_EXT_abgr;\ntmp_->ALLEGRO_GL_EXT_blend_color = ALLEGRO_GL_EXT_blend_color;\ntmp_->ALLEGRO_GL_EXT_polygon_offset = ALLEGRO_GL_EXT_polygon_offset;\ntmp_->ALLEGRO_GL_EXT_texture = ALLEGRO_GL_EXT_texture;\ntmp_->ALLEGRO_GL_EXT_texture3D = ALLEGRO_GL_EXT_texture3D;\ntmp_->ALLEGRO_GL_SGIS_texture_filter4 = ALLEGRO_GL_SGIS_texture_filter4;\ntmp_->ALLEGRO_GL_EXT_subtexture = ALLEGRO_GL_EXT_subtexture;\ntmp_->ALLEGRO_GL_EXT_copy_texture = ALLEGRO_GL_EXT_copy_texture;\ntmp_->ALLEGRO_GL_EXT_histogram = ALLEGRO_GL_EXT_histogram;\ntmp_->ALLEGRO_GL_EXT_convolution = ALLEGRO_GL_EXT_convolution;\ntmp_->ALLEGRO_GL_SGI_color_matrix = ALLEGRO_GL_SGI_color_matrix;\ntmp_->ALLEGRO_GL_SGI_color_table = ALLEGRO_GL_SGI_color_table;\ntmp_->ALLEGRO_GL_SGIS_pixel_texture = ALLEGRO_GL_SGIS_pixel_texture;\ntmp_->ALLEGRO_GL_SGIX_pixel_texture = ALLEGRO_GL_SGIX_pixel_texture;\ntmp_->ALLEGRO_GL_SGIS_texture4D = ALLEGRO_GL_SGIS_texture4D;\ntmp_->ALLEGRO_GL_SGI_texture_color_table = ALLEGRO_GL_SGI_texture_color_table;\ntmp_->ALLEGRO_GL_EXT_cmyka = ALLEGRO_GL_EXT_cmyka;\ntmp_->ALLEGRO_GL_EXT_texture_object = ALLEGRO_GL_EXT_texture_object;\ntmp_->ALLEGRO_GL_SGIS_detail_texture = ALLEGRO_GL_SGIS_detail_texture;\ntmp_->ALLEGRO_GL_SGIS_sharpen_texture = ALLEGRO_GL_SGIS_sharpen_texture;\ntmp_->ALLEGRO_GL_EXT_packed_pixels = ALLEGRO_GL_EXT_packed_pixels;\ntmp_->ALLEGRO_GL_SGIS_texture_lod = ALLEGRO_GL_SGIS_texture_lod;\ntmp_->ALLEGRO_GL_SGIS_multisample = ALLEGRO_GL_SGIS_multisample;\ntmp_->ALLEGRO_GL_EXT_rescale_normal = ALLEGRO_GL_EXT_rescale_normal;\ntmp_->ALLEGRO_GL_EXT_vertex_array = ALLEGRO_GL_EXT_vertex_array;\ntmp_->ALLEGRO_GL_EXT_misc_attribute = ALLEGRO_GL_EXT_misc_attribute;\ntmp_->ALLEGRO_GL_SGIS_generate_mipmap = ALLEGRO_GL_SGIS_generate_mipmap;\ntmp_->ALLEGRO_GL_SGIX_clipmap = ALLEGRO_GL_SGIX_clipmap;\ntmp_->ALLEGRO_GL_SGIX_shadow = ALLEGRO_GL_SGIX_shadow;\ntmp_->ALLEGRO_GL_SGIS_texture_edge_clamp = ALLEGRO_GL_SGIS_texture_edge_clamp;\ntmp_->ALLEGRO_GL_SGIS_texture_border_clamp = ALLEGRO_GL_SGIS_texture_border_clamp;\ntmp_->ALLEGRO_GL_EXT_blend_minmax = ALLEGRO_GL_EXT_blend_minmax;\ntmp_->ALLEGRO_GL_EXT_blend_subtract = ALLEGRO_GL_EXT_blend_subtract;\ntmp_->ALLEGRO_GL_EXT_blend_logic_op = ALLEGRO_GL_EXT_blend_logic_op;\ntmp_->ALLEGRO_GL_SGIX_interlace = ALLEGRO_GL_SGIX_interlace;\ntmp_->ALLEGRO_GL_SGIS_texture_select = ALLEGRO_GL_SGIS_texture_select;\ntmp_->ALLEGRO_GL_SGIX_sprite = ALLEGRO_GL_SGIX_sprite;\ntmp_->ALLEGRO_GL_SGIX_texture_multi_buffer = ALLEGRO_GL_SGIX_texture_multi_buffer;\ntmp_->ALLEGRO_GL_EXT_point_parameters = ALLEGRO_GL_EXT_point_parameters;\ntmp_->ALLEGRO_GL_SGIX_instruments = ALLEGRO_GL_SGIX_instruments;\ntmp_->ALLEGRO_GL_SGIX_texture_scale_bias = ALLEGRO_GL_SGIX_texture_scale_bias;\ntmp_->ALLEGRO_GL_SGIX_framezoom = ALLEGRO_GL_SGIX_framezoom;\ntmp_->ALLEGRO_GL_SGIX_tag_sample_buffer = ALLEGRO_GL_SGIX_tag_sample_buffer;\ntmp_->ALLEGRO_GL_SGIX_reference_plane = ALLEGRO_GL_SGIX_reference_plane;\ntmp_->ALLEGRO_GL_SGIX_flush_raster = ALLEGRO_GL_SGIX_flush_raster;\ntmp_->ALLEGRO_GL_SGIX_depth_texture = ALLEGRO_GL_SGIX_depth_texture;\ntmp_->ALLEGRO_GL_SGIS_fog_function = ALLEGRO_GL_SGIS_fog_function;\ntmp_->ALLEGRO_GL_SGIX_fog_offset = ALLEGRO_GL_SGIX_fog_offset;\ntmp_->ALLEGRO_GL_HP_image_transform = ALLEGRO_GL_HP_image_transform;\ntmp_->ALLEGRO_GL_HP_convolution_border_modes = ALLEGRO_GL_HP_convolution_border_modes;\ntmp_->ALLEGRO_GL_SGIX_texture_add_env = ALLEGRO_GL_SGIX_texture_add_env;\ntmp_->ALLEGRO_GL_EXT_color_subtable = ALLEGRO_GL_EXT_color_subtable;\ntmp_->ALLEGRO_GL_PGI_vertex_hints = ALLEGRO_GL_PGI_vertex_hints;\ntmp_->ALLEGRO_GL_PGI_misc_hints = ALLEGRO_GL_PGI_misc_hints;\ntmp_->ALLEGRO_GL_EXT_paletted_texture = ALLEGRO_GL_EXT_paletted_texture;\ntmp_->ALLEGRO_GL_EXT_clip_volume_hint = ALLEGRO_GL_EXT_clip_volume_hint;\ntmp_->ALLEGRO_GL_SGIX_list_priority = ALLEGRO_GL_SGIX_list_priority;\ntmp_->ALLEGRO_GL_SGIX_ir_instrument1 = ALLEGRO_GL_SGIX_ir_instrument1;\ntmp_->ALLEGRO_GL_SGIX_texture_lod_bias = ALLEGRO_GL_SGIX_texture_lod_bias;\ntmp_->ALLEGRO_GL_SGIX_shadow_ambient = ALLEGRO_GL_SGIX_shadow_ambient;\ntmp_->ALLEGRO_GL_EXT_index_texture = ALLEGRO_GL_EXT_index_texture;\ntmp_->ALLEGRO_GL_EXT_index_material = ALLEGRO_GL_EXT_index_material;\ntmp_->ALLEGRO_GL_EXT_index_func = ALLEGRO_GL_EXT_index_func;\ntmp_->ALLEGRO_GL_EXT_index_array_formats = ALLEGRO_GL_EXT_index_array_formats;\ntmp_->ALLEGRO_GL_EXT_compiled_vertex_array = ALLEGRO_GL_EXT_compiled_vertex_array;\ntmp_->ALLEGRO_GL_EXT_cull_vertex = ALLEGRO_GL_EXT_cull_vertex;\ntmp_->ALLEGRO_GL_SGIX_ycrcb = ALLEGRO_GL_SGIX_ycrcb;\ntmp_->ALLEGRO_GL_EXT_fragment_lighting = ALLEGRO_GL_EXT_fragment_lighting;\ntmp_->ALLEGRO_GL_IBM_rasterpos_clip = ALLEGRO_GL_IBM_rasterpos_clip;\ntmp_->ALLEGRO_GL_HP_texture_lighting = ALLEGRO_GL_HP_texture_lighting;\ntmp_->ALLEGRO_GL_EXT_draw_range_elements = ALLEGRO_GL_EXT_draw_range_elements;\ntmp_->ALLEGRO_GL_WIN_phong_shading = ALLEGRO_GL_WIN_phong_shading;\ntmp_->ALLEGRO_GL_WIN_specular_fog = ALLEGRO_GL_WIN_specular_fog;\ntmp_->ALLEGRO_GL_EXT_light_texture = ALLEGRO_GL_EXT_light_texture;\ntmp_->ALLEGRO_GL_SGIX_blend_alpha_minmax = ALLEGRO_GL_SGIX_blend_alpha_minmax;\ntmp_->ALLEGRO_GL_EXT_scene_marker = ALLEGRO_GL_EXT_scene_marker;\ntmp_->ALLEGRO_GL_SGIX_pixel_texture_bits = ALLEGRO_GL_SGIX_pixel_texture_bits;\ntmp_->ALLEGRO_GL_EXT_bgra = ALLEGRO_GL_EXT_bgra;\ntmp_->ALLEGRO_GL_SGIX_async = ALLEGRO_GL_SGIX_async;\ntmp_->ALLEGRO_GL_SGIX_async_pixel = ALLEGRO_GL_SGIX_async_pixel;\ntmp_->ALLEGRO_GL_SGIX_async_histogram = ALLEGRO_GL_SGIX_async_histogram;\ntmp_->ALLEGRO_GL_INTEL_texture_scissor = ALLEGRO_GL_INTEL_texture_scissor;\ntmp_->ALLEGRO_GL_INTEL_parallel_arrays = ALLEGRO_GL_INTEL_parallel_arrays;\ntmp_->ALLEGRO_GL_HP_occlusion_test = ALLEGRO_GL_HP_occlusion_test;\ntmp_->ALLEGRO_GL_EXT_pixel_transform = ALLEGRO_GL_EXT_pixel_transform;\ntmp_->ALLEGRO_GL_EXT_pixel_transform_color_table = ALLEGRO_GL_EXT_pixel_transform_color_table;\ntmp_->ALLEGRO_GL_EXT_shared_texture_palette = ALLEGRO_GL_EXT_shared_texture_palette;\ntmp_->ALLEGRO_GL_EXT_separate_specular_color = ALLEGRO_GL_EXT_separate_specular_color;\ntmp_->ALLEGRO_GL_EXT_secondary_color = ALLEGRO_GL_EXT_secondary_color;\ntmp_->ALLEGRO_GL_EXT_texture_env = ALLEGRO_GL_EXT_texture_env;\ntmp_->ALLEGRO_GL_EXT_texture_perturb_normal = ALLEGRO_GL_EXT_texture_perturb_normal;\ntmp_->ALLEGRO_GL_EXT_multi_draw_arrays = ALLEGRO_GL_EXT_multi_draw_arrays;\ntmp_->ALLEGRO_GL_EXT_fog_coord = ALLEGRO_GL_EXT_fog_coord;\ntmp_->ALLEGRO_GL_REND_screen_coordinates = ALLEGRO_GL_REND_screen_coordinates;\ntmp_->ALLEGRO_GL_EXT_coordinate_frame = ALLEGRO_GL_EXT_coordinate_frame;\ntmp_->ALLEGRO_GL_EXT_texture_env_combine = ALLEGRO_GL_EXT_texture_env_combine;\ntmp_->ALLEGRO_GL_APPLE_specular_vector = ALLEGRO_GL_APPLE_specular_vector;\ntmp_->ALLEGRO_GL_APPLE_transform_hint = ALLEGRO_GL_APPLE_transform_hint;\ntmp_->ALLEGRO_GL_SUNX_constant_data = ALLEGRO_GL_SUNX_constant_data;\ntmp_->ALLEGRO_GL_SUN_global_alpha = ALLEGRO_GL_SUN_global_alpha;\ntmp_->ALLEGRO_GL_SUN_triangle_list = ALLEGRO_GL_SUN_triangle_list;\ntmp_->ALLEGRO_GL_SUN_vertex = ALLEGRO_GL_SUN_vertex;\ntmp_->ALLEGRO_GL_EXT_blend_func_separate = ALLEGRO_GL_EXT_blend_func_separate;\ntmp_->ALLEGRO_GL_INGR_color_clamp = ALLEGRO_GL_INGR_color_clamp;\ntmp_->ALLEGRO_GL_INGR_interlace_read = ALLEGRO_GL_INGR_interlace_read;\ntmp_->ALLEGRO_GL_EXT_stencil_wrap = ALLEGRO_GL_EXT_stencil_wrap;\ntmp_->ALLEGRO_GL_EXT_422_pixels = ALLEGRO_GL_EXT_422_pixels;\ntmp_->ALLEGRO_GL_NV_texgen_reflection = ALLEGRO_GL_NV_texgen_reflection;\ntmp_->ALLEGRO_GL_SGIX_texture_range = ALLEGRO_GL_SGIX_texture_range;\ntmp_->ALLEGRO_GL_SUN_convolution_border_modes = ALLEGRO_GL_SUN_convolution_border_modes;\ntmp_->ALLEGRO_GL_EXT_texture_env_add = ALLEGRO_GL_EXT_texture_env_add;\ntmp_->ALLEGRO_GL_EXT_texture_lod_bias = ALLEGRO_GL_EXT_texture_lod_bias;\ntmp_->ALLEGRO_GL_EXT_texture_filter_anisotropic = ALLEGRO_GL_EXT_texture_filter_anisotropic;\ntmp_->ALLEGRO_GL_EXT_vertex_weighting = ALLEGRO_GL_EXT_vertex_weighting;\ntmp_->ALLEGRO_GL_NV_light_max_exponent = ALLEGRO_GL_NV_light_max_exponent;\ntmp_->ALLEGRO_GL_NV_vertex_array_range = ALLEGRO_GL_NV_vertex_array_range;\ntmp_->ALLEGRO_GL_NV_register_combiners = ALLEGRO_GL_NV_register_combiners;\ntmp_->ALLEGRO_GL_NV_fog_distance = ALLEGRO_GL_NV_fog_distance;\ntmp_->ALLEGRO_GL_NV_texgen_emboss = ALLEGRO_GL_NV_texgen_emboss;\ntmp_->ALLEGRO_GL_NV_blend_square = ALLEGRO_GL_NV_blend_square;\ntmp_->ALLEGRO_GL_NV_texture_env_combine4 = ALLEGRO_GL_NV_texture_env_combine4;\ntmp_->ALLEGRO_GL_MESA_resize_buffers = ALLEGRO_GL_MESA_resize_buffers;\ntmp_->ALLEGRO_GL_MESA_window_pos = ALLEGRO_GL_MESA_window_pos;\ntmp_->ALLEGRO_GL_EXT_texture_compression_s3tc = ALLEGRO_GL_EXT_texture_compression_s3tc;\ntmp_->ALLEGRO_GL_IBM_cull_vertex = ALLEGRO_GL_IBM_cull_vertex;\ntmp_->ALLEGRO_GL_IBM_multimode_draw_arrays = ALLEGRO_GL_IBM_multimode_draw_arrays;\ntmp_->ALLEGRO_GL_IBM_vertex_array_lists = ALLEGRO_GL_IBM_vertex_array_lists;\ntmp_->ALLEGRO_GL_3DFX_texture_compression_FXT1 = ALLEGRO_GL_3DFX_texture_compression_FXT1;\ntmp_->ALLEGRO_GL_3DFX_multisample = ALLEGRO_GL_3DFX_multisample;\ntmp_->ALLEGRO_GL_3DFX_tbuffer = ALLEGRO_GL_3DFX_tbuffer;\ntmp_->ALLEGRO_GL_SGIX_vertex_preclip = ALLEGRO_GL_SGIX_vertex_preclip;\ntmp_->ALLEGRO_GL_SGIX_resample = ALLEGRO_GL_SGIX_resample;\ntmp_->ALLEGRO_GL_SGIS_texture_color_mask = ALLEGRO_GL_SGIS_texture_color_mask;\ntmp_->ALLEGRO_GL_EXT_texture_env_dot3 = ALLEGRO_GL_EXT_texture_env_dot3;\ntmp_->ALLEGRO_GL_ATI_texture_mirror_once = ALLEGRO_GL_ATI_texture_mirror_once;\ntmp_->ALLEGRO_GL_NV_fence = ALLEGRO_GL_NV_fence;\ntmp_->ALLEGRO_GL_IBM_static_data = ALLEGRO_GL_IBM_static_data;\ntmp_->ALLEGRO_GL_IBM_texture_mirrored_repeat = ALLEGRO_GL_IBM_texture_mirrored_repeat;\ntmp_->ALLEGRO_GL_NV_evaluators = ALLEGRO_GL_NV_evaluators;\ntmp_->ALLEGRO_GL_NV_packed_depth_stencil = ALLEGRO_GL_NV_packed_depth_stencil;\ntmp_->ALLEGRO_GL_NV_register_combiners2 = ALLEGRO_GL_NV_register_combiners2;\ntmp_->ALLEGRO_GL_NV_texture_compression_vtc = ALLEGRO_GL_NV_texture_compression_vtc;\ntmp_->ALLEGRO_GL_NV_texture_rectangle = ALLEGRO_GL_NV_texture_rectangle;\ntmp_->ALLEGRO_GL_NV_texture_shader = ALLEGRO_GL_NV_texture_shader;\ntmp_->ALLEGRO_GL_NV_texture_shader2 = ALLEGRO_GL_NV_texture_shader2;\ntmp_->ALLEGRO_GL_NV_vertex_array_range2 = ALLEGRO_GL_NV_vertex_array_range2;\ntmp_->ALLEGRO_GL_NV_vertex_program = ALLEGRO_GL_NV_vertex_program;\ntmp_->ALLEGRO_GL_SGIX_texture_coordinate_clamp = ALLEGRO_GL_SGIX_texture_coordinate_clamp;\ntmp_->ALLEGRO_GL_OML_interlace = ALLEGRO_GL_OML_interlace;\ntmp_->ALLEGRO_GL_OML_subsample = ALLEGRO_GL_OML_subsample;\ntmp_->ALLEGRO_GL_OML_resample = ALLEGRO_GL_OML_resample;\ntmp_->ALLEGRO_GL_NV_copy_depth_to_color = ALLEGRO_GL_NV_copy_depth_to_color;\ntmp_->ALLEGRO_GL_ATI_envmap_bumpmap = ALLEGRO_GL_ATI_envmap_bumpmap;\ntmp_->ALLEGRO_GL_ATI_fragment_shader = ALLEGRO_GL_ATI_fragment_shader;\ntmp_->ALLEGRO_GL_ATI_pn_triangles = ALLEGRO_GL_ATI_pn_triangles;\ntmp_->ALLEGRO_GL_ATI_vertex_array_object = ALLEGRO_GL_ATI_vertex_array_object;\ntmp_->ALLEGRO_GL_EXT_vertex_shader = ALLEGRO_GL_EXT_vertex_shader;\ntmp_->ALLEGRO_GL_ATI_vertex_streams = ALLEGRO_GL_ATI_vertex_streams;\ntmp_->ALLEGRO_GL_ATI_element_array = ALLEGRO_GL_ATI_element_array;\ntmp_->ALLEGRO_GL_SUN_mesh_array = ALLEGRO_GL_SUN_mesh_array;\ntmp_->ALLEGRO_GL_SUN_slice_accum = ALLEGRO_GL_SUN_slice_accum;\ntmp_->ALLEGRO_GL_NV_multisample_filter_hint = ALLEGRO_GL_NV_multisample_filter_hint;\ntmp_->ALLEGRO_GL_NV_depth_clamp = ALLEGRO_GL_NV_depth_clamp;\ntmp_->ALLEGRO_GL_NV_occlusion_query = ALLEGRO_GL_NV_occlusion_query;\ntmp_->ALLEGRO_GL_NV_point_sprite = ALLEGRO_GL_NV_point_sprite;\ntmp_->ALLEGRO_GL_NV_texture_shader3 = ALLEGRO_GL_NV_texture_shader3;\ntmp_->ALLEGRO_GL_NV_vertex_program1_1 = ALLEGRO_GL_NV_vertex_program1_1;\ntmp_->ALLEGRO_GL_EXT_shadow_funcs = ALLEGRO_GL_EXT_shadow_funcs;\ntmp_->ALLEGRO_GL_EXT_stencil_two_side = ALLEGRO_GL_EXT_stencil_two_side;\ntmp_->ALLEGRO_GL_ATI_text_fragment_shader = ALLEGRO_GL_ATI_text_fragment_shader;\ntmp_->ALLEGRO_GL_APPLE_client_storage = ALLEGRO_GL_APPLE_client_storage;\ntmp_->ALLEGRO_GL_APPLE_element_array = ALLEGRO_GL_APPLE_element_array;\ntmp_->ALLEGRO_GL_APPLE_fence = ALLEGRO_GL_APPLE_fence;\ntmp_->ALLEGRO_GL_APPLE_vertex_array_object = ALLEGRO_GL_APPLE_vertex_array_object;\ntmp_->ALLEGRO_GL_APPLE_vertex_array_range = ALLEGRO_GL_APPLE_vertex_array_range;\ntmp_->ALLEGRO_GL_APPLE_ycbcr_422 = ALLEGRO_GL_APPLE_ycbcr_422;\ntmp_->ALLEGRO_GL_S3_s3tc = ALLEGRO_GL_S3_s3tc;\ntmp_->ALLEGRO_GL_ATI_draw_buffers = ALLEGRO_GL_ATI_draw_buffers;\ntmp_->ALLEGRO_GL_ATI_texture_env_combine3 = ALLEGRO_GL_ATI_texture_env_combine3;\ntmp_->ALLEGRO_GL_ATI_texture_float = ALLEGRO_GL_ATI_texture_float;\ntmp_->ALLEGRO_GL_NV_float_buffer = ALLEGRO_GL_NV_float_buffer;\ntmp_->ALLEGRO_GL_NV_fragment_program = ALLEGRO_GL_NV_fragment_program;\ntmp_->ALLEGRO_GL_NV_half_float = ALLEGRO_GL_NV_half_float;\ntmp_->ALLEGRO_GL_NV_pixel_data_range = ALLEGRO_GL_NV_pixel_data_range;\ntmp_->ALLEGRO_GL_NV_primitive_restart = ALLEGRO_GL_NV_primitive_restart;\ntmp_->ALLEGRO_GL_NV_texture_expand_normal = ALLEGRO_GL_NV_texture_expand_normal;\ntmp_->ALLEGRO_GL_NV_vertex_program2 = ALLEGRO_GL_NV_vertex_program2;\ntmp_->ALLEGRO_GL_ATI_map_object_buffer = ALLEGRO_GL_ATI_map_object_buffer;\ntmp_->ALLEGRO_GL_ATI_separate_stencil = ALLEGRO_GL_ATI_separate_stencil;\ntmp_->ALLEGRO_GL_ATI_vertex_attrib_array_object = ALLEGRO_GL_ATI_vertex_attrib_array_object;\ntmp_->ALLEGRO_GL_OES_byte_coordinates = ALLEGRO_GL_OES_byte_coordinates;\ntmp_->ALLEGRO_GL_OES_fixed_point = ALLEGRO_GL_OES_fixed_point;\ntmp_->ALLEGRO_GL_OES_single_precision = ALLEGRO_GL_OES_single_precision;\ntmp_->ALLEGRO_GL_OES_compressed_paletted_texture = ALLEGRO_GL_OES_compressed_paletted_texture;\ntmp_->ALLEGRO_GL_OES_read_format = ALLEGRO_GL_OES_read_format;\ntmp_->ALLEGRO_GL_OES_query_matrix = ALLEGRO_GL_OES_query_matrix;\ntmp_->ALLEGRO_GL_OES_framebuffer_object = ALLEGRO_GL_OES_framebuffer_object;\ntmp_->ALLEGRO_GL_OES_texture_npot = ALLEGRO_GL_OES_texture_npot;\ntmp_->ALLEGRO_GL_EXT_depth_bounds_test = ALLEGRO_GL_EXT_depth_bounds_test;\ntmp_->ALLEGRO_GL_EXT_texture_mirror_clamp = ALLEGRO_GL_EXT_texture_mirror_clamp;\ntmp_->ALLEGRO_GL_EXT_blend_equation_separate = ALLEGRO_GL_EXT_blend_equation_separate;\ntmp_->ALLEGRO_GL_MESA_pack_invert = ALLEGRO_GL_MESA_pack_invert;\ntmp_->ALLEGRO_GL_MESA_ycbcr_texture = ALLEGRO_GL_MESA_ycbcr_texture;\ntmp_->ALLEGRO_GL_EXT_pixel_buffer_object = ALLEGRO_GL_EXT_pixel_buffer_object;\ntmp_->ALLEGRO_GL_NV_fragment_program_option = ALLEGRO_GL_NV_fragment_program_option;\ntmp_->ALLEGRO_GL_NV_fragment_program2 = ALLEGRO_GL_NV_fragment_program2;\ntmp_->ALLEGRO_GL_NV_vertex_program2_option = ALLEGRO_GL_NV_vertex_program2_option;\ntmp_->ALLEGRO_GL_NV_vertex_program3 = ALLEGRO_GL_NV_vertex_program3;\ntmp_->ALLEGRO_GL_EXT_texture_compression_dxt1 = ALLEGRO_GL_EXT_texture_compression_dxt1;\ntmp_->ALLEGRO_GL_EXT_framebuffer_object = ALLEGRO_GL_EXT_framebuffer_object;\ntmp_->ALLEGRO_GL_GREMEDY_string_marker = ALLEGRO_GL_GREMEDY_string_marker;\ntmp_->ALLEGRO_GL_EXT_packed_depth_stencil = ALLEGRO_GL_EXT_packed_depth_stencil;\ntmp_->ALLEGRO_GL_EXT_stencil_clear_tag = ALLEGRO_GL_EXT_stencil_clear_tag;\ntmp_->ALLEGRO_GL_EXT_texture_sRGB = ALLEGRO_GL_EXT_texture_sRGB;\ntmp_->ALLEGRO_GL_EXT_framebuffer_blit = ALLEGRO_GL_EXT_framebuffer_blit;\ntmp_->ALLEGRO_GL_EXT_framebuffer_multisample = ALLEGRO_GL_EXT_framebuffer_multisample;\ntmp_->ALLEGRO_GL_MESAX_texture_stack = ALLEGRO_GL_MESAX_texture_stack;\ntmp_->ALLEGRO_GL_EXT_timer_query = ALLEGRO_GL_EXT_timer_query;\ntmp_->ALLEGRO_GL_EXT_gpu_program_parameters = ALLEGRO_GL_EXT_gpu_program_parameters;\ntmp_->ALLEGRO_GL_APPLE_flush_buffer_range = ALLEGRO_GL_APPLE_flush_buffer_range;\ntmp_->ALLEGRO_GL_EXT_bindable_uniform = ALLEGRO_GL_EXT_bindable_uniform;\ntmp_->ALLEGRO_GL_EXT_draw_buffers2 = ALLEGRO_GL_EXT_draw_buffers2;\ntmp_->ALLEGRO_GL_EXT_draw_instanced = ALLEGRO_GL_EXT_draw_instanced;\ntmp_->ALLEGRO_GL_EXT_framebuffer_sRGB = ALLEGRO_GL_EXT_framebuffer_sRGB;\ntmp_->ALLEGRO_GL_EXT_geometry_shader4 = ALLEGRO_GL_EXT_geometry_shader4;\ntmp_->ALLEGRO_GL_EXT_gpu_shader4 = ALLEGRO_GL_EXT_gpu_shader4;\ntmp_->ALLEGRO_GL_EXT_packed_float = ALLEGRO_GL_EXT_packed_float;\ntmp_->ALLEGRO_GL_EXT_texture_array = ALLEGRO_GL_EXT_texture_array;\ntmp_->ALLEGRO_GL_EXT_texture_buffer_object = ALLEGRO_GL_EXT_texture_buffer_object;\ntmp_->ALLEGRO_GL_EXT_texture_compression_latc = ALLEGRO_GL_EXT_texture_compression_latc;\ntmp_->ALLEGRO_GL_EXT_texture_compression_rgtc = ALLEGRO_GL_EXT_texture_compression_rgtc;\ntmp_->ALLEGRO_GL_EXT_texture_integer = ALLEGRO_GL_EXT_texture_integer;\ntmp_->ALLEGRO_GL_EXT_texture_shared_exponent = ALLEGRO_GL_EXT_texture_shared_exponent;\ntmp_->ALLEGRO_GL_NV_depth_buffer_float = ALLEGRO_GL_NV_depth_buffer_float;\ntmp_->ALLEGRO_GL_NV_fragment_program4 = ALLEGRO_GL_NV_fragment_program4;\ntmp_->ALLEGRO_GL_NV_framebuffer_multisample_coverage = ALLEGRO_GL_NV_framebuffer_multisample_coverage;\ntmp_->ALLEGRO_GL_NV_geometry_program4 = ALLEGRO_GL_NV_geometry_program4;\ntmp_->ALLEGRO_GL_NV_gpu_program4 = ALLEGRO_GL_NV_gpu_program4;\ntmp_->ALLEGRO_GL_NV_parameter_buffer_object = ALLEGRO_GL_NV_parameter_buffer_object;\ntmp_->ALLEGRO_GL_NV_transform_feedback = ALLEGRO_GL_NV_transform_feedback;\ntmp_->ALLEGRO_GL_NV_vertex_program4 = ALLEGRO_GL_NV_vertex_program4;\ntmp_->ALLEGRO_GL_GREMEDY_frame_terminator = ALLEGRO_GL_GREMEDY_frame_terminator;\ntmp_->ALLEGRO_GL_NV_conditional_render = ALLEGRO_GL_NV_conditional_render;\ntmp_->ALLEGRO_GL_NV_present_video = ALLEGRO_GL_NV_present_video;\ntmp_->ALLEGRO_GL_EXT_direct_state_access = ALLEGRO_GL_EXT_direct_state_access;\ntmp_->ALLEGRO_GL_EXT_transform_feedback = ALLEGRO_GL_EXT_transform_feedback;\ntmp_->ALLEGRO_GL_EXT_texture_swizzle = ALLEGRO_GL_EXT_texture_swizzle;\ntmp_->ALLEGRO_GL_NV_explicit_multisample = ALLEGRO_GL_NV_explicit_multisample;\ntmp_->ALLEGRO_GL_NV_transform_feedback2 = ALLEGRO_GL_NV_transform_feedback2;\ntmp_->ALLEGRO_GL_ATI_meminfo = ALLEGRO_GL_ATI_meminfo;\ntmp_->ALLEGRO_GL_AMD_performance_monitor = ALLEGRO_GL_AMD_performance_monitor;\ntmp_->ALLEGRO_GL_AMD_texture_texture4 = ALLEGRO_GL_AMD_texture_texture4;\ntmp_->ALLEGRO_GL_AMD_vertex_shader_tesselator = ALLEGRO_GL_AMD_vertex_shader_tesselator;\ntmp_->ALLEGRO_GL_EXT_provoking_vertex = ALLEGRO_GL_EXT_provoking_vertex;\ntmp_->ALLEGRO_GL_EXT_texture_snorm = ALLEGRO_GL_EXT_texture_snorm;\ntmp_->ALLEGRO_GL_AMD_draw_buffers_blend = ALLEGRO_GL_AMD_draw_buffers_blend;\ntmp_->ALLEGRO_GL_APPLE_texture_range = ALLEGRO_GL_APPLE_texture_range;\ntmp_->ALLEGRO_GL_APPLE_float_pixels = ALLEGRO_GL_APPLE_float_pixels;\ntmp_->ALLEGRO_GL_APPLE_vertex_program_evaluators = ALLEGRO_GL_APPLE_vertex_program_evaluators;\ntmp_->ALLEGRO_GL_APPLE_aux_depth_stencil = ALLEGRO_GL_APPLE_aux_depth_stencil;\ntmp_->ALLEGRO_GL_APPLE_object_purgeable = ALLEGRO_GL_APPLE_object_purgeable;\ntmp_->ALLEGRO_GL_APPLE_row_bytes = ALLEGRO_GL_APPLE_row_bytes;\ntmp_->ALLEGRO_GL_APPLE_rgb_422 = ALLEGRO_GL_APPLE_rgb_422;\ntmp_->ALLEGRO_GL_NV_video_capture = ALLEGRO_GL_NV_video_capture;\ntmp_->ALLEGRO_GL_EXT_separate_shader_objects = ALLEGRO_GL_EXT_separate_shader_objects;\ntmp_->ALLEGRO_GL_NV_parameter_buffer_object2 = ALLEGRO_GL_NV_parameter_buffer_object2;\ntmp_->ALLEGRO_GL_NV_shader_buffer_load = ALLEGRO_GL_NV_shader_buffer_load;\ntmp_->ALLEGRO_GL_NV_vertex_buffer_unified_memory = ALLEGRO_GL_NV_vertex_buffer_unified_memory;\ntmp_->ALLEGRO_GL_NV_texture_barrier = ALLEGRO_GL_NV_texture_barrier;\ntmp_->ALLEGRO_GL_AMD_shader_stencil_export = ALLEGRO_GL_AMD_shader_stencil_export;\ntmp_->ALLEGRO_GL_AMD_seamless_cubemap_per_texture = ALLEGRO_GL_AMD_seamless_cubemap_per_texture;\ntmp_->ALLEGRO_GL_AMD_conservative_depth = ALLEGRO_GL_AMD_conservative_depth;\nreturn(tmp_);;\n"))
  (define gl-ext-api:blend-color
    (foreign-lambda*
      "_ALLEGRO_glBlendColor_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColor);"))
  (define gl-ext-api:blend-equation
    (foreign-lambda*
      "_ALLEGRO_glBlendEquation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquation);"))
  (define gl-ext-api:draw-range-elements
    (foreign-lambda*
      "_ALLEGRO_glDrawRangeElements_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElements);"))
  (define gl-ext-api:color-table
    (foreign-lambda*
      "_ALLEGRO_glColorTable_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTable);"))
  (define gl-ext-api:color-table-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glColorTableParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterfv);"))
  (define gl-ext-api:color-table-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glColorTableParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameteriv);"))
  (define gl-ext-api:copy-color-table
    (foreign-lambda*
      "_ALLEGRO_glCopyColorTable_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorTable);"))
  (define gl-ext-api:get-color-table
    (foreign-lambda*
      "_ALLEGRO_glGetColorTable_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTable);"))
  (define gl-ext-api:get-color-table-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfv);"))
  (define gl-ext-api:get-color-table-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameteriv);"))
  (define gl-ext-api:color-sub-table
    (foreign-lambda*
      "_ALLEGRO_glColorSubTable_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorSubTable);"))
  (define gl-ext-api:copy-color-sub-table
    (foreign-lambda*
      "_ALLEGRO_glCopyColorSubTable_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorSubTable);"))
  (define gl-ext-api:tex-image3d
    (foreign-lambda*
      "_ALLEGRO_glTexImage3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3D);"))
  (define gl-ext-api:tex-sub-image3d
    (foreign-lambda*
      "_ALLEGRO_glTexSubImage3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage3D);"))
  (define gl-ext-api:copy-tex-sub-image3d
    (foreign-lambda*
      "_ALLEGRO_glCopyTexSubImage3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage3D);"))
  (define gl-ext-api:convolution-filter1d
    (foreign-lambda*
      "_ALLEGRO_glConvolutionFilter1D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter1D);"))
  (define gl-ext-api:convolution-filter2d
    (foreign-lambda*
      "_ALLEGRO_glConvolutionFilter2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter2D);"))
  (define gl-ext-api:convolution-parameterf
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterf);"))
  (define gl-ext-api:convolution-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfv);"))
  (define gl-ext-api:convolution-parameteri
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteri);"))
  (define gl-ext-api:convolution-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteriv);"))
  (define gl-ext-api:copy-convolution-filter1d
    (foreign-lambda*
      "_ALLEGRO_glCopyConvolutionFilter1D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter1D);"))
  (define gl-ext-api:copy-convolution-filter2d
    (foreign-lambda*
      "_ALLEGRO_glCopyConvolutionFilter2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter2D);"))
  (define gl-ext-api:get-convolution-filter
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionFilter_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionFilter);"))
  (define gl-ext-api:get-convolution-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterfv);"))
  (define gl-ext-api:get-convolution-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameteriv);"))
  (define gl-ext-api:get-separable-filter
    (foreign-lambda*
      "_ALLEGRO_glGetSeparableFilter_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSeparableFilter);"))
  (define gl-ext-api:separable-filter2d
    (foreign-lambda*
      "_ALLEGRO_glSeparableFilter2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SeparableFilter2D);"))
  (define gl-ext-api:get-histogram
    (foreign-lambda*
      "_ALLEGRO_glGetHistogram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogram);"))
  (define gl-ext-api:get-histogram-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterfv);"))
  (define gl-ext-api:get-histogram-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameteriv);"))
  (define gl-ext-api:get-minmax
    (foreign-lambda*
      "_ALLEGRO_glGetMinmax_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmax);"))
  (define gl-ext-api:get-minmax-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glGetMinmaxParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterfv);"))
  (define gl-ext-api:get-minmax-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetMinmaxParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameteriv);"))
  (define gl-ext-api:histogram
    (foreign-lambda*
      "_ALLEGRO_glHistogram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Histogram);"))
  (define gl-ext-api:minmax
    (foreign-lambda*
      "_ALLEGRO_glMinmax_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Minmax);"))
  (define gl-ext-api:reset-histogram
    (foreign-lambda*
      "_ALLEGRO_glResetHistogram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetHistogram);"))
  (define gl-ext-api:reset-minmax
    (foreign-lambda*
      "_ALLEGRO_glResetMinmax_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetMinmax);"))
  (define gl-ext-api:active-texture
    (foreign-lambda*
      "_ALLEGRO_glActiveTexture_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveTexture);"))
  (define gl-ext-api:client-active-texture
    (foreign-lambda*
      "_ALLEGRO_glClientActiveTexture_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveTexture);"))
  (define gl-ext-api:multi-tex-coord1d
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1d);"))
  (define gl-ext-api:multi-tex-coord1dv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dv);"))
  (define gl-ext-api:multi-tex-coord1f
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1f);"))
  (define gl-ext-api:multi-tex-coord1fv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fv);"))
  (define gl-ext-api:multi-tex-coord1i
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1i);"))
  (define gl-ext-api:multi-tex-coord1iv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1iv);"))
  (define gl-ext-api:multi-tex-coord1s
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1s);"))
  (define gl-ext-api:multi-tex-coord1sv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1sv);"))
  (define gl-ext-api:multi-tex-coord2d
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2d);"))
  (define gl-ext-api:multi-tex-coord2dv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dv);"))
  (define gl-ext-api:multi-tex-coord2f
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2f);"))
  (define gl-ext-api:multi-tex-coord2fv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fv);"))
  (define gl-ext-api:multi-tex-coord2i
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2i);"))
  (define gl-ext-api:multi-tex-coord2iv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2iv);"))
  (define gl-ext-api:multi-tex-coord2s
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2s);"))
  (define gl-ext-api:multi-tex-coord2sv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2sv);"))
  (define gl-ext-api:multi-tex-coord3d
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3d);"))
  (define gl-ext-api:multi-tex-coord3dv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dv);"))
  (define gl-ext-api:multi-tex-coord3f
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3f);"))
  (define gl-ext-api:multi-tex-coord3fv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fv);"))
  (define gl-ext-api:multi-tex-coord3i
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3i);"))
  (define gl-ext-api:multi-tex-coord3iv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3iv);"))
  (define gl-ext-api:multi-tex-coord3s
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3s);"))
  (define gl-ext-api:multi-tex-coord3sv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3sv);"))
  (define gl-ext-api:multi-tex-coord4d
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4d);"))
  (define gl-ext-api:multi-tex-coord4dv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dv);"))
  (define gl-ext-api:multi-tex-coord4f
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4f);"))
  (define gl-ext-api:multi-tex-coord4fv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fv);"))
  (define gl-ext-api:multi-tex-coord4i
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4i);"))
  (define gl-ext-api:multi-tex-coord4iv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4iv);"))
  (define gl-ext-api:multi-tex-coord4s
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4s);"))
  (define gl-ext-api:multi-tex-coord4sv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4sv);"))
  (define gl-ext-api:load-transpose-matrixf
    (foreign-lambda*
      "_ALLEGRO_glLoadTransposeMatrixf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixf);"))
  (define gl-ext-api:load-transpose-matrixd
    (foreign-lambda*
      "_ALLEGRO_glLoadTransposeMatrixd_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixd);"))
  (define gl-ext-api:mult-transpose-matrixf
    (foreign-lambda*
      "_ALLEGRO_glMultTransposeMatrixf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixf);"))
  (define gl-ext-api:mult-transpose-matrixd
    (foreign-lambda*
      "_ALLEGRO_glMultTransposeMatrixd_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixd);"))
  (define gl-ext-api:sample-coverage
    (foreign-lambda*
      "_ALLEGRO_glSampleCoverage_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverage);"))
  (define gl-ext-api:compressed-tex-image3d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage3D);"))
  (define gl-ext-api:compressed-tex-image2d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage2D);"))
  (define gl-ext-api:compressed-tex-image1d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage1D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage1D);"))
  (define gl-ext-api:compressed-tex-sub-image3d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage3D);"))
  (define gl-ext-api:compressed-tex-sub-image2d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage2D);"))
  (define gl-ext-api:compressed-tex-sub-image1d
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage1D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage1D);"))
  (define gl-ext-api:get-compressed-tex-image
    (foreign-lambda*
      "_ALLEGRO_glGetCompressedTexImage_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTexImage);"))
  (define gl-ext-api:blend-func-separate
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncSeparate_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparate);"))
  (define gl-ext-api:fog-coordf
    (foreign-lambda*
      "_ALLEGRO_glFogCoordf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordf);"))
  (define gl-ext-api:fog-coordfv
    (foreign-lambda*
      "_ALLEGRO_glFogCoordfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfv);"))
  (define gl-ext-api:fog-coordd
    (foreign-lambda*
      "_ALLEGRO_glFogCoordd_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordd);"))
  (define gl-ext-api:fog-coorddv
    (foreign-lambda*
      "_ALLEGRO_glFogCoorddv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddv);"))
  (define gl-ext-api:fog-coord-pointer
    (foreign-lambda*
      "_ALLEGRO_glFogCoordPointer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordPointer);"))
  (define gl-ext-api:multi-draw-arrays
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawArrays_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArrays);"))
  (define gl-ext-api:multi-draw-elements
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawElements_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElements);"))
  (define gl-ext-api:point-parameterf
    (foreign-lambda*
      "_ALLEGRO_glPointParameterf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterf);"))
  (define gl-ext-api:point-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfv);"))
  (define gl-ext-api:point-parameteri
    (foreign-lambda*
      "_ALLEGRO_glPointParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteri);"))
  (define gl-ext-api:point-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glPointParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteriv);"))
  (define gl-ext-api:secondary-color3b
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3b_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3b);"))
  (define gl-ext-api:secondary-color3bv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3bv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bv);"))
  (define gl-ext-api:secondary-color3d
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3d);"))
  (define gl-ext-api:secondary-color3dv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dv);"))
  (define gl-ext-api:secondary-color3f
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3f);"))
  (define gl-ext-api:secondary-color3fv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fv);"))
  (define gl-ext-api:secondary-color3i
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3i);"))
  (define gl-ext-api:secondary-color3iv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3iv);"))
  (define gl-ext-api:secondary-color3s
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3s);"))
  (define gl-ext-api:secondary-color3sv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3sv);"))
  (define gl-ext-api:secondary-color3ub
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ub_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ub);"))
  (define gl-ext-api:secondary-color3ubv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ubv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubv);"))
  (define gl-ext-api:secondary-color3ui
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ui);"))
  (define gl-ext-api:secondary-color3uiv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uiv);"))
  (define gl-ext-api:secondary-color3us
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3us_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3us);"))
  (define gl-ext-api:secondary-color3usv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3usv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usv);"))
  (define gl-ext-api:secondary-color-pointer
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColorPointer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorPointer);"))
  (define gl-ext-api:window-pos2d
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2d);"))
  (define gl-ext-api:window-pos2dv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dv);"))
  (define gl-ext-api:window-pos2f
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2f);"))
  (define gl-ext-api:window-pos2fv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fv);"))
  (define gl-ext-api:window-pos2i
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2i);"))
  (define gl-ext-api:window-pos2iv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iv);"))
  (define gl-ext-api:window-pos2s
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2s);"))
  (define gl-ext-api:window-pos2sv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sv);"))
  (define gl-ext-api:window-pos3d
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3d);"))
  (define gl-ext-api:window-pos3dv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dv);"))
  (define gl-ext-api:window-pos3f
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3f);"))
  (define gl-ext-api:window-pos3fv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fv);"))
  (define gl-ext-api:window-pos3i
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3i);"))
  (define gl-ext-api:window-pos3iv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iv);"))
  (define gl-ext-api:window-pos3s
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3s);"))
  (define gl-ext-api:window-pos3sv
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sv);"))
  (define gl-ext-api:bind-buffer
    (foreign-lambda*
      "_ALLEGRO_glBindBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBuffer);"))
  (define gl-ext-api:delete-buffers
    (foreign-lambda*
      "_ALLEGRO_glDeleteBuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteBuffers);"))
  (define gl-ext-api:gen-buffers
    (foreign-lambda*
      "_ALLEGRO_glGenBuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenBuffers);"))
  (define gl-ext-api:is-buffer
    (foreign-lambda*
      "_ALLEGRO_glIsBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBuffer);"))
  (define gl-ext-api:buffer-data
    (foreign-lambda*
      "_ALLEGRO_glBufferData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferData);"))
  (define gl-ext-api:buffer-sub-data
    (foreign-lambda*
      "_ALLEGRO_glBufferSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferSubData);"))
  (define gl-ext-api:get-buffer-sub-data
    (foreign-lambda*
      "_ALLEGRO_glGetBufferSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferSubData);"))
  (define gl-ext-api:map-buffer
    (foreign-lambda*
      "_ALLEGRO_glMapBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBuffer);"))
  (define gl-ext-api:unmap-buffer
    (foreign-lambda*
      "_ALLEGRO_glUnmapBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapBuffer);"))
  (define gl-ext-api:get-buffer-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetBufferParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameteriv);"))
  (define gl-ext-api:get-buffer-pointerv
    (foreign-lambda*
      "_ALLEGRO_glGetBufferPointerv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferPointerv);"))
  (define gl-ext-api:gen-queries
    (foreign-lambda*
      "_ALLEGRO_glGenQueries_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenQueries);"))
  (define gl-ext-api:delete-queries
    (foreign-lambda*
      "_ALLEGRO_glDeleteQueries_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteQueries);"))
  (define gl-ext-api:is-query
    (foreign-lambda*
      "_ALLEGRO_glIsQuery_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsQuery);"))
  (define gl-ext-api:begin-query
    (foreign-lambda*
      "_ALLEGRO_glBeginQuery_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQuery);"))
  (define gl-ext-api:end-query
    (foreign-lambda*
      "_ALLEGRO_glEndQuery_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQuery);"))
  (define gl-ext-api:get-queryiv
    (foreign-lambda*
      "_ALLEGRO_glGetQueryiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryiv);"))
  (define gl-ext-api:get-query-objectiv
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectiv);"))
  (define gl-ext-api:get-query-objectuiv
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectuiv);"))
  (define gl-ext-api:blend-equation-separate
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationSeparate_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparate);"))
  (define gl-ext-api:create-program
    (foreign-lambda*
      "_ALLEGRO_glCreateProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateProgram);"))
  (define gl-ext-api:create-shader
    (foreign-lambda*
      "_ALLEGRO_glCreateShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShader);"))
  (define gl-ext-api:delete-program
    (foreign-lambda*
      "_ALLEGRO_glDeleteProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgram);"))
  (define gl-ext-api:delete-shader
    (foreign-lambda*
      "_ALLEGRO_glDeleteShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteShader);"))
  (define gl-ext-api:attach-shader
    (foreign-lambda*
      "_ALLEGRO_glAttachShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AttachShader);"))
  (define gl-ext-api:detach-shader
    (foreign-lambda*
      "_ALLEGRO_glDetachShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetachShader);"))
  (define gl-ext-api:shader-source
    (foreign-lambda*
      "_ALLEGRO_glShaderSource_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderSource);"))
  (define gl-ext-api:compile-shader
    (foreign-lambda*
      "_ALLEGRO_glCompileShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShader);"))
  (define gl-ext-api:is-program
    (foreign-lambda*
      "_ALLEGRO_glIsProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgram);"))
  (define gl-ext-api:is-shader
    (foreign-lambda*
      "_ALLEGRO_glIsShader_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsShader);"))
  (define gl-ext-api:link-program
    (foreign-lambda*
      "_ALLEGRO_glLinkProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LinkProgram);"))
  (define gl-ext-api:use-program
    (foreign-lambda*
      "_ALLEGRO_glUseProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseProgram);"))
  (define gl-ext-api:validate-program
    (foreign-lambda*
      "_ALLEGRO_glValidateProgram_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ValidateProgram);"))
  (define gl-ext-api:uniform1f
    (foreign-lambda*
      "_ALLEGRO_glUniform1f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1f);"))
  (define gl-ext-api:uniform2f
    (foreign-lambda*
      "_ALLEGRO_glUniform2f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2f);"))
  (define gl-ext-api:uniform3f
    (foreign-lambda*
      "_ALLEGRO_glUniform3f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3f);"))
  (define gl-ext-api:uniform4f
    (foreign-lambda*
      "_ALLEGRO_glUniform4f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4f);"))
  (define gl-ext-api:uniform1i
    (foreign-lambda*
      "_ALLEGRO_glUniform1i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1i);"))
  (define gl-ext-api:uniform2i
    (foreign-lambda*
      "_ALLEGRO_glUniform2i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2i);"))
  (define gl-ext-api:uniform3i
    (foreign-lambda*
      "_ALLEGRO_glUniform3i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3i);"))
  (define gl-ext-api:uniform4i
    (foreign-lambda*
      "_ALLEGRO_glUniform4i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4i);"))
  (define gl-ext-api:uniform1fv
    (foreign-lambda*
      "_ALLEGRO_glUniform1fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fv);"))
  (define gl-ext-api:uniform2fv
    (foreign-lambda*
      "_ALLEGRO_glUniform2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fv);"))
  (define gl-ext-api:uniform3fv
    (foreign-lambda*
      "_ALLEGRO_glUniform3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fv);"))
  (define gl-ext-api:uniform4fv
    (foreign-lambda*
      "_ALLEGRO_glUniform4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fv);"))
  (define gl-ext-api:uniform1iv
    (foreign-lambda*
      "_ALLEGRO_glUniform1iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1iv);"))
  (define gl-ext-api:uniform2iv
    (foreign-lambda*
      "_ALLEGRO_glUniform2iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2iv);"))
  (define gl-ext-api:uniform3iv
    (foreign-lambda*
      "_ALLEGRO_glUniform3iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3iv);"))
  (define gl-ext-api:uniform4iv
    (foreign-lambda*
      "_ALLEGRO_glUniform4iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4iv);"))
  (define gl-ext-api:uniform-matrix2fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2fv);"))
  (define gl-ext-api:uniform-matrix3fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3fv);"))
  (define gl-ext-api:uniform-matrix4fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4fv);"))
  (define gl-ext-api:get-shaderfv
    (foreign-lambda*
      "_ALLEGRO_glGetShaderfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderfv);"))
  (define gl-ext-api:get-shaderiv
    (foreign-lambda*
      "_ALLEGRO_glGetShaderiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderiv);"))
  (define gl-ext-api:get-programfv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramfv);"))
  (define gl-ext-api:get-programiv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramiv);"))
  (define gl-ext-api:get-shader-info-log
    (foreign-lambda*
      "_ALLEGRO_glGetShaderInfoLog_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderInfoLog);"))
  (define gl-ext-api:get-program-info-log
    (foreign-lambda*
      "_ALLEGRO_glGetProgramInfoLog_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramInfoLog);"))
  (define gl-ext-api:get-attached-shaders
    (foreign-lambda*
      "_ALLEGRO_glGetAttachedShaders_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttachedShaders);"))
  (define gl-ext-api:get-uniform-location
    (foreign-lambda*
      "_ALLEGRO_glGetUniformLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformLocation);"))
  (define gl-ext-api:get-active-uniform
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniform_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniform);"))
  (define gl-ext-api:get-uniformfv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformfv);"))
  (define gl-ext-api:get-uniformiv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformiv);"))
  (define gl-ext-api:get-shader-source
    (foreign-lambda*
      "_ALLEGRO_glGetShaderSource_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderSource);"))
  (define gl-ext-api:vertex-attrib1f
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1f);"))
  (define gl-ext-api:vertex-attrib1s
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1s);"))
  (define gl-ext-api:vertex-attrib1d
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1d);"))
  (define gl-ext-api:vertex-attrib2f
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2f);"))
  (define gl-ext-api:vertex-attrib2s
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2s);"))
  (define gl-ext-api:vertex-attrib2d
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2d);"))
  (define gl-ext-api:vertex-attrib3f
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3f);"))
  (define gl-ext-api:vertex-attrib3s
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3s);"))
  (define gl-ext-api:vertex-attrib3d
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3d);"))
  (define gl-ext-api:vertex-attrib4f
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4f_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4f);"))
  (define gl-ext-api:vertex-attrib4s
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4s_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4s);"))
  (define gl-ext-api:vertex-attrib4d
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4d);"))
  (define gl-ext-api:vertex-attrib4nub
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nub_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nub);"))
  (define gl-ext-api:vertex-attrib1fv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fv);"))
  (define gl-ext-api:vertex-attrib1sv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sv);"))
  (define gl-ext-api:vertex-attrib1dv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dv);"))
  (define gl-ext-api:vertex-attrib2fv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fv);"))
  (define gl-ext-api:vertex-attrib2sv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sv);"))
  (define gl-ext-api:vertex-attrib2dv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dv);"))
  (define gl-ext-api:vertex-attrib3fv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fv);"))
  (define gl-ext-api:vertex-attrib3sv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sv);"))
  (define gl-ext-api:vertex-attrib3dv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dv);"))
  (define gl-ext-api:vertex-attrib4fv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fv);"))
  (define gl-ext-api:vertex-attrib4sv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sv);"))
  (define gl-ext-api:vertex-attrib4dv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dv);"))
  (define gl-ext-api:vertex-attrib4iv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4iv);"))
  (define gl-ext-api:vertex-attrib4bv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4bv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4bv);"))
  (define gl-ext-api:vertex-attrib4ubv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4ubv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubv);"))
  (define gl-ext-api:vertex-attrib4usv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4usv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4usv);"))
  (define gl-ext-api:vertex-attrib4uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4uiv);"))
  (define gl-ext-api:vertex-attrib4nbv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nbv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nbv);"))
  (define gl-ext-api:vertex-attrib4nsv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nsv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nsv);"))
  (define gl-ext-api:vertex-attrib4niv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Niv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Niv);"))
  (define gl-ext-api:vertex-attrib4nubv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nubv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nubv);"))
  (define gl-ext-api:vertex-attrib4nusv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nusv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nusv);"))
  (define gl-ext-api:vertex-attrib4nuiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4Nuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4Nuiv);"))
  (define gl-ext-api:vertex-attrib-pointer
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribPointer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointer);"))
  (define gl-ext-api:enable-vertex-attrib-array
    (foreign-lambda*
      "_ALLEGRO_glEnableVertexAttribArray_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribArray);"))
  (define gl-ext-api:disable-vertex-attrib-array
    (foreign-lambda*
      "_ALLEGRO_glDisableVertexAttribArray_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribArray);"))
  (define gl-ext-api:bind-attrib-location
    (foreign-lambda*
      "_ALLEGRO_glBindAttribLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindAttribLocation);"))
  (define gl-ext-api:get-active-attrib
    (foreign-lambda*
      "_ALLEGRO_glGetActiveAttrib_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveAttrib);"))
  (define gl-ext-api:get-attrib-location
    (foreign-lambda*
      "_ALLEGRO_glGetAttribLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttribLocation);"))
  (define gl-ext-api:get-vertex-attribdv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribdv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdv);"))
  (define gl-ext-api:get-vertex-attribfv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfv);"))
  (define gl-ext-api:get-vertex-attribiv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribiv);"))
  (define gl-ext-api:get-vertex-attrib-pointerv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribPointerv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointerv);"))
  (define gl-ext-api:draw-buffers
    (foreign-lambda*
      "_ALLEGRO_glDrawBuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffers);"))
  (define gl-ext-api:stencil-op-separate
    (foreign-lambda*
      "_ALLEGRO_glStencilOpSeparate_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilOpSeparate);"))
  (define gl-ext-api:stencil-func-separate
    (foreign-lambda*
      "_ALLEGRO_glStencilFuncSeparate_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilFuncSeparate);"))
  (define gl-ext-api:stencil-mask-separate
    (foreign-lambda*
      "_ALLEGRO_glStencilMaskSeparate_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilMaskSeparate);"))
  (define gl-ext-api:uniform-matrix2x3fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2x3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x3fv);"))
  (define gl-ext-api:uniform-matrix3x2fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3x2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x2fv);"))
  (define gl-ext-api:uniform-matrix2x4fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2x4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x4fv);"))
  (define gl-ext-api:uniform-matrix4x2fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4x2fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x2fv);"))
  (define gl-ext-api:uniform-matrix3x4fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3x4fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x4fv);"))
  (define gl-ext-api:uniform-matrix4x3fv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4x3fv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x3fv);"))
  (define gl-ext-api:color-maski
    (foreign-lambda*
      "_ALLEGRO_glColorMaski_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorMaski);"))
  (define gl-ext-api:get-booleani-v
    (foreign-lambda*
      "_ALLEGRO_glGetBooleani_v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBooleani_v);"))
  (define gl-ext-api:get-integeri-v
    (foreign-lambda*
      "_ALLEGRO_glGetIntegeri_v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegeri_v);"))
  (define gl-ext-api:enablei
    (foreign-lambda*
      "_ALLEGRO_glEnablei_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Enablei);"))
  (define gl-ext-api:disablei
    (foreign-lambda*
      "_ALLEGRO_glDisablei_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Disablei);"))
  (define gl-ext-api:is-enabledi
    (foreign-lambda*
      "_ALLEGRO_glIsEnabledi_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsEnabledi);"))
  (define gl-ext-api:begin-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glBeginTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedback);"))
  (define gl-ext-api:end-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glEndTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedback);"))
  (define gl-ext-api:bind-buffer-range
    (foreign-lambda*
      "_ALLEGRO_glBindBufferRange_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRange);"))
  (define gl-ext-api:bind-buffer-base
    (foreign-lambda*
      "_ALLEGRO_glBindBufferBase_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBase);"))
  (define gl-ext-api:transform-feedback-varyings
    (foreign-lambda*
      "_ALLEGRO_glTransformFeedbackVaryings_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryings);"))
  (define gl-ext-api:get-transform-feedback-varying
    (foreign-lambda*
      "_ALLEGRO_glGetTransformFeedbackVarying_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVarying);"))
  (define gl-ext-api:clamp-color
    (foreign-lambda*
      "_ALLEGRO_glClampColor_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClampColor);"))
  (define gl-ext-api:begin-conditional-render
    (foreign-lambda*
      "_ALLEGRO_glBeginConditionalRender_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginConditionalRender);"))
  (define gl-ext-api:end-conditional-render
    (foreign-lambda*
      "_ALLEGRO_glEndConditionalRender_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndConditionalRender);"))
  (define gl-ext-api:vertex-attrib-i1i
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1i);"))
  (define gl-ext-api:vertex-attrib-i2i
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2i);"))
  (define gl-ext-api:vertex-attrib-i3i
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3i);"))
  (define gl-ext-api:vertex-attrib-i4i
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4i_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4i);"))
  (define gl-ext-api:vertex-attrib-i1ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1ui);"))
  (define gl-ext-api:vertex-attrib-i2ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2ui);"))
  (define gl-ext-api:vertex-attrib-i3ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3ui);"))
  (define gl-ext-api:vertex-attrib-i4ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ui);"))
  (define gl-ext-api:vertex-attrib-i1iv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1iv);"))
  (define gl-ext-api:vertex-attrib-i2iv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2iv);"))
  (define gl-ext-api:vertex-attrib-i3iv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3iv);"))
  (define gl-ext-api:vertex-attrib-i4iv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4iv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4iv);"))
  (define gl-ext-api:vertex-attrib-i1uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uiv);"))
  (define gl-ext-api:vertex-attrib-i2uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uiv);"))
  (define gl-ext-api:vertex-attrib-i3uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uiv);"))
  (define gl-ext-api:vertex-attrib-i4uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uiv);"))
  (define gl-ext-api:vertex-attrib-i4bv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4bv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4bv);"))
  (define gl-ext-api:vertex-attrib-i4sv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4sv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4sv);"))
  (define gl-ext-api:vertex-attrib-i4ubv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4ubv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ubv);"))
  (define gl-ext-api:vertex-attrib-i4usv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4usv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4usv);"))
  (define gl-ext-api:vertex-attrib-ipointer
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribIPointer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIPointer);"))
  (define gl-ext-api:get-vertex-attrib-iiv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribIiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIiv);"))
  (define gl-ext-api:get-vertex-attrib-iuiv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribIuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIuiv);"))
  (define gl-ext-api:get-uniformuiv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformuiv);"))
  (define gl-ext-api:bind-frag-data-location
    (foreign-lambda*
      "_ALLEGRO_glBindFragDataLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocation);"))
  (define gl-ext-api:get-frag-data-location
    (foreign-lambda*
      "_ALLEGRO_glGetFragDataLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataLocation);"))
  (define gl-ext-api:uniform1ui
    (foreign-lambda*
      "_ALLEGRO_glUniform1ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1ui);"))
  (define gl-ext-api:uniform2ui
    (foreign-lambda*
      "_ALLEGRO_glUniform2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2ui);"))
  (define gl-ext-api:uniform3ui
    (foreign-lambda*
      "_ALLEGRO_glUniform3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3ui);"))
  (define gl-ext-api:uniform4ui
    (foreign-lambda*
      "_ALLEGRO_glUniform4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4ui);"))
  (define gl-ext-api:uniform1uiv
    (foreign-lambda*
      "_ALLEGRO_glUniform1uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uiv);"))
  (define gl-ext-api:uniform2uiv
    (foreign-lambda*
      "_ALLEGRO_glUniform2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uiv);"))
  (define gl-ext-api:uniform3uiv
    (foreign-lambda*
      "_ALLEGRO_glUniform3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uiv);"))
  (define gl-ext-api:uniform4uiv
    (foreign-lambda*
      "_ALLEGRO_glUniform4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uiv);"))
  (define gl-ext-api:tex-parameter-iiv
    (foreign-lambda*
      "_ALLEGRO_glTexParameterIiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterIiv);"))
  (define gl-ext-api:tex-parameter-iuiv
    (foreign-lambda*
      "_ALLEGRO_glTexParameterIuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterIuiv);"))
  (define gl-ext-api:get-tex-parameter-iiv
    (foreign-lambda*
      "_ALLEGRO_glGetTexParameterIiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterIiv);"))
  (define gl-ext-api:get-tex-parameter-iuiv
    (foreign-lambda*
      "_ALLEGRO_glGetTexParameterIuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterIuiv);"))
  (define gl-ext-api:clear-bufferiv
    (foreign-lambda*
      "_ALLEGRO_glClearBufferiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferiv);"))
  (define gl-ext-api:clear-bufferuiv
    (foreign-lambda*
      "_ALLEGRO_glClearBufferuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferuiv);"))
  (define gl-ext-api:clear-bufferfv
    (foreign-lambda*
      "_ALLEGRO_glClearBufferfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferfv);"))
  (define gl-ext-api:clear-bufferfi
    (foreign-lambda*
      "_ALLEGRO_glClearBufferfi_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferfi);"))
  (define gl-ext-api:get-stringi
    (foreign-lambda*
      "_ALLEGRO_glGetStringi_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetStringi);"))
  (define gl-ext-api:draw-arrays-instanced
    (foreign-lambda*
      "_ALLEGRO_glDrawArraysInstanced_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstanced);"))
  (define gl-ext-api:draw-elements-instanced
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsInstanced_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstanced);"))
  (define gl-ext-api:tex-buffer
    (foreign-lambda*
      "_ALLEGRO_glTexBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBuffer);"))
  (define gl-ext-api:primitive-restart-index
    (foreign-lambda*
      "_ALLEGRO_glPrimitiveRestartIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartIndex);"))
  (define gl-ext-api:get-integer64i-v
    (foreign-lambda*
      "_ALLEGRO_glGetInteger64i_v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInteger64i_v);"))
  (define gl-ext-api:get-buffer-parameteri64v
    (foreign-lambda*
      "_ALLEGRO_glGetBufferParameteri64v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameteri64v);"))
  (define gl-ext-api:program-parameteri
    (foreign-lambda*
      "_ALLEGRO_glProgramParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteri);"))
  (define gl-ext-api:framebuffer-texture
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture);"))
  (define gl-ext-api:clear-buffer-data
    (foreign-lambda*
      "_ALLEGRO_glClearBufferData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferData);"))
  (define gl-ext-api:clear-buffer-sub-data
    (foreign-lambda*
      "_ALLEGRO_glClearBufferSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearBufferSubData);"))
  (define gl-ext-api:dispatch-compute
    (foreign-lambda*
      "_ALLEGRO_glDispatchCompute_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DispatchCompute);"))
  (define gl-ext-api:dispatch-compute-indirect
    (foreign-lambda*
      "_ALLEGRO_glDispatchComputeIndirect_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DispatchComputeIndirect);"))
  (define gl-ext-api:copy-image-sub-data
    (foreign-lambda*
      "_ALLEGRO_glCopyImageSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyImageSubData);"))
  (define gl-ext-api:framebuffer-parameteri
    (foreign-lambda*
      "_ALLEGRO_glFramebufferParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferParameteri);"))
  (define gl-ext-api:get-framebuffer-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetFramebufferParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferParameteriv);"))
  (define gl-ext-api:get-internalformati64v
    (foreign-lambda*
      "_ALLEGRO_glGetInternalformati64v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInternalformati64v);"))
  (define gl-ext-api:invalidate-tex-sub-image
    (foreign-lambda*
      "_ALLEGRO_glInvalidateTexSubImage_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateTexSubImage);"))
  (define gl-ext-api:invalidate-tex-image
    (foreign-lambda*
      "_ALLEGRO_glInvalidateTexImage_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateTexImage);"))
  (define gl-ext-api:invalidate-buffer-sub-data
    (foreign-lambda*
      "_ALLEGRO_glInvalidateBufferSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateBufferSubData);"))
  (define gl-ext-api:invalidate-buffer-data
    (foreign-lambda*
      "_ALLEGRO_glInvalidateBufferData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateBufferData);"))
  (define gl-ext-api:invalidate-framebuffer
    (foreign-lambda*
      "_ALLEGRO_glInvalidateFramebuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateFramebuffer);"))
  (define gl-ext-api:invalidate-sub-framebuffer
    (foreign-lambda*
      "_ALLEGRO_glInvalidateSubFramebuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InvalidateSubFramebuffer);"))
  (define gl-ext-api:multi-draw-arrays-indirect
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawArraysIndirect_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArraysIndirect);"))
  (define gl-ext-api:multi-draw-elements-indirect
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawElementsIndirect_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsIndirect);"))
  (define gl-ext-api:get-program-interfaceiv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramInterfaceiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramInterfaceiv);"))
  (define gl-ext-api:get-program-resource-index
    (foreign-lambda*
      "_ALLEGRO_glGetProgramResourceIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceIndex);"))
  (define gl-ext-api:get-program-resource-name
    (foreign-lambda*
      "_ALLEGRO_glGetProgramResourceName_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceName);"))
  (define gl-ext-api:get-program-resourceiv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramResourceiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceiv);"))
  (define gl-ext-api:get-program-resource-location
    (foreign-lambda*
      "_ALLEGRO_glGetProgramResourceLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceLocation);"))
  (define gl-ext-api:get-program-resource-location-index
    (foreign-lambda*
      "_ALLEGRO_glGetProgramResourceLocationIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramResourceLocationIndex);"))
  (define gl-ext-api:shader-storage-block-binding
    (foreign-lambda*
      "_ALLEGRO_glShaderStorageBlockBinding_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderStorageBlockBinding);"))
  (define gl-ext-api:tex-buffer-range
    (foreign-lambda*
      "_ALLEGRO_glTexBufferRange_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferRange);"))
  (define gl-ext-api:tex-storage2dmultisample
    (foreign-lambda*
      "_ALLEGRO_glTexStorage2DMultisample_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexStorage2DMultisample);"))
  (define gl-ext-api:tex-storage3dmultisample
    (foreign-lambda*
      "_ALLEGRO_glTexStorage3DMultisample_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexStorage3DMultisample);"))
  (define gl-ext-api:texture-view
    (foreign-lambda*
      "_ALLEGRO_glTextureView_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureView);"))
  (define gl-ext-api:bind-vertex-buffer
    (foreign-lambda*
      "_ALLEGRO_glBindVertexBuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexBuffer);"))
  (define gl-ext-api:vertex-attrib-format
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribFormat_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribFormat);"))
  (define gl-ext-api:vertex-attrib-iformat
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribIFormat_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIFormat);"))
  (define gl-ext-api:vertex-attrib-lformat
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribLFormat_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribLFormat);"))
  (define gl-ext-api:vertex-attrib-binding
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribBinding_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribBinding);"))
  (define gl-ext-api:vertex-binding-divisor
    (foreign-lambda*
      "_ALLEGRO_glVertexBindingDivisor_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBindingDivisor);"))
  (define gl-ext-api:debug-message-control
    (foreign-lambda*
      "_ALLEGRO_glDebugMessageControl_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageControl);"))
  (define gl-ext-api:debug-message-insert
    (foreign-lambda*
      "_ALLEGRO_glDebugMessageInsert_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageInsert);"))
  (define gl-ext-api:debug-message-callback
    (foreign-lambda*
      "_ALLEGRO_glDebugMessageCallback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DebugMessageCallback);"))
  (define gl-ext-api:get-debug-message-log
    (foreign-lambda*
      "_ALLEGRO_glGetDebugMessageLog_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDebugMessageLog);"))
  (define gl-ext-api:push-debug-group
    (foreign-lambda*
      "_ALLEGRO_glPushDebugGroup_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PushDebugGroup);"))
  (define gl-ext-api:pop-debug-group
    (foreign-lambda*
      "_ALLEGRO_glPopDebugGroup_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PopDebugGroup);"))
  (define gl-ext-api:object-label
    (foreign-lambda*
      "_ALLEGRO_glObjectLabel_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectLabel);"))
  (define gl-ext-api:get-object-label
    (foreign-lambda*
      "_ALLEGRO_glGetObjectLabel_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectLabel);"))
  (define gl-ext-api:object-ptr-label
    (foreign-lambda*
      "_ALLEGRO_glObjectPtrLabel_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectPtrLabel);"))
  (define gl-ext-api:get-object-ptr-label
    (foreign-lambda*
      "_ALLEGRO_glGetObjectPtrLabel_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectPtrLabel);"))
  (define gl-ext-api:active-texture-arb
    (foreign-lambda*
      "_ALLEGRO_glActiveTextureARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveTextureARB);"))
  (define gl-ext-api:client-active-texture-arb
    (foreign-lambda*
      "_ALLEGRO_glClientActiveTextureARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveTextureARB);"))
  (define gl-ext-api:multi-tex-coord1d-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dARB);"))
  (define gl-ext-api:multi-tex-coord1dv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1dvARB);"))
  (define gl-ext-api:multi-tex-coord1f-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fARB);"))
  (define gl-ext-api:multi-tex-coord1fv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1fvARB);"))
  (define gl-ext-api:multi-tex-coord1i-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1iARB);"))
  (define gl-ext-api:multi-tex-coord1iv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1ivARB);"))
  (define gl-ext-api:multi-tex-coord1s-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1sARB);"))
  (define gl-ext-api:multi-tex-coord1sv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1svARB);"))
  (define gl-ext-api:multi-tex-coord2d-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dARB);"))
  (define gl-ext-api:multi-tex-coord2dv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2dvARB);"))
  (define gl-ext-api:multi-tex-coord2f-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fARB);"))
  (define gl-ext-api:multi-tex-coord2fv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2fvARB);"))
  (define gl-ext-api:multi-tex-coord2i-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2iARB);"))
  (define gl-ext-api:multi-tex-coord2iv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2ivARB);"))
  (define gl-ext-api:multi-tex-coord2s-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2sARB);"))
  (define gl-ext-api:multi-tex-coord2sv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2svARB);"))
  (define gl-ext-api:multi-tex-coord3d-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dARB);"))
  (define gl-ext-api:multi-tex-coord3dv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3dvARB);"))
  (define gl-ext-api:multi-tex-coord3f-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fARB);"))
  (define gl-ext-api:multi-tex-coord3fv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3fvARB);"))
  (define gl-ext-api:multi-tex-coord3i-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3iARB);"))
  (define gl-ext-api:multi-tex-coord3iv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3ivARB);"))
  (define gl-ext-api:multi-tex-coord3s-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3sARB);"))
  (define gl-ext-api:multi-tex-coord3sv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3svARB);"))
  (define gl-ext-api:multi-tex-coord4d-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dARB);"))
  (define gl-ext-api:multi-tex-coord4dv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4dvARB);"))
  (define gl-ext-api:multi-tex-coord4f-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fARB);"))
  (define gl-ext-api:multi-tex-coord4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4fvARB);"))
  (define gl-ext-api:multi-tex-coord4i-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4iARB);"))
  (define gl-ext-api:multi-tex-coord4iv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4ivARB);"))
  (define gl-ext-api:multi-tex-coord4s-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4sARB);"))
  (define gl-ext-api:multi-tex-coord4sv-arb
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4svARB);"))
  (define gl-ext-api:load-transpose-matrixf-arb
    (foreign-lambda*
      "_ALLEGRO_glLoadTransposeMatrixfARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixfARB);"))
  (define gl-ext-api:load-transpose-matrixd-arb
    (foreign-lambda*
      "_ALLEGRO_glLoadTransposeMatrixdARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadTransposeMatrixdARB);"))
  (define gl-ext-api:mult-transpose-matrixf-arb
    (foreign-lambda*
      "_ALLEGRO_glMultTransposeMatrixfARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixfARB);"))
  (define gl-ext-api:mult-transpose-matrixd-arb
    (foreign-lambda*
      "_ALLEGRO_glMultTransposeMatrixdARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultTransposeMatrixdARB);"))
  (define gl-ext-api:sample-coverage-arb
    (foreign-lambda*
      "_ALLEGRO_glSampleCoverageARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverageARB);"))
  (define gl-ext-api:compressed-tex-image3darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage3DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage3DARB);"))
  (define gl-ext-api:compressed-tex-image2darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage2DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage2DARB);"))
  (define gl-ext-api:compressed-tex-image1darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexImage1DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexImage1DARB);"))
  (define gl-ext-api:compressed-tex-sub-image3darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage3DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage3DARB);"))
  (define gl-ext-api:compressed-tex-sub-image2darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage2DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage2DARB);"))
  (define gl-ext-api:compressed-tex-sub-image1darb
    (foreign-lambda*
      "_ALLEGRO_glCompressedTexSubImage1DARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTexSubImage1DARB);"))
  (define gl-ext-api:get-compressed-tex-image-arb
    (foreign-lambda*
      "_ALLEGRO_glGetCompressedTexImageARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTexImageARB);"))
  (define gl-ext-api:point-parameterf-arb
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfARB);"))
  (define gl-ext-api:point-parameterfv-arb
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvARB);"))
  (define gl-ext-api:weightbv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightbvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightbvARB);"))
  (define gl-ext-api:weightsv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightsvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightsvARB);"))
  (define gl-ext-api:weightiv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightivARB);"))
  (define gl-ext-api:weightfv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightfvARB);"))
  (define gl-ext-api:weightdv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightdvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightdvARB);"))
  (define gl-ext-api:weightubv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightubvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightubvARB);"))
  (define gl-ext-api:weightusv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightusvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightusvARB);"))
  (define gl-ext-api:weightuiv-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightuivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightuivARB);"))
  (define gl-ext-api:weight-pointer-arb
    (foreign-lambda*
      "_ALLEGRO_glWeightPointerARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WeightPointerARB);"))
  (define gl-ext-api:vertex-blend-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexBlendARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendARB);"))
  (define gl-ext-api:current-palette-matrix-arb
    (foreign-lambda*
      "_ALLEGRO_glCurrentPaletteMatrixARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CurrentPaletteMatrixARB);"))
  (define gl-ext-api:matrix-indexubv-arb
    (foreign-lambda*
      "_ALLEGRO_glMatrixIndexubvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexubvARB);"))
  (define gl-ext-api:matrix-indexusv-arb
    (foreign-lambda*
      "_ALLEGRO_glMatrixIndexusvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexusvARB);"))
  (define gl-ext-api:matrix-indexuiv-arb
    (foreign-lambda*
      "_ALLEGRO_glMatrixIndexuivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexuivARB);"))
  (define gl-ext-api:matrix-index-pointer-arb
    (foreign-lambda*
      "_ALLEGRO_glMatrixIndexPointerARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixIndexPointerARB);"))
  (define gl-ext-api:window-pos2d-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dARB);"))
  (define gl-ext-api:window-pos2dv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dvARB);"))
  (define gl-ext-api:window-pos2f-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fARB);"))
  (define gl-ext-api:window-pos2fv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fvARB);"))
  (define gl-ext-api:window-pos2i-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iARB);"))
  (define gl-ext-api:window-pos2iv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2ivARB);"))
  (define gl-ext-api:window-pos2s-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sARB);"))
  (define gl-ext-api:window-pos2sv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2svARB);"))
  (define gl-ext-api:window-pos3d-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dARB);"))
  (define gl-ext-api:window-pos3dv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dvARB);"))
  (define gl-ext-api:window-pos3f-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fARB);"))
  (define gl-ext-api:window-pos3fv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fvARB);"))
  (define gl-ext-api:window-pos3i-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iARB);"))
  (define gl-ext-api:window-pos3iv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3ivARB);"))
  (define gl-ext-api:window-pos3s-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sARB);"))
  (define gl-ext-api:window-pos3sv-arb
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3svARB);"))
  (define gl-ext-api:vertex-attrib1d-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dARB);"))
  (define gl-ext-api:vertex-attrib1dv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dvARB);"))
  (define gl-ext-api:vertex-attrib1f-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fARB);"))
  (define gl-ext-api:vertex-attrib1fv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fvARB);"))
  (define gl-ext-api:vertex-attrib1s-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sARB);"))
  (define gl-ext-api:vertex-attrib1sv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1svARB);"))
  (define gl-ext-api:vertex-attrib2d-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dARB);"))
  (define gl-ext-api:vertex-attrib2dv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dvARB);"))
  (define gl-ext-api:vertex-attrib2f-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fARB);"))
  (define gl-ext-api:vertex-attrib2fv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fvARB);"))
  (define gl-ext-api:vertex-attrib2s-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sARB);"))
  (define gl-ext-api:vertex-attrib2sv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2svARB);"))
  (define gl-ext-api:vertex-attrib3d-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dARB);"))
  (define gl-ext-api:vertex-attrib3dv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dvARB);"))
  (define gl-ext-api:vertex-attrib3f-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fARB);"))
  (define gl-ext-api:vertex-attrib3fv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fvARB);"))
  (define gl-ext-api:vertex-attrib3s-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sARB);"))
  (define gl-ext-api:vertex-attrib3sv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3svARB);"))
  (define gl-ext-api:vertex-attrib4nbv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NbvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NbvARB);"))
  (define gl-ext-api:vertex-attrib4niv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NivARB);"))
  (define gl-ext-api:vertex-attrib4nsv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NsvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NsvARB);"))
  (define gl-ext-api:vertex-attrib4nub-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NubARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NubARB);"))
  (define gl-ext-api:vertex-attrib4nubv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NubvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NubvARB);"))
  (define gl-ext-api:vertex-attrib4nuiv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NuivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NuivARB);"))
  (define gl-ext-api:vertex-attrib4nusv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4NusvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4NusvARB);"))
  (define gl-ext-api:vertex-attrib4bv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4bvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4bvARB);"))
  (define gl-ext-api:vertex-attrib4d-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dARB);"))
  (define gl-ext-api:vertex-attrib4dv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dvARB);"))
  (define gl-ext-api:vertex-attrib4f-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fARB);"))
  (define gl-ext-api:vertex-attrib4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fvARB);"))
  (define gl-ext-api:vertex-attrib4iv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ivARB);"))
  (define gl-ext-api:vertex-attrib4s-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4sARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sARB);"))
  (define gl-ext-api:vertex-attrib4sv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4svARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4svARB);"))
  (define gl-ext-api:vertex-attrib4ubv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4ubvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubvARB);"))
  (define gl-ext-api:vertex-attrib4uiv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4uivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4uivARB);"))
  (define gl-ext-api:vertex-attrib4usv-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4usvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4usvARB);"))
  (define gl-ext-api:vertex-attrib-pointer-arb
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribPointerARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointerARB);"))
  (define gl-ext-api:enable-vertex-attrib-array-arb
    (foreign-lambda*
      "_ALLEGRO_glEnableVertexAttribArrayARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribArrayARB);"))
  (define gl-ext-api:disable-vertex-attrib-array-arb
    (foreign-lambda*
      "_ALLEGRO_glDisableVertexAttribArrayARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribArrayARB);"))
  (define gl-ext-api:program-string-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramStringARB);"))
  (define gl-ext-api:bind-program-arb
    (foreign-lambda*
      "_ALLEGRO_glBindProgramARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindProgramARB);"))
  (define gl-ext-api:delete-programs-arb
    (foreign-lambda*
      "_ALLEGRO_glDeleteProgramsARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgramsARB);"))
  (define gl-ext-api:gen-programs-arb
    (foreign-lambda*
      "_ALLEGRO_glGenProgramsARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenProgramsARB);"))
  (define gl-ext-api:program-env-parameter4d-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameter4dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4dARB);"))
  (define gl-ext-api:program-env-parameter4dv-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameter4dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4dvARB);"))
  (define gl-ext-api:program-env-parameter4f-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameter4fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4fARB);"))
  (define gl-ext-api:program-env-parameter4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameter4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameter4fvARB);"))
  (define gl-ext-api:program-local-parameter4d-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameter4dARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4dARB);"))
  (define gl-ext-api:program-local-parameter4dv-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameter4dvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4dvARB);"))
  (define gl-ext-api:program-local-parameter4f-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameter4fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4fARB);"))
  (define gl-ext-api:program-local-parameter4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameter4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameter4fvARB);"))
  (define gl-ext-api:get-program-env-parameterdv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramEnvParameterdvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterdvARB);"))
  (define gl-ext-api:get-program-env-parameterfv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramEnvParameterfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterfvARB);"))
  (define gl-ext-api:get-program-local-parameterdv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramLocalParameterdvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterdvARB);"))
  (define gl-ext-api:get-program-local-parameterfv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramLocalParameterfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterfvARB);"))
  (define gl-ext-api:get-programiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramivARB);"))
  (define gl-ext-api:get-program-string-arb
    (foreign-lambda*
      "_ALLEGRO_glGetProgramStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStringARB);"))
  (define gl-ext-api:get-vertex-attribdv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribdvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdvARB);"))
  (define gl-ext-api:get-vertex-attribfv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfvARB);"))
  (define gl-ext-api:get-vertex-attribiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribivARB);"))
  (define gl-ext-api:get-vertex-attrib-pointerv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribPointervARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointervARB);"))
  (define gl-ext-api:is-program-arb
    (foreign-lambda*
      "_ALLEGRO_glIsProgramARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgramARB);"))
  (define gl-ext-api:bind-buffer-arb
    (foreign-lambda*
      "_ALLEGRO_glBindBufferARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferARB);"))
  (define gl-ext-api:delete-buffers-arb
    (foreign-lambda*
      "_ALLEGRO_glDeleteBuffersARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteBuffersARB);"))
  (define gl-ext-api:gen-buffers-arb
    (foreign-lambda*
      "_ALLEGRO_glGenBuffersARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenBuffersARB);"))
  (define gl-ext-api:is-buffer-arb
    (foreign-lambda*
      "_ALLEGRO_glIsBufferARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBufferARB);"))
  (define gl-ext-api:buffer-data-arb
    (foreign-lambda*
      "_ALLEGRO_glBufferDataARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferDataARB);"))
  (define gl-ext-api:buffer-sub-data-arb
    (foreign-lambda*
      "_ALLEGRO_glBufferSubDataARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferSubDataARB);"))
  (define gl-ext-api:get-buffer-sub-data-arb
    (foreign-lambda*
      "_ALLEGRO_glGetBufferSubDataARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferSubDataARB);"))
  (define gl-ext-api:map-buffer-arb
    (foreign-lambda*
      "_ALLEGRO_glMapBufferARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBufferARB);"))
  (define gl-ext-api:unmap-buffer-arb
    (foreign-lambda*
      "_ALLEGRO_glUnmapBufferARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapBufferARB);"))
  (define gl-ext-api:get-buffer-parameteriv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetBufferParameterivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameterivARB);"))
  (define gl-ext-api:get-buffer-pointerv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetBufferPointervARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferPointervARB);"))
  (define gl-ext-api:gen-queries-arb
    (foreign-lambda*
      "_ALLEGRO_glGenQueriesARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenQueriesARB);"))
  (define gl-ext-api:delete-queries-arb
    (foreign-lambda*
      "_ALLEGRO_glDeleteQueriesARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteQueriesARB);"))
  (define gl-ext-api:is-query-arb
    (foreign-lambda*
      "_ALLEGRO_glIsQueryARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsQueryARB);"))
  (define gl-ext-api:begin-query-arb
    (foreign-lambda*
      "_ALLEGRO_glBeginQueryARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQueryARB);"))
  (define gl-ext-api:end-query-arb
    (foreign-lambda*
      "_ALLEGRO_glEndQueryARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQueryARB);"))
  (define gl-ext-api:get-queryiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetQueryivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryivARB);"))
  (define gl-ext-api:get-query-objectiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectivARB);"))
  (define gl-ext-api:get-query-objectuiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectuivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectuivARB);"))
  (define gl-ext-api:delete-object-arb
    (foreign-lambda*
      "_ALLEGRO_glDeleteObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteObjectARB);"))
  (define gl-ext-api:get-handle-arb
    (foreign-lambda*
      "_ALLEGRO_glGetHandleARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHandleARB);"))
  (define gl-ext-api:detach-object-arb
    (foreign-lambda*
      "_ALLEGRO_glDetachObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetachObjectARB);"))
  (define gl-ext-api:create-shader-object-arb
    (foreign-lambda*
      "_ALLEGRO_glCreateShaderObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShaderObjectARB);"))
  (define gl-ext-api:shader-source-arb
    (foreign-lambda*
      "_ALLEGRO_glShaderSourceARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderSourceARB);"))
  (define gl-ext-api:compile-shader-arb
    (foreign-lambda*
      "_ALLEGRO_glCompileShaderARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShaderARB);"))
  (define gl-ext-api:create-program-object-arb
    (foreign-lambda*
      "_ALLEGRO_glCreateProgramObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateProgramObjectARB);"))
  (define gl-ext-api:attach-object-arb
    (foreign-lambda*
      "_ALLEGRO_glAttachObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AttachObjectARB);"))
  (define gl-ext-api:link-program-arb
    (foreign-lambda*
      "_ALLEGRO_glLinkProgramARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LinkProgramARB);"))
  (define gl-ext-api:use-program-object-arb
    (foreign-lambda*
      "_ALLEGRO_glUseProgramObjectARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseProgramObjectARB);"))
  (define gl-ext-api:validate-program-arb
    (foreign-lambda*
      "_ALLEGRO_glValidateProgramARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ValidateProgramARB);"))
  (define gl-ext-api:uniform1f-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform1fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fARB);"))
  (define gl-ext-api:uniform2f-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform2fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fARB);"))
  (define gl-ext-api:uniform3f-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform3fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fARB);"))
  (define gl-ext-api:uniform4f-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform4fARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fARB);"))
  (define gl-ext-api:uniform1i-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform1iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1iARB);"))
  (define gl-ext-api:uniform2i-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform2iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2iARB);"))
  (define gl-ext-api:uniform3i-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform3iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3iARB);"))
  (define gl-ext-api:uniform4i-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform4iARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4iARB);"))
  (define gl-ext-api:uniform1fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform1fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1fvARB);"))
  (define gl-ext-api:uniform2fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform2fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2fvARB);"))
  (define gl-ext-api:uniform3fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform3fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3fvARB);"))
  (define gl-ext-api:uniform4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4fvARB);"))
  (define gl-ext-api:uniform1iv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform1ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1ivARB);"))
  (define gl-ext-api:uniform2iv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform2ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2ivARB);"))
  (define gl-ext-api:uniform3iv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform3ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3ivARB);"))
  (define gl-ext-api:uniform4iv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniform4ivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4ivARB);"))
  (define gl-ext-api:uniform-matrix2fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2fvARB);"))
  (define gl-ext-api:uniform-matrix3fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3fvARB);"))
  (define gl-ext-api:uniform-matrix4fv-arb
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4fvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4fvARB);"))
  (define gl-ext-api:get-object-parameterfv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetObjectParameterfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterfvARB);"))
  (define gl-ext-api:get-object-parameteriv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetObjectParameterivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterivARB);"))
  (define gl-ext-api:get-info-log-arb
    (foreign-lambda*
      "_ALLEGRO_glGetInfoLogARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInfoLogARB);"))
  (define gl-ext-api:get-attached-objects-arb
    (foreign-lambda*
      "_ALLEGRO_glGetAttachedObjectsARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttachedObjectsARB);"))
  (define gl-ext-api:get-uniform-location-arb
    (foreign-lambda*
      "_ALLEGRO_glGetUniformLocationARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformLocationARB);"))
  (define gl-ext-api:get-active-uniform-arb
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniformARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformARB);"))
  (define gl-ext-api:get-uniformfv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetUniformfvARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformfvARB);"))
  (define gl-ext-api:get-uniformiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetUniformivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformivARB);"))
  (define gl-ext-api:get-shader-source-arb
    (foreign-lambda*
      "_ALLEGRO_glGetShaderSourceARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetShaderSourceARB);"))
  (define gl-ext-api:bind-attrib-location-arb
    (foreign-lambda*
      "_ALLEGRO_glBindAttribLocationARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindAttribLocationARB);"))
  (define gl-ext-api:get-active-attrib-arb
    (foreign-lambda*
      "_ALLEGRO_glGetActiveAttribARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveAttribARB);"))
  (define gl-ext-api:get-attrib-location-arb
    (foreign-lambda*
      "_ALLEGRO_glGetAttribLocationARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetAttribLocationARB);"))
  (define gl-ext-api:draw-buffers-arb
    (foreign-lambda*
      "_ALLEGRO_glDrawBuffersARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffersARB);"))
  (define gl-ext-api:clamp-color-arb
    (foreign-lambda*
      "_ALLEGRO_glClampColorARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClampColorARB);"))
  (define gl-ext-api:draw-arrays-instanced-arb
    (foreign-lambda*
      "_ALLEGRO_glDrawArraysInstancedARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstancedARB);"))
  (define gl-ext-api:draw-elements-instanced-arb
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsInstancedARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedARB);"))
  (define gl-ext-api:is-renderbuffer
    (foreign-lambda*
      "_ALLEGRO_glIsRenderbuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsRenderbuffer);"))
  (define gl-ext-api:bind-renderbuffer
    (foreign-lambda*
      "_ALLEGRO_glBindRenderbuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindRenderbuffer);"))
  (define gl-ext-api:delete-renderbuffers
    (foreign-lambda*
      "_ALLEGRO_glDeleteRenderbuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteRenderbuffers);"))
  (define gl-ext-api:gen-renderbuffers
    (foreign-lambda*
      "_ALLEGRO_glGenRenderbuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenRenderbuffers);"))
  (define gl-ext-api:renderbuffer-storage
    (foreign-lambda*
      "_ALLEGRO_glRenderbufferStorage_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorage);"))
  (define gl-ext-api:get-renderbuffer-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetRenderbufferParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetRenderbufferParameteriv);"))
  (define gl-ext-api:is-framebuffer
    (foreign-lambda*
      "_ALLEGRO_glIsFramebuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFramebuffer);"))
  (define gl-ext-api:bind-framebuffer
    (foreign-lambda*
      "_ALLEGRO_glBindFramebuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFramebuffer);"))
  (define gl-ext-api:delete-framebuffers
    (foreign-lambda*
      "_ALLEGRO_glDeleteFramebuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFramebuffers);"))
  (define gl-ext-api:gen-framebuffers
    (foreign-lambda*
      "_ALLEGRO_glGenFramebuffers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFramebuffers);"))
  (define gl-ext-api:check-framebuffer-status
    (foreign-lambda*
      "_ALLEGRO_glCheckFramebufferStatus_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckFramebufferStatus);"))
  (define gl-ext-api:framebuffer-texture1d
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture1D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture1D);"))
  (define gl-ext-api:framebuffer-texture2d
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture2D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture2D);"))
  (define gl-ext-api:framebuffer-texture3d
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture3D_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture3D);"))
  (define gl-ext-api:framebuffer-renderbuffer
    (foreign-lambda*
      "_ALLEGRO_glFramebufferRenderbuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferRenderbuffer);"))
  (define gl-ext-api:get-framebuffer-attachment-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetFramebufferAttachmentParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferAttachmentParameteriv);"))
  (define gl-ext-api:generate-mipmap
    (foreign-lambda*
      "_ALLEGRO_glGenerateMipmap_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMipmap);"))
  (define gl-ext-api:blit-framebuffer
    (foreign-lambda*
      "_ALLEGRO_glBlitFramebuffer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlitFramebuffer);"))
  (define gl-ext-api:renderbuffer-storage-multisample
    (foreign-lambda*
      "_ALLEGRO_glRenderbufferStorageMultisample_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultisample);"))
  (define gl-ext-api:framebuffer-texture-layer
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureLayer_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayer);"))
  (define gl-ext-api:program-parameteri-arb
    (foreign-lambda*
      "_ALLEGRO_glProgramParameteriARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteriARB);"))
  (define gl-ext-api:framebuffer-texture-arb
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureARB);"))
  (define gl-ext-api:framebuffer-texture-layer-arb
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureLayerARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayerARB);"))
  (define gl-ext-api:framebuffer-texture-face-arb
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureFaceARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureFaceARB);"))
  (define gl-ext-api:vertex-attrib-divisor
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribDivisor_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribDivisor);"))
  (define gl-ext-api:map-buffer-range
    (foreign-lambda*
      "_ALLEGRO_glMapBufferRange_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapBufferRange);"))
  (define gl-ext-api:flush-mapped-buffer-range
    (foreign-lambda*
      "_ALLEGRO_glFlushMappedBufferRange_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushMappedBufferRange);"))
  (define gl-ext-api:tex-buffer-arb
    (foreign-lambda*
      "_ALLEGRO_glTexBufferARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferARB);"))
  (define gl-ext-api:bind-vertex-array
    (foreign-lambda*
      "_ALLEGRO_glBindVertexArray_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexArray);"))
  (define gl-ext-api:delete-vertex-arrays
    (foreign-lambda*
      "_ALLEGRO_glDeleteVertexArrays_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexArrays);"))
  (define gl-ext-api:gen-vertex-arrays
    (foreign-lambda*
      "_ALLEGRO_glGenVertexArrays_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexArrays);"))
  (define gl-ext-api:is-vertex-array
    (foreign-lambda*
      "_ALLEGRO_glIsVertexArray_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexArray);"))
  (define gl-ext-api:get-uniform-indices
    (foreign-lambda*
      "_ALLEGRO_glGetUniformIndices_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformIndices);"))
  (define gl-ext-api:get-active-uniformsiv
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniformsiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformsiv);"))
  (define gl-ext-api:get-active-uniform-name
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniformName_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformName);"))
  (define gl-ext-api:get-uniform-block-index
    (foreign-lambda*
      "_ALLEGRO_glGetUniformBlockIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformBlockIndex);"))
  (define gl-ext-api:get-active-uniform-blockiv
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniformBlockiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformBlockiv);"))
  (define gl-ext-api:get-active-uniform-block-name
    (foreign-lambda*
      "_ALLEGRO_glGetActiveUniformBlockName_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveUniformBlockName);"))
  (define gl-ext-api:uniform-block-binding
    (foreign-lambda*
      "_ALLEGRO_glUniformBlockBinding_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformBlockBinding);"))
  (define gl-ext-api:copy-buffer-sub-data
    (foreign-lambda*
      "_ALLEGRO_glCopyBufferSubData_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyBufferSubData);"))
  (define gl-ext-api:draw-elements-base-vertex
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsBaseVertex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsBaseVertex);"))
  (define gl-ext-api:draw-range-elements-base-vertex
    (foreign-lambda*
      "_ALLEGRO_glDrawRangeElementsBaseVertex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementsBaseVertex);"))
  (define gl-ext-api:draw-elements-instanced-base-vertex
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsInstancedBaseVertex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedBaseVertex);"))
  (define gl-ext-api:multi-draw-elements-base-vertex
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawElementsBaseVertex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsBaseVertex);"))
  (define gl-ext-api:provoking-vertex
    (foreign-lambda*
      "_ALLEGRO_glProvokingVertex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProvokingVertex);"))
  (define gl-ext-api:fence-sync
    (foreign-lambda*
      "_ALLEGRO_glFenceSync_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FenceSync);"))
  (define gl-ext-api:is-sync
    (foreign-lambda*
      "_ALLEGRO_glIsSync_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsSync);"))
  (define gl-ext-api:delete-sync
    (foreign-lambda*
      "_ALLEGRO_glDeleteSync_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteSync);"))
  (define gl-ext-api:client-wait-sync
    (foreign-lambda*
      "_ALLEGRO_glClientWaitSync_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientWaitSync);"))
  (define gl-ext-api:wait-sync
    (foreign-lambda*
      "_ALLEGRO_glWaitSync_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WaitSync);"))
  (define gl-ext-api:get-integer64v
    (foreign-lambda*
      "_ALLEGRO_glGetInteger64v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInteger64v);"))
  (define gl-ext-api:get-synciv
    (foreign-lambda*
      "_ALLEGRO_glGetSynciv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSynciv);"))
  (define gl-ext-api:tex-image2dmultisample
    (foreign-lambda*
      "_ALLEGRO_glTexImage2DMultisample_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage2DMultisample);"))
  (define gl-ext-api:tex-image3dmultisample
    (foreign-lambda*
      "_ALLEGRO_glTexImage3DMultisample_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3DMultisample);"))
  (define gl-ext-api:get-multisamplefv
    (foreign-lambda*
      "_ALLEGRO_glGetMultisamplefv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultisamplefv);"))
  (define gl-ext-api:sample-maski
    (foreign-lambda*
      "_ALLEGRO_glSampleMaski_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaski);"))
  (define gl-ext-api:blend-equationi
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationi_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationi);"))
  (define gl-ext-api:blend-equation-separatei
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationSeparatei_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparatei);"))
  (define gl-ext-api:blend-funci
    (foreign-lambda*
      "_ALLEGRO_glBlendFunci_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFunci);"))
  (define gl-ext-api:blend-func-separatei
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncSeparatei_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparatei);"))
  (define gl-ext-api:min-sample-shading
    (foreign-lambda*
      "_ALLEGRO_glMinSampleShading_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MinSampleShading);"))
  (define gl-ext-api:named-string-arb
    (foreign-lambda*
      "_ALLEGRO_glNamedStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedStringARB);"))
  (define gl-ext-api:delete-named-string-arb
    (foreign-lambda*
      "_ALLEGRO_glDeleteNamedStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteNamedStringARB);"))
  (define gl-ext-api:compile-shader-include-arb
    (foreign-lambda*
      "_ALLEGRO_glCompileShaderIncludeARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompileShaderIncludeARB);"))
  (define gl-ext-api:is-named-string-arb
    (foreign-lambda*
      "_ALLEGRO_glIsNamedStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsNamedStringARB);"))
  (define gl-ext-api:get-named-string-arb
    (foreign-lambda*
      "_ALLEGRO_glGetNamedStringARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedStringARB);"))
  (define gl-ext-api:get-named-stringiv-arb
    (foreign-lambda*
      "_ALLEGRO_glGetNamedStringivARB_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedStringivARB);"))
  (define gl-ext-api:bind-frag-data-location-indexed
    (foreign-lambda*
      "_ALLEGRO_glBindFragDataLocationIndexed_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocationIndexed);"))
  (define gl-ext-api:get-frag-data-index
    (foreign-lambda*
      "_ALLEGRO_glGetFragDataIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataIndex);"))
  (define gl-ext-api:gen-samplers
    (foreign-lambda*
      "_ALLEGRO_glGenSamplers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenSamplers);"))
  (define gl-ext-api:delete-samplers
    (foreign-lambda*
      "_ALLEGRO_glDeleteSamplers_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteSamplers);"))
  (define gl-ext-api:is-sampler
    (foreign-lambda*
      "_ALLEGRO_glIsSampler_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsSampler);"))
  (define gl-ext-api:bind-sampler
    (foreign-lambda*
      "_ALLEGRO_glBindSampler_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindSampler);"))
  (define gl-ext-api:sampler-parameteri
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameteri);"))
  (define gl-ext-api:sampler-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameteriv);"))
  (define gl-ext-api:sampler-parameterf
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameterf_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterf);"))
  (define gl-ext-api:sampler-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterfv);"))
  (define gl-ext-api:sampler-parameter-iiv
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameterIiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterIiv);"))
  (define gl-ext-api:sampler-parameter-iuiv
    (foreign-lambda*
      "_ALLEGRO_glSamplerParameterIuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplerParameterIuiv);"))
  (define gl-ext-api:get-sampler-parameteriv
    (foreign-lambda*
      "_ALLEGRO_glGetSamplerParameteriv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameteriv);"))
  (define gl-ext-api:get-sampler-parameter-iiv
    (foreign-lambda*
      "_ALLEGRO_glGetSamplerParameterIiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterIiv);"))
  (define gl-ext-api:get-sampler-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glGetSamplerParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterfv);"))
  (define gl-ext-api:get-sampler-parameter-ifv
    (foreign-lambda*
      "_ALLEGRO_glGetSamplerParameterIfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSamplerParameterIfv);"))
  (define gl-ext-api:query-counter
    (foreign-lambda*
      "_ALLEGRO_glQueryCounter_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->QueryCounter);"))
  (define gl-ext-api:get-query-objecti64v
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjecti64v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjecti64v);"))
  (define gl-ext-api:get-query-objectui64v
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectui64v_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectui64v);"))
  (define gl-ext-api:vertex-p2ui
    (foreign-lambda*
      "_ALLEGRO_glVertexP2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP2ui);"))
  (define gl-ext-api:vertex-p2uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexP2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP2uiv);"))
  (define gl-ext-api:vertex-p3ui
    (foreign-lambda*
      "_ALLEGRO_glVertexP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP3ui);"))
  (define gl-ext-api:vertex-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP3uiv);"))
  (define gl-ext-api:vertex-p4ui
    (foreign-lambda*
      "_ALLEGRO_glVertexP4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP4ui);"))
  (define gl-ext-api:vertex-p4uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexP4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexP4uiv);"))
  (define gl-ext-api:tex-coord-p1ui
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP1ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP1ui);"))
  (define gl-ext-api:tex-coord-p1uiv
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP1uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP1uiv);"))
  (define gl-ext-api:tex-coord-p2ui
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP2ui);"))
  (define gl-ext-api:tex-coord-p2uiv
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP2uiv);"))
  (define gl-ext-api:tex-coord-p3ui
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP3ui);"))
  (define gl-ext-api:tex-coord-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP3uiv);"))
  (define gl-ext-api:tex-coord-p4ui
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP4ui);"))
  (define gl-ext-api:tex-coord-p4uiv
    (foreign-lambda*
      "_ALLEGRO_glTexCoordP4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordP4uiv);"))
  (define gl-ext-api:multi-tex-coord-p1ui
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP1ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP1ui);"))
  (define gl-ext-api:multi-tex-coord-p1uiv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP1uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP1uiv);"))
  (define gl-ext-api:multi-tex-coord-p2ui
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP2ui);"))
  (define gl-ext-api:multi-tex-coord-p2uiv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP2uiv);"))
  (define gl-ext-api:multi-tex-coord-p3ui
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP3ui);"))
  (define gl-ext-api:multi-tex-coord-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP3uiv);"))
  (define gl-ext-api:multi-tex-coord-p4ui
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP4ui);"))
  (define gl-ext-api:multi-tex-coord-p4uiv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordP4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordP4uiv);"))
  (define gl-ext-api:normal-p3ui
    (foreign-lambda*
      "_ALLEGRO_glNormalP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalP3ui);"))
  (define gl-ext-api:normal-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glNormalP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalP3uiv);"))
  (define gl-ext-api:color-p3ui
    (foreign-lambda*
      "_ALLEGRO_glColorP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP3ui);"))
  (define gl-ext-api:color-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glColorP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP3uiv);"))
  (define gl-ext-api:color-p4ui
    (foreign-lambda*
      "_ALLEGRO_glColorP4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP4ui);"))
  (define gl-ext-api:color-p4uiv
    (foreign-lambda*
      "_ALLEGRO_glColorP4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorP4uiv);"))
  (define gl-ext-api:secondary-color-p3ui
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColorP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorP3ui);"))
  (define gl-ext-api:secondary-color-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColorP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorP3uiv);"))
  (define gl-ext-api:vertex-attrib-p1ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP1ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP1ui);"))
  (define gl-ext-api:vertex-attrib-p1uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP1uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP1uiv);"))
  (define gl-ext-api:vertex-attrib-p2ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP2ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP2ui);"))
  (define gl-ext-api:vertex-attrib-p2uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP2uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP2uiv);"))
  (define gl-ext-api:vertex-attrib-p3ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP3ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP3ui);"))
  (define gl-ext-api:vertex-attrib-p3uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP3uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP3uiv);"))
  (define gl-ext-api:vertex-attrib-p4ui
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP4ui_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP4ui);"))
  (define gl-ext-api:vertex-attrib-p4uiv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribP4uiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribP4uiv);"))
  (define gl-ext-api:draw-arrays-indirect
    (foreign-lambda*
      "_ALLEGRO_glDrawArraysIndirect_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysIndirect);"))
  (define gl-ext-api:draw-elements-indirect
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsIndirect_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsIndirect);"))
  (define gl-ext-api:uniform1d
    (foreign-lambda*
      "_ALLEGRO_glUniform1d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1d);"))
  (define gl-ext-api:uniform2d
    (foreign-lambda*
      "_ALLEGRO_glUniform2d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2d);"))
  (define gl-ext-api:uniform3d
    (foreign-lambda*
      "_ALLEGRO_glUniform3d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3d);"))
  (define gl-ext-api:uniform4d
    (foreign-lambda*
      "_ALLEGRO_glUniform4d_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4d);"))
  (define gl-ext-api:uniform1dv
    (foreign-lambda*
      "_ALLEGRO_glUniform1dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1dv);"))
  (define gl-ext-api:uniform2dv
    (foreign-lambda*
      "_ALLEGRO_glUniform2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2dv);"))
  (define gl-ext-api:uniform3dv
    (foreign-lambda*
      "_ALLEGRO_glUniform3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3dv);"))
  (define gl-ext-api:uniform4dv
    (foreign-lambda*
      "_ALLEGRO_glUniform4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4dv);"))
  (define gl-ext-api:uniform-matrix2dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2dv);"))
  (define gl-ext-api:uniform-matrix3dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3dv);"))
  (define gl-ext-api:uniform-matrix4dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4dv);"))
  (define gl-ext-api:uniform-matrix2x3dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2x3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x3dv);"))
  (define gl-ext-api:uniform-matrix2x4dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix2x4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix2x4dv);"))
  (define gl-ext-api:uniform-matrix3x2dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3x2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x2dv);"))
  (define gl-ext-api:uniform-matrix3x4dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix3x4dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix3x4dv);"))
  (define gl-ext-api:uniform-matrix4x2dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4x2dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x2dv);"))
  (define gl-ext-api:uniform-matrix4x3dv
    (foreign-lambda*
      "_ALLEGRO_glUniformMatrix4x3dv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformMatrix4x3dv);"))
  (define gl-ext-api:get-uniformdv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformdv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformdv);"))
  (define gl-ext-api:program-uniform1d-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1dEXT);"))
  (define gl-ext-api:program-uniform2d-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2dEXT);"))
  (define gl-ext-api:program-uniform3d-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3dEXT);"))
  (define gl-ext-api:program-uniform4d-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4dEXT);"))
  (define gl-ext-api:program-uniform1dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1dvEXT);"))
  (define gl-ext-api:program-uniform2dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2dvEXT);"))
  (define gl-ext-api:program-uniform3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3dvEXT);"))
  (define gl-ext-api:program-uniform4dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4dvEXT);"))
  (define gl-ext-api:program-uniform-matrix2dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2dvEXT);"))
  (define gl-ext-api:program-uniform-matrix3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3dvEXT);"))
  (define gl-ext-api:program-uniform-matrix4dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4dvEXT);"))
  (define gl-ext-api:program-uniform-matrix2x3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2x3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x3dvEXT);"))
  (define gl-ext-api:program-uniform-matrix2x4dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2x4dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x4dvEXT);"))
  (define gl-ext-api:program-uniform-matrix3x2dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3x2dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x2dvEXT);"))
  (define gl-ext-api:program-uniform-matrix3x4dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3x4dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x4dvEXT);"))
  (define gl-ext-api:program-uniform-matrix4x2dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4x2dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x2dvEXT);"))
  (define gl-ext-api:program-uniform-matrix4x3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4x3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x3dvEXT);"))
  (define gl-ext-api:get-subroutine-uniform-location
    (foreign-lambda*
      "_ALLEGRO_glGetSubroutineUniformLocation_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSubroutineUniformLocation);"))
  (define gl-ext-api:get-subroutine-index
    (foreign-lambda*
      "_ALLEGRO_glGetSubroutineIndex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSubroutineIndex);"))
  (define gl-ext-api:get-active-subroutine-uniformiv
    (foreign-lambda*
      "_ALLEGRO_glGetActiveSubroutineUniformiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineUniformiv);"))
  (define gl-ext-api:get-active-subroutine-uniform-name
    (foreign-lambda*
      "_ALLEGRO_glGetActiveSubroutineUniformName_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineUniformName);"))
  (define gl-ext-api:get-active-subroutine-name
    (foreign-lambda*
      "_ALLEGRO_glGetActiveSubroutineName_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveSubroutineName);"))
  (define gl-ext-api:uniform-subroutinesuiv
    (foreign-lambda*
      "_ALLEGRO_glUniformSubroutinesuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformSubroutinesuiv);"))
  (define gl-ext-api:get-uniform-subroutineuiv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformSubroutineuiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformSubroutineuiv);"))
  (define gl-ext-api:get-program-stageiv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramStageiv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStageiv);"))
  (define gl-ext-api:patch-parameteri
    (foreign-lambda*
      "_ALLEGRO_glPatchParameteri_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PatchParameteri);"))
  (define gl-ext-api:patch-parameterfv
    (foreign-lambda*
      "_ALLEGRO_glPatchParameterfv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PatchParameterfv);"))
  (define gl-ext-api:bind-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glBindTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTransformFeedback);"))
  (define gl-ext-api:delete-transform-feedbacks
    (foreign-lambda*
      "_ALLEGRO_glDeleteTransformFeedbacks_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTransformFeedbacks);"))
  (define gl-ext-api:gen-transform-feedbacks
    (foreign-lambda*
      "_ALLEGRO_glGenTransformFeedbacks_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTransformFeedbacks);"))
  (define gl-ext-api:is-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glIsTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTransformFeedback);"))
  (define gl-ext-api:pause-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glPauseTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PauseTransformFeedback);"))
  (define gl-ext-api:resume-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glResumeTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResumeTransformFeedback);"))
  (define gl-ext-api:draw-transform-feedback
    (foreign-lambda*
      "_ALLEGRO_glDrawTransformFeedback_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedback);"))
  (define gl-ext-api:draw-transform-feedback-stream
    (foreign-lambda*
      "_ALLEGRO_glDrawTransformFeedbackStream_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedbackStream);"))
  (define gl-ext-api:begin-query-indexed
    (foreign-lambda*
      "_ALLEGRO_glBeginQueryIndexed_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginQueryIndexed);"))
  (define gl-ext-api:end-query-indexed
    (foreign-lambda*
      "_ALLEGRO_glEndQueryIndexed_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndQueryIndexed);"))
  (define gl-ext-api:get-query-indexediv
    (foreign-lambda*
      "_ALLEGRO_glGetQueryIndexediv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryIndexediv);"))
  (define gl-ext-api:blend-color-ext
    (foreign-lambda*
      "_ALLEGRO_glBlendColorEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColorEXT);"))
  (define gl-ext-api:polygon-offset-ext
    (foreign-lambda*
      "_ALLEGRO_glPolygonOffsetEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PolygonOffsetEXT);"))
  (define gl-ext-api:tex-image3dext
    (foreign-lambda*
      "_ALLEGRO_glTexImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage3DEXT);"))
  (define gl-ext-api:tex-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glTexSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage3DEXT);"))
  (define gl-ext-api:get-tex-filter-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetTexFilterFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexFilterFuncSGIS);"))
  (define gl-ext-api:tex-filter-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glTexFilterFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexFilterFuncSGIS);"))
  (define gl-ext-api:tex-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glTexSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage1DEXT);"))
  (define gl-ext-api:tex-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glTexSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage2DEXT);"))
  (define gl-ext-api:copy-tex-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTexImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexImage1DEXT);"))
  (define gl-ext-api:copy-tex-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTexImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexImage2DEXT);"))
  (define gl-ext-api:copy-tex-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTexSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage1DEXT);"))
  (define gl-ext-api:copy-tex-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTexSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage2DEXT);"))
  (define gl-ext-api:copy-tex-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTexSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTexSubImage3DEXT);"))
  (define gl-ext-api:get-histogram-ext
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramEXT);"))
  (define gl-ext-api:get-histogram-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterfvEXT);"))
  (define gl-ext-api:get-histogram-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterivEXT);"))
  (define gl-ext-api:get-minmax-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMinmaxEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxEXT);"))
  (define gl-ext-api:get-minmax-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMinmaxParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterfvEXT);"))
  (define gl-ext-api:get-minmax-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMinmaxParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMinmaxParameterivEXT);"))
  (define gl-ext-api:histogram-ext
    (foreign-lambda*
      "_ALLEGRO_glHistogramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->HistogramEXT);"))
  (define gl-ext-api:minmax-ext
    (foreign-lambda*
      "_ALLEGRO_glMinmaxEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MinmaxEXT);"))
  (define gl-ext-api:reset-histogram-ext
    (foreign-lambda*
      "_ALLEGRO_glResetHistogramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetHistogramEXT);"))
  (define gl-ext-api:reset-minmax-ext
    (foreign-lambda*
      "_ALLEGRO_glResetMinmaxEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResetMinmaxEXT);"))
  (define gl-ext-api:convolution-filter1dext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionFilter1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter1DEXT);"))
  (define gl-ext-api:convolution-filter2dext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionFilter2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionFilter2DEXT);"))
  (define gl-ext-api:convolution-parameterf-ext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfEXT);"))
  (define gl-ext-api:convolution-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterfvEXT);"))
  (define gl-ext-api:convolution-parameteri-ext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameteriEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameteriEXT);"))
  (define gl-ext-api:convolution-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterivEXT);"))
  (define gl-ext-api:copy-convolution-filter1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyConvolutionFilter1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter1DEXT);"))
  (define gl-ext-api:copy-convolution-filter2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyConvolutionFilter2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyConvolutionFilter2DEXT);"))
  (define gl-ext-api:get-convolution-filter-ext
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionFilterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionFilterEXT);"))
  (define gl-ext-api:get-convolution-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterfvEXT);"))
  (define gl-ext-api:get-convolution-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterivEXT);"))
  (define gl-ext-api:get-separable-filter-ext
    (foreign-lambda*
      "_ALLEGRO_glGetSeparableFilterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSeparableFilterEXT);"))
  (define gl-ext-api:separable-filter2dext
    (foreign-lambda*
      "_ALLEGRO_glSeparableFilter2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SeparableFilter2DEXT);"))
  (define gl-ext-api:color-table-sgi
    (foreign-lambda*
      "_ALLEGRO_glColorTableSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableSGI);"))
  (define gl-ext-api:color-table-parameterfv-sgi
    (foreign-lambda*
      "_ALLEGRO_glColorTableParameterfvSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterfvSGI);"))
  (define gl-ext-api:color-table-parameteriv-sgi
    (foreign-lambda*
      "_ALLEGRO_glColorTableParameterivSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableParameterivSGI);"))
  (define gl-ext-api:copy-color-table-sgi
    (foreign-lambda*
      "_ALLEGRO_glCopyColorTableSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorTableSGI);"))
  (define gl-ext-api:get-color-table-sgi
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableSGI);"))
  (define gl-ext-api:get-color-table-parameterfv-sgi
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameterfvSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfvSGI);"))
  (define gl-ext-api:get-color-table-parameteriv-sgi
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameterivSGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterivSGI);"))
  (define gl-ext-api:pixel-tex-gen-sgix
    (foreign-lambda*
      "_ALLEGRO_glPixelTexGenSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenSGIX);"))
  (define gl-ext-api:pixel-tex-gen-parameteri-sgis
    (foreign-lambda*
      "_ALLEGRO_glPixelTexGenParameteriSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameteriSGIS);"))
  (define gl-ext-api:pixel-tex-gen-parameteriv-sgis
    (foreign-lambda*
      "_ALLEGRO_glPixelTexGenParameterivSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterivSGIS);"))
  (define gl-ext-api:pixel-tex-gen-parameterf-sgis
    (foreign-lambda*
      "_ALLEGRO_glPixelTexGenParameterfSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterfSGIS);"))
  (define gl-ext-api:pixel-tex-gen-parameterfv-sgis
    (foreign-lambda*
      "_ALLEGRO_glPixelTexGenParameterfvSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTexGenParameterfvSGIS);"))
  (define gl-ext-api:get-pixel-tex-gen-parameteriv-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetPixelTexGenParameterivSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelTexGenParameterivSGIS);"))
  (define gl-ext-api:get-pixel-tex-gen-parameterfv-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetPixelTexGenParameterfvSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelTexGenParameterfvSGIS);"))
  (define gl-ext-api:tex-image4dsgis
    (foreign-lambda*
      "_ALLEGRO_glTexImage4DSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexImage4DSGIS);"))
  (define gl-ext-api:tex-sub-image4dsgis
    (foreign-lambda*
      "_ALLEGRO_glTexSubImage4DSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexSubImage4DSGIS);"))
  (define gl-ext-api:are-textures-resident-ext
    (foreign-lambda*
      "_ALLEGRO_glAreTexturesResidentEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AreTexturesResidentEXT);"))
  (define gl-ext-api:bind-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glBindTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTextureEXT);"))
  (define gl-ext-api:delete-textures-ext
    (foreign-lambda*
      "_ALLEGRO_glDeleteTexturesEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTexturesEXT);"))
  (define gl-ext-api:gen-textures-ext
    (foreign-lambda*
      "_ALLEGRO_glGenTexturesEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTexturesEXT);"))
  (define gl-ext-api:is-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glIsTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTextureEXT);"))
  (define gl-ext-api:prioritize-textures-ext
    (foreign-lambda*
      "_ALLEGRO_glPrioritizeTexturesEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrioritizeTexturesEXT);"))
  (define gl-ext-api:detail-tex-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glDetailTexFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DetailTexFuncSGIS);"))
  (define gl-ext-api:get-detail-tex-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetDetailTexFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDetailTexFuncSGIS);"))
  (define gl-ext-api:sharpen-tex-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glSharpenTexFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SharpenTexFuncSGIS);"))
  (define gl-ext-api:get-sharpen-tex-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetSharpenTexFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetSharpenTexFuncSGIS);"))
  (define gl-ext-api:sample-mask-sgis
    (foreign-lambda*
      "_ALLEGRO_glSampleMaskSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskSGIS);"))
  (define gl-ext-api:sample-pattern-sgis
    (foreign-lambda*
      "_ALLEGRO_glSamplePatternSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplePatternSGIS);"))
  (define gl-ext-api:array-element-ext
    (foreign-lambda*
      "_ALLEGRO_glArrayElementEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ArrayElementEXT);"))
  (define gl-ext-api:color-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glColorPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorPointerEXT);"))
  (define gl-ext-api:draw-arrays-ext
    (foreign-lambda*
      "_ALLEGRO_glDrawArraysEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysEXT);"))
  (define gl-ext-api:edge-flag-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glEdgeFlagPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EdgeFlagPointerEXT);"))
  (define gl-ext-api:get-pointerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetPointervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPointervEXT);"))
  (define gl-ext-api:index-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glIndexPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexPointerEXT);"))
  (define gl-ext-api:normal-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glNormalPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalPointerEXT);"))
  (define gl-ext-api:tex-coord-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glTexCoordPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordPointerEXT);"))
  (define gl-ext-api:vertex-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexPointerEXT);"))
  (define gl-ext-api:blend-equation-ext
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationEXT);"))
  (define gl-ext-api:sprite-parameterf-sgix
    (foreign-lambda*
      "_ALLEGRO_glSpriteParameterfSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterfSGIX);"))
  (define gl-ext-api:sprite-parameterfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glSpriteParameterfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterfvSGIX);"))
  (define gl-ext-api:sprite-parameteri-sgix
    (foreign-lambda*
      "_ALLEGRO_glSpriteParameteriSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameteriSGIX);"))
  (define gl-ext-api:sprite-parameteriv-sgix
    (foreign-lambda*
      "_ALLEGRO_glSpriteParameterivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SpriteParameterivSGIX);"))
  (define gl-ext-api:point-parameterf-ext
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfEXT);"))
  (define gl-ext-api:point-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvEXT);"))
  (define gl-ext-api:point-parameterf-sgis
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfSGIS);"))
  (define gl-ext-api:point-parameterfv-sgis
    (foreign-lambda*
      "_ALLEGRO_glPointParameterfvSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterfvSGIS);"))
  (define gl-ext-api:get-instruments-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetInstrumentsSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInstrumentsSGIX);"))
  (define gl-ext-api:instruments-buffer-sgix
    (foreign-lambda*
      "_ALLEGRO_glInstrumentsBufferSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InstrumentsBufferSGIX);"))
  (define gl-ext-api:poll-instruments-sgix
    (foreign-lambda*
      "_ALLEGRO_glPollInstrumentsSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PollInstrumentsSGIX);"))
  (define gl-ext-api:read-instruments-sgix
    (foreign-lambda*
      "_ALLEGRO_glReadInstrumentsSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReadInstrumentsSGIX);"))
  (define gl-ext-api:start-instruments-sgix
    (foreign-lambda*
      "_ALLEGRO_glStartInstrumentsSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StartInstrumentsSGIX);"))
  (define gl-ext-api:stop-instruments-sgix
    (foreign-lambda*
      "_ALLEGRO_glStopInstrumentsSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StopInstrumentsSGIX);"))
  (define gl-ext-api:frame-zoom-sgix
    (foreign-lambda*
      "_ALLEGRO_glFrameZoomSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrameZoomSGIX);"))
  (define gl-ext-api:tag-sample-buffer-sgix
    (foreign-lambda*
      "_ALLEGRO_glTagSampleBufferSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TagSampleBufferSGIX);"))
  (define gl-ext-api:deformation-map3d-sgix
    (foreign-lambda*
      "_ALLEGRO_glDeformationMap3dSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformationMap3dSGIX);"))
  (define gl-ext-api:deformation-map3f-sgix
    (foreign-lambda*
      "_ALLEGRO_glDeformationMap3fSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformationMap3fSGIX);"))
  (define gl-ext-api:deform-sgix
    (foreign-lambda*
      "_ALLEGRO_glDeformSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeformSGIX);"))
  (define gl-ext-api:load-identity-deformation-map-sgix
    (foreign-lambda*
      "_ALLEGRO_glLoadIdentityDeformationMapSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadIdentityDeformationMapSGIX);"))
  (define gl-ext-api:reference-plane-sgix
    (foreign-lambda*
      "_ALLEGRO_glReferencePlaneSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReferencePlaneSGIX);"))
  (define gl-ext-api:flush-raster-sgix
    (foreign-lambda*
      "_ALLEGRO_glFlushRasterSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushRasterSGIX);"))
  (define gl-ext-api:fog-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glFogFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogFuncSGIS);"))
  (define gl-ext-api:get-fog-func-sgis
    (foreign-lambda*
      "_ALLEGRO_glGetFogFuncSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFogFuncSGIS);"))
  (define gl-ext-api:image-transform-parameteri-hp
    (foreign-lambda*
      "_ALLEGRO_glImageTransformParameteriHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameteriHP);"))
  (define gl-ext-api:image-transform-parameterf-hp
    (foreign-lambda*
      "_ALLEGRO_glImageTransformParameterfHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterfHP);"))
  (define gl-ext-api:image-transform-parameteriv-hp
    (foreign-lambda*
      "_ALLEGRO_glImageTransformParameterivHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterivHP);"))
  (define gl-ext-api:image-transform-parameterfv-hp
    (foreign-lambda*
      "_ALLEGRO_glImageTransformParameterfvHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ImageTransformParameterfvHP);"))
  (define gl-ext-api:get-image-transform-parameteriv-hp
    (foreign-lambda*
      "_ALLEGRO_glGetImageTransformParameterivHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetImageTransformParameterivHP);"))
  (define gl-ext-api:get-image-transform-parameterfv-hp
    (foreign-lambda*
      "_ALLEGRO_glGetImageTransformParameterfvHP_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetImageTransformParameterfvHP);"))
  (define gl-ext-api:copy-color-sub-table-ext
    (foreign-lambda*
      "_ALLEGRO_glCopyColorSubTableEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyColorSubTableEXT);"))
  (define gl-ext-api:hint-pgi
    (foreign-lambda*
      "_ALLEGRO_glHintPGI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->HintPGI);"))
  (define gl-ext-api:color-table-ext
    (foreign-lambda*
      "_ALLEGRO_glColorTableEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorTableEXT);"))
  (define gl-ext-api:get-color-table-ext
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableEXT);"))
  (define gl-ext-api:get-color-table-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterivEXT);"))
  (define gl-ext-api:get-color-table-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetColorTableParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetColorTableParameterfvEXT);"))
  (define gl-ext-api:get-list-parameterfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetListParameterfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetListParameterfvSGIX);"))
  (define gl-ext-api:get-list-parameteriv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetListParameterivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetListParameterivSGIX);"))
  (define gl-ext-api:list-parameterf-sgix
    (foreign-lambda*
      "_ALLEGRO_glListParameterfSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterfSGIX);"))
  (define gl-ext-api:list-parameterfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glListParameterfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterfvSGIX);"))
  (define gl-ext-api:list-parameteri-sgix
    (foreign-lambda*
      "_ALLEGRO_glListParameteriSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameteriSGIX);"))
  (define gl-ext-api:list-parameteriv-sgix
    (foreign-lambda*
      "_ALLEGRO_glListParameterivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ListParameterivSGIX);"))
  (define gl-ext-api:index-material-ext
    (foreign-lambda*
      "_ALLEGRO_glIndexMaterialEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexMaterialEXT);"))
  (define gl-ext-api:index-func-ext
    (foreign-lambda*
      "_ALLEGRO_glIndexFuncEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexFuncEXT);"))
  (define gl-ext-api:lock-arrays-ext
    (foreign-lambda*
      "_ALLEGRO_glLockArraysEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LockArraysEXT);"))
  (define gl-ext-api:unlock-arrays-ext
    (foreign-lambda*
      "_ALLEGRO_glUnlockArraysEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnlockArraysEXT);"))
  (define gl-ext-api:cull-parameterdv-ext
    (foreign-lambda*
      "_ALLEGRO_glCullParameterdvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CullParameterdvEXT);"))
  (define gl-ext-api:cull-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glCullParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CullParameterfvEXT);"))
  (define gl-ext-api:fragment-color-material-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentColorMaterialSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentColorMaterialSGIX);"))
  (define gl-ext-api:fragment-lightf-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightfSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightfSGIX);"))
  (define gl-ext-api:fragment-lightfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightfvSGIX);"))
  (define gl-ext-api:fragment-lighti-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightiSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightiSGIX);"))
  (define gl-ext-api:fragment-lightiv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightivSGIX);"))
  (define gl-ext-api:fragment-light-modelf-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightModelfSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelfSGIX);"))
  (define gl-ext-api:fragment-light-modelfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightModelfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelfvSGIX);"))
  (define gl-ext-api:fragment-light-modeli-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightModeliSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModeliSGIX);"))
  (define gl-ext-api:fragment-light-modeliv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentLightModelivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentLightModelivSGIX);"))
  (define gl-ext-api:fragment-materialf-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentMaterialfSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialfSGIX);"))
  (define gl-ext-api:fragment-materialfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentMaterialfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialfvSGIX);"))
  (define gl-ext-api:fragment-materiali-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentMaterialiSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialiSGIX);"))
  (define gl-ext-api:fragment-materialiv-sgix
    (foreign-lambda*
      "_ALLEGRO_glFragmentMaterialivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FragmentMaterialivSGIX);"))
  (define gl-ext-api:get-fragment-lightfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetFragmentLightfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentLightfvSGIX);"))
  (define gl-ext-api:get-fragment-lightiv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetFragmentLightivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentLightivSGIX);"))
  (define gl-ext-api:get-fragment-materialfv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetFragmentMaterialfvSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentMaterialfvSGIX);"))
  (define gl-ext-api:get-fragment-materialiv-sgix
    (foreign-lambda*
      "_ALLEGRO_glGetFragmentMaterialivSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragmentMaterialivSGIX);"))
  (define gl-ext-api:light-envi-sgix
    (foreign-lambda*
      "_ALLEGRO_glLightEnviSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightEnviSGIX);"))
  (define gl-ext-api:draw-range-elements-ext
    (foreign-lambda*
      "_ALLEGRO_glDrawRangeElementsEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementsEXT);"))
  (define gl-ext-api:apply-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glApplyTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ApplyTextureEXT);"))
  (define gl-ext-api:texture-light-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureLightEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureLightEXT);"))
  (define gl-ext-api:texture-material-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureMaterialEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureMaterialEXT);"))
  (define gl-ext-api:async-marker-sgix
    (foreign-lambda*
      "_ALLEGRO_glAsyncMarkerSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AsyncMarkerSGIX);"))
  (define gl-ext-api:finish-async-sgix
    (foreign-lambda*
      "_ALLEGRO_glFinishAsyncSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishAsyncSGIX);"))
  (define gl-ext-api:poll-async-sgix
    (foreign-lambda*
      "_ALLEGRO_glPollAsyncSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PollAsyncSGIX);"))
  (define gl-ext-api:gen-async-markers-sgix
    (foreign-lambda*
      "_ALLEGRO_glGenAsyncMarkersSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenAsyncMarkersSGIX);"))
  (define gl-ext-api:delete-async-markers-sgix
    (foreign-lambda*
      "_ALLEGRO_glDeleteAsyncMarkersSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteAsyncMarkersSGIX);"))
  (define gl-ext-api:is-async-marker-sgix
    (foreign-lambda*
      "_ALLEGRO_glIsAsyncMarkerSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsAsyncMarkerSGIX);"))
  (define gl-ext-api:vertex-pointerv-intel
    (foreign-lambda*
      "_ALLEGRO_glVertexPointervINTEL_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexPointervINTEL);"))
  (define gl-ext-api:normal-pointerv-intel
    (foreign-lambda*
      "_ALLEGRO_glNormalPointervINTEL_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalPointervINTEL);"))
  (define gl-ext-api:color-pointerv-intel
    (foreign-lambda*
      "_ALLEGRO_glColorPointervINTEL_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorPointervINTEL);"))
  (define gl-ext-api:tex-coord-pointerv-intel
    (foreign-lambda*
      "_ALLEGRO_glTexCoordPointervINTEL_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordPointervINTEL);"))
  (define gl-ext-api:pixel-transform-parameteri-ext
    (foreign-lambda*
      "_ALLEGRO_glPixelTransformParameteriEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameteriEXT);"))
  (define gl-ext-api:pixel-transform-parameterf-ext
    (foreign-lambda*
      "_ALLEGRO_glPixelTransformParameterfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterfEXT);"))
  (define gl-ext-api:pixel-transform-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glPixelTransformParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterivEXT);"))
  (define gl-ext-api:pixel-transform-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glPixelTransformParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransformParameterfvEXT);"))
  (define gl-ext-api:secondary-color3b-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3bEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bEXT);"))
  (define gl-ext-api:secondary-color3bv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3bvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3bvEXT);"))
  (define gl-ext-api:secondary-color3d-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dEXT);"))
  (define gl-ext-api:secondary-color3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3dvEXT);"))
  (define gl-ext-api:secondary-color3f-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fEXT);"))
  (define gl-ext-api:secondary-color3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3fvEXT);"))
  (define gl-ext-api:secondary-color3i-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3iEXT);"))
  (define gl-ext-api:secondary-color3iv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ivEXT);"))
  (define gl-ext-api:secondary-color3s-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3sEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3sEXT);"))
  (define gl-ext-api:secondary-color3sv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3svEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3svEXT);"))
  (define gl-ext-api:secondary-color3ub-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ubEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubEXT);"))
  (define gl-ext-api:secondary-color3ubv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3ubvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3ubvEXT);"))
  (define gl-ext-api:secondary-color3ui-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uiEXT);"))
  (define gl-ext-api:secondary-color3uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3uivEXT);"))
  (define gl-ext-api:secondary-color3us-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3usEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usEXT);"))
  (define gl-ext-api:secondary-color3usv-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3usvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3usvEXT);"))
  (define gl-ext-api:secondary-color-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColorPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorPointerEXT);"))
  (define gl-ext-api:texture-normal-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureNormalEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureNormalEXT);"))
  (define gl-ext-api:multi-draw-arrays-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawArraysEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawArraysEXT);"))
  (define gl-ext-api:multi-draw-elements-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawElementsEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementsEXT);"))
  (define gl-ext-api:fog-coordf-ext
    (foreign-lambda*
      "_ALLEGRO_glFogCoordfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfEXT);"))
  (define gl-ext-api:fog-coordfv-ext
    (foreign-lambda*
      "_ALLEGRO_glFogCoordfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordfvEXT);"))
  (define gl-ext-api:fog-coordd-ext
    (foreign-lambda*
      "_ALLEGRO_glFogCoorddEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddEXT);"))
  (define gl-ext-api:fog-coorddv-ext
    (foreign-lambda*
      "_ALLEGRO_glFogCoorddvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoorddvEXT);"))
  (define gl-ext-api:fog-coord-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glFogCoordPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordPointerEXT);"))
  (define gl-ext-api:tangent3b-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3bEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3bEXT);"))
  (define gl-ext-api:tangent3bv-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3bvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3bvEXT);"))
  (define gl-ext-api:tangent3d-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3dEXT);"))
  (define gl-ext-api:tangent3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3dvEXT);"))
  (define gl-ext-api:tangent3f-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3fEXT);"))
  (define gl-ext-api:tangent3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3fvEXT);"))
  (define gl-ext-api:tangent3i-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3iEXT);"))
  (define gl-ext-api:tangent3iv-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3ivEXT);"))
  (define gl-ext-api:tangent3s-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3sEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3sEXT);"))
  (define gl-ext-api:tangent3sv-ext
    (foreign-lambda*
      "_ALLEGRO_glTangent3svEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Tangent3svEXT);"))
  (define gl-ext-api:binormal3b-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3bEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3bEXT);"))
  (define gl-ext-api:binormal3bv-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3bvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3bvEXT);"))
  (define gl-ext-api:binormal3d-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3dEXT);"))
  (define gl-ext-api:binormal3dv-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3dvEXT);"))
  (define gl-ext-api:binormal3f-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3fEXT);"))
  (define gl-ext-api:binormal3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3fvEXT);"))
  (define gl-ext-api:binormal3i-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3iEXT);"))
  (define gl-ext-api:binormal3iv-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3ivEXT);"))
  (define gl-ext-api:binormal3s-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3sEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3sEXT);"))
  (define gl-ext-api:binormal3sv-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormal3svEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Binormal3svEXT);"))
  (define gl-ext-api:tangent-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glTangentPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TangentPointerEXT);"))
  (define gl-ext-api:binormal-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glBinormalPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BinormalPointerEXT);"))
  (define gl-ext-api:finish-texture-sunx
    (foreign-lambda*
      "_ALLEGRO_glFinishTextureSUNX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishTextureSUNX);"))
  (define gl-ext-api:global-alpha-factorb-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactorbSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorbSUN);"))
  (define gl-ext-api:global-alpha-factors-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactorsSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorsSUN);"))
  (define gl-ext-api:global-alpha-factori-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactoriSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactoriSUN);"))
  (define gl-ext-api:global-alpha-factorf-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactorfSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorfSUN);"))
  (define gl-ext-api:global-alpha-factord-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactordSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactordSUN);"))
  (define gl-ext-api:global-alpha-factorub-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactorubSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorubSUN);"))
  (define gl-ext-api:global-alpha-factorus-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactorusSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactorusSUN);"))
  (define gl-ext-api:global-alpha-factorui-sun
    (foreign-lambda*
      "_ALLEGRO_glGlobalAlphaFactoruiSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GlobalAlphaFactoruiSUN);"))
  (define gl-ext-api:replacement-codeui-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiSUN);"))
  (define gl-ext-api:replacement-codeus-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeusSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeusSUN);"))
  (define gl-ext-api:replacement-codeub-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeubSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeubSUN);"))
  (define gl-ext-api:replacement-codeuiv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuivSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuivSUN);"))
  (define gl-ext-api:replacement-codeusv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeusvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeusvSUN);"))
  (define gl-ext-api:replacement-codeubv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeubvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeubvSUN);"))
  (define gl-ext-api:replacement-code-pointer-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodePointerSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodePointerSUN);"))
  (define gl-ext-api:color4ub-vertex2f-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4ubVertex2fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex2fSUN);"))
  (define gl-ext-api:color4ub-vertex2fv-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4ubVertex2fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex2fvSUN);"))
  (define gl-ext-api:color4ub-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4ubVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex3fSUN);"))
  (define gl-ext-api:color4ub-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4ubVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4ubVertex3fvSUN);"))
  (define gl-ext-api:color3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glColor3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3fVertex3fSUN);"))
  (define gl-ext-api:color3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glColor3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3fVertex3fvSUN);"))
  (define gl-ext-api:normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3fVertex3fSUN);"))
  (define gl-ext-api:normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3fVertex3fvSUN);"))
  (define gl-ext-api:color4f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4fNormal3fVertex3fSUN);"))
  (define gl-ext-api:color4f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glColor4fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:tex-coord2f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fVertex3fSUN);"))
  (define gl-ext-api:tex-coord2f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fVertex3fvSUN);"))
  (define gl-ext-api:tex-coord4f-vertex4f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4fVertex4fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fVertex4fSUN);"))
  (define gl-ext-api:tex-coord4f-vertex4fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4fVertex4fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fVertex4fvSUN);"))
  (define gl-ext-api:tex-coord2f-color4ub-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor4ubVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4ubVertex3fSUN);"))
  (define gl-ext-api:tex-coord2f-color4ub-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor4ubVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4ubVertex3fvSUN);"))
  (define gl-ext-api:tex-coord2f-color3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor3fVertex3fSUN);"))
  (define gl-ext-api:tex-coord2f-color3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor3fVertex3fvSUN);"))
  (define gl-ext-api:tex-coord2f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fNormal3fVertex3fSUN);"))
  (define gl-ext-api:tex-coord2f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:tex-coord2f-color4f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4fNormal3fVertex3fSUN);"))
  (define gl-ext-api:tex-coord2f-color4f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2fColor4fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:tex-coord4f-color4f-normal3f-vertex4f-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fColor4fNormal3fVertex4fSUN);"))
  (define gl-ext-api:tex-coord4f-color4f-normal3f-vertex4fv-sun
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4fColor4fNormal3fVertex4fvSUN);"))
  (define gl-ext-api:replacement-codeui-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-color4ub-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor4ubVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4ubVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-color4ub-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor4ubVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4ubVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-color3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor3fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-color3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor3fVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiNormal3fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiNormal3fVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-color4f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4fNormal3fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-color4f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiColor4fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3f-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN);"))
  (define gl-ext-api:replacement-codeui-tex-coord2f-color4f-normal3f-vertex3fv-sun
    (foreign-lambda*
      "_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN);"))
  (define gl-ext-api:blend-func-separate-ext
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncSeparateEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateEXT);"))
  (define gl-ext-api:blend-func-separate-ingr
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncSeparateINGR_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateINGR);"))
  (define gl-ext-api:vertex-weightf-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexWeightfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightfEXT);"))
  (define gl-ext-api:vertex-weightfv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexWeightfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightfvEXT);"))
  (define gl-ext-api:vertex-weight-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexWeightPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeightPointerEXT);"))
  (define gl-ext-api:flush-vertex-array-range-nv
    (foreign-lambda*
      "_ALLEGRO_glFlushVertexArrayRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushVertexArrayRangeNV);"))
  (define gl-ext-api:vertex-array-range-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexArrayRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayRangeNV);"))
  (define gl-ext-api:combiner-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterfvNV);"))
  (define gl-ext-api:combiner-parameterf-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerParameterfNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterfNV);"))
  (define gl-ext-api:combiner-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameterivNV);"))
  (define gl-ext-api:combiner-parameteri-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerParameteriNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerParameteriNV);"))
  (define gl-ext-api:combiner-input-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerInputNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerInputNV);"))
  (define gl-ext-api:combiner-output-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerOutputNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerOutputNV);"))
  (define gl-ext-api:final-combiner-input-nv
    (foreign-lambda*
      "_ALLEGRO_glFinalCombinerInputNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinalCombinerInputNV);"))
  (define gl-ext-api:get-combiner-input-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetCombinerInputParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerInputParameterfvNV);"))
  (define gl-ext-api:get-combiner-input-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetCombinerInputParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerInputParameterivNV);"))
  (define gl-ext-api:get-combiner-output-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetCombinerOutputParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerOutputParameterfvNV);"))
  (define gl-ext-api:get-combiner-output-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetCombinerOutputParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerOutputParameterivNV);"))
  (define gl-ext-api:get-final-combiner-input-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetFinalCombinerInputParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFinalCombinerInputParameterfvNV);"))
  (define gl-ext-api:get-final-combiner-input-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetFinalCombinerInputParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFinalCombinerInputParameterivNV);"))
  (define gl-ext-api:resize-buffers-mesa
    (foreign-lambda*
      "_ALLEGRO_glResizeBuffersMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResizeBuffersMESA);"))
  (define gl-ext-api:window-pos2d-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2dMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dMESA);"))
  (define gl-ext-api:window-pos2dv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2dvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2dvMESA);"))
  (define gl-ext-api:window-pos2f-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2fMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fMESA);"))
  (define gl-ext-api:window-pos2fv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2fvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2fvMESA);"))
  (define gl-ext-api:window-pos2i-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2iMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2iMESA);"))
  (define gl-ext-api:window-pos2iv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2ivMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2ivMESA);"))
  (define gl-ext-api:window-pos2s-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2sMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2sMESA);"))
  (define gl-ext-api:window-pos2sv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos2svMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos2svMESA);"))
  (define gl-ext-api:window-pos3d-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3dMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dMESA);"))
  (define gl-ext-api:window-pos3dv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3dvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3dvMESA);"))
  (define gl-ext-api:window-pos3f-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3fMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fMESA);"))
  (define gl-ext-api:window-pos3fv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3fvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3fvMESA);"))
  (define gl-ext-api:window-pos3i-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3iMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3iMESA);"))
  (define gl-ext-api:window-pos3iv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3ivMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3ivMESA);"))
  (define gl-ext-api:window-pos3s-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3sMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3sMESA);"))
  (define gl-ext-api:window-pos3sv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos3svMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos3svMESA);"))
  (define gl-ext-api:window-pos4d-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4dMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4dMESA);"))
  (define gl-ext-api:window-pos4dv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4dvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4dvMESA);"))
  (define gl-ext-api:window-pos4f-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4fMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4fMESA);"))
  (define gl-ext-api:window-pos4fv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4fvMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4fvMESA);"))
  (define gl-ext-api:window-pos4i-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4iMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4iMESA);"))
  (define gl-ext-api:window-pos4iv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4ivMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4ivMESA);"))
  (define gl-ext-api:window-pos4s-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4sMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4sMESA);"))
  (define gl-ext-api:window-pos4sv-mesa
    (foreign-lambda*
      "_ALLEGRO_glWindowPos4svMESA_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WindowPos4svMESA);"))
  (define gl-ext-api:multi-mode-draw-arrays-ibm
    (foreign-lambda*
      "_ALLEGRO_glMultiModeDrawArraysIBM_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiModeDrawArraysIBM);"))
  (define gl-ext-api:multi-mode-draw-elements-ibm
    (foreign-lambda*
      "_ALLEGRO_glMultiModeDrawElementsIBM_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiModeDrawElementsIBM);"))
  (define gl-ext-api:tbuffer-mask3dfx
    (foreign-lambda*
      "_ALLEGRO_glTbufferMask3DFX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TbufferMask3DFX);"))
  (define gl-ext-api:sample-mask-ext
    (foreign-lambda*
      "_ALLEGRO_glSampleMaskEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskEXT);"))
  (define gl-ext-api:sample-pattern-ext
    (foreign-lambda*
      "_ALLEGRO_glSamplePatternEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SamplePatternEXT);"))
  (define gl-ext-api:texture-color-mask-sgis
    (foreign-lambda*
      "_ALLEGRO_glTextureColorMaskSGIS_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureColorMaskSGIS);"))
  (define gl-ext-api:igloo-interface-sgix
    (foreign-lambda*
      "_ALLEGRO_glIglooInterfaceSGIX_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IglooInterfaceSGIX);"))
  (define gl-ext-api:delete-fences-nv
    (foreign-lambda*
      "_ALLEGRO_glDeleteFencesNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFencesNV);"))
  (define gl-ext-api:gen-fences-nv
    (foreign-lambda*
      "_ALLEGRO_glGenFencesNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFencesNV);"))
  (define gl-ext-api:is-fence-nv
    (foreign-lambda*
      "_ALLEGRO_glIsFenceNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFenceNV);"))
  (define gl-ext-api:test-fence-nv
    (foreign-lambda*
      "_ALLEGRO_glTestFenceNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestFenceNV);"))
  (define gl-ext-api:get-fenceiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetFenceivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFenceivNV);"))
  (define gl-ext-api:finish-fence-nv
    (foreign-lambda*
      "_ALLEGRO_glFinishFenceNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishFenceNV);"))
  (define gl-ext-api:set-fence-nv
    (foreign-lambda*
      "_ALLEGRO_glSetFenceNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFenceNV);"))
  (define gl-ext-api:map-control-points-nv
    (foreign-lambda*
      "_ALLEGRO_glMapControlPointsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapControlPointsNV);"))
  (define gl-ext-api:map-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glMapParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapParameterivNV);"))
  (define gl-ext-api:map-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glMapParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapParameterfvNV);"))
  (define gl-ext-api:get-map-control-points-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMapControlPointsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapControlPointsNV);"))
  (define gl-ext-api:get-map-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMapParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapParameterivNV);"))
  (define gl-ext-api:get-map-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMapParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapParameterfvNV);"))
  (define gl-ext-api:get-map-attrib-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMapAttribParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapAttribParameterivNV);"))
  (define gl-ext-api:get-map-attrib-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMapAttribParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapAttribParameterfvNV);"))
  (define gl-ext-api:eval-maps-nv
    (foreign-lambda*
      "_ALLEGRO_glEvalMapsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalMapsNV);"))
  (define gl-ext-api:combiner-stage-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glCombinerStageParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CombinerStageParameterfvNV);"))
  (define gl-ext-api:get-combiner-stage-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetCombinerStageParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCombinerStageParameterfvNV);"))
  (define gl-ext-api:are-programs-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glAreProgramsResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AreProgramsResidentNV);"))
  (define gl-ext-api:bind-program-nv
    (foreign-lambda*
      "_ALLEGRO_glBindProgramNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindProgramNV);"))
  (define gl-ext-api:delete-programs-nv
    (foreign-lambda*
      "_ALLEGRO_glDeleteProgramsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteProgramsNV);"))
  (define gl-ext-api:execute-program-nv
    (foreign-lambda*
      "_ALLEGRO_glExecuteProgramNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ExecuteProgramNV);"))
  (define gl-ext-api:gen-programs-nv
    (foreign-lambda*
      "_ALLEGRO_glGenProgramsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenProgramsNV);"))
  (define gl-ext-api:get-program-parameterdv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramParameterdvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramParameterdvNV);"))
  (define gl-ext-api:get-program-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramParameterfvNV);"))
  (define gl-ext-api:get-programiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramivNV);"))
  (define gl-ext-api:get-program-string-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramStringNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramStringNV);"))
  (define gl-ext-api:get-track-matrixiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetTrackMatrixivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTrackMatrixivNV);"))
  (define gl-ext-api:get-vertex-attribdv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribdvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribdvNV);"))
  (define gl-ext-api:get-vertex-attribfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribfvNV);"))
  (define gl-ext-api:get-vertex-attribiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribivNV);"))
  (define gl-ext-api:get-vertex-attrib-pointerv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribPointervNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribPointervNV);"))
  (define gl-ext-api:is-program-nv
    (foreign-lambda*
      "_ALLEGRO_glIsProgramNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsProgramNV);"))
  (define gl-ext-api:load-program-nv
    (foreign-lambda*
      "_ALLEGRO_glLoadProgramNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LoadProgramNV);"))
  (define gl-ext-api:program-parameter4d-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameter4dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4dNV);"))
  (define gl-ext-api:program-parameter4dv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameter4dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4dvNV);"))
  (define gl-ext-api:program-parameter4f-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameter4fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4fNV);"))
  (define gl-ext-api:program-parameter4fv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameter4fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameter4fvNV);"))
  (define gl-ext-api:program-parameters4dv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameters4dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameters4dvNV);"))
  (define gl-ext-api:program-parameters4fv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramParameters4fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameters4fvNV);"))
  (define gl-ext-api:request-resident-programs-nv
    (foreign-lambda*
      "_ALLEGRO_glRequestResidentProgramsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RequestResidentProgramsNV);"))
  (define gl-ext-api:track-matrix-nv
    (foreign-lambda*
      "_ALLEGRO_glTrackMatrixNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TrackMatrixNV);"))
  (define gl-ext-api:vertex-attrib-pointer-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribPointerNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribPointerNV);"))
  (define gl-ext-api:vertex-attrib1d-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dNV);"))
  (define gl-ext-api:vertex-attrib1dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1dvNV);"))
  (define gl-ext-api:vertex-attrib1f-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fNV);"))
  (define gl-ext-api:vertex-attrib1fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1fvNV);"))
  (define gl-ext-api:vertex-attrib1s-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1sNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1sNV);"))
  (define gl-ext-api:vertex-attrib1sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1svNV);"))
  (define gl-ext-api:vertex-attrib2d-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dNV);"))
  (define gl-ext-api:vertex-attrib2dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2dvNV);"))
  (define gl-ext-api:vertex-attrib2f-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fNV);"))
  (define gl-ext-api:vertex-attrib2fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2fvNV);"))
  (define gl-ext-api:vertex-attrib2s-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2sNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2sNV);"))
  (define gl-ext-api:vertex-attrib2sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2svNV);"))
  (define gl-ext-api:vertex-attrib3d-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dNV);"))
  (define gl-ext-api:vertex-attrib3dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3dvNV);"))
  (define gl-ext-api:vertex-attrib3f-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fNV);"))
  (define gl-ext-api:vertex-attrib3fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3fvNV);"))
  (define gl-ext-api:vertex-attrib3s-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3sNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3sNV);"))
  (define gl-ext-api:vertex-attrib3sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3svNV);"))
  (define gl-ext-api:vertex-attrib4d-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dNV);"))
  (define gl-ext-api:vertex-attrib4dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4dvNV);"))
  (define gl-ext-api:vertex-attrib4f-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fNV);"))
  (define gl-ext-api:vertex-attrib4fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4fvNV);"))
  (define gl-ext-api:vertex-attrib4s-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4sNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4sNV);"))
  (define gl-ext-api:vertex-attrib4sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4svNV);"))
  (define gl-ext-api:vertex-attrib4ub-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4ubNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubNV);"))
  (define gl-ext-api:vertex-attrib4ubv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4ubvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4ubvNV);"))
  (define gl-ext-api:vertex-attribs1dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs1dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1dvNV);"))
  (define gl-ext-api:vertex-attribs1fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs1fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1fvNV);"))
  (define gl-ext-api:vertex-attribs1sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs1svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1svNV);"))
  (define gl-ext-api:vertex-attribs2dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs2dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2dvNV);"))
  (define gl-ext-api:vertex-attribs2fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs2fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2fvNV);"))
  (define gl-ext-api:vertex-attribs2sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs2svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2svNV);"))
  (define gl-ext-api:vertex-attribs3dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs3dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3dvNV);"))
  (define gl-ext-api:vertex-attribs3fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs3fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3fvNV);"))
  (define gl-ext-api:vertex-attribs3sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs3svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3svNV);"))
  (define gl-ext-api:vertex-attribs4dv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs4dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4dvNV);"))
  (define gl-ext-api:vertex-attribs4fv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs4fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4fvNV);"))
  (define gl-ext-api:vertex-attribs4sv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs4svNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4svNV);"))
  (define gl-ext-api:vertex-attribs4ubv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs4ubvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4ubvNV);"))
  (define gl-ext-api:tex-bump-parameteriv-ati
    (foreign-lambda*
      "_ALLEGRO_glTexBumpParameterivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBumpParameterivATI);"))
  (define gl-ext-api:tex-bump-parameterfv-ati
    (foreign-lambda*
      "_ALLEGRO_glTexBumpParameterfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBumpParameterfvATI);"))
  (define gl-ext-api:get-tex-bump-parameteriv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetTexBumpParameterivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexBumpParameterivATI);"))
  (define gl-ext-api:get-tex-bump-parameterfv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetTexBumpParameterfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexBumpParameterfvATI);"))
  (define gl-ext-api:gen-fragment-shaders-ati
    (foreign-lambda*
      "_ALLEGRO_glGenFragmentShadersATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFragmentShadersATI);"))
  (define gl-ext-api:bind-fragment-shader-ati
    (foreign-lambda*
      "_ALLEGRO_glBindFragmentShaderATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragmentShaderATI);"))
  (define gl-ext-api:delete-fragment-shader-ati
    (foreign-lambda*
      "_ALLEGRO_glDeleteFragmentShaderATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFragmentShaderATI);"))
  (define gl-ext-api:begin-fragment-shader-ati
    (foreign-lambda*
      "_ALLEGRO_glBeginFragmentShaderATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginFragmentShaderATI);"))
  (define gl-ext-api:end-fragment-shader-ati
    (foreign-lambda*
      "_ALLEGRO_glEndFragmentShaderATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndFragmentShaderATI);"))
  (define gl-ext-api:pass-tex-coord-ati
    (foreign-lambda*
      "_ALLEGRO_glPassTexCoordATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PassTexCoordATI);"))
  (define gl-ext-api:sample-map-ati
    (foreign-lambda*
      "_ALLEGRO_glSampleMapATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMapATI);"))
  (define gl-ext-api:color-fragment-op1ati
    (foreign-lambda*
      "_ALLEGRO_glColorFragmentOp1ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp1ATI);"))
  (define gl-ext-api:color-fragment-op2ati
    (foreign-lambda*
      "_ALLEGRO_glColorFragmentOp2ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp2ATI);"))
  (define gl-ext-api:color-fragment-op3ati
    (foreign-lambda*
      "_ALLEGRO_glColorFragmentOp3ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFragmentOp3ATI);"))
  (define gl-ext-api:alpha-fragment-op1ati
    (foreign-lambda*
      "_ALLEGRO_glAlphaFragmentOp1ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp1ATI);"))
  (define gl-ext-api:alpha-fragment-op2ati
    (foreign-lambda*
      "_ALLEGRO_glAlphaFragmentOp2ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp2ATI);"))
  (define gl-ext-api:alpha-fragment-op3ati
    (foreign-lambda*
      "_ALLEGRO_glAlphaFragmentOp3ATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFragmentOp3ATI);"))
  (define gl-ext-api:set-fragment-shader-constant-ati
    (foreign-lambda*
      "_ALLEGRO_glSetFragmentShaderConstantATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFragmentShaderConstantATI);"))
  (define gl-ext-api:pntrianglesi-ati
    (foreign-lambda*
      "_ALLEGRO_glPNTrianglesiATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PNTrianglesiATI);"))
  (define gl-ext-api:pntrianglesf-ati
    (foreign-lambda*
      "_ALLEGRO_glPNTrianglesfATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PNTrianglesfATI);"))
  (define gl-ext-api:new-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glNewObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NewObjectBufferATI);"))
  (define gl-ext-api:is-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glIsObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsObjectBufferATI);"))
  (define gl-ext-api:update-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glUpdateObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UpdateObjectBufferATI);"))
  (define gl-ext-api:get-object-bufferfv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetObjectBufferfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectBufferfvATI);"))
  (define gl-ext-api:get-object-bufferiv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetObjectBufferivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectBufferivATI);"))
  (define gl-ext-api:free-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glFreeObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FreeObjectBufferATI);"))
  (define gl-ext-api:array-object-ati
    (foreign-lambda*
      "_ALLEGRO_glArrayObjectATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ArrayObjectATI);"))
  (define gl-ext-api:get-array-objectfv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetArrayObjectfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetArrayObjectfvATI);"))
  (define gl-ext-api:get-array-objectiv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetArrayObjectivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetArrayObjectivATI);"))
  (define gl-ext-api:variant-array-object-ati
    (foreign-lambda*
      "_ALLEGRO_glVariantArrayObjectATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantArrayObjectATI);"))
  (define gl-ext-api:get-variant-array-objectfv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetVariantArrayObjectfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantArrayObjectfvATI);"))
  (define gl-ext-api:get-variant-array-objectiv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetVariantArrayObjectivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantArrayObjectivATI);"))
  (define gl-ext-api:begin-vertex-shader-ext
    (foreign-lambda*
      "_ALLEGRO_glBeginVertexShaderEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginVertexShaderEXT);"))
  (define gl-ext-api:end-vertex-shader-ext
    (foreign-lambda*
      "_ALLEGRO_glEndVertexShaderEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndVertexShaderEXT);"))
  (define gl-ext-api:bind-vertex-shader-ext
    (foreign-lambda*
      "_ALLEGRO_glBindVertexShaderEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexShaderEXT);"))
  (define gl-ext-api:gen-vertex-shaders-ext
    (foreign-lambda*
      "_ALLEGRO_glGenVertexShadersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexShadersEXT);"))
  (define gl-ext-api:delete-vertex-shader-ext
    (foreign-lambda*
      "_ALLEGRO_glDeleteVertexShaderEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexShaderEXT);"))
  (define gl-ext-api:shader-op1ext
    (foreign-lambda*
      "_ALLEGRO_glShaderOp1EXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp1EXT);"))
  (define gl-ext-api:shader-op2ext
    (foreign-lambda*
      "_ALLEGRO_glShaderOp2EXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp2EXT);"))
  (define gl-ext-api:shader-op3ext
    (foreign-lambda*
      "_ALLEGRO_glShaderOp3EXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ShaderOp3EXT);"))
  (define gl-ext-api:swizzle-ext
    (foreign-lambda*
      "_ALLEGRO_glSwizzleEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SwizzleEXT);"))
  (define gl-ext-api:write-mask-ext
    (foreign-lambda*
      "_ALLEGRO_glWriteMaskEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->WriteMaskEXT);"))
  (define gl-ext-api:insert-component-ext
    (foreign-lambda*
      "_ALLEGRO_glInsertComponentEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->InsertComponentEXT);"))
  (define gl-ext-api:extract-component-ext
    (foreign-lambda*
      "_ALLEGRO_glExtractComponentEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ExtractComponentEXT);"))
  (define gl-ext-api:gen-symbols-ext
    (foreign-lambda*
      "_ALLEGRO_glGenSymbolsEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenSymbolsEXT);"))
  (define gl-ext-api:set-invariant-ext
    (foreign-lambda*
      "_ALLEGRO_glSetInvariantEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetInvariantEXT);"))
  (define gl-ext-api:set-local-constant-ext
    (foreign-lambda*
      "_ALLEGRO_glSetLocalConstantEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetLocalConstantEXT);"))
  (define gl-ext-api:variantbv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantbvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantbvEXT);"))
  (define gl-ext-api:variantsv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantsvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantsvEXT);"))
  (define gl-ext-api:variantiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantivEXT);"))
  (define gl-ext-api:variantfv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantfvEXT);"))
  (define gl-ext-api:variantdv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantdvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantdvEXT);"))
  (define gl-ext-api:variantubv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantubvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantubvEXT);"))
  (define gl-ext-api:variantusv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantusvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantusvEXT);"))
  (define gl-ext-api:variantuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantuivEXT);"))
  (define gl-ext-api:variant-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glVariantPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VariantPointerEXT);"))
  (define gl-ext-api:enable-variant-client-state-ext
    (foreign-lambda*
      "_ALLEGRO_glEnableVariantClientStateEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVariantClientStateEXT);"))
  (define gl-ext-api:disable-variant-client-state-ext
    (foreign-lambda*
      "_ALLEGRO_glDisableVariantClientStateEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVariantClientStateEXT);"))
  (define gl-ext-api:bind-light-parameter-ext
    (foreign-lambda*
      "_ALLEGRO_glBindLightParameterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindLightParameterEXT);"))
  (define gl-ext-api:bind-material-parameter-ext
    (foreign-lambda*
      "_ALLEGRO_glBindMaterialParameterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindMaterialParameterEXT);"))
  (define gl-ext-api:bind-tex-gen-parameter-ext
    (foreign-lambda*
      "_ALLEGRO_glBindTexGenParameterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTexGenParameterEXT);"))
  (define gl-ext-api:bind-texture-unit-parameter-ext
    (foreign-lambda*
      "_ALLEGRO_glBindTextureUnitParameterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTextureUnitParameterEXT);"))
  (define gl-ext-api:bind-parameter-ext
    (foreign-lambda*
      "_ALLEGRO_glBindParameterEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindParameterEXT);"))
  (define gl-ext-api:is-variant-enabled-ext
    (foreign-lambda*
      "_ALLEGRO_glIsVariantEnabledEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVariantEnabledEXT);"))
  (define gl-ext-api:get-variant-booleanv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVariantBooleanvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantBooleanvEXT);"))
  (define gl-ext-api:get-variant-integerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVariantIntegervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantIntegervEXT);"))
  (define gl-ext-api:get-variant-floatv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVariantFloatvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantFloatvEXT);"))
  (define gl-ext-api:get-variant-pointerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVariantPointervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVariantPointervEXT);"))
  (define gl-ext-api:get-invariant-booleanv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetInvariantBooleanvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantBooleanvEXT);"))
  (define gl-ext-api:get-invariant-integerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetInvariantIntegervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantIntegervEXT);"))
  (define gl-ext-api:get-invariant-floatv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetInvariantFloatvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetInvariantFloatvEXT);"))
  (define gl-ext-api:get-local-constant-booleanv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetLocalConstantBooleanvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantBooleanvEXT);"))
  (define gl-ext-api:get-local-constant-integerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetLocalConstantIntegervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantIntegervEXT);"))
  (define gl-ext-api:get-local-constant-floatv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetLocalConstantFloatvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLocalConstantFloatvEXT);"))
  (define gl-ext-api:vertex-stream1s-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1sATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1sATI);"))
  (define gl-ext-api:vertex-stream1sv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1svATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1svATI);"))
  (define gl-ext-api:vertex-stream1i-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1iATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1iATI);"))
  (define gl-ext-api:vertex-stream1iv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1ivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1ivATI);"))
  (define gl-ext-api:vertex-stream1f-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1fATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1fATI);"))
  (define gl-ext-api:vertex-stream1fv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1fvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1fvATI);"))
  (define gl-ext-api:vertex-stream1d-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1dATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1dATI);"))
  (define gl-ext-api:vertex-stream1dv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream1dvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream1dvATI);"))
  (define gl-ext-api:vertex-stream2s-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2sATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2sATI);"))
  (define gl-ext-api:vertex-stream2sv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2svATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2svATI);"))
  (define gl-ext-api:vertex-stream2i-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2iATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2iATI);"))
  (define gl-ext-api:vertex-stream2iv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2ivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2ivATI);"))
  (define gl-ext-api:vertex-stream2f-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2fATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2fATI);"))
  (define gl-ext-api:vertex-stream2fv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2fvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2fvATI);"))
  (define gl-ext-api:vertex-stream2d-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2dATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2dATI);"))
  (define gl-ext-api:vertex-stream2dv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream2dvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream2dvATI);"))
  (define gl-ext-api:vertex-stream3s-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3sATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3sATI);"))
  (define gl-ext-api:vertex-stream3sv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3svATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3svATI);"))
  (define gl-ext-api:vertex-stream3i-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3iATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3iATI);"))
  (define gl-ext-api:vertex-stream3iv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3ivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3ivATI);"))
  (define gl-ext-api:vertex-stream3f-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3fATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3fATI);"))
  (define gl-ext-api:vertex-stream3fv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3fvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3fvATI);"))
  (define gl-ext-api:vertex-stream3d-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3dATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3dATI);"))
  (define gl-ext-api:vertex-stream3dv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream3dvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream3dvATI);"))
  (define gl-ext-api:vertex-stream4s-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4sATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4sATI);"))
  (define gl-ext-api:vertex-stream4sv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4svATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4svATI);"))
  (define gl-ext-api:vertex-stream4i-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4iATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4iATI);"))
  (define gl-ext-api:vertex-stream4iv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4ivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4ivATI);"))
  (define gl-ext-api:vertex-stream4f-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4fATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4fATI);"))
  (define gl-ext-api:vertex-stream4fv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4fvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4fvATI);"))
  (define gl-ext-api:vertex-stream4d-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4dATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4dATI);"))
  (define gl-ext-api:vertex-stream4dv-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexStream4dvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexStream4dvATI);"))
  (define gl-ext-api:normal-stream3b-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3bATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3bATI);"))
  (define gl-ext-api:normal-stream3bv-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3bvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3bvATI);"))
  (define gl-ext-api:normal-stream3s-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3sATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3sATI);"))
  (define gl-ext-api:normal-stream3sv-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3svATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3svATI);"))
  (define gl-ext-api:normal-stream3i-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3iATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3iATI);"))
  (define gl-ext-api:normal-stream3iv-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3ivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3ivATI);"))
  (define gl-ext-api:normal-stream3f-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3fATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3fATI);"))
  (define gl-ext-api:normal-stream3fv-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3fvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3fvATI);"))
  (define gl-ext-api:normal-stream3d-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3dATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3dATI);"))
  (define gl-ext-api:normal-stream3dv-ati
    (foreign-lambda*
      "_ALLEGRO_glNormalStream3dvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalStream3dvATI);"))
  (define gl-ext-api:client-active-vertex-stream-ati
    (foreign-lambda*
      "_ALLEGRO_glClientActiveVertexStreamATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientActiveVertexStreamATI);"))
  (define gl-ext-api:vertex-blend-envi-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexBlendEnviATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendEnviATI);"))
  (define gl-ext-api:vertex-blend-envf-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexBlendEnvfATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexBlendEnvfATI);"))
  (define gl-ext-api:element-pointer-ati
    (foreign-lambda*
      "_ALLEGRO_glElementPointerATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ElementPointerATI);"))
  (define gl-ext-api:draw-element-array-ati
    (foreign-lambda*
      "_ALLEGRO_glDrawElementArrayATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementArrayATI);"))
  (define gl-ext-api:draw-range-element-array-ati
    (foreign-lambda*
      "_ALLEGRO_glDrawRangeElementArrayATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementArrayATI);"))
  (define gl-ext-api:draw-mesh-arrays-sun
    (foreign-lambda*
      "_ALLEGRO_glDrawMeshArraysSUN_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawMeshArraysSUN);"))
  (define gl-ext-api:gen-occlusion-queries-nv
    (foreign-lambda*
      "_ALLEGRO_glGenOcclusionQueriesNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenOcclusionQueriesNV);"))
  (define gl-ext-api:delete-occlusion-queries-nv
    (foreign-lambda*
      "_ALLEGRO_glDeleteOcclusionQueriesNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteOcclusionQueriesNV);"))
  (define gl-ext-api:is-occlusion-query-nv
    (foreign-lambda*
      "_ALLEGRO_glIsOcclusionQueryNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsOcclusionQueryNV);"))
  (define gl-ext-api:begin-occlusion-query-nv
    (foreign-lambda*
      "_ALLEGRO_glBeginOcclusionQueryNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginOcclusionQueryNV);"))
  (define gl-ext-api:end-occlusion-query-nv
    (foreign-lambda*
      "_ALLEGRO_glEndOcclusionQueryNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndOcclusionQueryNV);"))
  (define gl-ext-api:get-occlusion-queryiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetOcclusionQueryivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetOcclusionQueryivNV);"))
  (define gl-ext-api:get-occlusion-queryuiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetOcclusionQueryuivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetOcclusionQueryuivNV);"))
  (define gl-ext-api:point-parameteri-nv
    (foreign-lambda*
      "_ALLEGRO_glPointParameteriNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameteriNV);"))
  (define gl-ext-api:point-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glPointParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointParameterivNV);"))
  (define gl-ext-api:active-stencil-face-ext
    (foreign-lambda*
      "_ALLEGRO_glActiveStencilFaceEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveStencilFaceEXT);"))
  (define gl-ext-api:element-pointer-apple
    (foreign-lambda*
      "_ALLEGRO_glElementPointerAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ElementPointerAPPLE);"))
  (define gl-ext-api:draw-element-array-apple
    (foreign-lambda*
      "_ALLEGRO_glDrawElementArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementArrayAPPLE);"))
  (define gl-ext-api:draw-range-element-array-apple
    (foreign-lambda*
      "_ALLEGRO_glDrawRangeElementArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawRangeElementArrayAPPLE);"))
  (define gl-ext-api:multi-draw-element-array-apple
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawElementArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawElementArrayAPPLE);"))
  (define gl-ext-api:multi-draw-range-element-array-apple
    (foreign-lambda*
      "_ALLEGRO_glMultiDrawRangeElementArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiDrawRangeElementArrayAPPLE);"))
  (define gl-ext-api:gen-fences-apple
    (foreign-lambda*
      "_ALLEGRO_glGenFencesAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFencesAPPLE);"))
  (define gl-ext-api:delete-fences-apple
    (foreign-lambda*
      "_ALLEGRO_glDeleteFencesAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFencesAPPLE);"))
  (define gl-ext-api:set-fence-apple
    (foreign-lambda*
      "_ALLEGRO_glSetFenceAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SetFenceAPPLE);"))
  (define gl-ext-api:is-fence-apple
    (foreign-lambda*
      "_ALLEGRO_glIsFenceAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFenceAPPLE);"))
  (define gl-ext-api:test-fence-apple
    (foreign-lambda*
      "_ALLEGRO_glTestFenceAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestFenceAPPLE);"))
  (define gl-ext-api:finish-fence-apple
    (foreign-lambda*
      "_ALLEGRO_glFinishFenceAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishFenceAPPLE);"))
  (define gl-ext-api:test-object-apple
    (foreign-lambda*
      "_ALLEGRO_glTestObjectAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TestObjectAPPLE);"))
  (define gl-ext-api:finish-object-apple
    (foreign-lambda*
      "_ALLEGRO_glFinishObjectAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FinishObjectAPPLE);"))
  (define gl-ext-api:bind-vertex-array-apple
    (foreign-lambda*
      "_ALLEGRO_glBindVertexArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVertexArrayAPPLE);"))
  (define gl-ext-api:delete-vertex-arrays-apple
    (foreign-lambda*
      "_ALLEGRO_glDeleteVertexArraysAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteVertexArraysAPPLE);"))
  (define gl-ext-api:gen-vertex-arrays-apple
    (foreign-lambda*
      "_ALLEGRO_glGenVertexArraysAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenVertexArraysAPPLE);"))
  (define gl-ext-api:is-vertex-array-apple
    (foreign-lambda*
      "_ALLEGRO_glIsVertexArrayAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexArrayAPPLE);"))
  (define gl-ext-api:vertex-array-range-apple
    (foreign-lambda*
      "_ALLEGRO_glVertexArrayRangeAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayRangeAPPLE);"))
  (define gl-ext-api:flush-vertex-array-range-apple
    (foreign-lambda*
      "_ALLEGRO_glFlushVertexArrayRangeAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushVertexArrayRangeAPPLE);"))
  (define gl-ext-api:vertex-array-parameteri-apple
    (foreign-lambda*
      "_ALLEGRO_glVertexArrayParameteriAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexArrayParameteriAPPLE);"))
  (define gl-ext-api:draw-buffers-ati
    (foreign-lambda*
      "_ALLEGRO_glDrawBuffersATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawBuffersATI);"))
  (define gl-ext-api:program-named-parameter4f-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramNamedParameter4fNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4fNV);"))
  (define gl-ext-api:program-named-parameter4d-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramNamedParameter4dNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4dNV);"))
  (define gl-ext-api:program-named-parameter4fv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramNamedParameter4fvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4fvNV);"))
  (define gl-ext-api:program-named-parameter4dv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramNamedParameter4dvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramNamedParameter4dvNV);"))
  (define gl-ext-api:get-program-named-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramNamedParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramNamedParameterfvNV);"))
  (define gl-ext-api:get-program-named-parameterdv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramNamedParameterdvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramNamedParameterdvNV);"))
  (define gl-ext-api:vertex2h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex2hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2hNV);"))
  (define gl-ext-api:vertex2hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex2hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2hvNV);"))
  (define gl-ext-api:vertex3h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3hNV);"))
  (define gl-ext-api:vertex3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3hvNV);"))
  (define gl-ext-api:vertex4h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex4hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4hNV);"))
  (define gl-ext-api:vertex4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertex4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4hvNV);"))
  (define gl-ext-api:normal3h-nv
    (foreign-lambda*
      "_ALLEGRO_glNormal3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3hNV);"))
  (define gl-ext-api:normal3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glNormal3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3hvNV);"))
  (define gl-ext-api:color3h-nv
    (foreign-lambda*
      "_ALLEGRO_glColor3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3hNV);"))
  (define gl-ext-api:color3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glColor3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3hvNV);"))
  (define gl-ext-api:color4h-nv
    (foreign-lambda*
      "_ALLEGRO_glColor4hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4hNV);"))
  (define gl-ext-api:color4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glColor4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4hvNV);"))
  (define gl-ext-api:tex-coord1h-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1hNV);"))
  (define gl-ext-api:tex-coord1hv-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1hvNV);"))
  (define gl-ext-api:tex-coord2h-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2hNV);"))
  (define gl-ext-api:tex-coord2hv-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2hvNV);"))
  (define gl-ext-api:tex-coord3h-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3hNV);"))
  (define gl-ext-api:tex-coord3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3hvNV);"))
  (define gl-ext-api:tex-coord4h-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4hNV);"))
  (define gl-ext-api:tex-coord4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4hvNV);"))
  (define gl-ext-api:multi-tex-coord1h-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1hNV);"))
  (define gl-ext-api:multi-tex-coord1hv-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1hvNV);"))
  (define gl-ext-api:multi-tex-coord2h-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2hNV);"))
  (define gl-ext-api:multi-tex-coord2hv-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2hvNV);"))
  (define gl-ext-api:multi-tex-coord3h-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3hNV);"))
  (define gl-ext-api:multi-tex-coord3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3hvNV);"))
  (define gl-ext-api:multi-tex-coord4h-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4hNV);"))
  (define gl-ext-api:multi-tex-coord4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4hvNV);"))
  (define gl-ext-api:fog-coordh-nv
    (foreign-lambda*
      "_ALLEGRO_glFogCoordhNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordhNV);"))
  (define gl-ext-api:fog-coordhv-nv
    (foreign-lambda*
      "_ALLEGRO_glFogCoordhvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordhvNV);"))
  (define gl-ext-api:secondary-color3h-nv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3hNV);"))
  (define gl-ext-api:secondary-color3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColor3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColor3hvNV);"))
  (define gl-ext-api:vertex-weighth-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexWeighthNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeighthNV);"))
  (define gl-ext-api:vertex-weighthv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexWeighthvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexWeighthvNV);"))
  (define gl-ext-api:vertex-attrib1h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1hNV);"))
  (define gl-ext-api:vertex-attrib1hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib1hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib1hvNV);"))
  (define gl-ext-api:vertex-attrib2h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2hNV);"))
  (define gl-ext-api:vertex-attrib2hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib2hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib2hvNV);"))
  (define gl-ext-api:vertex-attrib3h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3hNV);"))
  (define gl-ext-api:vertex-attrib3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib3hvNV);"))
  (define gl-ext-api:vertex-attrib4h-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4hNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4hNV);"))
  (define gl-ext-api:vertex-attrib4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttrib4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttrib4hvNV);"))
  (define gl-ext-api:vertex-attribs1hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs1hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs1hvNV);"))
  (define gl-ext-api:vertex-attribs2hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs2hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs2hvNV);"))
  (define gl-ext-api:vertex-attribs3hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs3hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs3hvNV);"))
  (define gl-ext-api:vertex-attribs4hv-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribs4hvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribs4hvNV);"))
  (define gl-ext-api:pixel-data-range-nv
    (foreign-lambda*
      "_ALLEGRO_glPixelDataRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelDataRangeNV);"))
  (define gl-ext-api:flush-pixel-data-range-nv
    (foreign-lambda*
      "_ALLEGRO_glFlushPixelDataRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushPixelDataRangeNV);"))
  (define gl-ext-api:primitive-restart-nv
    (foreign-lambda*
      "_ALLEGRO_glPrimitiveRestartNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartNV);"))
  (define gl-ext-api:primitive-restart-index-nv
    (foreign-lambda*
      "_ALLEGRO_glPrimitiveRestartIndexNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrimitiveRestartIndexNV);"))
  (define gl-ext-api:map-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glMapObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapObjectBufferATI);"))
  (define gl-ext-api:unmap-object-buffer-ati
    (foreign-lambda*
      "_ALLEGRO_glUnmapObjectBufferATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapObjectBufferATI);"))
  (define gl-ext-api:vertex-attrib-array-object-ati
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribArrayObjectATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribArrayObjectATI);"))
  (define gl-ext-api:get-vertex-attrib-array-objectfv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribArrayObjectfvATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribArrayObjectfvATI);"))
  (define gl-ext-api:get-vertex-attrib-array-objectiv-ati
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribArrayObjectivATI_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribArrayObjectivATI);"))
  (define gl-ext-api:vertex2b-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex2bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2bOES);"))
  (define gl-ext-api:vertex3b-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex3bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3bOES);"))
  (define gl-ext-api:vertex4b-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex4bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4bOES);"))
  (define gl-ext-api:vertex2bv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex2bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2bvOES);"))
  (define gl-ext-api:vertex3bv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex3bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3bvOES);"))
  (define gl-ext-api:vertex4bv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex4bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4bvOES);"))
  (define gl-ext-api:tex-coord1b-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1bOES);"))
  (define gl-ext-api:tex-coord2b-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2bOES);"))
  (define gl-ext-api:tex-coord3b-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3bOES);"))
  (define gl-ext-api:tex-coord4b-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4bOES);"))
  (define gl-ext-api:tex-coord1bv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1bvOES);"))
  (define gl-ext-api:tex-coord2bv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2bvOES);"))
  (define gl-ext-api:tex-coord3bv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3bvOES);"))
  (define gl-ext-api:tex-coord4bv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4bvOES);"))
  (define gl-ext-api:multi-tex-coord1b-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1bOES);"))
  (define gl-ext-api:multi-tex-coord2b-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2bOES);"))
  (define gl-ext-api:multi-tex-coord3b-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3bOES);"))
  (define gl-ext-api:multi-tex-coord4b-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4bOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4bOES);"))
  (define gl-ext-api:multi-tex-coord1bv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1bvOES);"))
  (define gl-ext-api:multi-tex-coord2bv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2bvOES);"))
  (define gl-ext-api:multi-tex-coord3bv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3bvOES);"))
  (define gl-ext-api:multi-tex-coord4bv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4bvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4bvOES);"))
  (define gl-ext-api:vertex2x-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2xOES);"))
  (define gl-ext-api:vertex3x-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3xOES);"))
  (define gl-ext-api:vertex4x-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex4xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4xOES);"))
  (define gl-ext-api:vertex2xv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex2xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex2xvOES);"))
  (define gl-ext-api:vertex3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex3xvOES);"))
  (define gl-ext-api:vertex4xv-oes
    (foreign-lambda*
      "_ALLEGRO_glVertex4xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Vertex4xvOES);"))
  (define gl-ext-api:normal3x-oes
    (foreign-lambda*
      "_ALLEGRO_glNormal3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3xOES);"))
  (define gl-ext-api:normal3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glNormal3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Normal3xvOES);"))
  (define gl-ext-api:tex-coord1x-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1xOES);"))
  (define gl-ext-api:tex-coord2x-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2xOES);"))
  (define gl-ext-api:tex-coord3x-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3xOES);"))
  (define gl-ext-api:tex-coord4x-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4xOES);"))
  (define gl-ext-api:tex-coord1xv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord1xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord1xvOES);"))
  (define gl-ext-api:tex-coord2xv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord2xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord2xvOES);"))
  (define gl-ext-api:tex-coord3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord3xvOES);"))
  (define gl-ext-api:tex-coord4xv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexCoord4xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoord4xvOES);"))
  (define gl-ext-api:multi-tex-coord1x-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1xOES);"))
  (define gl-ext-api:multi-tex-coord2x-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2xOES);"))
  (define gl-ext-api:multi-tex-coord3x-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3xOES);"))
  (define gl-ext-api:multi-tex-coord4x-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4xOES);"))
  (define gl-ext-api:multi-tex-coord1xv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord1xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord1xvOES);"))
  (define gl-ext-api:multi-tex-coord2xv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord2xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord2xvOES);"))
  (define gl-ext-api:multi-tex-coord3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord3xvOES);"))
  (define gl-ext-api:multi-tex-coord4xv-oes
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoord4xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoord4xvOES);"))
  (define gl-ext-api:color3x-oes
    (foreign-lambda*
      "_ALLEGRO_glColor3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3xOES);"))
  (define gl-ext-api:color4x-oes
    (foreign-lambda*
      "_ALLEGRO_glColor4xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4xOES);"))
  (define gl-ext-api:color3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glColor3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color3xvOES);"))
  (define gl-ext-api:color4xv-oes
    (foreign-lambda*
      "_ALLEGRO_glColor4xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Color4xvOES);"))
  (define gl-ext-api:indexx-oes
    (foreign-lambda*
      "_ALLEGRO_glIndexxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexxOES);"))
  (define gl-ext-api:indexxv-oes
    (foreign-lambda*
      "_ALLEGRO_glIndexxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexxvOES);"))
  (define gl-ext-api:rectx-oes
    (foreign-lambda*
      "_ALLEGRO_glRectxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RectxOES);"))
  (define gl-ext-api:depth-rangex-oes
    (foreign-lambda*
      "_ALLEGRO_glDepthRangexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangexOES);"))
  (define gl-ext-api:rotatex-oes
    (foreign-lambda*
      "_ALLEGRO_glRotatexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RotatexOES);"))
  (define gl-ext-api:scalex-oes
    (foreign-lambda*
      "_ALLEGRO_glScalexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ScalexOES);"))
  (define gl-ext-api:translatex-oes
    (foreign-lambda*
      "_ALLEGRO_glTranslatexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TranslatexOES);"))
  (define gl-ext-api:frustumx-oes
    (foreign-lambda*
      "_ALLEGRO_glFrustumxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrustumxOES);"))
  (define gl-ext-api:orthox-oes
    (foreign-lambda*
      "_ALLEGRO_glOrthoxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->OrthoxOES);"))
  (define gl-ext-api:tex-genx-oes
    (foreign-lambda*
      "_ALLEGRO_glTexGenxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexGenxOES);"))
  (define gl-ext-api:tex-genxv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexGenxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexGenxvOES);"))
  (define gl-ext-api:get-tex-genxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetTexGenxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexGenxvOES);"))
  (define gl-ext-api:clip-planex-oes
    (foreign-lambda*
      "_ALLEGRO_glClipPlanexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClipPlanexOES);"))
  (define gl-ext-api:get-clip-planex-oes
    (foreign-lambda*
      "_ALLEGRO_glGetClipPlanexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetClipPlanexOES);"))
  (define gl-ext-api:raster-pos2x-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos2xOES);"))
  (define gl-ext-api:raster-pos3x-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos3xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos3xOES);"))
  (define gl-ext-api:raster-pos4x-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos4xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos4xOES);"))
  (define gl-ext-api:raster-pos2xv-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos2xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos2xvOES);"))
  (define gl-ext-api:raster-pos3xv-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos3xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos3xvOES);"))
  (define gl-ext-api:raster-pos4xv-oes
    (foreign-lambda*
      "_ALLEGRO_glRasterPos4xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RasterPos4xvOES);"))
  (define gl-ext-api:materialx-oes
    (foreign-lambda*
      "_ALLEGRO_glMaterialxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MaterialxOES);"))
  (define gl-ext-api:materialxv-oes
    (foreign-lambda*
      "_ALLEGRO_glMaterialxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MaterialxvOES);"))
  (define gl-ext-api:get-materialx-oes
    (foreign-lambda*
      "_ALLEGRO_glGetMaterialxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMaterialxOES);"))
  (define gl-ext-api:lightx-oes
    (foreign-lambda*
      "_ALLEGRO_glLightxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightxOES);"))
  (define gl-ext-api:lightxv-oes
    (foreign-lambda*
      "_ALLEGRO_glLightxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightxvOES);"))
  (define gl-ext-api:get-lightx-oes
    (foreign-lambda*
      "_ALLEGRO_glGetLightxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetLightxOES);"))
  (define gl-ext-api:light-modelx-oes
    (foreign-lambda*
      "_ALLEGRO_glLightModelxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightModelxOES);"))
  (define gl-ext-api:light-modelxv-oes
    (foreign-lambda*
      "_ALLEGRO_glLightModelxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LightModelxvOES);"))
  (define gl-ext-api:point-sizex-oes
    (foreign-lambda*
      "_ALLEGRO_glPointSizexOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PointSizexOES);"))
  (define gl-ext-api:line-widthx-oes
    (foreign-lambda*
      "_ALLEGRO_glLineWidthxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->LineWidthxOES);"))
  (define gl-ext-api:polygon-offsetx-oes
    (foreign-lambda*
      "_ALLEGRO_glPolygonOffsetxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PolygonOffsetxOES);"))
  (define gl-ext-api:pixel-storex
    (foreign-lambda*
      "_ALLEGRO_glPixelStorex_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelStorex);"))
  (define gl-ext-api:pixel-transferx-oes
    (foreign-lambda*
      "_ALLEGRO_glPixelTransferxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelTransferxOES);"))
  (define gl-ext-api:pixel-mapx
    (foreign-lambda*
      "_ALLEGRO_glPixelMapx_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelMapx);"))
  (define gl-ext-api:get-pixel-mapxv
    (foreign-lambda*
      "_ALLEGRO_glGetPixelMapxv_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPixelMapxv);"))
  (define gl-ext-api:convolution-parameterx-oes
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterxOES);"))
  (define gl-ext-api:convolution-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glConvolutionParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ConvolutionParameterxvOES);"))
  (define gl-ext-api:get-convolution-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetConvolutionParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetConvolutionParameterxvOES);"))
  (define gl-ext-api:get-histogram-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetHistogramParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetHistogramParameterxvOES);"))
  (define gl-ext-api:pixel-zoomx-oes
    (foreign-lambda*
      "_ALLEGRO_glPixelZoomxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PixelZoomxOES);"))
  (define gl-ext-api:bitmapx-oes
    (foreign-lambda*
      "_ALLEGRO_glBitmapxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BitmapxOES);"))
  (define gl-ext-api:tex-parameterx-oes
    (foreign-lambda*
      "_ALLEGRO_glTexParameterxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterxOES);"))
  (define gl-ext-api:tex-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexParameterxvOES);"))
  (define gl-ext-api:get-tex-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetTexParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterxvOES);"))
  (define gl-ext-api:get-tex-level-parameterxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetTexLevelParameterxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexLevelParameterxvOES);"))
  (define gl-ext-api:prioritize-texturesx-oes
    (foreign-lambda*
      "_ALLEGRO_glPrioritizeTexturesxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PrioritizeTexturesxOES);"))
  (define gl-ext-api:tex-envx-oes
    (foreign-lambda*
      "_ALLEGRO_glTexEnvxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexEnvxOES);"))
  (define gl-ext-api:tex-envxv-oes
    (foreign-lambda*
      "_ALLEGRO_glTexEnvxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexEnvxvOES);"))
  (define gl-ext-api:get-tex-envxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetTexEnvxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexEnvxvOES);"))
  (define gl-ext-api:fogx-oes
    (foreign-lambda*
      "_ALLEGRO_glFogxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogxOES);"))
  (define gl-ext-api:fogxv-oes
    (foreign-lambda*
      "_ALLEGRO_glFogxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogxvOES);"))
  (define gl-ext-api:sample-coverage-oes
    (foreign-lambda*
      "_ALLEGRO_glSampleCoverageOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleCoverageOES);"))
  (define gl-ext-api:alpha-funcx-oes
    (foreign-lambda*
      "_ALLEGRO_glAlphaFuncxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AlphaFuncxOES);"))
  (define gl-ext-api:blend-colorx-oes
    (foreign-lambda*
      "_ALLEGRO_glBlendColorxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendColorxOES);"))
  (define gl-ext-api:clear-colorx-oes
    (foreign-lambda*
      "_ALLEGRO_glClearColorxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearColorxOES);"))
  (define gl-ext-api:clear-depthx-oes
    (foreign-lambda*
      "_ALLEGRO_glClearDepthxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthxOES);"))
  (define gl-ext-api:clear-accumx-oes
    (foreign-lambda*
      "_ALLEGRO_glClearAccumxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearAccumxOES);"))
  (define gl-ext-api:accumx-oes
    (foreign-lambda*
      "_ALLEGRO_glAccumxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->AccumxOES);"))
  (define gl-ext-api:map1x-oes
    (foreign-lambda*
      "_ALLEGRO_glMap1xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Map1xOES);"))
  (define gl-ext-api:map2x-oes
    (foreign-lambda*
      "_ALLEGRO_glMap2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Map2xOES);"))
  (define gl-ext-api:map-grid1x-oes
    (foreign-lambda*
      "_ALLEGRO_glMapGrid1xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapGrid1xOES);"))
  (define gl-ext-api:map-grid2x-oes
    (foreign-lambda*
      "_ALLEGRO_glMapGrid2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapGrid2xOES);"))
  (define gl-ext-api:get-mapxv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetMapxvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMapxvOES);"))
  (define gl-ext-api:eval-coord1x-oes
    (foreign-lambda*
      "_ALLEGRO_glEvalCoord1xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord1xOES);"))
  (define gl-ext-api:eval-coord2x-oes
    (foreign-lambda*
      "_ALLEGRO_glEvalCoord2xOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord2xOES);"))
  (define gl-ext-api:eval-coord1xv-oes
    (foreign-lambda*
      "_ALLEGRO_glEvalCoord1xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord1xvOES);"))
  (define gl-ext-api:eval-coord2xv-oes
    (foreign-lambda*
      "_ALLEGRO_glEvalCoord2xvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EvalCoord2xvOES);"))
  (define gl-ext-api:feedback-bufferx-oes
    (foreign-lambda*
      "_ALLEGRO_glFeedbackBufferxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FeedbackBufferxOES);"))
  (define gl-ext-api:pass-throughx-oes
    (foreign-lambda*
      "_ALLEGRO_glPassThroughxOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PassThroughxOES);"))
  (define gl-ext-api:get-fixedv-oes
    (foreign-lambda*
      "_ALLEGRO_glGetFixedvOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFixedvOES);"))
  (define gl-ext-api:depth-rangef-oes
    (foreign-lambda*
      "_ALLEGRO_glDepthRangefOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangefOES);"))
  (define gl-ext-api:frustumf-oes
    (foreign-lambda*
      "_ALLEGRO_glFrustumfOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrustumfOES);"))
  (define gl-ext-api:orthof-oes
    (foreign-lambda*
      "_ALLEGRO_glOrthofOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->OrthofOES);"))
  (define gl-ext-api:clip-planef-oes
    (foreign-lambda*
      "_ALLEGRO_glClipPlanefOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClipPlanefOES);"))
  (define gl-ext-api:get-clip-planef-oes
    (foreign-lambda*
      "_ALLEGRO_glGetClipPlanefOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetClipPlanefOES);"))
  (define gl-ext-api:clear-depthf-oes
    (foreign-lambda*
      "_ALLEGRO_glClearDepthfOES_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthfOES);"))
  (define gl-ext-api:depth-bounds-ext
    (foreign-lambda*
      "_ALLEGRO_glDepthBoundsEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthBoundsEXT);"))
  (define gl-ext-api:blend-equation-separate-ext
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationSeparateEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparateEXT);"))
  (define gl-ext-api:is-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glIsRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsRenderbufferEXT);"))
  (define gl-ext-api:bind-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glBindRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindRenderbufferEXT);"))
  (define gl-ext-api:delete-renderbuffers-ext
    (foreign-lambda*
      "_ALLEGRO_glDeleteRenderbuffersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteRenderbuffersEXT);"))
  (define gl-ext-api:gen-renderbuffers-ext
    (foreign-lambda*
      "_ALLEGRO_glGenRenderbuffersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenRenderbuffersEXT);"))
  (define gl-ext-api:renderbuffer-storage-ext
    (foreign-lambda*
      "_ALLEGRO_glRenderbufferStorageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageEXT);"))
  (define gl-ext-api:get-renderbuffer-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetRenderbufferParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetRenderbufferParameterivEXT);"))
  (define gl-ext-api:is-framebuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glIsFramebufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsFramebufferEXT);"))
  (define gl-ext-api:bind-framebuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glBindFramebufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFramebufferEXT);"))
  (define gl-ext-api:delete-framebuffers-ext
    (foreign-lambda*
      "_ALLEGRO_glDeleteFramebuffersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteFramebuffersEXT);"))
  (define gl-ext-api:gen-framebuffers-ext
    (foreign-lambda*
      "_ALLEGRO_glGenFramebuffersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenFramebuffersEXT);"))
  (define gl-ext-api:check-framebuffer-status-ext
    (foreign-lambda*
      "_ALLEGRO_glCheckFramebufferStatusEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckFramebufferStatusEXT);"))
  (define gl-ext-api:framebuffer-texture1dext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture1DEXT);"))
  (define gl-ext-api:framebuffer-texture2dext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture2DEXT);"))
  (define gl-ext-api:framebuffer-texture3dext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTexture3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTexture3DEXT);"))
  (define gl-ext-api:framebuffer-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferRenderbufferEXT);"))
  (define gl-ext-api:get-framebuffer-attachment-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetFramebufferAttachmentParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferAttachmentParameterivEXT);"))
  (define gl-ext-api:generate-mipmap-ext
    (foreign-lambda*
      "_ALLEGRO_glGenerateMipmapEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMipmapEXT);"))
  (define gl-ext-api:string-marker-gremedy
    (foreign-lambda*
      "_ALLEGRO_glStringMarkerGREMEDY_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StringMarkerGREMEDY);"))
  (define gl-ext-api:stencil-clear-tag-ext
    (foreign-lambda*
      "_ALLEGRO_glStencilClearTagEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->StencilClearTagEXT);"))
  (define gl-ext-api:blit-framebuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glBlitFramebufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlitFramebufferEXT);"))
  (define gl-ext-api:renderbuffer-storage-multisample-ext
    (foreign-lambda*
      "_ALLEGRO_glRenderbufferStorageMultisampleEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultisampleEXT);"))
  (define gl-ext-api:get-query-objecti64v-ext
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjecti64vEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjecti64vEXT);"))
  (define gl-ext-api:get-query-objectui64v-ext
    (foreign-lambda*
      "_ALLEGRO_glGetQueryObjectui64vEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetQueryObjectui64vEXT);"))
  (define gl-ext-api:program-env-parameters4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameters4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameters4fvEXT);"))
  (define gl-ext-api:program-local-parameters4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameters4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameters4fvEXT);"))
  (define gl-ext-api:buffer-parameteri-apple
    (foreign-lambda*
      "_ALLEGRO_glBufferParameteriAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferParameteriAPPLE);"))
  (define gl-ext-api:flush-mapped-buffer-range-apple
    (foreign-lambda*
      "_ALLEGRO_glFlushMappedBufferRangeAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FlushMappedBufferRangeAPPLE);"))
  (define gl-ext-api:uniform-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glUniformBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UniformBufferEXT);"))
  (define gl-ext-api:get-uniform-buffer-size-ext
    (foreign-lambda*
      "_ALLEGRO_glGetUniformBufferSizeEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformBufferSizeEXT);"))
  (define gl-ext-api:get-uniform-offset-ext
    (foreign-lambda*
      "_ALLEGRO_glGetUniformOffsetEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformOffsetEXT);"))
  (define gl-ext-api:color-mask-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glColorMaskIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorMaskIndexedEXT);"))
  (define gl-ext-api:get-boolean-indexedv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetBooleanIndexedvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBooleanIndexedvEXT);"))
  (define gl-ext-api:get-integer-indexedv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetIntegerIndexedvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerIndexedvEXT);"))
  (define gl-ext-api:enable-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glEnableIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableIndexedEXT);"))
  (define gl-ext-api:disable-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glDisableIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableIndexedEXT);"))
  (define gl-ext-api:is-enabled-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glIsEnabledIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsEnabledIndexedEXT);"))
  (define gl-ext-api:draw-arrays-instanced-ext
    (foreign-lambda*
      "_ALLEGRO_glDrawArraysInstancedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawArraysInstancedEXT);"))
  (define gl-ext-api:draw-elements-instanced-ext
    (foreign-lambda*
      "_ALLEGRO_glDrawElementsInstancedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawElementsInstancedEXT);"))
  (define gl-ext-api:program-parameteri-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramParameteriEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramParameteriEXT);"))
  (define gl-ext-api:framebuffer-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureEXT);"))
  (define gl-ext-api:framebuffer-texture-face-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureFaceEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureFaceEXT);"))
  (define gl-ext-api:vertex-attrib-i1i-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1iEXT);"))
  (define gl-ext-api:vertex-attrib-i2i-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2iEXT);"))
  (define gl-ext-api:vertex-attrib-i3i-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3iEXT);"))
  (define gl-ext-api:vertex-attrib-i4i-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4iEXT);"))
  (define gl-ext-api:vertex-attrib-i1ui-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uiEXT);"))
  (define gl-ext-api:vertex-attrib-i2ui-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uiEXT);"))
  (define gl-ext-api:vertex-attrib-i3ui-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uiEXT);"))
  (define gl-ext-api:vertex-attrib-i4ui-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uiEXT);"))
  (define gl-ext-api:vertex-attrib-i1iv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1ivEXT);"))
  (define gl-ext-api:vertex-attrib-i2iv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2ivEXT);"))
  (define gl-ext-api:vertex-attrib-i3iv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3ivEXT);"))
  (define gl-ext-api:vertex-attrib-i4iv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ivEXT);"))
  (define gl-ext-api:vertex-attrib-i1uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI1uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI1uivEXT);"))
  (define gl-ext-api:vertex-attrib-i2uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI2uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI2uivEXT);"))
  (define gl-ext-api:vertex-attrib-i3uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI3uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI3uivEXT);"))
  (define gl-ext-api:vertex-attrib-i4uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4uivEXT);"))
  (define gl-ext-api:vertex-attrib-i4bv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4bvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4bvEXT);"))
  (define gl-ext-api:vertex-attrib-i4sv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4svEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4svEXT);"))
  (define gl-ext-api:vertex-attrib-i4ubv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4ubvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4ubvEXT);"))
  (define gl-ext-api:vertex-attrib-i4usv-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribI4usvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribI4usvEXT);"))
  (define gl-ext-api:vertex-attrib-ipointer-ext
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribIPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIPointerEXT);"))
  (define gl-ext-api:get-vertex-attrib-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIivEXT);"))
  (define gl-ext-api:get-vertex-attrib-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetVertexAttribIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVertexAttribIuivEXT);"))
  (define gl-ext-api:uniform1ui-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform1uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uiEXT);"))
  (define gl-ext-api:uniform2ui-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform2uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uiEXT);"))
  (define gl-ext-api:uniform3ui-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform3uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uiEXT);"))
  (define gl-ext-api:uniform4ui-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform4uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uiEXT);"))
  (define gl-ext-api:uniform1uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform1uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform1uivEXT);"))
  (define gl-ext-api:uniform2uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform2uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform2uivEXT);"))
  (define gl-ext-api:uniform3uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform3uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform3uivEXT);"))
  (define gl-ext-api:uniform4uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glUniform4uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniform4uivEXT);"))
  (define gl-ext-api:get-uniformuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetUniformuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformuivEXT);"))
  (define gl-ext-api:bind-frag-data-location-ext
    (foreign-lambda*
      "_ALLEGRO_glBindFragDataLocationEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindFragDataLocationEXT);"))
  (define gl-ext-api:get-frag-data-location-ext
    (foreign-lambda*
      "_ALLEGRO_glGetFragDataLocationEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFragDataLocationEXT);"))
  (define gl-ext-api:framebuffer-texture-layer-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferTextureLayerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferTextureLayerEXT);"))
  (define gl-ext-api:tex-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glTexBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexBufferEXT);"))
  (define gl-ext-api:depth-ranged-nv
    (foreign-lambda*
      "_ALLEGRO_glDepthRangedNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthRangedNV);"))
  (define gl-ext-api:clear-depthd-nv
    (foreign-lambda*
      "_ALLEGRO_glClearDepthdNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClearDepthdNV);"))
  (define gl-ext-api:depth-boundsd-nv
    (foreign-lambda*
      "_ALLEGRO_glDepthBoundsdNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DepthBoundsdNV);"))
  (define gl-ext-api:renderbuffer-storage-multsample-coverage-nv
    (foreign-lambda*
      "_ALLEGRO_glRenderbufferStorageMultsampleCoverageNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->RenderbufferStorageMultsampleCoverageNV);"))
  (define gl-ext-api:program-vertex-limit-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramVertexLimitNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramVertexLimitNV);"))
  (define gl-ext-api:program-local-parameter-i4i-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameterI4iNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4iNV);"))
  (define gl-ext-api:program-local-parameter-i4iv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameterI4ivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4ivNV);"))
  (define gl-ext-api:program-local-parameters-i4iv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParametersI4ivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParametersI4ivNV);"))
  (define gl-ext-api:program-local-parameter-i4ui-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameterI4uiNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4uiNV);"))
  (define gl-ext-api:program-local-parameter-i4uiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParameterI4uivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParameterI4uivNV);"))
  (define gl-ext-api:program-local-parameters-i4uiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramLocalParametersI4uivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramLocalParametersI4uivNV);"))
  (define gl-ext-api:program-env-parameter-i4i-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameterI4iNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4iNV);"))
  (define gl-ext-api:program-env-parameter-i4iv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameterI4ivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4ivNV);"))
  (define gl-ext-api:program-env-parameters-i4iv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParametersI4ivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParametersI4ivNV);"))
  (define gl-ext-api:program-env-parameter-i4ui-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameterI4uiNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4uiNV);"))
  (define gl-ext-api:program-env-parameter-i4uiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParameterI4uivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParameterI4uivNV);"))
  (define gl-ext-api:program-env-parameters-i4uiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramEnvParametersI4uivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramEnvParametersI4uivNV);"))
  (define gl-ext-api:get-program-local-parameter-iiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramLocalParameterIivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterIivNV);"))
  (define gl-ext-api:get-program-local-parameter-iuiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramLocalParameterIuivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramLocalParameterIuivNV);"))
  (define gl-ext-api:get-program-env-parameter-iiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramEnvParameterIivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterIivNV);"))
  (define gl-ext-api:get-program-env-parameter-iuiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetProgramEnvParameterIuivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetProgramEnvParameterIuivNV);"))
  (define gl-ext-api:program-buffer-parametersfv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramBufferParametersfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersfvNV);"))
  (define gl-ext-api:program-buffer-parameters-iiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramBufferParametersIivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersIivNV);"))
  (define gl-ext-api:program-buffer-parameters-iuiv-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramBufferParametersIuivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramBufferParametersIuivNV);"))
  (define gl-ext-api:bind-buffer-range-nv
    (foreign-lambda*
      "_ALLEGRO_glBindBufferRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRangeNV);"))
  (define gl-ext-api:bind-buffer-offset-nv
    (foreign-lambda*
      "_ALLEGRO_glBindBufferOffsetNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferOffsetNV);"))
  (define gl-ext-api:bind-buffer-base-nv
    (foreign-lambda*
      "_ALLEGRO_glBindBufferBaseNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBaseNV);"))
  (define gl-ext-api:transform-feedback-attribs-nv
    (foreign-lambda*
      "_ALLEGRO_glTransformFeedbackAttribsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackAttribsNV);"))
  (define gl-ext-api:transform-feedback-varyings-nv
    (foreign-lambda*
      "_ALLEGRO_glTransformFeedbackVaryingsNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryingsNV);"))
  (define gl-ext-api:begin-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glBeginTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedbackNV);"))
  (define gl-ext-api:end-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glEndTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedbackNV);"))
  (define gl-ext-api:get-varying-location-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVaryingLocationNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVaryingLocationNV);"))
  (define gl-ext-api:get-active-varying-nv
    (foreign-lambda*
      "_ALLEGRO_glGetActiveVaryingNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetActiveVaryingNV);"))
  (define gl-ext-api:active-varying-nv
    (foreign-lambda*
      "_ALLEGRO_glActiveVaryingNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveVaryingNV);"))
  (define gl-ext-api:get-transform-feedback-varying-nv
    (foreign-lambda*
      "_ALLEGRO_glGetTransformFeedbackVaryingNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVaryingNV);"))
  (define gl-ext-api:frame-terminator-gremedy
    (foreign-lambda*
      "_ALLEGRO_glFrameTerminatorGREMEDY_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FrameTerminatorGREMEDY);"))
  (define gl-ext-api:begin-conditional-render-nv
    (foreign-lambda*
      "_ALLEGRO_glBeginConditionalRenderNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginConditionalRenderNV);"))
  (define gl-ext-api:end-conditional-render-nv
    (foreign-lambda*
      "_ALLEGRO_glEndConditionalRenderNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndConditionalRenderNV);"))
  (define gl-ext-api:begin-transform-feedback-ext
    (foreign-lambda*
      "_ALLEGRO_glBeginTransformFeedbackEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginTransformFeedbackEXT);"))
  (define gl-ext-api:end-transform-feedback-ext
    (foreign-lambda*
      "_ALLEGRO_glEndTransformFeedbackEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndTransformFeedbackEXT);"))
  (define gl-ext-api:bind-buffer-range-ext
    (foreign-lambda*
      "_ALLEGRO_glBindBufferRangeEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferRangeEXT);"))
  (define gl-ext-api:bind-buffer-offset-ext
    (foreign-lambda*
      "_ALLEGRO_glBindBufferOffsetEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferOffsetEXT);"))
  (define gl-ext-api:bind-buffer-base-ext
    (foreign-lambda*
      "_ALLEGRO_glBindBufferBaseEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindBufferBaseEXT);"))
  (define gl-ext-api:transform-feedback-varyings-ext
    (foreign-lambda*
      "_ALLEGRO_glTransformFeedbackVaryingsEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TransformFeedbackVaryingsEXT);"))
  (define gl-ext-api:get-transform-feedback-varying-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTransformFeedbackVaryingEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTransformFeedbackVaryingEXT);"))
  (define gl-ext-api:client-attrib-default-ext
    (foreign-lambda*
      "_ALLEGRO_glClientAttribDefaultEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ClientAttribDefaultEXT);"))
  (define gl-ext-api:push-client-attrib-default-ext
    (foreign-lambda*
      "_ALLEGRO_glPushClientAttribDefaultEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PushClientAttribDefaultEXT);"))
  (define gl-ext-api:matrix-loadf-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixLoadfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadfEXT);"))
  (define gl-ext-api:matrix-loadd-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixLoaddEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoaddEXT);"))
  (define gl-ext-api:matrix-multf-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixMultfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultfEXT);"))
  (define gl-ext-api:matrix-multd-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixMultdEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultdEXT);"))
  (define gl-ext-api:matrix-load-identity-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixLoadIdentityEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadIdentityEXT);"))
  (define gl-ext-api:matrix-rotatef-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixRotatefEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixRotatefEXT);"))
  (define gl-ext-api:matrix-rotated-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixRotatedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixRotatedEXT);"))
  (define gl-ext-api:matrix-scalef-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixScalefEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixScalefEXT);"))
  (define gl-ext-api:matrix-scaled-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixScaledEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixScaledEXT);"))
  (define gl-ext-api:matrix-translatef-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixTranslatefEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixTranslatefEXT);"))
  (define gl-ext-api:matrix-translated-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixTranslatedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixTranslatedEXT);"))
  (define gl-ext-api:matrix-frustum-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixFrustumEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixFrustumEXT);"))
  (define gl-ext-api:matrix-ortho-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixOrthoEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixOrthoEXT);"))
  (define gl-ext-api:matrix-pop-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixPopEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixPopEXT);"))
  (define gl-ext-api:matrix-push-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixPushEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixPushEXT);"))
  (define gl-ext-api:matrix-load-transposef-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixLoadTransposefEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadTransposefEXT);"))
  (define gl-ext-api:matrix-load-transposed-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixLoadTransposedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixLoadTransposedEXT);"))
  (define gl-ext-api:matrix-mult-transposef-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixMultTransposefEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultTransposefEXT);"))
  (define gl-ext-api:matrix-mult-transposed-ext
    (foreign-lambda*
      "_ALLEGRO_glMatrixMultTransposedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MatrixMultTransposedEXT);"))
  (define gl-ext-api:texture-parameterf-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameterfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterfEXT);"))
  (define gl-ext-api:texture-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterfvEXT);"))
  (define gl-ext-api:texture-parameteri-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameteriEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameteriEXT);"))
  (define gl-ext-api:texture-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterivEXT);"))
  (define gl-ext-api:texture-image1dext
    (foreign-lambda*
      "_ALLEGRO_glTextureImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage1DEXT);"))
  (define gl-ext-api:texture-image2dext
    (foreign-lambda*
      "_ALLEGRO_glTextureImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage2DEXT);"))
  (define gl-ext-api:texture-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glTextureSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage1DEXT);"))
  (define gl-ext-api:texture-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glTextureSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage2DEXT);"))
  (define gl-ext-api:copy-texture-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTextureImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureImage1DEXT);"))
  (define gl-ext-api:copy-texture-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTextureImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureImage2DEXT);"))
  (define gl-ext-api:copy-texture-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTextureSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage1DEXT);"))
  (define gl-ext-api:copy-texture-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTextureSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage2DEXT);"))
  (define gl-ext-api:get-texture-image-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureImageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureImageEXT);"))
  (define gl-ext-api:get-texture-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterfvEXT);"))
  (define gl-ext-api:get-texture-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterivEXT);"))
  (define gl-ext-api:get-texture-level-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureLevelParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureLevelParameterfvEXT);"))
  (define gl-ext-api:get-texture-level-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureLevelParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureLevelParameterivEXT);"))
  (define gl-ext-api:texture-image3dext
    (foreign-lambda*
      "_ALLEGRO_glTextureImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureImage3DEXT);"))
  (define gl-ext-api:texture-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glTextureSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureSubImage3DEXT);"))
  (define gl-ext-api:copy-texture-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCopyTextureSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyTextureSubImage3DEXT);"))
  (define gl-ext-api:multi-tex-parameterf-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameterfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterfEXT);"))
  (define gl-ext-api:multi-tex-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterfvEXT);"))
  (define gl-ext-api:multi-tex-parameteri-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameteriEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameteriEXT);"))
  (define gl-ext-api:multi-tex-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterivEXT);"))
  (define gl-ext-api:multi-tex-image1dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage1DEXT);"))
  (define gl-ext-api:multi-tex-image2dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage2DEXT);"))
  (define gl-ext-api:multi-tex-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage1DEXT);"))
  (define gl-ext-api:multi-tex-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage2DEXT);"))
  (define gl-ext-api:copy-multi-tex-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyMultiTexImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexImage1DEXT);"))
  (define gl-ext-api:copy-multi-tex-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyMultiTexImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexImage2DEXT);"))
  (define gl-ext-api:copy-multi-tex-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCopyMultiTexSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage1DEXT);"))
  (define gl-ext-api:copy-multi-tex-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCopyMultiTexSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage2DEXT);"))
  (define gl-ext-api:get-multi-tex-image-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexImageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexImageEXT);"))
  (define gl-ext-api:get-multi-tex-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterfvEXT);"))
  (define gl-ext-api:get-multi-tex-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterivEXT);"))
  (define gl-ext-api:get-multi-tex-level-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexLevelParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexLevelParameterfvEXT);"))
  (define gl-ext-api:get-multi-tex-level-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexLevelParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexLevelParameterivEXT);"))
  (define gl-ext-api:multi-tex-image3dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexImage3DEXT);"))
  (define gl-ext-api:multi-tex-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexSubImage3DEXT);"))
  (define gl-ext-api:copy-multi-tex-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCopyMultiTexSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CopyMultiTexSubImage3DEXT);"))
  (define gl-ext-api:bind-multi-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glBindMultiTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindMultiTextureEXT);"))
  (define gl-ext-api:enable-client-state-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glEnableClientStateIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableClientStateIndexedEXT);"))
  (define gl-ext-api:disable-client-state-indexed-ext
    (foreign-lambda*
      "_ALLEGRO_glDisableClientStateIndexedEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableClientStateIndexedEXT);"))
  (define gl-ext-api:multi-tex-coord-pointer-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexCoordPointerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexCoordPointerEXT);"))
  (define gl-ext-api:multi-tex-envf-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexEnvfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvfEXT);"))
  (define gl-ext-api:multi-tex-envfv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexEnvfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvfvEXT);"))
  (define gl-ext-api:multi-tex-envi-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexEnviEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnviEXT);"))
  (define gl-ext-api:multi-tex-enviv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexEnvivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexEnvivEXT);"))
  (define gl-ext-api:multi-tex-gend-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGendEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGendEXT);"))
  (define gl-ext-api:multi-tex-gendv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGendvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGendvEXT);"))
  (define gl-ext-api:multi-tex-genf-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGenfEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenfEXT);"))
  (define gl-ext-api:multi-tex-genfv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGenfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenfvEXT);"))
  (define gl-ext-api:multi-tex-geni-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGeniEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGeniEXT);"))
  (define gl-ext-api:multi-tex-geniv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexGenivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexGenivEXT);"))
  (define gl-ext-api:get-multi-tex-envfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexEnvfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexEnvfvEXT);"))
  (define gl-ext-api:get-multi-tex-enviv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexEnvivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexEnvivEXT);"))
  (define gl-ext-api:get-multi-tex-gendv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexGendvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGendvEXT);"))
  (define gl-ext-api:get-multi-tex-genfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexGenfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGenfvEXT);"))
  (define gl-ext-api:get-multi-tex-geniv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexGenivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexGenivEXT);"))
  (define gl-ext-api:get-float-indexedv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetFloatIndexedvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFloatIndexedvEXT);"))
  (define gl-ext-api:get-double-indexedv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetDoubleIndexedvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetDoubleIndexedvEXT);"))
  (define gl-ext-api:get-pointer-indexedv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetPointerIndexedvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPointerIndexedvEXT);"))
  (define gl-ext-api:compressed-texture-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage3DEXT);"))
  (define gl-ext-api:compressed-texture-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage2DEXT);"))
  (define gl-ext-api:compressed-texture-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureImage1DEXT);"))
  (define gl-ext-api:compressed-texture-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage3DEXT);"))
  (define gl-ext-api:compressed-texture-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage2DEXT);"))
  (define gl-ext-api:compressed-texture-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedTextureSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedTextureSubImage1DEXT);"))
  (define gl-ext-api:get-compressed-texture-image-ext
    (foreign-lambda*
      "_ALLEGRO_glGetCompressedTextureImageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedTextureImageEXT);"))
  (define gl-ext-api:compressed-multi-tex-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage3DEXT);"))
  (define gl-ext-api:compressed-multi-tex-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage2DEXT);"))
  (define gl-ext-api:compressed-multi-tex-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexImage1DEXT);"))
  (define gl-ext-api:compressed-multi-tex-sub-image3dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexSubImage3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage3DEXT);"))
  (define gl-ext-api:compressed-multi-tex-sub-image2dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexSubImage2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage2DEXT);"))
  (define gl-ext-api:compressed-multi-tex-sub-image1dext
    (foreign-lambda*
      "_ALLEGRO_glCompressedMultiTexSubImage1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CompressedMultiTexSubImage1DEXT);"))
  (define gl-ext-api:get-compressed-multi-tex-image-ext
    (foreign-lambda*
      "_ALLEGRO_glGetCompressedMultiTexImageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetCompressedMultiTexImageEXT);"))
  (define gl-ext-api:named-program-string-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramStringEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramStringEXT);"))
  (define gl-ext-api:named-program-local-parameter4d-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameter4dEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4dEXT);"))
  (define gl-ext-api:named-program-local-parameter4dv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameter4dvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4dvEXT);"))
  (define gl-ext-api:named-program-local-parameter4f-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameter4fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4fEXT);"))
  (define gl-ext-api:named-program-local-parameter4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameter4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameter4fvEXT);"))
  (define gl-ext-api:get-named-program-local-parameterdv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramLocalParameterdvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterdvEXT);"))
  (define gl-ext-api:get-named-program-local-parameterfv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramLocalParameterfvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterfvEXT);"))
  (define gl-ext-api:get-named-programiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramivEXT);"))
  (define gl-ext-api:get-named-program-string-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramStringEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramStringEXT);"))
  (define gl-ext-api:named-program-local-parameters4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameters4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameters4fvEXT);"))
  (define gl-ext-api:named-program-local-parameter-i4i-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameterI4iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4iEXT);"))
  (define gl-ext-api:named-program-local-parameter-i4iv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameterI4ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4ivEXT);"))
  (define gl-ext-api:named-program-local-parameters-i4iv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParametersI4ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParametersI4ivEXT);"))
  (define gl-ext-api:named-program-local-parameter-i4ui-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameterI4uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4uiEXT);"))
  (define gl-ext-api:named-program-local-parameter-i4uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParameterI4uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParameterI4uivEXT);"))
  (define gl-ext-api:named-program-local-parameters-i4uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedProgramLocalParametersI4uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedProgramLocalParametersI4uivEXT);"))
  (define gl-ext-api:get-named-program-local-parameter-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramLocalParameterIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterIivEXT);"))
  (define gl-ext-api:get-named-program-local-parameter-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedProgramLocalParameterIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedProgramLocalParameterIuivEXT);"))
  (define gl-ext-api:texture-parameter-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameterIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterIivEXT);"))
  (define gl-ext-api:texture-parameter-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureParameterIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureParameterIuivEXT);"))
  (define gl-ext-api:get-texture-parameter-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureParameterIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterIivEXT);"))
  (define gl-ext-api:get-texture-parameter-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetTextureParameterIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTextureParameterIuivEXT);"))
  (define gl-ext-api:multi-tex-parameter-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameterIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterIivEXT);"))
  (define gl-ext-api:multi-tex-parameter-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexParameterIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexParameterIuivEXT);"))
  (define gl-ext-api:get-multi-tex-parameter-iiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexParameterIivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterIivEXT);"))
  (define gl-ext-api:get-multi-tex-parameter-iuiv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetMultiTexParameterIuivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultiTexParameterIuivEXT);"))
  (define gl-ext-api:program-uniform1f-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1fEXT);"))
  (define gl-ext-api:program-uniform2f-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2fEXT);"))
  (define gl-ext-api:program-uniform3f-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3fEXT);"))
  (define gl-ext-api:program-uniform4f-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4fEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4fEXT);"))
  (define gl-ext-api:program-uniform1i-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1iEXT);"))
  (define gl-ext-api:program-uniform2i-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2iEXT);"))
  (define gl-ext-api:program-uniform3i-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3iEXT);"))
  (define gl-ext-api:program-uniform4i-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4iEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4iEXT);"))
  (define gl-ext-api:program-uniform1fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1fvEXT);"))
  (define gl-ext-api:program-uniform2fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2fvEXT);"))
  (define gl-ext-api:program-uniform3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3fvEXT);"))
  (define gl-ext-api:program-uniform4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4fvEXT);"))
  (define gl-ext-api:program-uniform1iv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1ivEXT);"))
  (define gl-ext-api:program-uniform2iv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2ivEXT);"))
  (define gl-ext-api:program-uniform3iv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3ivEXT);"))
  (define gl-ext-api:program-uniform4iv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4ivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4ivEXT);"))
  (define gl-ext-api:program-uniform-matrix2fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2fvEXT);"))
  (define gl-ext-api:program-uniform-matrix3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3fvEXT);"))
  (define gl-ext-api:program-uniform-matrix4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4fvEXT);"))
  (define gl-ext-api:program-uniform-matrix2x3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2x3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x3fvEXT);"))
  (define gl-ext-api:program-uniform-matrix3x2fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3x2fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x2fvEXT);"))
  (define gl-ext-api:program-uniform-matrix2x4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix2x4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix2x4fvEXT);"))
  (define gl-ext-api:program-uniform-matrix4x2fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4x2fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x2fvEXT);"))
  (define gl-ext-api:program-uniform-matrix3x4fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix3x4fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix3x4fvEXT);"))
  (define gl-ext-api:program-uniform-matrix4x3fv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformMatrix4x3fvEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformMatrix4x3fvEXT);"))
  (define gl-ext-api:program-uniform1ui-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1uiEXT);"))
  (define gl-ext-api:program-uniform2ui-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2uiEXT);"))
  (define gl-ext-api:program-uniform3ui-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3uiEXT);"))
  (define gl-ext-api:program-uniform4ui-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4uiEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4uiEXT);"))
  (define gl-ext-api:program-uniform1uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform1uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform1uivEXT);"))
  (define gl-ext-api:program-uniform2uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform2uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform2uivEXT);"))
  (define gl-ext-api:program-uniform3uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform3uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform3uivEXT);"))
  (define gl-ext-api:program-uniform4uiv-ext
    (foreign-lambda*
      "_ALLEGRO_glProgramUniform4uivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniform4uivEXT);"))
  (define gl-ext-api:named-buffer-data-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedBufferDataEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedBufferDataEXT);"))
  (define gl-ext-api:named-buffer-sub-data-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedBufferSubDataEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedBufferSubDataEXT);"))
  (define gl-ext-api:map-named-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glMapNamedBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapNamedBufferEXT);"))
  (define gl-ext-api:unmap-named-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glUnmapNamedBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UnmapNamedBufferEXT);"))
  (define gl-ext-api:get-named-buffer-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedBufferParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferParameterivEXT);"))
  (define gl-ext-api:get-named-buffer-pointerv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedBufferPointervEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferPointervEXT);"))
  (define gl-ext-api:get-named-buffer-sub-data-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedBufferSubDataEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferSubDataEXT);"))
  (define gl-ext-api:texture-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureBufferEXT);"))
  (define gl-ext-api:multi-tex-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexBufferEXT);"))
  (define gl-ext-api:named-renderbuffer-storage-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedRenderbufferStorageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageEXT);"))
  (define gl-ext-api:get-named-renderbuffer-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedRenderbufferParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedRenderbufferParameterivEXT);"))
  (define gl-ext-api:check-named-framebuffer-status-ext
    (foreign-lambda*
      "_ALLEGRO_glCheckNamedFramebufferStatusEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CheckNamedFramebufferStatusEXT);"))
  (define gl-ext-api:named-framebuffer-texture1dext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTexture1DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture1DEXT);"))
  (define gl-ext-api:named-framebuffer-texture2dext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTexture2DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture2DEXT);"))
  (define gl-ext-api:named-framebuffer-texture3dext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTexture3DEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTexture3DEXT);"))
  (define gl-ext-api:named-framebuffer-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferRenderbufferEXT);"))
  (define gl-ext-api:get-named-framebuffer-attachment-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetNamedFramebufferAttachmentParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedFramebufferAttachmentParameterivEXT);"))
  (define gl-ext-api:generate-texture-mipmap-ext
    (foreign-lambda*
      "_ALLEGRO_glGenerateTextureMipmapEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateTextureMipmapEXT);"))
  (define gl-ext-api:generate-multi-tex-mipmap-ext
    (foreign-lambda*
      "_ALLEGRO_glGenerateMultiTexMipmapEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenerateMultiTexMipmapEXT);"))
  (define gl-ext-api:framebuffer-draw-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferDrawBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferDrawBufferEXT);"))
  (define gl-ext-api:framebuffer-draw-buffers-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferDrawBuffersEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferDrawBuffersEXT);"))
  (define gl-ext-api:framebuffer-read-buffer-ext
    (foreign-lambda*
      "_ALLEGRO_glFramebufferReadBufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FramebufferReadBufferEXT);"))
  (define gl-ext-api:get-framebuffer-parameteriv-ext
    (foreign-lambda*
      "_ALLEGRO_glGetFramebufferParameterivEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetFramebufferParameterivEXT);"))
  (define gl-ext-api:named-renderbuffer-storage-multisample-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedRenderbufferStorageMultisampleEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageMultisampleEXT);"))
  (define gl-ext-api:named-renderbuffer-storage-multisample-coverage-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedRenderbufferStorageMultisampleCoverageEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedRenderbufferStorageMultisampleCoverageEXT);"))
  (define gl-ext-api:named-framebuffer-texture-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTextureEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureEXT);"))
  (define gl-ext-api:named-framebuffer-texture-layer-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTextureLayerEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureLayerEXT);"))
  (define gl-ext-api:named-framebuffer-texture-face-ext
    (foreign-lambda*
      "_ALLEGRO_glNamedFramebufferTextureFaceEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NamedFramebufferTextureFaceEXT);"))
  (define gl-ext-api:texture-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glTextureRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureRenderbufferEXT);"))
  (define gl-ext-api:multi-tex-renderbuffer-ext
    (foreign-lambda*
      "_ALLEGRO_glMultiTexRenderbufferEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MultiTexRenderbufferEXT);"))
  (define gl-ext-api:get-multisamplefv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetMultisamplefvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetMultisamplefvNV);"))
  (define gl-ext-api:sample-mask-indexed-nv
    (foreign-lambda*
      "_ALLEGRO_glSampleMaskIndexedNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SampleMaskIndexedNV);"))
  (define gl-ext-api:tex-renderbuffer-nv
    (foreign-lambda*
      "_ALLEGRO_glTexRenderbufferNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexRenderbufferNV);"))
  (define gl-ext-api:bind-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glBindTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindTransformFeedbackNV);"))
  (define gl-ext-api:delete-transform-feedbacks-nv
    (foreign-lambda*
      "_ALLEGRO_glDeleteTransformFeedbacksNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeleteTransformFeedbacksNV);"))
  (define gl-ext-api:gen-transform-feedbacks-nv
    (foreign-lambda*
      "_ALLEGRO_glGenTransformFeedbacksNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenTransformFeedbacksNV);"))
  (define gl-ext-api:is-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glIsTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsTransformFeedbackNV);"))
  (define gl-ext-api:pause-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glPauseTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->PauseTransformFeedbackNV);"))
  (define gl-ext-api:resume-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glResumeTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ResumeTransformFeedbackNV);"))
  (define gl-ext-api:draw-transform-feedback-nv
    (foreign-lambda*
      "_ALLEGRO_glDrawTransformFeedbackNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DrawTransformFeedbackNV);"))
  (define gl-ext-api:get-perf-monitor-groups-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorGroupsAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorGroupsAMD);"))
  (define gl-ext-api:get-perf-monitor-counters-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorCountersAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCountersAMD);"))
  (define gl-ext-api:get-perf-monitor-group-string-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorGroupStringAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorGroupStringAMD);"))
  (define gl-ext-api:get-perf-monitor-counter-string-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorCounterStringAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterStringAMD);"))
  (define gl-ext-api:get-perf-monitor-counter-info-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorCounterInfoAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterInfoAMD);"))
  (define gl-ext-api:gen-perf-monitors-amd
    (foreign-lambda*
      "_ALLEGRO_glGenPerfMonitorsAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GenPerfMonitorsAMD);"))
  (define gl-ext-api:delete-perf-monitors-amd
    (foreign-lambda*
      "_ALLEGRO_glDeletePerfMonitorsAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DeletePerfMonitorsAMD);"))
  (define gl-ext-api:select-perf-monitor-counters-amd
    (foreign-lambda*
      "_ALLEGRO_glSelectPerfMonitorCountersAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SelectPerfMonitorCountersAMD);"))
  (define gl-ext-api:begin-perf-monitor-amd
    (foreign-lambda*
      "_ALLEGRO_glBeginPerfMonitorAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginPerfMonitorAMD);"))
  (define gl-ext-api:end-perf-monitor-amd
    (foreign-lambda*
      "_ALLEGRO_glEndPerfMonitorAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndPerfMonitorAMD);"))
  (define gl-ext-api:get-perf-monitor-counter-data-amd
    (foreign-lambda*
      "_ALLEGRO_glGetPerfMonitorCounterDataAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetPerfMonitorCounterDataAMD);"))
  (define gl-ext-api:tessellation-factor-amd
    (foreign-lambda*
      "_ALLEGRO_glTessellationFactorAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TessellationFactorAMD);"))
  (define gl-ext-api:tessellation-mode-amd
    (foreign-lambda*
      "_ALLEGRO_glTessellationModeAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TessellationModeAMD);"))
  (define gl-ext-api:provoking-vertex-ext
    (foreign-lambda*
      "_ALLEGRO_glProvokingVertexEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProvokingVertexEXT);"))
  (define gl-ext-api:blend-func-indexed-amd
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncIndexedAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncIndexedAMD);"))
  (define gl-ext-api:blend-func-separate-indexed-amd
    (foreign-lambda*
      "_ALLEGRO_glBlendFuncSeparateIndexedAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendFuncSeparateIndexedAMD);"))
  (define gl-ext-api:blend-equation-indexed-amd
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationIndexedAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationIndexedAMD);"))
  (define gl-ext-api:blend-equation-separate-indexed-amd
    (foreign-lambda*
      "_ALLEGRO_glBlendEquationSeparateIndexedAMD_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BlendEquationSeparateIndexedAMD);"))
  (define gl-ext-api:texture-range-apple
    (foreign-lambda*
      "_ALLEGRO_glTextureRangeAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureRangeAPPLE);"))
  (define gl-ext-api:get-tex-parameter-pointerv-apple
    (foreign-lambda*
      "_ALLEGRO_glGetTexParameterPointervAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetTexParameterPointervAPPLE);"))
  (define gl-ext-api:enable-vertex-attrib-apple
    (foreign-lambda*
      "_ALLEGRO_glEnableVertexAttribAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EnableVertexAttribAPPLE);"))
  (define gl-ext-api:disable-vertex-attrib-apple
    (foreign-lambda*
      "_ALLEGRO_glDisableVertexAttribAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->DisableVertexAttribAPPLE);"))
  (define gl-ext-api:is-vertex-attrib-enabled-apple
    (foreign-lambda*
      "_ALLEGRO_glIsVertexAttribEnabledAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsVertexAttribEnabledAPPLE);"))
  (define gl-ext-api:map-vertex-attrib1d-apple
    (foreign-lambda*
      "_ALLEGRO_glMapVertexAttrib1dAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib1dAPPLE);"))
  (define gl-ext-api:map-vertex-attrib1f-apple
    (foreign-lambda*
      "_ALLEGRO_glMapVertexAttrib1fAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib1fAPPLE);"))
  (define gl-ext-api:map-vertex-attrib2d-apple
    (foreign-lambda*
      "_ALLEGRO_glMapVertexAttrib2dAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib2dAPPLE);"))
  (define gl-ext-api:map-vertex-attrib2f-apple
    (foreign-lambda*
      "_ALLEGRO_glMapVertexAttrib2fAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MapVertexAttrib2fAPPLE);"))
  (define gl-ext-api:object-purgeable-apple
    (foreign-lambda*
      "_ALLEGRO_glObjectPurgeableAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectPurgeableAPPLE);"))
  (define gl-ext-api:object-unpurgeable-apple
    (foreign-lambda*
      "_ALLEGRO_glObjectUnpurgeableAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ObjectUnpurgeableAPPLE);"))
  (define gl-ext-api:get-object-parameteriv-apple
    (foreign-lambda*
      "_ALLEGRO_glGetObjectParameterivAPPLE_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetObjectParameterivAPPLE);"))
  (define gl-ext-api:begin-video-capture-nv
    (foreign-lambda*
      "_ALLEGRO_glBeginVideoCaptureNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BeginVideoCaptureNV);"))
  (define gl-ext-api:bind-video-capture-stream-buffer-nv
    (foreign-lambda*
      "_ALLEGRO_glBindVideoCaptureStreamBufferNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVideoCaptureStreamBufferNV);"))
  (define gl-ext-api:bind-video-capture-stream-texture-nv
    (foreign-lambda*
      "_ALLEGRO_glBindVideoCaptureStreamTextureNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BindVideoCaptureStreamTextureNV);"))
  (define gl-ext-api:end-video-capture-nv
    (foreign-lambda*
      "_ALLEGRO_glEndVideoCaptureNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EndVideoCaptureNV);"))
  (define gl-ext-api:get-video-captureiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVideoCaptureivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureivNV);"))
  (define gl-ext-api:get-video-capture-streamiv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVideoCaptureStreamivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamivNV);"))
  (define gl-ext-api:get-video-capture-streamfv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVideoCaptureStreamfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamfvNV);"))
  (define gl-ext-api:get-video-capture-streamdv-nv
    (foreign-lambda*
      "_ALLEGRO_glGetVideoCaptureStreamdvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetVideoCaptureStreamdvNV);"))
  (define gl-ext-api:video-capture-nv
    (foreign-lambda*
      "_ALLEGRO_glVideoCaptureNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureNV);"))
  (define gl-ext-api:video-capture-stream-parameteriv-nv
    (foreign-lambda*
      "_ALLEGRO_glVideoCaptureStreamParameterivNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterivNV);"))
  (define gl-ext-api:video-capture-stream-parameterfv-nv
    (foreign-lambda*
      "_ALLEGRO_glVideoCaptureStreamParameterfvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterfvNV);"))
  (define gl-ext-api:video-capture-stream-parameterdv-nv
    (foreign-lambda*
      "_ALLEGRO_glVideoCaptureStreamParameterdvNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VideoCaptureStreamParameterdvNV);"))
  (define gl-ext-api:use-shader-program-ext
    (foreign-lambda*
      "_ALLEGRO_glUseShaderProgramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->UseShaderProgramEXT);"))
  (define gl-ext-api:active-program-ext
    (foreign-lambda*
      "_ALLEGRO_glActiveProgramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ActiveProgramEXT);"))
  (define gl-ext-api:create-shader-program-ext
    (foreign-lambda*
      "_ALLEGRO_glCreateShaderProgramEXT_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->CreateShaderProgramEXT);"))
  (define gl-ext-api:make-buffer-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glMakeBufferResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeBufferResidentNV);"))
  (define gl-ext-api:make-buffer-non-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glMakeBufferNonResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeBufferNonResidentNV);"))
  (define gl-ext-api:is-buffer-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glIsBufferResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsBufferResidentNV);"))
  (define gl-ext-api:make-named-buffer-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glMakeNamedBufferResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeNamedBufferResidentNV);"))
  (define gl-ext-api:make-named-buffer-non-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glMakeNamedBufferNonResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->MakeNamedBufferNonResidentNV);"))
  (define gl-ext-api:is-named-buffer-resident-nv
    (foreign-lambda*
      "_ALLEGRO_glIsNamedBufferResidentNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IsNamedBufferResidentNV);"))
  (define gl-ext-api:get-buffer-parameterui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glGetBufferParameterui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetBufferParameterui64vNV);"))
  (define gl-ext-api:get-named-buffer-parameterui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glGetNamedBufferParameterui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetNamedBufferParameterui64vNV);"))
  (define gl-ext-api:get-integerui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glGetIntegerui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerui64vNV);"))
  (define gl-ext-api:uniformui64nv
    (foreign-lambda*
      "_ALLEGRO_glUniformui64NV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniformui64NV);"))
  (define gl-ext-api:uniformui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glUniformui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->Uniformui64vNV);"))
  (define gl-ext-api:get-uniformui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glGetUniformui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetUniformui64vNV);"))
  (define gl-ext-api:program-uniformui64nv
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformui64NV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformui64NV);"))
  (define gl-ext-api:program-uniformui64v-nv
    (foreign-lambda*
      "_ALLEGRO_glProgramUniformui64vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ProgramUniformui64vNV);"))
  (define gl-ext-api:buffer-address-range-nv
    (foreign-lambda*
      "_ALLEGRO_glBufferAddressRangeNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->BufferAddressRangeNV);"))
  (define gl-ext-api:vertex-format-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexFormatNV);"))
  (define gl-ext-api:normal-format-nv
    (foreign-lambda*
      "_ALLEGRO_glNormalFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->NormalFormatNV);"))
  (define gl-ext-api:color-format-nv
    (foreign-lambda*
      "_ALLEGRO_glColorFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->ColorFormatNV);"))
  (define gl-ext-api:index-format-nv
    (foreign-lambda*
      "_ALLEGRO_glIndexFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->IndexFormatNV);"))
  (define gl-ext-api:tex-coord-format-nv
    (foreign-lambda*
      "_ALLEGRO_glTexCoordFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TexCoordFormatNV);"))
  (define gl-ext-api:edge-flag-format-nv
    (foreign-lambda*
      "_ALLEGRO_glEdgeFlagFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->EdgeFlagFormatNV);"))
  (define gl-ext-api:secondary-color-format-nv
    (foreign-lambda*
      "_ALLEGRO_glSecondaryColorFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->SecondaryColorFormatNV);"))
  (define gl-ext-api:fog-coord-format-nv
    (foreign-lambda*
      "_ALLEGRO_glFogCoordFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->FogCoordFormatNV);"))
  (define gl-ext-api:vertex-attrib-format-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribFormatNV);"))
  (define gl-ext-api:vertex-attrib-iformat-nv
    (foreign-lambda*
      "_ALLEGRO_glVertexAttribIFormatNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->VertexAttribIFormatNV);"))
  (define gl-ext-api:get-integerui64i-v-nv
    (foreign-lambda*
      "_ALLEGRO_glGetIntegerui64i_vNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->GetIntegerui64i_vNV);"))
  (define gl-ext-api:texture-barrier-nv
    (foreign-lambda*
      "_ALLEGRO_glTextureBarrierNV_t"
      (((c-pointer (struct "ALLEGRO_OGL_EXT_API")) s))
      "return(s->TextureBarrierNV);"))
  (define make-allegro-ogl-ext-api
    (foreign-lambda*
      (c-pointer (struct "ALLEGRO_OGL_EXT_API"))
      (("_ALLEGRO_glBlendColor_t" BlendColor)
       ("_ALLEGRO_glBlendEquation_t" BlendEquation)
       ("_ALLEGRO_glDrawRangeElements_t" DrawRangeElements)
       ("_ALLEGRO_glColorTable_t" ColorTable)
       ("_ALLEGRO_glColorTableParameterfv_t" ColorTableParameterfv)
       ("_ALLEGRO_glColorTableParameteriv_t" ColorTableParameteriv)
       ("_ALLEGRO_glCopyColorTable_t" CopyColorTable)
       ("_ALLEGRO_glGetColorTable_t" GetColorTable)
       ("_ALLEGRO_glGetColorTableParameterfv_t" GetColorTableParameterfv)
       ("_ALLEGRO_glGetColorTableParameteriv_t" GetColorTableParameteriv)
       ("_ALLEGRO_glColorSubTable_t" ColorSubTable)
       ("_ALLEGRO_glCopyColorSubTable_t" CopyColorSubTable)
       ("_ALLEGRO_glTexImage3D_t" TexImage3D)
       ("_ALLEGRO_glTexSubImage3D_t" TexSubImage3D)
       ("_ALLEGRO_glCopyTexSubImage3D_t" CopyTexSubImage3D)
       ("_ALLEGRO_glConvolutionFilter1D_t" ConvolutionFilter1D)
       ("_ALLEGRO_glConvolutionFilter2D_t" ConvolutionFilter2D)
       ("_ALLEGRO_glConvolutionParameterf_t" ConvolutionParameterf)
       ("_ALLEGRO_glConvolutionParameterfv_t" ConvolutionParameterfv)
       ("_ALLEGRO_glConvolutionParameteri_t" ConvolutionParameteri)
       ("_ALLEGRO_glConvolutionParameteriv_t" ConvolutionParameteriv)
       ("_ALLEGRO_glCopyConvolutionFilter1D_t" CopyConvolutionFilter1D)
       ("_ALLEGRO_glCopyConvolutionFilter2D_t" CopyConvolutionFilter2D)
       ("_ALLEGRO_glGetConvolutionFilter_t" GetConvolutionFilter)
       ("_ALLEGRO_glGetConvolutionParameterfv_t" GetConvolutionParameterfv)
       ("_ALLEGRO_glGetConvolutionParameteriv_t" GetConvolutionParameteriv)
       ("_ALLEGRO_glGetSeparableFilter_t" GetSeparableFilter)
       ("_ALLEGRO_glSeparableFilter2D_t" SeparableFilter2D)
       ("_ALLEGRO_glGetHistogram_t" GetHistogram)
       ("_ALLEGRO_glGetHistogramParameterfv_t" GetHistogramParameterfv)
       ("_ALLEGRO_glGetHistogramParameteriv_t" GetHistogramParameteriv)
       ("_ALLEGRO_glGetMinmax_t" GetMinmax)
       ("_ALLEGRO_glGetMinmaxParameterfv_t" GetMinmaxParameterfv)
       ("_ALLEGRO_glGetMinmaxParameteriv_t" GetMinmaxParameteriv)
       ("_ALLEGRO_glHistogram_t" Histogram)
       ("_ALLEGRO_glMinmax_t" Minmax)
       ("_ALLEGRO_glResetHistogram_t" ResetHistogram)
       ("_ALLEGRO_glResetMinmax_t" ResetMinmax)
       ("_ALLEGRO_glActiveTexture_t" ActiveTexture)
       ("_ALLEGRO_glClientActiveTexture_t" ClientActiveTexture)
       ("_ALLEGRO_glMultiTexCoord1d_t" MultiTexCoord1d)
       ("_ALLEGRO_glMultiTexCoord1dv_t" MultiTexCoord1dv)
       ("_ALLEGRO_glMultiTexCoord1f_t" MultiTexCoord1f)
       ("_ALLEGRO_glMultiTexCoord1fv_t" MultiTexCoord1fv)
       ("_ALLEGRO_glMultiTexCoord1i_t" MultiTexCoord1i)
       ("_ALLEGRO_glMultiTexCoord1iv_t" MultiTexCoord1iv)
       ("_ALLEGRO_glMultiTexCoord1s_t" MultiTexCoord1s)
       ("_ALLEGRO_glMultiTexCoord1sv_t" MultiTexCoord1sv)
       ("_ALLEGRO_glMultiTexCoord2d_t" MultiTexCoord2d)
       ("_ALLEGRO_glMultiTexCoord2dv_t" MultiTexCoord2dv)
       ("_ALLEGRO_glMultiTexCoord2f_t" MultiTexCoord2f)
       ("_ALLEGRO_glMultiTexCoord2fv_t" MultiTexCoord2fv)
       ("_ALLEGRO_glMultiTexCoord2i_t" MultiTexCoord2i)
       ("_ALLEGRO_glMultiTexCoord2iv_t" MultiTexCoord2iv)
       ("_ALLEGRO_glMultiTexCoord2s_t" MultiTexCoord2s)
       ("_ALLEGRO_glMultiTexCoord2sv_t" MultiTexCoord2sv)
       ("_ALLEGRO_glMultiTexCoord3d_t" MultiTexCoord3d)
       ("_ALLEGRO_glMultiTexCoord3dv_t" MultiTexCoord3dv)
       ("_ALLEGRO_glMultiTexCoord3f_t" MultiTexCoord3f)
       ("_ALLEGRO_glMultiTexCoord3fv_t" MultiTexCoord3fv)
       ("_ALLEGRO_glMultiTexCoord3i_t" MultiTexCoord3i)
       ("_ALLEGRO_glMultiTexCoord3iv_t" MultiTexCoord3iv)
       ("_ALLEGRO_glMultiTexCoord3s_t" MultiTexCoord3s)
       ("_ALLEGRO_glMultiTexCoord3sv_t" MultiTexCoord3sv)
       ("_ALLEGRO_glMultiTexCoord4d_t" MultiTexCoord4d)
       ("_ALLEGRO_glMultiTexCoord4dv_t" MultiTexCoord4dv)
       ("_ALLEGRO_glMultiTexCoord4f_t" MultiTexCoord4f)
       ("_ALLEGRO_glMultiTexCoord4fv_t" MultiTexCoord4fv)
       ("_ALLEGRO_glMultiTexCoord4i_t" MultiTexCoord4i)
       ("_ALLEGRO_glMultiTexCoord4iv_t" MultiTexCoord4iv)
       ("_ALLEGRO_glMultiTexCoord4s_t" MultiTexCoord4s)
       ("_ALLEGRO_glMultiTexCoord4sv_t" MultiTexCoord4sv)
       ("_ALLEGRO_glLoadTransposeMatrixf_t" LoadTransposeMatrixf)
       ("_ALLEGRO_glLoadTransposeMatrixd_t" LoadTransposeMatrixd)
       ("_ALLEGRO_glMultTransposeMatrixf_t" MultTransposeMatrixf)
       ("_ALLEGRO_glMultTransposeMatrixd_t" MultTransposeMatrixd)
       ("_ALLEGRO_glSampleCoverage_t" SampleCoverage)
       ("_ALLEGRO_glCompressedTexImage3D_t" CompressedTexImage3D)
       ("_ALLEGRO_glCompressedTexImage2D_t" CompressedTexImage2D)
       ("_ALLEGRO_glCompressedTexImage1D_t" CompressedTexImage1D)
       ("_ALLEGRO_glCompressedTexSubImage3D_t" CompressedTexSubImage3D)
       ("_ALLEGRO_glCompressedTexSubImage2D_t" CompressedTexSubImage2D)
       ("_ALLEGRO_glCompressedTexSubImage1D_t" CompressedTexSubImage1D)
       ("_ALLEGRO_glGetCompressedTexImage_t" GetCompressedTexImage)
       ("_ALLEGRO_glBlendFuncSeparate_t" BlendFuncSeparate)
       ("_ALLEGRO_glFogCoordf_t" FogCoordf)
       ("_ALLEGRO_glFogCoordfv_t" FogCoordfv)
       ("_ALLEGRO_glFogCoordd_t" FogCoordd)
       ("_ALLEGRO_glFogCoorddv_t" FogCoorddv)
       ("_ALLEGRO_glFogCoordPointer_t" FogCoordPointer)
       ("_ALLEGRO_glMultiDrawArrays_t" MultiDrawArrays)
       ("_ALLEGRO_glMultiDrawElements_t" MultiDrawElements)
       ("_ALLEGRO_glPointParameterf_t" PointParameterf)
       ("_ALLEGRO_glPointParameterfv_t" PointParameterfv)
       ("_ALLEGRO_glPointParameteri_t" PointParameteri)
       ("_ALLEGRO_glPointParameteriv_t" PointParameteriv)
       ("_ALLEGRO_glSecondaryColor3b_t" SecondaryColor3b)
       ("_ALLEGRO_glSecondaryColor3bv_t" SecondaryColor3bv)
       ("_ALLEGRO_glSecondaryColor3d_t" SecondaryColor3d)
       ("_ALLEGRO_glSecondaryColor3dv_t" SecondaryColor3dv)
       ("_ALLEGRO_glSecondaryColor3f_t" SecondaryColor3f)
       ("_ALLEGRO_glSecondaryColor3fv_t" SecondaryColor3fv)
       ("_ALLEGRO_glSecondaryColor3i_t" SecondaryColor3i)
       ("_ALLEGRO_glSecondaryColor3iv_t" SecondaryColor3iv)
       ("_ALLEGRO_glSecondaryColor3s_t" SecondaryColor3s)
       ("_ALLEGRO_glSecondaryColor3sv_t" SecondaryColor3sv)
       ("_ALLEGRO_glSecondaryColor3ub_t" SecondaryColor3ub)
       ("_ALLEGRO_glSecondaryColor3ubv_t" SecondaryColor3ubv)
       ("_ALLEGRO_glSecondaryColor3ui_t" SecondaryColor3ui)
       ("_ALLEGRO_glSecondaryColor3uiv_t" SecondaryColor3uiv)
       ("_ALLEGRO_glSecondaryColor3us_t" SecondaryColor3us)
       ("_ALLEGRO_glSecondaryColor3usv_t" SecondaryColor3usv)
       ("_ALLEGRO_glSecondaryColorPointer_t" SecondaryColorPointer)
       ("_ALLEGRO_glWindowPos2d_t" WindowPos2d)
       ("_ALLEGRO_glWindowPos2dv_t" WindowPos2dv)
       ("_ALLEGRO_glWindowPos2f_t" WindowPos2f)
       ("_ALLEGRO_glWindowPos2fv_t" WindowPos2fv)
       ("_ALLEGRO_glWindowPos2i_t" WindowPos2i)
       ("_ALLEGRO_glWindowPos2iv_t" WindowPos2iv)
       ("_ALLEGRO_glWindowPos2s_t" WindowPos2s)
       ("_ALLEGRO_glWindowPos2sv_t" WindowPos2sv)
       ("_ALLEGRO_glWindowPos3d_t" WindowPos3d)
       ("_ALLEGRO_glWindowPos3dv_t" WindowPos3dv)
       ("_ALLEGRO_glWindowPos3f_t" WindowPos3f)
       ("_ALLEGRO_glWindowPos3fv_t" WindowPos3fv)
       ("_ALLEGRO_glWindowPos3i_t" WindowPos3i)
       ("_ALLEGRO_glWindowPos3iv_t" WindowPos3iv)
       ("_ALLEGRO_glWindowPos3s_t" WindowPos3s)
       ("_ALLEGRO_glWindowPos3sv_t" WindowPos3sv)
       ("_ALLEGRO_glBindBuffer_t" BindBuffer)
       ("_ALLEGRO_glDeleteBuffers_t" DeleteBuffers)
       ("_ALLEGRO_glGenBuffers_t" GenBuffers)
       ("_ALLEGRO_glIsBuffer_t" IsBuffer)
       ("_ALLEGRO_glBufferData_t" BufferData)
       ("_ALLEGRO_glBufferSubData_t" BufferSubData)
       ("_ALLEGRO_glGetBufferSubData_t" GetBufferSubData)
       ("_ALLEGRO_glMapBuffer_t" MapBuffer)
       ("_ALLEGRO_glUnmapBuffer_t" UnmapBuffer)
       ("_ALLEGRO_glGetBufferParameteriv_t" GetBufferParameteriv)
       ("_ALLEGRO_glGetBufferPointerv_t" GetBufferPointerv)
       ("_ALLEGRO_glGenQueries_t" GenQueries)
       ("_ALLEGRO_glDeleteQueries_t" DeleteQueries)
       ("_ALLEGRO_glIsQuery_t" IsQuery)
       ("_ALLEGRO_glBeginQuery_t" BeginQuery)
       ("_ALLEGRO_glEndQuery_t" EndQuery)
       ("_ALLEGRO_glGetQueryiv_t" GetQueryiv)
       ("_ALLEGRO_glGetQueryObjectiv_t" GetQueryObjectiv)
       ("_ALLEGRO_glGetQueryObjectuiv_t" GetQueryObjectuiv)
       ("_ALLEGRO_glBlendEquationSeparate_t" BlendEquationSeparate)
       ("_ALLEGRO_glCreateProgram_t" CreateProgram)
       ("_ALLEGRO_glCreateShader_t" CreateShader)
       ("_ALLEGRO_glDeleteProgram_t" DeleteProgram)
       ("_ALLEGRO_glDeleteShader_t" DeleteShader)
       ("_ALLEGRO_glAttachShader_t" AttachShader)
       ("_ALLEGRO_glDetachShader_t" DetachShader)
       ("_ALLEGRO_glShaderSource_t" ShaderSource)
       ("_ALLEGRO_glCompileShader_t" CompileShader)
       ("_ALLEGRO_glIsProgram_t" IsProgram)
       ("_ALLEGRO_glIsShader_t" IsShader)
       ("_ALLEGRO_glLinkProgram_t" LinkProgram)
       ("_ALLEGRO_glUseProgram_t" UseProgram)
       ("_ALLEGRO_glValidateProgram_t" ValidateProgram)
       ("_ALLEGRO_glUniform1f_t" Uniform1f)
       ("_ALLEGRO_glUniform2f_t" Uniform2f)
       ("_ALLEGRO_glUniform3f_t" Uniform3f)
       ("_ALLEGRO_glUniform4f_t" Uniform4f)
       ("_ALLEGRO_glUniform1i_t" Uniform1i)
       ("_ALLEGRO_glUniform2i_t" Uniform2i)
       ("_ALLEGRO_glUniform3i_t" Uniform3i)
       ("_ALLEGRO_glUniform4i_t" Uniform4i)
       ("_ALLEGRO_glUniform1fv_t" Uniform1fv)
       ("_ALLEGRO_glUniform2fv_t" Uniform2fv)
       ("_ALLEGRO_glUniform3fv_t" Uniform3fv)
       ("_ALLEGRO_glUniform4fv_t" Uniform4fv)
       ("_ALLEGRO_glUniform1iv_t" Uniform1iv)
       ("_ALLEGRO_glUniform2iv_t" Uniform2iv)
       ("_ALLEGRO_glUniform3iv_t" Uniform3iv)
       ("_ALLEGRO_glUniform4iv_t" Uniform4iv)
       ("_ALLEGRO_glUniformMatrix2fv_t" UniformMatrix2fv)
       ("_ALLEGRO_glUniformMatrix3fv_t" UniformMatrix3fv)
       ("_ALLEGRO_glUniformMatrix4fv_t" UniformMatrix4fv)
       ("_ALLEGRO_glGetShaderfv_t" GetShaderfv)
       ("_ALLEGRO_glGetShaderiv_t" GetShaderiv)
       ("_ALLEGRO_glGetProgramfv_t" GetProgramfv)
       ("_ALLEGRO_glGetProgramiv_t" GetProgramiv)
       ("_ALLEGRO_glGetShaderInfoLog_t" GetShaderInfoLog)
       ("_ALLEGRO_glGetProgramInfoLog_t" GetProgramInfoLog)
       ("_ALLEGRO_glGetAttachedShaders_t" GetAttachedShaders)
       ("_ALLEGRO_glGetUniformLocation_t" GetUniformLocation)
       ("_ALLEGRO_glGetActiveUniform_t" GetActiveUniform)
       ("_ALLEGRO_glGetUniformfv_t" GetUniformfv)
       ("_ALLEGRO_glGetUniformiv_t" GetUniformiv)
       ("_ALLEGRO_glGetShaderSource_t" GetShaderSource)
       ("_ALLEGRO_glVertexAttrib1f_t" VertexAttrib1f)
       ("_ALLEGRO_glVertexAttrib1s_t" VertexAttrib1s)
       ("_ALLEGRO_glVertexAttrib1d_t" VertexAttrib1d)
       ("_ALLEGRO_glVertexAttrib2f_t" VertexAttrib2f)
       ("_ALLEGRO_glVertexAttrib2s_t" VertexAttrib2s)
       ("_ALLEGRO_glVertexAttrib2d_t" VertexAttrib2d)
       ("_ALLEGRO_glVertexAttrib3f_t" VertexAttrib3f)
       ("_ALLEGRO_glVertexAttrib3s_t" VertexAttrib3s)
       ("_ALLEGRO_glVertexAttrib3d_t" VertexAttrib3d)
       ("_ALLEGRO_glVertexAttrib4f_t" VertexAttrib4f)
       ("_ALLEGRO_glVertexAttrib4s_t" VertexAttrib4s)
       ("_ALLEGRO_glVertexAttrib4d_t" VertexAttrib4d)
       ("_ALLEGRO_glVertexAttrib4Nub_t" VertexAttrib4Nub)
       ("_ALLEGRO_glVertexAttrib1fv_t" VertexAttrib1fv)
       ("_ALLEGRO_glVertexAttrib1sv_t" VertexAttrib1sv)
       ("_ALLEGRO_glVertexAttrib1dv_t" VertexAttrib1dv)
       ("_ALLEGRO_glVertexAttrib2fv_t" VertexAttrib2fv)
       ("_ALLEGRO_glVertexAttrib2sv_t" VertexAttrib2sv)
       ("_ALLEGRO_glVertexAttrib2dv_t" VertexAttrib2dv)
       ("_ALLEGRO_glVertexAttrib3fv_t" VertexAttrib3fv)
       ("_ALLEGRO_glVertexAttrib3sv_t" VertexAttrib3sv)
       ("_ALLEGRO_glVertexAttrib3dv_t" VertexAttrib3dv)
       ("_ALLEGRO_glVertexAttrib4fv_t" VertexAttrib4fv)
       ("_ALLEGRO_glVertexAttrib4sv_t" VertexAttrib4sv)
       ("_ALLEGRO_glVertexAttrib4dv_t" VertexAttrib4dv)
       ("_ALLEGRO_glVertexAttrib4iv_t" VertexAttrib4iv)
       ("_ALLEGRO_glVertexAttrib4bv_t" VertexAttrib4bv)
       ("_ALLEGRO_glVertexAttrib4ubv_t" VertexAttrib4ubv)
       ("_ALLEGRO_glVertexAttrib4usv_t" VertexAttrib4usv)
       ("_ALLEGRO_glVertexAttrib4uiv_t" VertexAttrib4uiv)
       ("_ALLEGRO_glVertexAttrib4Nbv_t" VertexAttrib4Nbv)
       ("_ALLEGRO_glVertexAttrib4Nsv_t" VertexAttrib4Nsv)
       ("_ALLEGRO_glVertexAttrib4Niv_t" VertexAttrib4Niv)
       ("_ALLEGRO_glVertexAttrib4Nubv_t" VertexAttrib4Nubv)
       ("_ALLEGRO_glVertexAttrib4Nusv_t" VertexAttrib4Nusv)
       ("_ALLEGRO_glVertexAttrib4Nuiv_t" VertexAttrib4Nuiv)
       ("_ALLEGRO_glVertexAttribPointer_t" VertexAttribPointer)
       ("_ALLEGRO_glEnableVertexAttribArray_t" EnableVertexAttribArray)
       ("_ALLEGRO_glDisableVertexAttribArray_t" DisableVertexAttribArray)
       ("_ALLEGRO_glBindAttribLocation_t" BindAttribLocation)
       ("_ALLEGRO_glGetActiveAttrib_t" GetActiveAttrib)
       ("_ALLEGRO_glGetAttribLocation_t" GetAttribLocation)
       ("_ALLEGRO_glGetVertexAttribdv_t" GetVertexAttribdv)
       ("_ALLEGRO_glGetVertexAttribfv_t" GetVertexAttribfv)
       ("_ALLEGRO_glGetVertexAttribiv_t" GetVertexAttribiv)
       ("_ALLEGRO_glGetVertexAttribPointerv_t" GetVertexAttribPointerv)
       ("_ALLEGRO_glDrawBuffers_t" DrawBuffers)
       ("_ALLEGRO_glStencilOpSeparate_t" StencilOpSeparate)
       ("_ALLEGRO_glStencilFuncSeparate_t" StencilFuncSeparate)
       ("_ALLEGRO_glStencilMaskSeparate_t" StencilMaskSeparate)
       ("_ALLEGRO_glUniformMatrix2x3fv_t" UniformMatrix2x3fv)
       ("_ALLEGRO_glUniformMatrix3x2fv_t" UniformMatrix3x2fv)
       ("_ALLEGRO_glUniformMatrix2x4fv_t" UniformMatrix2x4fv)
       ("_ALLEGRO_glUniformMatrix4x2fv_t" UniformMatrix4x2fv)
       ("_ALLEGRO_glUniformMatrix3x4fv_t" UniformMatrix3x4fv)
       ("_ALLEGRO_glUniformMatrix4x3fv_t" UniformMatrix4x3fv)
       ("_ALLEGRO_glColorMaski_t" ColorMaski)
       ("_ALLEGRO_glGetBooleani_v_t" GetBooleani_v)
       ("_ALLEGRO_glGetIntegeri_v_t" GetIntegeri_v)
       ("_ALLEGRO_glEnablei_t" Enablei)
       ("_ALLEGRO_glDisablei_t" Disablei)
       ("_ALLEGRO_glIsEnabledi_t" IsEnabledi)
       ("_ALLEGRO_glBeginTransformFeedback_t" BeginTransformFeedback)
       ("_ALLEGRO_glEndTransformFeedback_t" EndTransformFeedback)
       ("_ALLEGRO_glBindBufferRange_t" BindBufferRange)
       ("_ALLEGRO_glBindBufferBase_t" BindBufferBase)
       ("_ALLEGRO_glTransformFeedbackVaryings_t" TransformFeedbackVaryings)
       ("_ALLEGRO_glGetTransformFeedbackVarying_t" GetTransformFeedbackVarying)
       ("_ALLEGRO_glClampColor_t" ClampColor)
       ("_ALLEGRO_glBeginConditionalRender_t" BeginConditionalRender)
       ("_ALLEGRO_glEndConditionalRender_t" EndConditionalRender)
       ("_ALLEGRO_glVertexAttribI1i_t" VertexAttribI1i)
       ("_ALLEGRO_glVertexAttribI2i_t" VertexAttribI2i)
       ("_ALLEGRO_glVertexAttribI3i_t" VertexAttribI3i)
       ("_ALLEGRO_glVertexAttribI4i_t" VertexAttribI4i)
       ("_ALLEGRO_glVertexAttribI1ui_t" VertexAttribI1ui)
       ("_ALLEGRO_glVertexAttribI2ui_t" VertexAttribI2ui)
       ("_ALLEGRO_glVertexAttribI3ui_t" VertexAttribI3ui)
       ("_ALLEGRO_glVertexAttribI4ui_t" VertexAttribI4ui)
       ("_ALLEGRO_glVertexAttribI1iv_t" VertexAttribI1iv)
       ("_ALLEGRO_glVertexAttribI2iv_t" VertexAttribI2iv)
       ("_ALLEGRO_glVertexAttribI3iv_t" VertexAttribI3iv)
       ("_ALLEGRO_glVertexAttribI4iv_t" VertexAttribI4iv)
       ("_ALLEGRO_glVertexAttribI1uiv_t" VertexAttribI1uiv)
       ("_ALLEGRO_glVertexAttribI2uiv_t" VertexAttribI2uiv)
       ("_ALLEGRO_glVertexAttribI3uiv_t" VertexAttribI3uiv)
       ("_ALLEGRO_glVertexAttribI4uiv_t" VertexAttribI4uiv)
       ("_ALLEGRO_glVertexAttribI4bv_t" VertexAttribI4bv)
       ("_ALLEGRO_glVertexAttribI4sv_t" VertexAttribI4sv)
       ("_ALLEGRO_glVertexAttribI4ubv_t" VertexAttribI4ubv)
       ("_ALLEGRO_glVertexAttribI4usv_t" VertexAttribI4usv)
       ("_ALLEGRO_glVertexAttribIPointer_t" VertexAttribIPointer)
       ("_ALLEGRO_glGetVertexAttribIiv_t" GetVertexAttribIiv)
       ("_ALLEGRO_glGetVertexAttribIuiv_t" GetVertexAttribIuiv)
       ("_ALLEGRO_glGetUniformuiv_t" GetUniformuiv)
       ("_ALLEGRO_glBindFragDataLocation_t" BindFragDataLocation)
       ("_ALLEGRO_glGetFragDataLocation_t" GetFragDataLocation)
       ("_ALLEGRO_glUniform1ui_t" Uniform1ui)
       ("_ALLEGRO_glUniform2ui_t" Uniform2ui)
       ("_ALLEGRO_glUniform3ui_t" Uniform3ui)
       ("_ALLEGRO_glUniform4ui_t" Uniform4ui)
       ("_ALLEGRO_glUniform1uiv_t" Uniform1uiv)
       ("_ALLEGRO_glUniform2uiv_t" Uniform2uiv)
       ("_ALLEGRO_glUniform3uiv_t" Uniform3uiv)
       ("_ALLEGRO_glUniform4uiv_t" Uniform4uiv)
       ("_ALLEGRO_glTexParameterIiv_t" TexParameterIiv)
       ("_ALLEGRO_glTexParameterIuiv_t" TexParameterIuiv)
       ("_ALLEGRO_glGetTexParameterIiv_t" GetTexParameterIiv)
       ("_ALLEGRO_glGetTexParameterIuiv_t" GetTexParameterIuiv)
       ("_ALLEGRO_glClearBufferiv_t" ClearBufferiv)
       ("_ALLEGRO_glClearBufferuiv_t" ClearBufferuiv)
       ("_ALLEGRO_glClearBufferfv_t" ClearBufferfv)
       ("_ALLEGRO_glClearBufferfi_t" ClearBufferfi)
       ("_ALLEGRO_glGetStringi_t" GetStringi)
       ("_ALLEGRO_glDrawArraysInstanced_t" DrawArraysInstanced)
       ("_ALLEGRO_glDrawElementsInstanced_t" DrawElementsInstanced)
       ("_ALLEGRO_glTexBuffer_t" TexBuffer)
       ("_ALLEGRO_glPrimitiveRestartIndex_t" PrimitiveRestartIndex)
       ("_ALLEGRO_glGetInteger64i_v_t" GetInteger64i_v)
       ("_ALLEGRO_glGetBufferParameteri64v_t" GetBufferParameteri64v)
       ("_ALLEGRO_glProgramParameteri_t" ProgramParameteri)
       ("_ALLEGRO_glFramebufferTexture_t" FramebufferTexture)
       ("_ALLEGRO_glClearBufferData_t" ClearBufferData)
       ("_ALLEGRO_glClearBufferSubData_t" ClearBufferSubData)
       ("_ALLEGRO_glDispatchCompute_t" DispatchCompute)
       ("_ALLEGRO_glDispatchComputeIndirect_t" DispatchComputeIndirect)
       ("_ALLEGRO_glCopyImageSubData_t" CopyImageSubData)
       ("_ALLEGRO_glFramebufferParameteri_t" FramebufferParameteri)
       ("_ALLEGRO_glGetFramebufferParameteriv_t" GetFramebufferParameteriv)
       ("_ALLEGRO_glGetInternalformati64v_t" GetInternalformati64v)
       ("_ALLEGRO_glInvalidateTexSubImage_t" InvalidateTexSubImage)
       ("_ALLEGRO_glInvalidateTexImage_t" InvalidateTexImage)
       ("_ALLEGRO_glInvalidateBufferSubData_t" InvalidateBufferSubData)
       ("_ALLEGRO_glInvalidateBufferData_t" InvalidateBufferData)
       ("_ALLEGRO_glInvalidateFramebuffer_t" InvalidateFramebuffer)
       ("_ALLEGRO_glInvalidateSubFramebuffer_t" InvalidateSubFramebuffer)
       ("_ALLEGRO_glMultiDrawArraysIndirect_t" MultiDrawArraysIndirect)
       ("_ALLEGRO_glMultiDrawElementsIndirect_t" MultiDrawElementsIndirect)
       ("_ALLEGRO_glGetProgramInterfaceiv_t" GetProgramInterfaceiv)
       ("_ALLEGRO_glGetProgramResourceIndex_t" GetProgramResourceIndex)
       ("_ALLEGRO_glGetProgramResourceName_t" GetProgramResourceName)
       ("_ALLEGRO_glGetProgramResourceiv_t" GetProgramResourceiv)
       ("_ALLEGRO_glGetProgramResourceLocation_t" GetProgramResourceLocation)
       ("_ALLEGRO_glGetProgramResourceLocationIndex_t"
        GetProgramResourceLocationIndex)
       ("_ALLEGRO_glShaderStorageBlockBinding_t" ShaderStorageBlockBinding)
       ("_ALLEGRO_glTexBufferRange_t" TexBufferRange)
       ("_ALLEGRO_glTexStorage2DMultisample_t" TexStorage2DMultisample)
       ("_ALLEGRO_glTexStorage3DMultisample_t" TexStorage3DMultisample)
       ("_ALLEGRO_glTextureView_t" TextureView)
       ("_ALLEGRO_glBindVertexBuffer_t" BindVertexBuffer)
       ("_ALLEGRO_glVertexAttribFormat_t" VertexAttribFormat)
       ("_ALLEGRO_glVertexAttribIFormat_t" VertexAttribIFormat)
       ("_ALLEGRO_glVertexAttribLFormat_t" VertexAttribLFormat)
       ("_ALLEGRO_glVertexAttribBinding_t" VertexAttribBinding)
       ("_ALLEGRO_glVertexBindingDivisor_t" VertexBindingDivisor)
       ("_ALLEGRO_glDebugMessageControl_t" DebugMessageControl)
       ("_ALLEGRO_glDebugMessageInsert_t" DebugMessageInsert)
       ("_ALLEGRO_glDebugMessageCallback_t" DebugMessageCallback)
       ("_ALLEGRO_glGetDebugMessageLog_t" GetDebugMessageLog)
       ("_ALLEGRO_glPushDebugGroup_t" PushDebugGroup)
       ("_ALLEGRO_glPopDebugGroup_t" PopDebugGroup)
       ("_ALLEGRO_glObjectLabel_t" ObjectLabel)
       ("_ALLEGRO_glGetObjectLabel_t" GetObjectLabel)
       ("_ALLEGRO_glObjectPtrLabel_t" ObjectPtrLabel)
       ("_ALLEGRO_glGetObjectPtrLabel_t" GetObjectPtrLabel)
       ("_ALLEGRO_glActiveTextureARB_t" ActiveTextureARB)
       ("_ALLEGRO_glClientActiveTextureARB_t" ClientActiveTextureARB)
       ("_ALLEGRO_glMultiTexCoord1dARB_t" MultiTexCoord1dARB)
       ("_ALLEGRO_glMultiTexCoord1dvARB_t" MultiTexCoord1dvARB)
       ("_ALLEGRO_glMultiTexCoord1fARB_t" MultiTexCoord1fARB)
       ("_ALLEGRO_glMultiTexCoord1fvARB_t" MultiTexCoord1fvARB)
       ("_ALLEGRO_glMultiTexCoord1iARB_t" MultiTexCoord1iARB)
       ("_ALLEGRO_glMultiTexCoord1ivARB_t" MultiTexCoord1ivARB)
       ("_ALLEGRO_glMultiTexCoord1sARB_t" MultiTexCoord1sARB)
       ("_ALLEGRO_glMultiTexCoord1svARB_t" MultiTexCoord1svARB)
       ("_ALLEGRO_glMultiTexCoord2dARB_t" MultiTexCoord2dARB)
       ("_ALLEGRO_glMultiTexCoord2dvARB_t" MultiTexCoord2dvARB)
       ("_ALLEGRO_glMultiTexCoord2fARB_t" MultiTexCoord2fARB)
       ("_ALLEGRO_glMultiTexCoord2fvARB_t" MultiTexCoord2fvARB)
       ("_ALLEGRO_glMultiTexCoord2iARB_t" MultiTexCoord2iARB)
       ("_ALLEGRO_glMultiTexCoord2ivARB_t" MultiTexCoord2ivARB)
       ("_ALLEGRO_glMultiTexCoord2sARB_t" MultiTexCoord2sARB)
       ("_ALLEGRO_glMultiTexCoord2svARB_t" MultiTexCoord2svARB)
       ("_ALLEGRO_glMultiTexCoord3dARB_t" MultiTexCoord3dARB)
       ("_ALLEGRO_glMultiTexCoord3dvARB_t" MultiTexCoord3dvARB)
       ("_ALLEGRO_glMultiTexCoord3fARB_t" MultiTexCoord3fARB)
       ("_ALLEGRO_glMultiTexCoord3fvARB_t" MultiTexCoord3fvARB)
       ("_ALLEGRO_glMultiTexCoord3iARB_t" MultiTexCoord3iARB)
       ("_ALLEGRO_glMultiTexCoord3ivARB_t" MultiTexCoord3ivARB)
       ("_ALLEGRO_glMultiTexCoord3sARB_t" MultiTexCoord3sARB)
       ("_ALLEGRO_glMultiTexCoord3svARB_t" MultiTexCoord3svARB)
       ("_ALLEGRO_glMultiTexCoord4dARB_t" MultiTexCoord4dARB)
       ("_ALLEGRO_glMultiTexCoord4dvARB_t" MultiTexCoord4dvARB)
       ("_ALLEGRO_glMultiTexCoord4fARB_t" MultiTexCoord4fARB)
       ("_ALLEGRO_glMultiTexCoord4fvARB_t" MultiTexCoord4fvARB)
       ("_ALLEGRO_glMultiTexCoord4iARB_t" MultiTexCoord4iARB)
       ("_ALLEGRO_glMultiTexCoord4ivARB_t" MultiTexCoord4ivARB)
       ("_ALLEGRO_glMultiTexCoord4sARB_t" MultiTexCoord4sARB)
       ("_ALLEGRO_glMultiTexCoord4svARB_t" MultiTexCoord4svARB)
       ("_ALLEGRO_glLoadTransposeMatrixfARB_t" LoadTransposeMatrixfARB)
       ("_ALLEGRO_glLoadTransposeMatrixdARB_t" LoadTransposeMatrixdARB)
       ("_ALLEGRO_glMultTransposeMatrixfARB_t" MultTransposeMatrixfARB)
       ("_ALLEGRO_glMultTransposeMatrixdARB_t" MultTransposeMatrixdARB)
       ("_ALLEGRO_glSampleCoverageARB_t" SampleCoverageARB)
       ("_ALLEGRO_glCompressedTexImage3DARB_t" CompressedTexImage3DARB)
       ("_ALLEGRO_glCompressedTexImage2DARB_t" CompressedTexImage2DARB)
       ("_ALLEGRO_glCompressedTexImage1DARB_t" CompressedTexImage1DARB)
       ("_ALLEGRO_glCompressedTexSubImage3DARB_t" CompressedTexSubImage3DARB)
       ("_ALLEGRO_glCompressedTexSubImage2DARB_t" CompressedTexSubImage2DARB)
       ("_ALLEGRO_glCompressedTexSubImage1DARB_t" CompressedTexSubImage1DARB)
       ("_ALLEGRO_glGetCompressedTexImageARB_t" GetCompressedTexImageARB)
       ("_ALLEGRO_glPointParameterfARB_t" PointParameterfARB)
       ("_ALLEGRO_glPointParameterfvARB_t" PointParameterfvARB)
       ("_ALLEGRO_glWeightbvARB_t" WeightbvARB)
       ("_ALLEGRO_glWeightsvARB_t" WeightsvARB)
       ("_ALLEGRO_glWeightivARB_t" WeightivARB)
       ("_ALLEGRO_glWeightfvARB_t" WeightfvARB)
       ("_ALLEGRO_glWeightdvARB_t" WeightdvARB)
       ("_ALLEGRO_glWeightubvARB_t" WeightubvARB)
       ("_ALLEGRO_glWeightusvARB_t" WeightusvARB)
       ("_ALLEGRO_glWeightuivARB_t" WeightuivARB)
       ("_ALLEGRO_glWeightPointerARB_t" WeightPointerARB)
       ("_ALLEGRO_glVertexBlendARB_t" VertexBlendARB)
       ("_ALLEGRO_glCurrentPaletteMatrixARB_t" CurrentPaletteMatrixARB)
       ("_ALLEGRO_glMatrixIndexubvARB_t" MatrixIndexubvARB)
       ("_ALLEGRO_glMatrixIndexusvARB_t" MatrixIndexusvARB)
       ("_ALLEGRO_glMatrixIndexuivARB_t" MatrixIndexuivARB)
       ("_ALLEGRO_glMatrixIndexPointerARB_t" MatrixIndexPointerARB)
       ("_ALLEGRO_glWindowPos2dARB_t" WindowPos2dARB)
       ("_ALLEGRO_glWindowPos2dvARB_t" WindowPos2dvARB)
       ("_ALLEGRO_glWindowPos2fARB_t" WindowPos2fARB)
       ("_ALLEGRO_glWindowPos2fvARB_t" WindowPos2fvARB)
       ("_ALLEGRO_glWindowPos2iARB_t" WindowPos2iARB)
       ("_ALLEGRO_glWindowPos2ivARB_t" WindowPos2ivARB)
       ("_ALLEGRO_glWindowPos2sARB_t" WindowPos2sARB)
       ("_ALLEGRO_glWindowPos2svARB_t" WindowPos2svARB)
       ("_ALLEGRO_glWindowPos3dARB_t" WindowPos3dARB)
       ("_ALLEGRO_glWindowPos3dvARB_t" WindowPos3dvARB)
       ("_ALLEGRO_glWindowPos3fARB_t" WindowPos3fARB)
       ("_ALLEGRO_glWindowPos3fvARB_t" WindowPos3fvARB)
       ("_ALLEGRO_glWindowPos3iARB_t" WindowPos3iARB)
       ("_ALLEGRO_glWindowPos3ivARB_t" WindowPos3ivARB)
       ("_ALLEGRO_glWindowPos3sARB_t" WindowPos3sARB)
       ("_ALLEGRO_glWindowPos3svARB_t" WindowPos3svARB)
       ("_ALLEGRO_glVertexAttrib1dARB_t" VertexAttrib1dARB)
       ("_ALLEGRO_glVertexAttrib1dvARB_t" VertexAttrib1dvARB)
       ("_ALLEGRO_glVertexAttrib1fARB_t" VertexAttrib1fARB)
       ("_ALLEGRO_glVertexAttrib1fvARB_t" VertexAttrib1fvARB)
       ("_ALLEGRO_glVertexAttrib1sARB_t" VertexAttrib1sARB)
       ("_ALLEGRO_glVertexAttrib1svARB_t" VertexAttrib1svARB)
       ("_ALLEGRO_glVertexAttrib2dARB_t" VertexAttrib2dARB)
       ("_ALLEGRO_glVertexAttrib2dvARB_t" VertexAttrib2dvARB)
       ("_ALLEGRO_glVertexAttrib2fARB_t" VertexAttrib2fARB)
       ("_ALLEGRO_glVertexAttrib2fvARB_t" VertexAttrib2fvARB)
       ("_ALLEGRO_glVertexAttrib2sARB_t" VertexAttrib2sARB)
       ("_ALLEGRO_glVertexAttrib2svARB_t" VertexAttrib2svARB)
       ("_ALLEGRO_glVertexAttrib3dARB_t" VertexAttrib3dARB)
       ("_ALLEGRO_glVertexAttrib3dvARB_t" VertexAttrib3dvARB)
       ("_ALLEGRO_glVertexAttrib3fARB_t" VertexAttrib3fARB)
       ("_ALLEGRO_glVertexAttrib3fvARB_t" VertexAttrib3fvARB)
       ("_ALLEGRO_glVertexAttrib3sARB_t" VertexAttrib3sARB)
       ("_ALLEGRO_glVertexAttrib3svARB_t" VertexAttrib3svARB)
       ("_ALLEGRO_glVertexAttrib4NbvARB_t" VertexAttrib4NbvARB)
       ("_ALLEGRO_glVertexAttrib4NivARB_t" VertexAttrib4NivARB)
       ("_ALLEGRO_glVertexAttrib4NsvARB_t" VertexAttrib4NsvARB)
       ("_ALLEGRO_glVertexAttrib4NubARB_t" VertexAttrib4NubARB)
       ("_ALLEGRO_glVertexAttrib4NubvARB_t" VertexAttrib4NubvARB)
       ("_ALLEGRO_glVertexAttrib4NuivARB_t" VertexAttrib4NuivARB)
       ("_ALLEGRO_glVertexAttrib4NusvARB_t" VertexAttrib4NusvARB)
       ("_ALLEGRO_glVertexAttrib4bvARB_t" VertexAttrib4bvARB)
       ("_ALLEGRO_glVertexAttrib4dARB_t" VertexAttrib4dARB)
       ("_ALLEGRO_glVertexAttrib4dvARB_t" VertexAttrib4dvARB)
       ("_ALLEGRO_glVertexAttrib4fARB_t" VertexAttrib4fARB)
       ("_ALLEGRO_glVertexAttrib4fvARB_t" VertexAttrib4fvARB)
       ("_ALLEGRO_glVertexAttrib4ivARB_t" VertexAttrib4ivARB)
       ("_ALLEGRO_glVertexAttrib4sARB_t" VertexAttrib4sARB)
       ("_ALLEGRO_glVertexAttrib4svARB_t" VertexAttrib4svARB)
       ("_ALLEGRO_glVertexAttrib4ubvARB_t" VertexAttrib4ubvARB)
       ("_ALLEGRO_glVertexAttrib4uivARB_t" VertexAttrib4uivARB)
       ("_ALLEGRO_glVertexAttrib4usvARB_t" VertexAttrib4usvARB)
       ("_ALLEGRO_glVertexAttribPointerARB_t" VertexAttribPointerARB)
       ("_ALLEGRO_glEnableVertexAttribArrayARB_t" EnableVertexAttribArrayARB)
       ("_ALLEGRO_glDisableVertexAttribArrayARB_t" DisableVertexAttribArrayARB)
       ("_ALLEGRO_glProgramStringARB_t" ProgramStringARB)
       ("_ALLEGRO_glBindProgramARB_t" BindProgramARB)
       ("_ALLEGRO_glDeleteProgramsARB_t" DeleteProgramsARB)
       ("_ALLEGRO_glGenProgramsARB_t" GenProgramsARB)
       ("_ALLEGRO_glProgramEnvParameter4dARB_t" ProgramEnvParameter4dARB)
       ("_ALLEGRO_glProgramEnvParameter4dvARB_t" ProgramEnvParameter4dvARB)
       ("_ALLEGRO_glProgramEnvParameter4fARB_t" ProgramEnvParameter4fARB)
       ("_ALLEGRO_glProgramEnvParameter4fvARB_t" ProgramEnvParameter4fvARB)
       ("_ALLEGRO_glProgramLocalParameter4dARB_t" ProgramLocalParameter4dARB)
       ("_ALLEGRO_glProgramLocalParameter4dvARB_t" ProgramLocalParameter4dvARB)
       ("_ALLEGRO_glProgramLocalParameter4fARB_t" ProgramLocalParameter4fARB)
       ("_ALLEGRO_glProgramLocalParameter4fvARB_t" ProgramLocalParameter4fvARB)
       ("_ALLEGRO_glGetProgramEnvParameterdvARB_t" GetProgramEnvParameterdvARB)
       ("_ALLEGRO_glGetProgramEnvParameterfvARB_t" GetProgramEnvParameterfvARB)
       ("_ALLEGRO_glGetProgramLocalParameterdvARB_t"
        GetProgramLocalParameterdvARB)
       ("_ALLEGRO_glGetProgramLocalParameterfvARB_t"
        GetProgramLocalParameterfvARB)
       ("_ALLEGRO_glGetProgramivARB_t" GetProgramivARB)
       ("_ALLEGRO_glGetProgramStringARB_t" GetProgramStringARB)
       ("_ALLEGRO_glGetVertexAttribdvARB_t" GetVertexAttribdvARB)
       ("_ALLEGRO_glGetVertexAttribfvARB_t" GetVertexAttribfvARB)
       ("_ALLEGRO_glGetVertexAttribivARB_t" GetVertexAttribivARB)
       ("_ALLEGRO_glGetVertexAttribPointervARB_t" GetVertexAttribPointervARB)
       ("_ALLEGRO_glIsProgramARB_t" IsProgramARB)
       ("_ALLEGRO_glBindBufferARB_t" BindBufferARB)
       ("_ALLEGRO_glDeleteBuffersARB_t" DeleteBuffersARB)
       ("_ALLEGRO_glGenBuffersARB_t" GenBuffersARB)
       ("_ALLEGRO_glIsBufferARB_t" IsBufferARB)
       ("_ALLEGRO_glBufferDataARB_t" BufferDataARB)
       ("_ALLEGRO_glBufferSubDataARB_t" BufferSubDataARB)
       ("_ALLEGRO_glGetBufferSubDataARB_t" GetBufferSubDataARB)
       ("_ALLEGRO_glMapBufferARB_t" MapBufferARB)
       ("_ALLEGRO_glUnmapBufferARB_t" UnmapBufferARB)
       ("_ALLEGRO_glGetBufferParameterivARB_t" GetBufferParameterivARB)
       ("_ALLEGRO_glGetBufferPointervARB_t" GetBufferPointervARB)
       ("_ALLEGRO_glGenQueriesARB_t" GenQueriesARB)
       ("_ALLEGRO_glDeleteQueriesARB_t" DeleteQueriesARB)
       ("_ALLEGRO_glIsQueryARB_t" IsQueryARB)
       ("_ALLEGRO_glBeginQueryARB_t" BeginQueryARB)
       ("_ALLEGRO_glEndQueryARB_t" EndQueryARB)
       ("_ALLEGRO_glGetQueryivARB_t" GetQueryivARB)
       ("_ALLEGRO_glGetQueryObjectivARB_t" GetQueryObjectivARB)
       ("_ALLEGRO_glGetQueryObjectuivARB_t" GetQueryObjectuivARB)
       ("_ALLEGRO_glDeleteObjectARB_t" DeleteObjectARB)
       ("_ALLEGRO_glGetHandleARB_t" GetHandleARB)
       ("_ALLEGRO_glDetachObjectARB_t" DetachObjectARB)
       ("_ALLEGRO_glCreateShaderObjectARB_t" CreateShaderObjectARB)
       ("_ALLEGRO_glShaderSourceARB_t" ShaderSourceARB)
       ("_ALLEGRO_glCompileShaderARB_t" CompileShaderARB)
       ("_ALLEGRO_glCreateProgramObjectARB_t" CreateProgramObjectARB)
       ("_ALLEGRO_glAttachObjectARB_t" AttachObjectARB)
       ("_ALLEGRO_glLinkProgramARB_t" LinkProgramARB)
       ("_ALLEGRO_glUseProgramObjectARB_t" UseProgramObjectARB)
       ("_ALLEGRO_glValidateProgramARB_t" ValidateProgramARB)
       ("_ALLEGRO_glUniform1fARB_t" Uniform1fARB)
       ("_ALLEGRO_glUniform2fARB_t" Uniform2fARB)
       ("_ALLEGRO_glUniform3fARB_t" Uniform3fARB)
       ("_ALLEGRO_glUniform4fARB_t" Uniform4fARB)
       ("_ALLEGRO_glUniform1iARB_t" Uniform1iARB)
       ("_ALLEGRO_glUniform2iARB_t" Uniform2iARB)
       ("_ALLEGRO_glUniform3iARB_t" Uniform3iARB)
       ("_ALLEGRO_glUniform4iARB_t" Uniform4iARB)
       ("_ALLEGRO_glUniform1fvARB_t" Uniform1fvARB)
       ("_ALLEGRO_glUniform2fvARB_t" Uniform2fvARB)
       ("_ALLEGRO_glUniform3fvARB_t" Uniform3fvARB)
       ("_ALLEGRO_glUniform4fvARB_t" Uniform4fvARB)
       ("_ALLEGRO_glUniform1ivARB_t" Uniform1ivARB)
       ("_ALLEGRO_glUniform2ivARB_t" Uniform2ivARB)
       ("_ALLEGRO_glUniform3ivARB_t" Uniform3ivARB)
       ("_ALLEGRO_glUniform4ivARB_t" Uniform4ivARB)
       ("_ALLEGRO_glUniformMatrix2fvARB_t" UniformMatrix2fvARB)
       ("_ALLEGRO_glUniformMatrix3fvARB_t" UniformMatrix3fvARB)
       ("_ALLEGRO_glUniformMatrix4fvARB_t" UniformMatrix4fvARB)
       ("_ALLEGRO_glGetObjectParameterfvARB_t" GetObjectParameterfvARB)
       ("_ALLEGRO_glGetObjectParameterivARB_t" GetObjectParameterivARB)
       ("_ALLEGRO_glGetInfoLogARB_t" GetInfoLogARB)
       ("_ALLEGRO_glGetAttachedObjectsARB_t" GetAttachedObjectsARB)
       ("_ALLEGRO_glGetUniformLocationARB_t" GetUniformLocationARB)
       ("_ALLEGRO_glGetActiveUniformARB_t" GetActiveUniformARB)
       ("_ALLEGRO_glGetUniformfvARB_t" GetUniformfvARB)
       ("_ALLEGRO_glGetUniformivARB_t" GetUniformivARB)
       ("_ALLEGRO_glGetShaderSourceARB_t" GetShaderSourceARB)
       ("_ALLEGRO_glBindAttribLocationARB_t" BindAttribLocationARB)
       ("_ALLEGRO_glGetActiveAttribARB_t" GetActiveAttribARB)
       ("_ALLEGRO_glGetAttribLocationARB_t" GetAttribLocationARB)
       ("_ALLEGRO_glDrawBuffersARB_t" DrawBuffersARB)
       ("_ALLEGRO_glClampColorARB_t" ClampColorARB)
       ("_ALLEGRO_glDrawArraysInstancedARB_t" DrawArraysInstancedARB)
       ("_ALLEGRO_glDrawElementsInstancedARB_t" DrawElementsInstancedARB)
       ("_ALLEGRO_glIsRenderbuffer_t" IsRenderbuffer)
       ("_ALLEGRO_glBindRenderbuffer_t" BindRenderbuffer)
       ("_ALLEGRO_glDeleteRenderbuffers_t" DeleteRenderbuffers)
       ("_ALLEGRO_glGenRenderbuffers_t" GenRenderbuffers)
       ("_ALLEGRO_glRenderbufferStorage_t" RenderbufferStorage)
       ("_ALLEGRO_glGetRenderbufferParameteriv_t" GetRenderbufferParameteriv)
       ("_ALLEGRO_glIsFramebuffer_t" IsFramebuffer)
       ("_ALLEGRO_glBindFramebuffer_t" BindFramebuffer)
       ("_ALLEGRO_glDeleteFramebuffers_t" DeleteFramebuffers)
       ("_ALLEGRO_glGenFramebuffers_t" GenFramebuffers)
       ("_ALLEGRO_glCheckFramebufferStatus_t" CheckFramebufferStatus)
       ("_ALLEGRO_glFramebufferTexture1D_t" FramebufferTexture1D)
       ("_ALLEGRO_glFramebufferTexture2D_t" FramebufferTexture2D)
       ("_ALLEGRO_glFramebufferTexture3D_t" FramebufferTexture3D)
       ("_ALLEGRO_glFramebufferRenderbuffer_t" FramebufferRenderbuffer)
       ("_ALLEGRO_glGetFramebufferAttachmentParameteriv_t"
        GetFramebufferAttachmentParameteriv)
       ("_ALLEGRO_glGenerateMipmap_t" GenerateMipmap)
       ("_ALLEGRO_glBlitFramebuffer_t" BlitFramebuffer)
       ("_ALLEGRO_glRenderbufferStorageMultisample_t"
        RenderbufferStorageMultisample)
       ("_ALLEGRO_glFramebufferTextureLayer_t" FramebufferTextureLayer)
       ("_ALLEGRO_glProgramParameteriARB_t" ProgramParameteriARB)
       ("_ALLEGRO_glFramebufferTextureARB_t" FramebufferTextureARB)
       ("_ALLEGRO_glFramebufferTextureLayerARB_t" FramebufferTextureLayerARB)
       ("_ALLEGRO_glFramebufferTextureFaceARB_t" FramebufferTextureFaceARB)
       ("_ALLEGRO_glVertexAttribDivisor_t" VertexAttribDivisor)
       ("_ALLEGRO_glMapBufferRange_t" MapBufferRange)
       ("_ALLEGRO_glFlushMappedBufferRange_t" FlushMappedBufferRange)
       ("_ALLEGRO_glTexBufferARB_t" TexBufferARB)
       ("_ALLEGRO_glBindVertexArray_t" BindVertexArray)
       ("_ALLEGRO_glDeleteVertexArrays_t" DeleteVertexArrays)
       ("_ALLEGRO_glGenVertexArrays_t" GenVertexArrays)
       ("_ALLEGRO_glIsVertexArray_t" IsVertexArray)
       ("_ALLEGRO_glGetUniformIndices_t" GetUniformIndices)
       ("_ALLEGRO_glGetActiveUniformsiv_t" GetActiveUniformsiv)
       ("_ALLEGRO_glGetActiveUniformName_t" GetActiveUniformName)
       ("_ALLEGRO_glGetUniformBlockIndex_t" GetUniformBlockIndex)
       ("_ALLEGRO_glGetActiveUniformBlockiv_t" GetActiveUniformBlockiv)
       ("_ALLEGRO_glGetActiveUniformBlockName_t" GetActiveUniformBlockName)
       ("_ALLEGRO_glUniformBlockBinding_t" UniformBlockBinding)
       ("_ALLEGRO_glCopyBufferSubData_t" CopyBufferSubData)
       ("_ALLEGRO_glDrawElementsBaseVertex_t" DrawElementsBaseVertex)
       ("_ALLEGRO_glDrawRangeElementsBaseVertex_t" DrawRangeElementsBaseVertex)
       ("_ALLEGRO_glDrawElementsInstancedBaseVertex_t"
        DrawElementsInstancedBaseVertex)
       ("_ALLEGRO_glMultiDrawElementsBaseVertex_t" MultiDrawElementsBaseVertex)
       ("_ALLEGRO_glProvokingVertex_t" ProvokingVertex)
       ("_ALLEGRO_glFenceSync_t" FenceSync)
       ("_ALLEGRO_glIsSync_t" IsSync)
       ("_ALLEGRO_glDeleteSync_t" DeleteSync)
       ("_ALLEGRO_glClientWaitSync_t" ClientWaitSync)
       ("_ALLEGRO_glWaitSync_t" WaitSync)
       ("_ALLEGRO_glGetInteger64v_t" GetInteger64v)
       ("_ALLEGRO_glGetSynciv_t" GetSynciv)
       ("_ALLEGRO_glTexImage2DMultisample_t" TexImage2DMultisample)
       ("_ALLEGRO_glTexImage3DMultisample_t" TexImage3DMultisample)
       ("_ALLEGRO_glGetMultisamplefv_t" GetMultisamplefv)
       ("_ALLEGRO_glSampleMaski_t" SampleMaski)
       ("_ALLEGRO_glBlendEquationi_t" BlendEquationi)
       ("_ALLEGRO_glBlendEquationSeparatei_t" BlendEquationSeparatei)
       ("_ALLEGRO_glBlendFunci_t" BlendFunci)
       ("_ALLEGRO_glBlendFuncSeparatei_t" BlendFuncSeparatei)
       ("_ALLEGRO_glMinSampleShading_t" MinSampleShading)
       ("_ALLEGRO_glNamedStringARB_t" NamedStringARB)
       ("_ALLEGRO_glDeleteNamedStringARB_t" DeleteNamedStringARB)
       ("_ALLEGRO_glCompileShaderIncludeARB_t" CompileShaderIncludeARB)
       ("_ALLEGRO_glIsNamedStringARB_t" IsNamedStringARB)
       ("_ALLEGRO_glGetNamedStringARB_t" GetNamedStringARB)
       ("_ALLEGRO_glGetNamedStringivARB_t" GetNamedStringivARB)
       ("_ALLEGRO_glBindFragDataLocationIndexed_t" BindFragDataLocationIndexed)
       ("_ALLEGRO_glGetFragDataIndex_t" GetFragDataIndex)
       ("_ALLEGRO_glGenSamplers_t" GenSamplers)
       ("_ALLEGRO_glDeleteSamplers_t" DeleteSamplers)
       ("_ALLEGRO_glIsSampler_t" IsSampler)
       ("_ALLEGRO_glBindSampler_t" BindSampler)
       ("_ALLEGRO_glSamplerParameteri_t" SamplerParameteri)
       ("_ALLEGRO_glSamplerParameteriv_t" SamplerParameteriv)
       ("_ALLEGRO_glSamplerParameterf_t" SamplerParameterf)
       ("_ALLEGRO_glSamplerParameterfv_t" SamplerParameterfv)
       ("_ALLEGRO_glSamplerParameterIiv_t" SamplerParameterIiv)
       ("_ALLEGRO_glSamplerParameterIuiv_t" SamplerParameterIuiv)
       ("_ALLEGRO_glGetSamplerParameteriv_t" GetSamplerParameteriv)
       ("_ALLEGRO_glGetSamplerParameterIiv_t" GetSamplerParameterIiv)
       ("_ALLEGRO_glGetSamplerParameterfv_t" GetSamplerParameterfv)
       ("_ALLEGRO_glGetSamplerParameterIfv_t" GetSamplerParameterIfv)
       ("_ALLEGRO_glQueryCounter_t" QueryCounter)
       ("_ALLEGRO_glGetQueryObjecti64v_t" GetQueryObjecti64v)
       ("_ALLEGRO_glGetQueryObjectui64v_t" GetQueryObjectui64v)
       ("_ALLEGRO_glVertexP2ui_t" VertexP2ui)
       ("_ALLEGRO_glVertexP2uiv_t" VertexP2uiv)
       ("_ALLEGRO_glVertexP3ui_t" VertexP3ui)
       ("_ALLEGRO_glVertexP3uiv_t" VertexP3uiv)
       ("_ALLEGRO_glVertexP4ui_t" VertexP4ui)
       ("_ALLEGRO_glVertexP4uiv_t" VertexP4uiv)
       ("_ALLEGRO_glTexCoordP1ui_t" TexCoordP1ui)
       ("_ALLEGRO_glTexCoordP1uiv_t" TexCoordP1uiv)
       ("_ALLEGRO_glTexCoordP2ui_t" TexCoordP2ui)
       ("_ALLEGRO_glTexCoordP2uiv_t" TexCoordP2uiv)
       ("_ALLEGRO_glTexCoordP3ui_t" TexCoordP3ui)
       ("_ALLEGRO_glTexCoordP3uiv_t" TexCoordP3uiv)
       ("_ALLEGRO_glTexCoordP4ui_t" TexCoordP4ui)
       ("_ALLEGRO_glTexCoordP4uiv_t" TexCoordP4uiv)
       ("_ALLEGRO_glMultiTexCoordP1ui_t" MultiTexCoordP1ui)
       ("_ALLEGRO_glMultiTexCoordP1uiv_t" MultiTexCoordP1uiv)
       ("_ALLEGRO_glMultiTexCoordP2ui_t" MultiTexCoordP2ui)
       ("_ALLEGRO_glMultiTexCoordP2uiv_t" MultiTexCoordP2uiv)
       ("_ALLEGRO_glMultiTexCoordP3ui_t" MultiTexCoordP3ui)
       ("_ALLEGRO_glMultiTexCoordP3uiv_t" MultiTexCoordP3uiv)
       ("_ALLEGRO_glMultiTexCoordP4ui_t" MultiTexCoordP4ui)
       ("_ALLEGRO_glMultiTexCoordP4uiv_t" MultiTexCoordP4uiv)
       ("_ALLEGRO_glNormalP3ui_t" NormalP3ui)
       ("_ALLEGRO_glNormalP3uiv_t" NormalP3uiv)
       ("_ALLEGRO_glColorP3ui_t" ColorP3ui)
       ("_ALLEGRO_glColorP3uiv_t" ColorP3uiv)
       ("_ALLEGRO_glColorP4ui_t" ColorP4ui)
       ("_ALLEGRO_glColorP4uiv_t" ColorP4uiv)
       ("_ALLEGRO_glSecondaryColorP3ui_t" SecondaryColorP3ui)
       ("_ALLEGRO_glSecondaryColorP3uiv_t" SecondaryColorP3uiv)
       ("_ALLEGRO_glVertexAttribP1ui_t" VertexAttribP1ui)
       ("_ALLEGRO_glVertexAttribP1uiv_t" VertexAttribP1uiv)
       ("_ALLEGRO_glVertexAttribP2ui_t" VertexAttribP2ui)
       ("_ALLEGRO_glVertexAttribP2uiv_t" VertexAttribP2uiv)
       ("_ALLEGRO_glVertexAttribP3ui_t" VertexAttribP3ui)
       ("_ALLEGRO_glVertexAttribP3uiv_t" VertexAttribP3uiv)
       ("_ALLEGRO_glVertexAttribP4ui_t" VertexAttribP4ui)
       ("_ALLEGRO_glVertexAttribP4uiv_t" VertexAttribP4uiv)
       ("_ALLEGRO_glDrawArraysIndirect_t" DrawArraysIndirect)
       ("_ALLEGRO_glDrawElementsIndirect_t" DrawElementsIndirect)
       ("_ALLEGRO_glUniform1d_t" Uniform1d)
       ("_ALLEGRO_glUniform2d_t" Uniform2d)
       ("_ALLEGRO_glUniform3d_t" Uniform3d)
       ("_ALLEGRO_glUniform4d_t" Uniform4d)
       ("_ALLEGRO_glUniform1dv_t" Uniform1dv)
       ("_ALLEGRO_glUniform2dv_t" Uniform2dv)
       ("_ALLEGRO_glUniform3dv_t" Uniform3dv)
       ("_ALLEGRO_glUniform4dv_t" Uniform4dv)
       ("_ALLEGRO_glUniformMatrix2dv_t" UniformMatrix2dv)
       ("_ALLEGRO_glUniformMatrix3dv_t" UniformMatrix3dv)
       ("_ALLEGRO_glUniformMatrix4dv_t" UniformMatrix4dv)
       ("_ALLEGRO_glUniformMatrix2x3dv_t" UniformMatrix2x3dv)
       ("_ALLEGRO_glUniformMatrix2x4dv_t" UniformMatrix2x4dv)
       ("_ALLEGRO_glUniformMatrix3x2dv_t" UniformMatrix3x2dv)
       ("_ALLEGRO_glUniformMatrix3x4dv_t" UniformMatrix3x4dv)
       ("_ALLEGRO_glUniformMatrix4x2dv_t" UniformMatrix4x2dv)
       ("_ALLEGRO_glUniformMatrix4x3dv_t" UniformMatrix4x3dv)
       ("_ALLEGRO_glGetUniformdv_t" GetUniformdv)
       ("_ALLEGRO_glProgramUniform1dEXT_t" ProgramUniform1dEXT)
       ("_ALLEGRO_glProgramUniform2dEXT_t" ProgramUniform2dEXT)
       ("_ALLEGRO_glProgramUniform3dEXT_t" ProgramUniform3dEXT)
       ("_ALLEGRO_glProgramUniform4dEXT_t" ProgramUniform4dEXT)
       ("_ALLEGRO_glProgramUniform1dvEXT_t" ProgramUniform1dvEXT)
       ("_ALLEGRO_glProgramUniform2dvEXT_t" ProgramUniform2dvEXT)
       ("_ALLEGRO_glProgramUniform3dvEXT_t" ProgramUniform3dvEXT)
       ("_ALLEGRO_glProgramUniform4dvEXT_t" ProgramUniform4dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix2dvEXT_t" ProgramUniformMatrix2dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3dvEXT_t" ProgramUniformMatrix3dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4dvEXT_t" ProgramUniformMatrix4dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix2x3dvEXT_t"
        ProgramUniformMatrix2x3dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix2x4dvEXT_t"
        ProgramUniformMatrix2x4dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3x2dvEXT_t"
        ProgramUniformMatrix3x2dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3x4dvEXT_t"
        ProgramUniformMatrix3x4dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4x2dvEXT_t"
        ProgramUniformMatrix4x2dvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4x3dvEXT_t"
        ProgramUniformMatrix4x3dvEXT)
       ("_ALLEGRO_glGetSubroutineUniformLocation_t"
        GetSubroutineUniformLocation)
       ("_ALLEGRO_glGetSubroutineIndex_t" GetSubroutineIndex)
       ("_ALLEGRO_glGetActiveSubroutineUniformiv_t"
        GetActiveSubroutineUniformiv)
       ("_ALLEGRO_glGetActiveSubroutineUniformName_t"
        GetActiveSubroutineUniformName)
       ("_ALLEGRO_glGetActiveSubroutineName_t" GetActiveSubroutineName)
       ("_ALLEGRO_glUniformSubroutinesuiv_t" UniformSubroutinesuiv)
       ("_ALLEGRO_glGetUniformSubroutineuiv_t" GetUniformSubroutineuiv)
       ("_ALLEGRO_glGetProgramStageiv_t" GetProgramStageiv)
       ("_ALLEGRO_glPatchParameteri_t" PatchParameteri)
       ("_ALLEGRO_glPatchParameterfv_t" PatchParameterfv)
       ("_ALLEGRO_glBindTransformFeedback_t" BindTransformFeedback)
       ("_ALLEGRO_glDeleteTransformFeedbacks_t" DeleteTransformFeedbacks)
       ("_ALLEGRO_glGenTransformFeedbacks_t" GenTransformFeedbacks)
       ("_ALLEGRO_glIsTransformFeedback_t" IsTransformFeedback)
       ("_ALLEGRO_glPauseTransformFeedback_t" PauseTransformFeedback)
       ("_ALLEGRO_glResumeTransformFeedback_t" ResumeTransformFeedback)
       ("_ALLEGRO_glDrawTransformFeedback_t" DrawTransformFeedback)
       ("_ALLEGRO_glDrawTransformFeedbackStream_t" DrawTransformFeedbackStream)
       ("_ALLEGRO_glBeginQueryIndexed_t" BeginQueryIndexed)
       ("_ALLEGRO_glEndQueryIndexed_t" EndQueryIndexed)
       ("_ALLEGRO_glGetQueryIndexediv_t" GetQueryIndexediv)
       ("_ALLEGRO_glBlendColorEXT_t" BlendColorEXT)
       ("_ALLEGRO_glPolygonOffsetEXT_t" PolygonOffsetEXT)
       ("_ALLEGRO_glTexImage3DEXT_t" TexImage3DEXT)
       ("_ALLEGRO_glTexSubImage3DEXT_t" TexSubImage3DEXT)
       ("_ALLEGRO_glGetTexFilterFuncSGIS_t" GetTexFilterFuncSGIS)
       ("_ALLEGRO_glTexFilterFuncSGIS_t" TexFilterFuncSGIS)
       ("_ALLEGRO_glTexSubImage1DEXT_t" TexSubImage1DEXT)
       ("_ALLEGRO_glTexSubImage2DEXT_t" TexSubImage2DEXT)
       ("_ALLEGRO_glCopyTexImage1DEXT_t" CopyTexImage1DEXT)
       ("_ALLEGRO_glCopyTexImage2DEXT_t" CopyTexImage2DEXT)
       ("_ALLEGRO_glCopyTexSubImage1DEXT_t" CopyTexSubImage1DEXT)
       ("_ALLEGRO_glCopyTexSubImage2DEXT_t" CopyTexSubImage2DEXT)
       ("_ALLEGRO_glCopyTexSubImage3DEXT_t" CopyTexSubImage3DEXT)
       ("_ALLEGRO_glGetHistogramEXT_t" GetHistogramEXT)
       ("_ALLEGRO_glGetHistogramParameterfvEXT_t" GetHistogramParameterfvEXT)
       ("_ALLEGRO_glGetHistogramParameterivEXT_t" GetHistogramParameterivEXT)
       ("_ALLEGRO_glGetMinmaxEXT_t" GetMinmaxEXT)
       ("_ALLEGRO_glGetMinmaxParameterfvEXT_t" GetMinmaxParameterfvEXT)
       ("_ALLEGRO_glGetMinmaxParameterivEXT_t" GetMinmaxParameterivEXT)
       ("_ALLEGRO_glHistogramEXT_t" HistogramEXT)
       ("_ALLEGRO_glMinmaxEXT_t" MinmaxEXT)
       ("_ALLEGRO_glResetHistogramEXT_t" ResetHistogramEXT)
       ("_ALLEGRO_glResetMinmaxEXT_t" ResetMinmaxEXT)
       ("_ALLEGRO_glConvolutionFilter1DEXT_t" ConvolutionFilter1DEXT)
       ("_ALLEGRO_glConvolutionFilter2DEXT_t" ConvolutionFilter2DEXT)
       ("_ALLEGRO_glConvolutionParameterfEXT_t" ConvolutionParameterfEXT)
       ("_ALLEGRO_glConvolutionParameterfvEXT_t" ConvolutionParameterfvEXT)
       ("_ALLEGRO_glConvolutionParameteriEXT_t" ConvolutionParameteriEXT)
       ("_ALLEGRO_glConvolutionParameterivEXT_t" ConvolutionParameterivEXT)
       ("_ALLEGRO_glCopyConvolutionFilter1DEXT_t" CopyConvolutionFilter1DEXT)
       ("_ALLEGRO_glCopyConvolutionFilter2DEXT_t" CopyConvolutionFilter2DEXT)
       ("_ALLEGRO_glGetConvolutionFilterEXT_t" GetConvolutionFilterEXT)
       ("_ALLEGRO_glGetConvolutionParameterfvEXT_t"
        GetConvolutionParameterfvEXT)
       ("_ALLEGRO_glGetConvolutionParameterivEXT_t"
        GetConvolutionParameterivEXT)
       ("_ALLEGRO_glGetSeparableFilterEXT_t" GetSeparableFilterEXT)
       ("_ALLEGRO_glSeparableFilter2DEXT_t" SeparableFilter2DEXT)
       ("_ALLEGRO_glColorTableSGI_t" ColorTableSGI)
       ("_ALLEGRO_glColorTableParameterfvSGI_t" ColorTableParameterfvSGI)
       ("_ALLEGRO_glColorTableParameterivSGI_t" ColorTableParameterivSGI)
       ("_ALLEGRO_glCopyColorTableSGI_t" CopyColorTableSGI)
       ("_ALLEGRO_glGetColorTableSGI_t" GetColorTableSGI)
       ("_ALLEGRO_glGetColorTableParameterfvSGI_t" GetColorTableParameterfvSGI)
       ("_ALLEGRO_glGetColorTableParameterivSGI_t" GetColorTableParameterivSGI)
       ("_ALLEGRO_glPixelTexGenSGIX_t" PixelTexGenSGIX)
       ("_ALLEGRO_glPixelTexGenParameteriSGIS_t" PixelTexGenParameteriSGIS)
       ("_ALLEGRO_glPixelTexGenParameterivSGIS_t" PixelTexGenParameterivSGIS)
       ("_ALLEGRO_glPixelTexGenParameterfSGIS_t" PixelTexGenParameterfSGIS)
       ("_ALLEGRO_glPixelTexGenParameterfvSGIS_t" PixelTexGenParameterfvSGIS)
       ("_ALLEGRO_glGetPixelTexGenParameterivSGIS_t"
        GetPixelTexGenParameterivSGIS)
       ("_ALLEGRO_glGetPixelTexGenParameterfvSGIS_t"
        GetPixelTexGenParameterfvSGIS)
       ("_ALLEGRO_glTexImage4DSGIS_t" TexImage4DSGIS)
       ("_ALLEGRO_glTexSubImage4DSGIS_t" TexSubImage4DSGIS)
       ("_ALLEGRO_glAreTexturesResidentEXT_t" AreTexturesResidentEXT)
       ("_ALLEGRO_glBindTextureEXT_t" BindTextureEXT)
       ("_ALLEGRO_glDeleteTexturesEXT_t" DeleteTexturesEXT)
       ("_ALLEGRO_glGenTexturesEXT_t" GenTexturesEXT)
       ("_ALLEGRO_glIsTextureEXT_t" IsTextureEXT)
       ("_ALLEGRO_glPrioritizeTexturesEXT_t" PrioritizeTexturesEXT)
       ("_ALLEGRO_glDetailTexFuncSGIS_t" DetailTexFuncSGIS)
       ("_ALLEGRO_glGetDetailTexFuncSGIS_t" GetDetailTexFuncSGIS)
       ("_ALLEGRO_glSharpenTexFuncSGIS_t" SharpenTexFuncSGIS)
       ("_ALLEGRO_glGetSharpenTexFuncSGIS_t" GetSharpenTexFuncSGIS)
       ("_ALLEGRO_glSampleMaskSGIS_t" SampleMaskSGIS)
       ("_ALLEGRO_glSamplePatternSGIS_t" SamplePatternSGIS)
       ("_ALLEGRO_glArrayElementEXT_t" ArrayElementEXT)
       ("_ALLEGRO_glColorPointerEXT_t" ColorPointerEXT)
       ("_ALLEGRO_glDrawArraysEXT_t" DrawArraysEXT)
       ("_ALLEGRO_glEdgeFlagPointerEXT_t" EdgeFlagPointerEXT)
       ("_ALLEGRO_glGetPointervEXT_t" GetPointervEXT)
       ("_ALLEGRO_glIndexPointerEXT_t" IndexPointerEXT)
       ("_ALLEGRO_glNormalPointerEXT_t" NormalPointerEXT)
       ("_ALLEGRO_glTexCoordPointerEXT_t" TexCoordPointerEXT)
       ("_ALLEGRO_glVertexPointerEXT_t" VertexPointerEXT)
       ("_ALLEGRO_glBlendEquationEXT_t" BlendEquationEXT)
       ("_ALLEGRO_glSpriteParameterfSGIX_t" SpriteParameterfSGIX)
       ("_ALLEGRO_glSpriteParameterfvSGIX_t" SpriteParameterfvSGIX)
       ("_ALLEGRO_glSpriteParameteriSGIX_t" SpriteParameteriSGIX)
       ("_ALLEGRO_glSpriteParameterivSGIX_t" SpriteParameterivSGIX)
       ("_ALLEGRO_glPointParameterfEXT_t" PointParameterfEXT)
       ("_ALLEGRO_glPointParameterfvEXT_t" PointParameterfvEXT)
       ("_ALLEGRO_glPointParameterfSGIS_t" PointParameterfSGIS)
       ("_ALLEGRO_glPointParameterfvSGIS_t" PointParameterfvSGIS)
       ("_ALLEGRO_glGetInstrumentsSGIX_t" GetInstrumentsSGIX)
       ("_ALLEGRO_glInstrumentsBufferSGIX_t" InstrumentsBufferSGIX)
       ("_ALLEGRO_glPollInstrumentsSGIX_t" PollInstrumentsSGIX)
       ("_ALLEGRO_glReadInstrumentsSGIX_t" ReadInstrumentsSGIX)
       ("_ALLEGRO_glStartInstrumentsSGIX_t" StartInstrumentsSGIX)
       ("_ALLEGRO_glStopInstrumentsSGIX_t" StopInstrumentsSGIX)
       ("_ALLEGRO_glFrameZoomSGIX_t" FrameZoomSGIX)
       ("_ALLEGRO_glTagSampleBufferSGIX_t" TagSampleBufferSGIX)
       ("_ALLEGRO_glDeformationMap3dSGIX_t" DeformationMap3dSGIX)
       ("_ALLEGRO_glDeformationMap3fSGIX_t" DeformationMap3fSGIX)
       ("_ALLEGRO_glDeformSGIX_t" DeformSGIX)
       ("_ALLEGRO_glLoadIdentityDeformationMapSGIX_t"
        LoadIdentityDeformationMapSGIX)
       ("_ALLEGRO_glReferencePlaneSGIX_t" ReferencePlaneSGIX)
       ("_ALLEGRO_glFlushRasterSGIX_t" FlushRasterSGIX)
       ("_ALLEGRO_glFogFuncSGIS_t" FogFuncSGIS)
       ("_ALLEGRO_glGetFogFuncSGIS_t" GetFogFuncSGIS)
       ("_ALLEGRO_glImageTransformParameteriHP_t" ImageTransformParameteriHP)
       ("_ALLEGRO_glImageTransformParameterfHP_t" ImageTransformParameterfHP)
       ("_ALLEGRO_glImageTransformParameterivHP_t" ImageTransformParameterivHP)
       ("_ALLEGRO_glImageTransformParameterfvHP_t" ImageTransformParameterfvHP)
       ("_ALLEGRO_glGetImageTransformParameterivHP_t"
        GetImageTransformParameterivHP)
       ("_ALLEGRO_glGetImageTransformParameterfvHP_t"
        GetImageTransformParameterfvHP)
       ("_ALLEGRO_glCopyColorSubTableEXT_t" CopyColorSubTableEXT)
       ("_ALLEGRO_glHintPGI_t" HintPGI)
       ("_ALLEGRO_glColorTableEXT_t" ColorTableEXT)
       ("_ALLEGRO_glGetColorTableEXT_t" GetColorTableEXT)
       ("_ALLEGRO_glGetColorTableParameterivEXT_t" GetColorTableParameterivEXT)
       ("_ALLEGRO_glGetColorTableParameterfvEXT_t" GetColorTableParameterfvEXT)
       ("_ALLEGRO_glGetListParameterfvSGIX_t" GetListParameterfvSGIX)
       ("_ALLEGRO_glGetListParameterivSGIX_t" GetListParameterivSGIX)
       ("_ALLEGRO_glListParameterfSGIX_t" ListParameterfSGIX)
       ("_ALLEGRO_glListParameterfvSGIX_t" ListParameterfvSGIX)
       ("_ALLEGRO_glListParameteriSGIX_t" ListParameteriSGIX)
       ("_ALLEGRO_glListParameterivSGIX_t" ListParameterivSGIX)
       ("_ALLEGRO_glIndexMaterialEXT_t" IndexMaterialEXT)
       ("_ALLEGRO_glIndexFuncEXT_t" IndexFuncEXT)
       ("_ALLEGRO_glLockArraysEXT_t" LockArraysEXT)
       ("_ALLEGRO_glUnlockArraysEXT_t" UnlockArraysEXT)
       ("_ALLEGRO_glCullParameterdvEXT_t" CullParameterdvEXT)
       ("_ALLEGRO_glCullParameterfvEXT_t" CullParameterfvEXT)
       ("_ALLEGRO_glFragmentColorMaterialSGIX_t" FragmentColorMaterialSGIX)
       ("_ALLEGRO_glFragmentLightfSGIX_t" FragmentLightfSGIX)
       ("_ALLEGRO_glFragmentLightfvSGIX_t" FragmentLightfvSGIX)
       ("_ALLEGRO_glFragmentLightiSGIX_t" FragmentLightiSGIX)
       ("_ALLEGRO_glFragmentLightivSGIX_t" FragmentLightivSGIX)
       ("_ALLEGRO_glFragmentLightModelfSGIX_t" FragmentLightModelfSGIX)
       ("_ALLEGRO_glFragmentLightModelfvSGIX_t" FragmentLightModelfvSGIX)
       ("_ALLEGRO_glFragmentLightModeliSGIX_t" FragmentLightModeliSGIX)
       ("_ALLEGRO_glFragmentLightModelivSGIX_t" FragmentLightModelivSGIX)
       ("_ALLEGRO_glFragmentMaterialfSGIX_t" FragmentMaterialfSGIX)
       ("_ALLEGRO_glFragmentMaterialfvSGIX_t" FragmentMaterialfvSGIX)
       ("_ALLEGRO_glFragmentMaterialiSGIX_t" FragmentMaterialiSGIX)
       ("_ALLEGRO_glFragmentMaterialivSGIX_t" FragmentMaterialivSGIX)
       ("_ALLEGRO_glGetFragmentLightfvSGIX_t" GetFragmentLightfvSGIX)
       ("_ALLEGRO_glGetFragmentLightivSGIX_t" GetFragmentLightivSGIX)
       ("_ALLEGRO_glGetFragmentMaterialfvSGIX_t" GetFragmentMaterialfvSGIX)
       ("_ALLEGRO_glGetFragmentMaterialivSGIX_t" GetFragmentMaterialivSGIX)
       ("_ALLEGRO_glLightEnviSGIX_t" LightEnviSGIX)
       ("_ALLEGRO_glDrawRangeElementsEXT_t" DrawRangeElementsEXT)
       ("_ALLEGRO_glApplyTextureEXT_t" ApplyTextureEXT)
       ("_ALLEGRO_glTextureLightEXT_t" TextureLightEXT)
       ("_ALLEGRO_glTextureMaterialEXT_t" TextureMaterialEXT)
       ("_ALLEGRO_glAsyncMarkerSGIX_t" AsyncMarkerSGIX)
       ("_ALLEGRO_glFinishAsyncSGIX_t" FinishAsyncSGIX)
       ("_ALLEGRO_glPollAsyncSGIX_t" PollAsyncSGIX)
       ("_ALLEGRO_glGenAsyncMarkersSGIX_t" GenAsyncMarkersSGIX)
       ("_ALLEGRO_glDeleteAsyncMarkersSGIX_t" DeleteAsyncMarkersSGIX)
       ("_ALLEGRO_glIsAsyncMarkerSGIX_t" IsAsyncMarkerSGIX)
       ("_ALLEGRO_glVertexPointervINTEL_t" VertexPointervINTEL)
       ("_ALLEGRO_glNormalPointervINTEL_t" NormalPointervINTEL)
       ("_ALLEGRO_glColorPointervINTEL_t" ColorPointervINTEL)
       ("_ALLEGRO_glTexCoordPointervINTEL_t" TexCoordPointervINTEL)
       ("_ALLEGRO_glPixelTransformParameteriEXT_t" PixelTransformParameteriEXT)
       ("_ALLEGRO_glPixelTransformParameterfEXT_t" PixelTransformParameterfEXT)
       ("_ALLEGRO_glPixelTransformParameterivEXT_t"
        PixelTransformParameterivEXT)
       ("_ALLEGRO_glPixelTransformParameterfvEXT_t"
        PixelTransformParameterfvEXT)
       ("_ALLEGRO_glSecondaryColor3bEXT_t" SecondaryColor3bEXT)
       ("_ALLEGRO_glSecondaryColor3bvEXT_t" SecondaryColor3bvEXT)
       ("_ALLEGRO_glSecondaryColor3dEXT_t" SecondaryColor3dEXT)
       ("_ALLEGRO_glSecondaryColor3dvEXT_t" SecondaryColor3dvEXT)
       ("_ALLEGRO_glSecondaryColor3fEXT_t" SecondaryColor3fEXT)
       ("_ALLEGRO_glSecondaryColor3fvEXT_t" SecondaryColor3fvEXT)
       ("_ALLEGRO_glSecondaryColor3iEXT_t" SecondaryColor3iEXT)
       ("_ALLEGRO_glSecondaryColor3ivEXT_t" SecondaryColor3ivEXT)
       ("_ALLEGRO_glSecondaryColor3sEXT_t" SecondaryColor3sEXT)
       ("_ALLEGRO_glSecondaryColor3svEXT_t" SecondaryColor3svEXT)
       ("_ALLEGRO_glSecondaryColor3ubEXT_t" SecondaryColor3ubEXT)
       ("_ALLEGRO_glSecondaryColor3ubvEXT_t" SecondaryColor3ubvEXT)
       ("_ALLEGRO_glSecondaryColor3uiEXT_t" SecondaryColor3uiEXT)
       ("_ALLEGRO_glSecondaryColor3uivEXT_t" SecondaryColor3uivEXT)
       ("_ALLEGRO_glSecondaryColor3usEXT_t" SecondaryColor3usEXT)
       ("_ALLEGRO_glSecondaryColor3usvEXT_t" SecondaryColor3usvEXT)
       ("_ALLEGRO_glSecondaryColorPointerEXT_t" SecondaryColorPointerEXT)
       ("_ALLEGRO_glTextureNormalEXT_t" TextureNormalEXT)
       ("_ALLEGRO_glMultiDrawArraysEXT_t" MultiDrawArraysEXT)
       ("_ALLEGRO_glMultiDrawElementsEXT_t" MultiDrawElementsEXT)
       ("_ALLEGRO_glFogCoordfEXT_t" FogCoordfEXT)
       ("_ALLEGRO_glFogCoordfvEXT_t" FogCoordfvEXT)
       ("_ALLEGRO_glFogCoorddEXT_t" FogCoorddEXT)
       ("_ALLEGRO_glFogCoorddvEXT_t" FogCoorddvEXT)
       ("_ALLEGRO_glFogCoordPointerEXT_t" FogCoordPointerEXT)
       ("_ALLEGRO_glTangent3bEXT_t" Tangent3bEXT)
       ("_ALLEGRO_glTangent3bvEXT_t" Tangent3bvEXT)
       ("_ALLEGRO_glTangent3dEXT_t" Tangent3dEXT)
       ("_ALLEGRO_glTangent3dvEXT_t" Tangent3dvEXT)
       ("_ALLEGRO_glTangent3fEXT_t" Tangent3fEXT)
       ("_ALLEGRO_glTangent3fvEXT_t" Tangent3fvEXT)
       ("_ALLEGRO_glTangent3iEXT_t" Tangent3iEXT)
       ("_ALLEGRO_glTangent3ivEXT_t" Tangent3ivEXT)
       ("_ALLEGRO_glTangent3sEXT_t" Tangent3sEXT)
       ("_ALLEGRO_glTangent3svEXT_t" Tangent3svEXT)
       ("_ALLEGRO_glBinormal3bEXT_t" Binormal3bEXT)
       ("_ALLEGRO_glBinormal3bvEXT_t" Binormal3bvEXT)
       ("_ALLEGRO_glBinormal3dEXT_t" Binormal3dEXT)
       ("_ALLEGRO_glBinormal3dvEXT_t" Binormal3dvEXT)
       ("_ALLEGRO_glBinormal3fEXT_t" Binormal3fEXT)
       ("_ALLEGRO_glBinormal3fvEXT_t" Binormal3fvEXT)
       ("_ALLEGRO_glBinormal3iEXT_t" Binormal3iEXT)
       ("_ALLEGRO_glBinormal3ivEXT_t" Binormal3ivEXT)
       ("_ALLEGRO_glBinormal3sEXT_t" Binormal3sEXT)
       ("_ALLEGRO_glBinormal3svEXT_t" Binormal3svEXT)
       ("_ALLEGRO_glTangentPointerEXT_t" TangentPointerEXT)
       ("_ALLEGRO_glBinormalPointerEXT_t" BinormalPointerEXT)
       ("_ALLEGRO_glFinishTextureSUNX_t" FinishTextureSUNX)
       ("_ALLEGRO_glGlobalAlphaFactorbSUN_t" GlobalAlphaFactorbSUN)
       ("_ALLEGRO_glGlobalAlphaFactorsSUN_t" GlobalAlphaFactorsSUN)
       ("_ALLEGRO_glGlobalAlphaFactoriSUN_t" GlobalAlphaFactoriSUN)
       ("_ALLEGRO_glGlobalAlphaFactorfSUN_t" GlobalAlphaFactorfSUN)
       ("_ALLEGRO_glGlobalAlphaFactordSUN_t" GlobalAlphaFactordSUN)
       ("_ALLEGRO_glGlobalAlphaFactorubSUN_t" GlobalAlphaFactorubSUN)
       ("_ALLEGRO_glGlobalAlphaFactorusSUN_t" GlobalAlphaFactorusSUN)
       ("_ALLEGRO_glGlobalAlphaFactoruiSUN_t" GlobalAlphaFactoruiSUN)
       ("_ALLEGRO_glReplacementCodeuiSUN_t" ReplacementCodeuiSUN)
       ("_ALLEGRO_glReplacementCodeusSUN_t" ReplacementCodeusSUN)
       ("_ALLEGRO_glReplacementCodeubSUN_t" ReplacementCodeubSUN)
       ("_ALLEGRO_glReplacementCodeuivSUN_t" ReplacementCodeuivSUN)
       ("_ALLEGRO_glReplacementCodeusvSUN_t" ReplacementCodeusvSUN)
       ("_ALLEGRO_glReplacementCodeubvSUN_t" ReplacementCodeubvSUN)
       ("_ALLEGRO_glReplacementCodePointerSUN_t" ReplacementCodePointerSUN)
       ("_ALLEGRO_glColor4ubVertex2fSUN_t" Color4ubVertex2fSUN)
       ("_ALLEGRO_glColor4ubVertex2fvSUN_t" Color4ubVertex2fvSUN)
       ("_ALLEGRO_glColor4ubVertex3fSUN_t" Color4ubVertex3fSUN)
       ("_ALLEGRO_glColor4ubVertex3fvSUN_t" Color4ubVertex3fvSUN)
       ("_ALLEGRO_glColor3fVertex3fSUN_t" Color3fVertex3fSUN)
       ("_ALLEGRO_glColor3fVertex3fvSUN_t" Color3fVertex3fvSUN)
       ("_ALLEGRO_glNormal3fVertex3fSUN_t" Normal3fVertex3fSUN)
       ("_ALLEGRO_glNormal3fVertex3fvSUN_t" Normal3fVertex3fvSUN)
       ("_ALLEGRO_glColor4fNormal3fVertex3fSUN_t" Color4fNormal3fVertex3fSUN)
       ("_ALLEGRO_glColor4fNormal3fVertex3fvSUN_t" Color4fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glTexCoord2fVertex3fSUN_t" TexCoord2fVertex3fSUN)
       ("_ALLEGRO_glTexCoord2fVertex3fvSUN_t" TexCoord2fVertex3fvSUN)
       ("_ALLEGRO_glTexCoord4fVertex4fSUN_t" TexCoord4fVertex4fSUN)
       ("_ALLEGRO_glTexCoord4fVertex4fvSUN_t" TexCoord4fVertex4fvSUN)
       ("_ALLEGRO_glTexCoord2fColor4ubVertex3fSUN_t"
        TexCoord2fColor4ubVertex3fSUN)
       ("_ALLEGRO_glTexCoord2fColor4ubVertex3fvSUN_t"
        TexCoord2fColor4ubVertex3fvSUN)
       ("_ALLEGRO_glTexCoord2fColor3fVertex3fSUN_t"
        TexCoord2fColor3fVertex3fSUN)
       ("_ALLEGRO_glTexCoord2fColor3fVertex3fvSUN_t"
        TexCoord2fColor3fVertex3fvSUN)
       ("_ALLEGRO_glTexCoord2fNormal3fVertex3fSUN_t"
        TexCoord2fNormal3fVertex3fSUN)
       ("_ALLEGRO_glTexCoord2fNormal3fVertex3fvSUN_t"
        TexCoord2fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fSUN_t"
        TexCoord2fColor4fNormal3fVertex3fSUN)
       ("_ALLEGRO_glTexCoord2fColor4fNormal3fVertex3fvSUN_t"
        TexCoord2fColor4fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fSUN_t"
        TexCoord4fColor4fNormal3fVertex4fSUN)
       ("_ALLEGRO_glTexCoord4fColor4fNormal3fVertex4fvSUN_t"
        TexCoord4fColor4fNormal3fVertex4fvSUN)
       ("_ALLEGRO_glReplacementCodeuiVertex3fSUN_t"
        ReplacementCodeuiVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiVertex3fvSUN_t"
        ReplacementCodeuiVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiColor4ubVertex3fSUN_t"
        ReplacementCodeuiColor4ubVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiColor4ubVertex3fvSUN_t"
        ReplacementCodeuiColor4ubVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiColor3fVertex3fSUN_t"
        ReplacementCodeuiColor3fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiColor3fVertex3fvSUN_t"
        ReplacementCodeuiColor3fVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiNormal3fVertex3fSUN_t"
        ReplacementCodeuiNormal3fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiNormal3fVertex3fvSUN_t"
        ReplacementCodeuiNormal3fVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fSUN_t"
        ReplacementCodeuiColor4fNormal3fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_t"
        ReplacementCodeuiColor4fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fSUN_t"
        ReplacementCodeuiTexCoord2fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fVertex3fvSUN_t"
        ReplacementCodeuiTexCoord2fVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_t"
        ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_t"
        ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_t"
        ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)
       ("_ALLEGRO_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_t"
        ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)
       ("_ALLEGRO_glBlendFuncSeparateEXT_t" BlendFuncSeparateEXT)
       ("_ALLEGRO_glBlendFuncSeparateINGR_t" BlendFuncSeparateINGR)
       ("_ALLEGRO_glVertexWeightfEXT_t" VertexWeightfEXT)
       ("_ALLEGRO_glVertexWeightfvEXT_t" VertexWeightfvEXT)
       ("_ALLEGRO_glVertexWeightPointerEXT_t" VertexWeightPointerEXT)
       ("_ALLEGRO_glFlushVertexArrayRangeNV_t" FlushVertexArrayRangeNV)
       ("_ALLEGRO_glVertexArrayRangeNV_t" VertexArrayRangeNV)
       ("_ALLEGRO_glCombinerParameterfvNV_t" CombinerParameterfvNV)
       ("_ALLEGRO_glCombinerParameterfNV_t" CombinerParameterfNV)
       ("_ALLEGRO_glCombinerParameterivNV_t" CombinerParameterivNV)
       ("_ALLEGRO_glCombinerParameteriNV_t" CombinerParameteriNV)
       ("_ALLEGRO_glCombinerInputNV_t" CombinerInputNV)
       ("_ALLEGRO_glCombinerOutputNV_t" CombinerOutputNV)
       ("_ALLEGRO_glFinalCombinerInputNV_t" FinalCombinerInputNV)
       ("_ALLEGRO_glGetCombinerInputParameterfvNV_t"
        GetCombinerInputParameterfvNV)
       ("_ALLEGRO_glGetCombinerInputParameterivNV_t"
        GetCombinerInputParameterivNV)
       ("_ALLEGRO_glGetCombinerOutputParameterfvNV_t"
        GetCombinerOutputParameterfvNV)
       ("_ALLEGRO_glGetCombinerOutputParameterivNV_t"
        GetCombinerOutputParameterivNV)
       ("_ALLEGRO_glGetFinalCombinerInputParameterfvNV_t"
        GetFinalCombinerInputParameterfvNV)
       ("_ALLEGRO_glGetFinalCombinerInputParameterivNV_t"
        GetFinalCombinerInputParameterivNV)
       ("_ALLEGRO_glResizeBuffersMESA_t" ResizeBuffersMESA)
       ("_ALLEGRO_glWindowPos2dMESA_t" WindowPos2dMESA)
       ("_ALLEGRO_glWindowPos2dvMESA_t" WindowPos2dvMESA)
       ("_ALLEGRO_glWindowPos2fMESA_t" WindowPos2fMESA)
       ("_ALLEGRO_glWindowPos2fvMESA_t" WindowPos2fvMESA)
       ("_ALLEGRO_glWindowPos2iMESA_t" WindowPos2iMESA)
       ("_ALLEGRO_glWindowPos2ivMESA_t" WindowPos2ivMESA)
       ("_ALLEGRO_glWindowPos2sMESA_t" WindowPos2sMESA)
       ("_ALLEGRO_glWindowPos2svMESA_t" WindowPos2svMESA)
       ("_ALLEGRO_glWindowPos3dMESA_t" WindowPos3dMESA)
       ("_ALLEGRO_glWindowPos3dvMESA_t" WindowPos3dvMESA)
       ("_ALLEGRO_glWindowPos3fMESA_t" WindowPos3fMESA)
       ("_ALLEGRO_glWindowPos3fvMESA_t" WindowPos3fvMESA)
       ("_ALLEGRO_glWindowPos3iMESA_t" WindowPos3iMESA)
       ("_ALLEGRO_glWindowPos3ivMESA_t" WindowPos3ivMESA)
       ("_ALLEGRO_glWindowPos3sMESA_t" WindowPos3sMESA)
       ("_ALLEGRO_glWindowPos3svMESA_t" WindowPos3svMESA)
       ("_ALLEGRO_glWindowPos4dMESA_t" WindowPos4dMESA)
       ("_ALLEGRO_glWindowPos4dvMESA_t" WindowPos4dvMESA)
       ("_ALLEGRO_glWindowPos4fMESA_t" WindowPos4fMESA)
       ("_ALLEGRO_glWindowPos4fvMESA_t" WindowPos4fvMESA)
       ("_ALLEGRO_glWindowPos4iMESA_t" WindowPos4iMESA)
       ("_ALLEGRO_glWindowPos4ivMESA_t" WindowPos4ivMESA)
       ("_ALLEGRO_glWindowPos4sMESA_t" WindowPos4sMESA)
       ("_ALLEGRO_glWindowPos4svMESA_t" WindowPos4svMESA)
       ("_ALLEGRO_glMultiModeDrawArraysIBM_t" MultiModeDrawArraysIBM)
       ("_ALLEGRO_glMultiModeDrawElementsIBM_t" MultiModeDrawElementsIBM)
       ("_ALLEGRO_glTbufferMask3DFX_t" TbufferMask3DFX)
       ("_ALLEGRO_glSampleMaskEXT_t" SampleMaskEXT)
       ("_ALLEGRO_glSamplePatternEXT_t" SamplePatternEXT)
       ("_ALLEGRO_glTextureColorMaskSGIS_t" TextureColorMaskSGIS)
       ("_ALLEGRO_glIglooInterfaceSGIX_t" IglooInterfaceSGIX)
       ("_ALLEGRO_glDeleteFencesNV_t" DeleteFencesNV)
       ("_ALLEGRO_glGenFencesNV_t" GenFencesNV)
       ("_ALLEGRO_glIsFenceNV_t" IsFenceNV)
       ("_ALLEGRO_glTestFenceNV_t" TestFenceNV)
       ("_ALLEGRO_glGetFenceivNV_t" GetFenceivNV)
       ("_ALLEGRO_glFinishFenceNV_t" FinishFenceNV)
       ("_ALLEGRO_glSetFenceNV_t" SetFenceNV)
       ("_ALLEGRO_glMapControlPointsNV_t" MapControlPointsNV)
       ("_ALLEGRO_glMapParameterivNV_t" MapParameterivNV)
       ("_ALLEGRO_glMapParameterfvNV_t" MapParameterfvNV)
       ("_ALLEGRO_glGetMapControlPointsNV_t" GetMapControlPointsNV)
       ("_ALLEGRO_glGetMapParameterivNV_t" GetMapParameterivNV)
       ("_ALLEGRO_glGetMapParameterfvNV_t" GetMapParameterfvNV)
       ("_ALLEGRO_glGetMapAttribParameterivNV_t" GetMapAttribParameterivNV)
       ("_ALLEGRO_glGetMapAttribParameterfvNV_t" GetMapAttribParameterfvNV)
       ("_ALLEGRO_glEvalMapsNV_t" EvalMapsNV)
       ("_ALLEGRO_glCombinerStageParameterfvNV_t" CombinerStageParameterfvNV)
       ("_ALLEGRO_glGetCombinerStageParameterfvNV_t"
        GetCombinerStageParameterfvNV)
       ("_ALLEGRO_glAreProgramsResidentNV_t" AreProgramsResidentNV)
       ("_ALLEGRO_glBindProgramNV_t" BindProgramNV)
       ("_ALLEGRO_glDeleteProgramsNV_t" DeleteProgramsNV)
       ("_ALLEGRO_glExecuteProgramNV_t" ExecuteProgramNV)
       ("_ALLEGRO_glGenProgramsNV_t" GenProgramsNV)
       ("_ALLEGRO_glGetProgramParameterdvNV_t" GetProgramParameterdvNV)
       ("_ALLEGRO_glGetProgramParameterfvNV_t" GetProgramParameterfvNV)
       ("_ALLEGRO_glGetProgramivNV_t" GetProgramivNV)
       ("_ALLEGRO_glGetProgramStringNV_t" GetProgramStringNV)
       ("_ALLEGRO_glGetTrackMatrixivNV_t" GetTrackMatrixivNV)
       ("_ALLEGRO_glGetVertexAttribdvNV_t" GetVertexAttribdvNV)
       ("_ALLEGRO_glGetVertexAttribfvNV_t" GetVertexAttribfvNV)
       ("_ALLEGRO_glGetVertexAttribivNV_t" GetVertexAttribivNV)
       ("_ALLEGRO_glGetVertexAttribPointervNV_t" GetVertexAttribPointervNV)
       ("_ALLEGRO_glIsProgramNV_t" IsProgramNV)
       ("_ALLEGRO_glLoadProgramNV_t" LoadProgramNV)
       ("_ALLEGRO_glProgramParameter4dNV_t" ProgramParameter4dNV)
       ("_ALLEGRO_glProgramParameter4dvNV_t" ProgramParameter4dvNV)
       ("_ALLEGRO_glProgramParameter4fNV_t" ProgramParameter4fNV)
       ("_ALLEGRO_glProgramParameter4fvNV_t" ProgramParameter4fvNV)
       ("_ALLEGRO_glProgramParameters4dvNV_t" ProgramParameters4dvNV)
       ("_ALLEGRO_glProgramParameters4fvNV_t" ProgramParameters4fvNV)
       ("_ALLEGRO_glRequestResidentProgramsNV_t" RequestResidentProgramsNV)
       ("_ALLEGRO_glTrackMatrixNV_t" TrackMatrixNV)
       ("_ALLEGRO_glVertexAttribPointerNV_t" VertexAttribPointerNV)
       ("_ALLEGRO_glVertexAttrib1dNV_t" VertexAttrib1dNV)
       ("_ALLEGRO_glVertexAttrib1dvNV_t" VertexAttrib1dvNV)
       ("_ALLEGRO_glVertexAttrib1fNV_t" VertexAttrib1fNV)
       ("_ALLEGRO_glVertexAttrib1fvNV_t" VertexAttrib1fvNV)
       ("_ALLEGRO_glVertexAttrib1sNV_t" VertexAttrib1sNV)
       ("_ALLEGRO_glVertexAttrib1svNV_t" VertexAttrib1svNV)
       ("_ALLEGRO_glVertexAttrib2dNV_t" VertexAttrib2dNV)
       ("_ALLEGRO_glVertexAttrib2dvNV_t" VertexAttrib2dvNV)
       ("_ALLEGRO_glVertexAttrib2fNV_t" VertexAttrib2fNV)
       ("_ALLEGRO_glVertexAttrib2fvNV_t" VertexAttrib2fvNV)
       ("_ALLEGRO_glVertexAttrib2sNV_t" VertexAttrib2sNV)
       ("_ALLEGRO_glVertexAttrib2svNV_t" VertexAttrib2svNV)
       ("_ALLEGRO_glVertexAttrib3dNV_t" VertexAttrib3dNV)
       ("_ALLEGRO_glVertexAttrib3dvNV_t" VertexAttrib3dvNV)
       ("_ALLEGRO_glVertexAttrib3fNV_t" VertexAttrib3fNV)
       ("_ALLEGRO_glVertexAttrib3fvNV_t" VertexAttrib3fvNV)
       ("_ALLEGRO_glVertexAttrib3sNV_t" VertexAttrib3sNV)
       ("_ALLEGRO_glVertexAttrib3svNV_t" VertexAttrib3svNV)
       ("_ALLEGRO_glVertexAttrib4dNV_t" VertexAttrib4dNV)
       ("_ALLEGRO_glVertexAttrib4dvNV_t" VertexAttrib4dvNV)
       ("_ALLEGRO_glVertexAttrib4fNV_t" VertexAttrib4fNV)
       ("_ALLEGRO_glVertexAttrib4fvNV_t" VertexAttrib4fvNV)
       ("_ALLEGRO_glVertexAttrib4sNV_t" VertexAttrib4sNV)
       ("_ALLEGRO_glVertexAttrib4svNV_t" VertexAttrib4svNV)
       ("_ALLEGRO_glVertexAttrib4ubNV_t" VertexAttrib4ubNV)
       ("_ALLEGRO_glVertexAttrib4ubvNV_t" VertexAttrib4ubvNV)
       ("_ALLEGRO_glVertexAttribs1dvNV_t" VertexAttribs1dvNV)
       ("_ALLEGRO_glVertexAttribs1fvNV_t" VertexAttribs1fvNV)
       ("_ALLEGRO_glVertexAttribs1svNV_t" VertexAttribs1svNV)
       ("_ALLEGRO_glVertexAttribs2dvNV_t" VertexAttribs2dvNV)
       ("_ALLEGRO_glVertexAttribs2fvNV_t" VertexAttribs2fvNV)
       ("_ALLEGRO_glVertexAttribs2svNV_t" VertexAttribs2svNV)
       ("_ALLEGRO_glVertexAttribs3dvNV_t" VertexAttribs3dvNV)
       ("_ALLEGRO_glVertexAttribs3fvNV_t" VertexAttribs3fvNV)
       ("_ALLEGRO_glVertexAttribs3svNV_t" VertexAttribs3svNV)
       ("_ALLEGRO_glVertexAttribs4dvNV_t" VertexAttribs4dvNV)
       ("_ALLEGRO_glVertexAttribs4fvNV_t" VertexAttribs4fvNV)
       ("_ALLEGRO_glVertexAttribs4svNV_t" VertexAttribs4svNV)
       ("_ALLEGRO_glVertexAttribs4ubvNV_t" VertexAttribs4ubvNV)
       ("_ALLEGRO_glTexBumpParameterivATI_t" TexBumpParameterivATI)
       ("_ALLEGRO_glTexBumpParameterfvATI_t" TexBumpParameterfvATI)
       ("_ALLEGRO_glGetTexBumpParameterivATI_t" GetTexBumpParameterivATI)
       ("_ALLEGRO_glGetTexBumpParameterfvATI_t" GetTexBumpParameterfvATI)
       ("_ALLEGRO_glGenFragmentShadersATI_t" GenFragmentShadersATI)
       ("_ALLEGRO_glBindFragmentShaderATI_t" BindFragmentShaderATI)
       ("_ALLEGRO_glDeleteFragmentShaderATI_t" DeleteFragmentShaderATI)
       ("_ALLEGRO_glBeginFragmentShaderATI_t" BeginFragmentShaderATI)
       ("_ALLEGRO_glEndFragmentShaderATI_t" EndFragmentShaderATI)
       ("_ALLEGRO_glPassTexCoordATI_t" PassTexCoordATI)
       ("_ALLEGRO_glSampleMapATI_t" SampleMapATI)
       ("_ALLEGRO_glColorFragmentOp1ATI_t" ColorFragmentOp1ATI)
       ("_ALLEGRO_glColorFragmentOp2ATI_t" ColorFragmentOp2ATI)
       ("_ALLEGRO_glColorFragmentOp3ATI_t" ColorFragmentOp3ATI)
       ("_ALLEGRO_glAlphaFragmentOp1ATI_t" AlphaFragmentOp1ATI)
       ("_ALLEGRO_glAlphaFragmentOp2ATI_t" AlphaFragmentOp2ATI)
       ("_ALLEGRO_glAlphaFragmentOp3ATI_t" AlphaFragmentOp3ATI)
       ("_ALLEGRO_glSetFragmentShaderConstantATI_t"
        SetFragmentShaderConstantATI)
       ("_ALLEGRO_glPNTrianglesiATI_t" PNTrianglesiATI)
       ("_ALLEGRO_glPNTrianglesfATI_t" PNTrianglesfATI)
       ("_ALLEGRO_glNewObjectBufferATI_t" NewObjectBufferATI)
       ("_ALLEGRO_glIsObjectBufferATI_t" IsObjectBufferATI)
       ("_ALLEGRO_glUpdateObjectBufferATI_t" UpdateObjectBufferATI)
       ("_ALLEGRO_glGetObjectBufferfvATI_t" GetObjectBufferfvATI)
       ("_ALLEGRO_glGetObjectBufferivATI_t" GetObjectBufferivATI)
       ("_ALLEGRO_glFreeObjectBufferATI_t" FreeObjectBufferATI)
       ("_ALLEGRO_glArrayObjectATI_t" ArrayObjectATI)
       ("_ALLEGRO_glGetArrayObjectfvATI_t" GetArrayObjectfvATI)
       ("_ALLEGRO_glGetArrayObjectivATI_t" GetArrayObjectivATI)
       ("_ALLEGRO_glVariantArrayObjectATI_t" VariantArrayObjectATI)
       ("_ALLEGRO_glGetVariantArrayObjectfvATI_t" GetVariantArrayObjectfvATI)
       ("_ALLEGRO_glGetVariantArrayObjectivATI_t" GetVariantArrayObjectivATI)
       ("_ALLEGRO_glBeginVertexShaderEXT_t" BeginVertexShaderEXT)
       ("_ALLEGRO_glEndVertexShaderEXT_t" EndVertexShaderEXT)
       ("_ALLEGRO_glBindVertexShaderEXT_t" BindVertexShaderEXT)
       ("_ALLEGRO_glGenVertexShadersEXT_t" GenVertexShadersEXT)
       ("_ALLEGRO_glDeleteVertexShaderEXT_t" DeleteVertexShaderEXT)
       ("_ALLEGRO_glShaderOp1EXT_t" ShaderOp1EXT)
       ("_ALLEGRO_glShaderOp2EXT_t" ShaderOp2EXT)
       ("_ALLEGRO_glShaderOp3EXT_t" ShaderOp3EXT)
       ("_ALLEGRO_glSwizzleEXT_t" SwizzleEXT)
       ("_ALLEGRO_glWriteMaskEXT_t" WriteMaskEXT)
       ("_ALLEGRO_glInsertComponentEXT_t" InsertComponentEXT)
       ("_ALLEGRO_glExtractComponentEXT_t" ExtractComponentEXT)
       ("_ALLEGRO_glGenSymbolsEXT_t" GenSymbolsEXT)
       ("_ALLEGRO_glSetInvariantEXT_t" SetInvariantEXT)
       ("_ALLEGRO_glSetLocalConstantEXT_t" SetLocalConstantEXT)
       ("_ALLEGRO_glVariantbvEXT_t" VariantbvEXT)
       ("_ALLEGRO_glVariantsvEXT_t" VariantsvEXT)
       ("_ALLEGRO_glVariantivEXT_t" VariantivEXT)
       ("_ALLEGRO_glVariantfvEXT_t" VariantfvEXT)
       ("_ALLEGRO_glVariantdvEXT_t" VariantdvEXT)
       ("_ALLEGRO_glVariantubvEXT_t" VariantubvEXT)
       ("_ALLEGRO_glVariantusvEXT_t" VariantusvEXT)
       ("_ALLEGRO_glVariantuivEXT_t" VariantuivEXT)
       ("_ALLEGRO_glVariantPointerEXT_t" VariantPointerEXT)
       ("_ALLEGRO_glEnableVariantClientStateEXT_t" EnableVariantClientStateEXT)
       ("_ALLEGRO_glDisableVariantClientStateEXT_t"
        DisableVariantClientStateEXT)
       ("_ALLEGRO_glBindLightParameterEXT_t" BindLightParameterEXT)
       ("_ALLEGRO_glBindMaterialParameterEXT_t" BindMaterialParameterEXT)
       ("_ALLEGRO_glBindTexGenParameterEXT_t" BindTexGenParameterEXT)
       ("_ALLEGRO_glBindTextureUnitParameterEXT_t" BindTextureUnitParameterEXT)
       ("_ALLEGRO_glBindParameterEXT_t" BindParameterEXT)
       ("_ALLEGRO_glIsVariantEnabledEXT_t" IsVariantEnabledEXT)
       ("_ALLEGRO_glGetVariantBooleanvEXT_t" GetVariantBooleanvEXT)
       ("_ALLEGRO_glGetVariantIntegervEXT_t" GetVariantIntegervEXT)
       ("_ALLEGRO_glGetVariantFloatvEXT_t" GetVariantFloatvEXT)
       ("_ALLEGRO_glGetVariantPointervEXT_t" GetVariantPointervEXT)
       ("_ALLEGRO_glGetInvariantBooleanvEXT_t" GetInvariantBooleanvEXT)
       ("_ALLEGRO_glGetInvariantIntegervEXT_t" GetInvariantIntegervEXT)
       ("_ALLEGRO_glGetInvariantFloatvEXT_t" GetInvariantFloatvEXT)
       ("_ALLEGRO_glGetLocalConstantBooleanvEXT_t" GetLocalConstantBooleanvEXT)
       ("_ALLEGRO_glGetLocalConstantIntegervEXT_t" GetLocalConstantIntegervEXT)
       ("_ALLEGRO_glGetLocalConstantFloatvEXT_t" GetLocalConstantFloatvEXT)
       ("_ALLEGRO_glVertexStream1sATI_t" VertexStream1sATI)
       ("_ALLEGRO_glVertexStream1svATI_t" VertexStream1svATI)
       ("_ALLEGRO_glVertexStream1iATI_t" VertexStream1iATI)
       ("_ALLEGRO_glVertexStream1ivATI_t" VertexStream1ivATI)
       ("_ALLEGRO_glVertexStream1fATI_t" VertexStream1fATI)
       ("_ALLEGRO_glVertexStream1fvATI_t" VertexStream1fvATI)
       ("_ALLEGRO_glVertexStream1dATI_t" VertexStream1dATI)
       ("_ALLEGRO_glVertexStream1dvATI_t" VertexStream1dvATI)
       ("_ALLEGRO_glVertexStream2sATI_t" VertexStream2sATI)
       ("_ALLEGRO_glVertexStream2svATI_t" VertexStream2svATI)
       ("_ALLEGRO_glVertexStream2iATI_t" VertexStream2iATI)
       ("_ALLEGRO_glVertexStream2ivATI_t" VertexStream2ivATI)
       ("_ALLEGRO_glVertexStream2fATI_t" VertexStream2fATI)
       ("_ALLEGRO_glVertexStream2fvATI_t" VertexStream2fvATI)
       ("_ALLEGRO_glVertexStream2dATI_t" VertexStream2dATI)
       ("_ALLEGRO_glVertexStream2dvATI_t" VertexStream2dvATI)
       ("_ALLEGRO_glVertexStream3sATI_t" VertexStream3sATI)
       ("_ALLEGRO_glVertexStream3svATI_t" VertexStream3svATI)
       ("_ALLEGRO_glVertexStream3iATI_t" VertexStream3iATI)
       ("_ALLEGRO_glVertexStream3ivATI_t" VertexStream3ivATI)
       ("_ALLEGRO_glVertexStream3fATI_t" VertexStream3fATI)
       ("_ALLEGRO_glVertexStream3fvATI_t" VertexStream3fvATI)
       ("_ALLEGRO_glVertexStream3dATI_t" VertexStream3dATI)
       ("_ALLEGRO_glVertexStream3dvATI_t" VertexStream3dvATI)
       ("_ALLEGRO_glVertexStream4sATI_t" VertexStream4sATI)
       ("_ALLEGRO_glVertexStream4svATI_t" VertexStream4svATI)
       ("_ALLEGRO_glVertexStream4iATI_t" VertexStream4iATI)
       ("_ALLEGRO_glVertexStream4ivATI_t" VertexStream4ivATI)
       ("_ALLEGRO_glVertexStream4fATI_t" VertexStream4fATI)
       ("_ALLEGRO_glVertexStream4fvATI_t" VertexStream4fvATI)
       ("_ALLEGRO_glVertexStream4dATI_t" VertexStream4dATI)
       ("_ALLEGRO_glVertexStream4dvATI_t" VertexStream4dvATI)
       ("_ALLEGRO_glNormalStream3bATI_t" NormalStream3bATI)
       ("_ALLEGRO_glNormalStream3bvATI_t" NormalStream3bvATI)
       ("_ALLEGRO_glNormalStream3sATI_t" NormalStream3sATI)
       ("_ALLEGRO_glNormalStream3svATI_t" NormalStream3svATI)
       ("_ALLEGRO_glNormalStream3iATI_t" NormalStream3iATI)
       ("_ALLEGRO_glNormalStream3ivATI_t" NormalStream3ivATI)
       ("_ALLEGRO_glNormalStream3fATI_t" NormalStream3fATI)
       ("_ALLEGRO_glNormalStream3fvATI_t" NormalStream3fvATI)
       ("_ALLEGRO_glNormalStream3dATI_t" NormalStream3dATI)
       ("_ALLEGRO_glNormalStream3dvATI_t" NormalStream3dvATI)
       ("_ALLEGRO_glClientActiveVertexStreamATI_t" ClientActiveVertexStreamATI)
       ("_ALLEGRO_glVertexBlendEnviATI_t" VertexBlendEnviATI)
       ("_ALLEGRO_glVertexBlendEnvfATI_t" VertexBlendEnvfATI)
       ("_ALLEGRO_glElementPointerATI_t" ElementPointerATI)
       ("_ALLEGRO_glDrawElementArrayATI_t" DrawElementArrayATI)
       ("_ALLEGRO_glDrawRangeElementArrayATI_t" DrawRangeElementArrayATI)
       ("_ALLEGRO_glDrawMeshArraysSUN_t" DrawMeshArraysSUN)
       ("_ALLEGRO_glGenOcclusionQueriesNV_t" GenOcclusionQueriesNV)
       ("_ALLEGRO_glDeleteOcclusionQueriesNV_t" DeleteOcclusionQueriesNV)
       ("_ALLEGRO_glIsOcclusionQueryNV_t" IsOcclusionQueryNV)
       ("_ALLEGRO_glBeginOcclusionQueryNV_t" BeginOcclusionQueryNV)
       ("_ALLEGRO_glEndOcclusionQueryNV_t" EndOcclusionQueryNV)
       ("_ALLEGRO_glGetOcclusionQueryivNV_t" GetOcclusionQueryivNV)
       ("_ALLEGRO_glGetOcclusionQueryuivNV_t" GetOcclusionQueryuivNV)
       ("_ALLEGRO_glPointParameteriNV_t" PointParameteriNV)
       ("_ALLEGRO_glPointParameterivNV_t" PointParameterivNV)
       ("_ALLEGRO_glActiveStencilFaceEXT_t" ActiveStencilFaceEXT)
       ("_ALLEGRO_glElementPointerAPPLE_t" ElementPointerAPPLE)
       ("_ALLEGRO_glDrawElementArrayAPPLE_t" DrawElementArrayAPPLE)
       ("_ALLEGRO_glDrawRangeElementArrayAPPLE_t" DrawRangeElementArrayAPPLE)
       ("_ALLEGRO_glMultiDrawElementArrayAPPLE_t" MultiDrawElementArrayAPPLE)
       ("_ALLEGRO_glMultiDrawRangeElementArrayAPPLE_t"
        MultiDrawRangeElementArrayAPPLE)
       ("_ALLEGRO_glGenFencesAPPLE_t" GenFencesAPPLE)
       ("_ALLEGRO_glDeleteFencesAPPLE_t" DeleteFencesAPPLE)
       ("_ALLEGRO_glSetFenceAPPLE_t" SetFenceAPPLE)
       ("_ALLEGRO_glIsFenceAPPLE_t" IsFenceAPPLE)
       ("_ALLEGRO_glTestFenceAPPLE_t" TestFenceAPPLE)
       ("_ALLEGRO_glFinishFenceAPPLE_t" FinishFenceAPPLE)
       ("_ALLEGRO_glTestObjectAPPLE_t" TestObjectAPPLE)
       ("_ALLEGRO_glFinishObjectAPPLE_t" FinishObjectAPPLE)
       ("_ALLEGRO_glBindVertexArrayAPPLE_t" BindVertexArrayAPPLE)
       ("_ALLEGRO_glDeleteVertexArraysAPPLE_t" DeleteVertexArraysAPPLE)
       ("_ALLEGRO_glGenVertexArraysAPPLE_t" GenVertexArraysAPPLE)
       ("_ALLEGRO_glIsVertexArrayAPPLE_t" IsVertexArrayAPPLE)
       ("_ALLEGRO_glVertexArrayRangeAPPLE_t" VertexArrayRangeAPPLE)
       ("_ALLEGRO_glFlushVertexArrayRangeAPPLE_t" FlushVertexArrayRangeAPPLE)
       ("_ALLEGRO_glVertexArrayParameteriAPPLE_t" VertexArrayParameteriAPPLE)
       ("_ALLEGRO_glDrawBuffersATI_t" DrawBuffersATI)
       ("_ALLEGRO_glProgramNamedParameter4fNV_t" ProgramNamedParameter4fNV)
       ("_ALLEGRO_glProgramNamedParameter4dNV_t" ProgramNamedParameter4dNV)
       ("_ALLEGRO_glProgramNamedParameter4fvNV_t" ProgramNamedParameter4fvNV)
       ("_ALLEGRO_glProgramNamedParameter4dvNV_t" ProgramNamedParameter4dvNV)
       ("_ALLEGRO_glGetProgramNamedParameterfvNV_t"
        GetProgramNamedParameterfvNV)
       ("_ALLEGRO_glGetProgramNamedParameterdvNV_t"
        GetProgramNamedParameterdvNV)
       ("_ALLEGRO_glVertex2hNV_t" Vertex2hNV)
       ("_ALLEGRO_glVertex2hvNV_t" Vertex2hvNV)
       ("_ALLEGRO_glVertex3hNV_t" Vertex3hNV)
       ("_ALLEGRO_glVertex3hvNV_t" Vertex3hvNV)
       ("_ALLEGRO_glVertex4hNV_t" Vertex4hNV)
       ("_ALLEGRO_glVertex4hvNV_t" Vertex4hvNV)
       ("_ALLEGRO_glNormal3hNV_t" Normal3hNV)
       ("_ALLEGRO_glNormal3hvNV_t" Normal3hvNV)
       ("_ALLEGRO_glColor3hNV_t" Color3hNV)
       ("_ALLEGRO_glColor3hvNV_t" Color3hvNV)
       ("_ALLEGRO_glColor4hNV_t" Color4hNV)
       ("_ALLEGRO_glColor4hvNV_t" Color4hvNV)
       ("_ALLEGRO_glTexCoord1hNV_t" TexCoord1hNV)
       ("_ALLEGRO_glTexCoord1hvNV_t" TexCoord1hvNV)
       ("_ALLEGRO_glTexCoord2hNV_t" TexCoord2hNV)
       ("_ALLEGRO_glTexCoord2hvNV_t" TexCoord2hvNV)
       ("_ALLEGRO_glTexCoord3hNV_t" TexCoord3hNV)
       ("_ALLEGRO_glTexCoord3hvNV_t" TexCoord3hvNV)
       ("_ALLEGRO_glTexCoord4hNV_t" TexCoord4hNV)
       ("_ALLEGRO_glTexCoord4hvNV_t" TexCoord4hvNV)
       ("_ALLEGRO_glMultiTexCoord1hNV_t" MultiTexCoord1hNV)
       ("_ALLEGRO_glMultiTexCoord1hvNV_t" MultiTexCoord1hvNV)
       ("_ALLEGRO_glMultiTexCoord2hNV_t" MultiTexCoord2hNV)
       ("_ALLEGRO_glMultiTexCoord2hvNV_t" MultiTexCoord2hvNV)
       ("_ALLEGRO_glMultiTexCoord3hNV_t" MultiTexCoord3hNV)
       ("_ALLEGRO_glMultiTexCoord3hvNV_t" MultiTexCoord3hvNV)
       ("_ALLEGRO_glMultiTexCoord4hNV_t" MultiTexCoord4hNV)
       ("_ALLEGRO_glMultiTexCoord4hvNV_t" MultiTexCoord4hvNV)
       ("_ALLEGRO_glFogCoordhNV_t" FogCoordhNV)
       ("_ALLEGRO_glFogCoordhvNV_t" FogCoordhvNV)
       ("_ALLEGRO_glSecondaryColor3hNV_t" SecondaryColor3hNV)
       ("_ALLEGRO_glSecondaryColor3hvNV_t" SecondaryColor3hvNV)
       ("_ALLEGRO_glVertexWeighthNV_t" VertexWeighthNV)
       ("_ALLEGRO_glVertexWeighthvNV_t" VertexWeighthvNV)
       ("_ALLEGRO_glVertexAttrib1hNV_t" VertexAttrib1hNV)
       ("_ALLEGRO_glVertexAttrib1hvNV_t" VertexAttrib1hvNV)
       ("_ALLEGRO_glVertexAttrib2hNV_t" VertexAttrib2hNV)
       ("_ALLEGRO_glVertexAttrib2hvNV_t" VertexAttrib2hvNV)
       ("_ALLEGRO_glVertexAttrib3hNV_t" VertexAttrib3hNV)
       ("_ALLEGRO_glVertexAttrib3hvNV_t" VertexAttrib3hvNV)
       ("_ALLEGRO_glVertexAttrib4hNV_t" VertexAttrib4hNV)
       ("_ALLEGRO_glVertexAttrib4hvNV_t" VertexAttrib4hvNV)
       ("_ALLEGRO_glVertexAttribs1hvNV_t" VertexAttribs1hvNV)
       ("_ALLEGRO_glVertexAttribs2hvNV_t" VertexAttribs2hvNV)
       ("_ALLEGRO_glVertexAttribs3hvNV_t" VertexAttribs3hvNV)
       ("_ALLEGRO_glVertexAttribs4hvNV_t" VertexAttribs4hvNV)
       ("_ALLEGRO_glPixelDataRangeNV_t" PixelDataRangeNV)
       ("_ALLEGRO_glFlushPixelDataRangeNV_t" FlushPixelDataRangeNV)
       ("_ALLEGRO_glPrimitiveRestartNV_t" PrimitiveRestartNV)
       ("_ALLEGRO_glPrimitiveRestartIndexNV_t" PrimitiveRestartIndexNV)
       ("_ALLEGRO_glMapObjectBufferATI_t" MapObjectBufferATI)
       ("_ALLEGRO_glUnmapObjectBufferATI_t" UnmapObjectBufferATI)
       ("_ALLEGRO_glVertexAttribArrayObjectATI_t" VertexAttribArrayObjectATI)
       ("_ALLEGRO_glGetVertexAttribArrayObjectfvATI_t"
        GetVertexAttribArrayObjectfvATI)
       ("_ALLEGRO_glGetVertexAttribArrayObjectivATI_t"
        GetVertexAttribArrayObjectivATI)
       ("_ALLEGRO_glVertex2bOES_t" Vertex2bOES)
       ("_ALLEGRO_glVertex3bOES_t" Vertex3bOES)
       ("_ALLEGRO_glVertex4bOES_t" Vertex4bOES)
       ("_ALLEGRO_glVertex2bvOES_t" Vertex2bvOES)
       ("_ALLEGRO_glVertex3bvOES_t" Vertex3bvOES)
       ("_ALLEGRO_glVertex4bvOES_t" Vertex4bvOES)
       ("_ALLEGRO_glTexCoord1bOES_t" TexCoord1bOES)
       ("_ALLEGRO_glTexCoord2bOES_t" TexCoord2bOES)
       ("_ALLEGRO_glTexCoord3bOES_t" TexCoord3bOES)
       ("_ALLEGRO_glTexCoord4bOES_t" TexCoord4bOES)
       ("_ALLEGRO_glTexCoord1bvOES_t" TexCoord1bvOES)
       ("_ALLEGRO_glTexCoord2bvOES_t" TexCoord2bvOES)
       ("_ALLEGRO_glTexCoord3bvOES_t" TexCoord3bvOES)
       ("_ALLEGRO_glTexCoord4bvOES_t" TexCoord4bvOES)
       ("_ALLEGRO_glMultiTexCoord1bOES_t" MultiTexCoord1bOES)
       ("_ALLEGRO_glMultiTexCoord2bOES_t" MultiTexCoord2bOES)
       ("_ALLEGRO_glMultiTexCoord3bOES_t" MultiTexCoord3bOES)
       ("_ALLEGRO_glMultiTexCoord4bOES_t" MultiTexCoord4bOES)
       ("_ALLEGRO_glMultiTexCoord1bvOES_t" MultiTexCoord1bvOES)
       ("_ALLEGRO_glMultiTexCoord2bvOES_t" MultiTexCoord2bvOES)
       ("_ALLEGRO_glMultiTexCoord3bvOES_t" MultiTexCoord3bvOES)
       ("_ALLEGRO_glMultiTexCoord4bvOES_t" MultiTexCoord4bvOES)
       ("_ALLEGRO_glVertex2xOES_t" Vertex2xOES)
       ("_ALLEGRO_glVertex3xOES_t" Vertex3xOES)
       ("_ALLEGRO_glVertex4xOES_t" Vertex4xOES)
       ("_ALLEGRO_glVertex2xvOES_t" Vertex2xvOES)
       ("_ALLEGRO_glVertex3xvOES_t" Vertex3xvOES)
       ("_ALLEGRO_glVertex4xvOES_t" Vertex4xvOES)
       ("_ALLEGRO_glNormal3xOES_t" Normal3xOES)
       ("_ALLEGRO_glNormal3xvOES_t" Normal3xvOES)
       ("_ALLEGRO_glTexCoord1xOES_t" TexCoord1xOES)
       ("_ALLEGRO_glTexCoord2xOES_t" TexCoord2xOES)
       ("_ALLEGRO_glTexCoord3xOES_t" TexCoord3xOES)
       ("_ALLEGRO_glTexCoord4xOES_t" TexCoord4xOES)
       ("_ALLEGRO_glTexCoord1xvOES_t" TexCoord1xvOES)
       ("_ALLEGRO_glTexCoord2xvOES_t" TexCoord2xvOES)
       ("_ALLEGRO_glTexCoord3xvOES_t" TexCoord3xvOES)
       ("_ALLEGRO_glTexCoord4xvOES_t" TexCoord4xvOES)
       ("_ALLEGRO_glMultiTexCoord1xOES_t" MultiTexCoord1xOES)
       ("_ALLEGRO_glMultiTexCoord2xOES_t" MultiTexCoord2xOES)
       ("_ALLEGRO_glMultiTexCoord3xOES_t" MultiTexCoord3xOES)
       ("_ALLEGRO_glMultiTexCoord4xOES_t" MultiTexCoord4xOES)
       ("_ALLEGRO_glMultiTexCoord1xvOES_t" MultiTexCoord1xvOES)
       ("_ALLEGRO_glMultiTexCoord2xvOES_t" MultiTexCoord2xvOES)
       ("_ALLEGRO_glMultiTexCoord3xvOES_t" MultiTexCoord3xvOES)
       ("_ALLEGRO_glMultiTexCoord4xvOES_t" MultiTexCoord4xvOES)
       ("_ALLEGRO_glColor3xOES_t" Color3xOES)
       ("_ALLEGRO_glColor4xOES_t" Color4xOES)
       ("_ALLEGRO_glColor3xvOES_t" Color3xvOES)
       ("_ALLEGRO_glColor4xvOES_t" Color4xvOES)
       ("_ALLEGRO_glIndexxOES_t" IndexxOES)
       ("_ALLEGRO_glIndexxvOES_t" IndexxvOES)
       ("_ALLEGRO_glRectxOES_t" RectxOES)
       ("_ALLEGRO_glDepthRangexOES_t" DepthRangexOES)
       ("_ALLEGRO_glRotatexOES_t" RotatexOES)
       ("_ALLEGRO_glScalexOES_t" ScalexOES)
       ("_ALLEGRO_glTranslatexOES_t" TranslatexOES)
       ("_ALLEGRO_glFrustumxOES_t" FrustumxOES)
       ("_ALLEGRO_glOrthoxOES_t" OrthoxOES)
       ("_ALLEGRO_glTexGenxOES_t" TexGenxOES)
       ("_ALLEGRO_glTexGenxvOES_t" TexGenxvOES)
       ("_ALLEGRO_glGetTexGenxvOES_t" GetTexGenxvOES)
       ("_ALLEGRO_glClipPlanexOES_t" ClipPlanexOES)
       ("_ALLEGRO_glGetClipPlanexOES_t" GetClipPlanexOES)
       ("_ALLEGRO_glRasterPos2xOES_t" RasterPos2xOES)
       ("_ALLEGRO_glRasterPos3xOES_t" RasterPos3xOES)
       ("_ALLEGRO_glRasterPos4xOES_t" RasterPos4xOES)
       ("_ALLEGRO_glRasterPos2xvOES_t" RasterPos2xvOES)
       ("_ALLEGRO_glRasterPos3xvOES_t" RasterPos3xvOES)
       ("_ALLEGRO_glRasterPos4xvOES_t" RasterPos4xvOES)
       ("_ALLEGRO_glMaterialxOES_t" MaterialxOES)
       ("_ALLEGRO_glMaterialxvOES_t" MaterialxvOES)
       ("_ALLEGRO_glGetMaterialxOES_t" GetMaterialxOES)
       ("_ALLEGRO_glLightxOES_t" LightxOES)
       ("_ALLEGRO_glLightxvOES_t" LightxvOES)
       ("_ALLEGRO_glGetLightxOES_t" GetLightxOES)
       ("_ALLEGRO_glLightModelxOES_t" LightModelxOES)
       ("_ALLEGRO_glLightModelxvOES_t" LightModelxvOES)
       ("_ALLEGRO_glPointSizexOES_t" PointSizexOES)
       ("_ALLEGRO_glLineWidthxOES_t" LineWidthxOES)
       ("_ALLEGRO_glPolygonOffsetxOES_t" PolygonOffsetxOES)
       ("_ALLEGRO_glPixelStorex_t" PixelStorex)
       ("_ALLEGRO_glPixelTransferxOES_t" PixelTransferxOES)
       ("_ALLEGRO_glPixelMapx_t" PixelMapx)
       ("_ALLEGRO_glGetPixelMapxv_t" GetPixelMapxv)
       ("_ALLEGRO_glConvolutionParameterxOES_t" ConvolutionParameterxOES)
       ("_ALLEGRO_glConvolutionParameterxvOES_t" ConvolutionParameterxvOES)
       ("_ALLEGRO_glGetConvolutionParameterxvOES_t"
        GetConvolutionParameterxvOES)
       ("_ALLEGRO_glGetHistogramParameterxvOES_t" GetHistogramParameterxvOES)
       ("_ALLEGRO_glPixelZoomxOES_t" PixelZoomxOES)
       ("_ALLEGRO_glBitmapxOES_t" BitmapxOES)
       ("_ALLEGRO_glTexParameterxOES_t" TexParameterxOES)
       ("_ALLEGRO_glTexParameterxvOES_t" TexParameterxvOES)
       ("_ALLEGRO_glGetTexParameterxvOES_t" GetTexParameterxvOES)
       ("_ALLEGRO_glGetTexLevelParameterxvOES_t" GetTexLevelParameterxvOES)
       ("_ALLEGRO_glPrioritizeTexturesxOES_t" PrioritizeTexturesxOES)
       ("_ALLEGRO_glTexEnvxOES_t" TexEnvxOES)
       ("_ALLEGRO_glTexEnvxvOES_t" TexEnvxvOES)
       ("_ALLEGRO_glGetTexEnvxvOES_t" GetTexEnvxvOES)
       ("_ALLEGRO_glFogxOES_t" FogxOES)
       ("_ALLEGRO_glFogxvOES_t" FogxvOES)
       ("_ALLEGRO_glSampleCoverageOES_t" SampleCoverageOES)
       ("_ALLEGRO_glAlphaFuncxOES_t" AlphaFuncxOES)
       ("_ALLEGRO_glBlendColorxOES_t" BlendColorxOES)
       ("_ALLEGRO_glClearColorxOES_t" ClearColorxOES)
       ("_ALLEGRO_glClearDepthxOES_t" ClearDepthxOES)
       ("_ALLEGRO_glClearAccumxOES_t" ClearAccumxOES)
       ("_ALLEGRO_glAccumxOES_t" AccumxOES)
       ("_ALLEGRO_glMap1xOES_t" Map1xOES)
       ("_ALLEGRO_glMap2xOES_t" Map2xOES)
       ("_ALLEGRO_glMapGrid1xOES_t" MapGrid1xOES)
       ("_ALLEGRO_glMapGrid2xOES_t" MapGrid2xOES)
       ("_ALLEGRO_glGetMapxvOES_t" GetMapxvOES)
       ("_ALLEGRO_glEvalCoord1xOES_t" EvalCoord1xOES)
       ("_ALLEGRO_glEvalCoord2xOES_t" EvalCoord2xOES)
       ("_ALLEGRO_glEvalCoord1xvOES_t" EvalCoord1xvOES)
       ("_ALLEGRO_glEvalCoord2xvOES_t" EvalCoord2xvOES)
       ("_ALLEGRO_glFeedbackBufferxOES_t" FeedbackBufferxOES)
       ("_ALLEGRO_glPassThroughxOES_t" PassThroughxOES)
       ("_ALLEGRO_glGetFixedvOES_t" GetFixedvOES)
       ("_ALLEGRO_glDepthRangefOES_t" DepthRangefOES)
       ("_ALLEGRO_glFrustumfOES_t" FrustumfOES)
       ("_ALLEGRO_glOrthofOES_t" OrthofOES)
       ("_ALLEGRO_glClipPlanefOES_t" ClipPlanefOES)
       ("_ALLEGRO_glGetClipPlanefOES_t" GetClipPlanefOES)
       ("_ALLEGRO_glClearDepthfOES_t" ClearDepthfOES)
       ("_ALLEGRO_glDepthBoundsEXT_t" DepthBoundsEXT)
       ("_ALLEGRO_glBlendEquationSeparateEXT_t" BlendEquationSeparateEXT)
       ("_ALLEGRO_glIsRenderbufferEXT_t" IsRenderbufferEXT)
       ("_ALLEGRO_glBindRenderbufferEXT_t" BindRenderbufferEXT)
       ("_ALLEGRO_glDeleteRenderbuffersEXT_t" DeleteRenderbuffersEXT)
       ("_ALLEGRO_glGenRenderbuffersEXT_t" GenRenderbuffersEXT)
       ("_ALLEGRO_glRenderbufferStorageEXT_t" RenderbufferStorageEXT)
       ("_ALLEGRO_glGetRenderbufferParameterivEXT_t"
        GetRenderbufferParameterivEXT)
       ("_ALLEGRO_glIsFramebufferEXT_t" IsFramebufferEXT)
       ("_ALLEGRO_glBindFramebufferEXT_t" BindFramebufferEXT)
       ("_ALLEGRO_glDeleteFramebuffersEXT_t" DeleteFramebuffersEXT)
       ("_ALLEGRO_glGenFramebuffersEXT_t" GenFramebuffersEXT)
       ("_ALLEGRO_glCheckFramebufferStatusEXT_t" CheckFramebufferStatusEXT)
       ("_ALLEGRO_glFramebufferTexture1DEXT_t" FramebufferTexture1DEXT)
       ("_ALLEGRO_glFramebufferTexture2DEXT_t" FramebufferTexture2DEXT)
       ("_ALLEGRO_glFramebufferTexture3DEXT_t" FramebufferTexture3DEXT)
       ("_ALLEGRO_glFramebufferRenderbufferEXT_t" FramebufferRenderbufferEXT)
       ("_ALLEGRO_glGetFramebufferAttachmentParameterivEXT_t"
        GetFramebufferAttachmentParameterivEXT)
       ("_ALLEGRO_glGenerateMipmapEXT_t" GenerateMipmapEXT)
       ("_ALLEGRO_glStringMarkerGREMEDY_t" StringMarkerGREMEDY)
       ("_ALLEGRO_glStencilClearTagEXT_t" StencilClearTagEXT)
       ("_ALLEGRO_glBlitFramebufferEXT_t" BlitFramebufferEXT)
       ("_ALLEGRO_glRenderbufferStorageMultisampleEXT_t"
        RenderbufferStorageMultisampleEXT)
       ("_ALLEGRO_glGetQueryObjecti64vEXT_t" GetQueryObjecti64vEXT)
       ("_ALLEGRO_glGetQueryObjectui64vEXT_t" GetQueryObjectui64vEXT)
       ("_ALLEGRO_glProgramEnvParameters4fvEXT_t" ProgramEnvParameters4fvEXT)
       ("_ALLEGRO_glProgramLocalParameters4fvEXT_t"
        ProgramLocalParameters4fvEXT)
       ("_ALLEGRO_glBufferParameteriAPPLE_t" BufferParameteriAPPLE)
       ("_ALLEGRO_glFlushMappedBufferRangeAPPLE_t" FlushMappedBufferRangeAPPLE)
       ("_ALLEGRO_glUniformBufferEXT_t" UniformBufferEXT)
       ("_ALLEGRO_glGetUniformBufferSizeEXT_t" GetUniformBufferSizeEXT)
       ("_ALLEGRO_glGetUniformOffsetEXT_t" GetUniformOffsetEXT)
       ("_ALLEGRO_glColorMaskIndexedEXT_t" ColorMaskIndexedEXT)
       ("_ALLEGRO_glGetBooleanIndexedvEXT_t" GetBooleanIndexedvEXT)
       ("_ALLEGRO_glGetIntegerIndexedvEXT_t" GetIntegerIndexedvEXT)
       ("_ALLEGRO_glEnableIndexedEXT_t" EnableIndexedEXT)
       ("_ALLEGRO_glDisableIndexedEXT_t" DisableIndexedEXT)
       ("_ALLEGRO_glIsEnabledIndexedEXT_t" IsEnabledIndexedEXT)
       ("_ALLEGRO_glDrawArraysInstancedEXT_t" DrawArraysInstancedEXT)
       ("_ALLEGRO_glDrawElementsInstancedEXT_t" DrawElementsInstancedEXT)
       ("_ALLEGRO_glProgramParameteriEXT_t" ProgramParameteriEXT)
       ("_ALLEGRO_glFramebufferTextureEXT_t" FramebufferTextureEXT)
       ("_ALLEGRO_glFramebufferTextureFaceEXT_t" FramebufferTextureFaceEXT)
       ("_ALLEGRO_glVertexAttribI1iEXT_t" VertexAttribI1iEXT)
       ("_ALLEGRO_glVertexAttribI2iEXT_t" VertexAttribI2iEXT)
       ("_ALLEGRO_glVertexAttribI3iEXT_t" VertexAttribI3iEXT)
       ("_ALLEGRO_glVertexAttribI4iEXT_t" VertexAttribI4iEXT)
       ("_ALLEGRO_glVertexAttribI1uiEXT_t" VertexAttribI1uiEXT)
       ("_ALLEGRO_glVertexAttribI2uiEXT_t" VertexAttribI2uiEXT)
       ("_ALLEGRO_glVertexAttribI3uiEXT_t" VertexAttribI3uiEXT)
       ("_ALLEGRO_glVertexAttribI4uiEXT_t" VertexAttribI4uiEXT)
       ("_ALLEGRO_glVertexAttribI1ivEXT_t" VertexAttribI1ivEXT)
       ("_ALLEGRO_glVertexAttribI2ivEXT_t" VertexAttribI2ivEXT)
       ("_ALLEGRO_glVertexAttribI3ivEXT_t" VertexAttribI3ivEXT)
       ("_ALLEGRO_glVertexAttribI4ivEXT_t" VertexAttribI4ivEXT)
       ("_ALLEGRO_glVertexAttribI1uivEXT_t" VertexAttribI1uivEXT)
       ("_ALLEGRO_glVertexAttribI2uivEXT_t" VertexAttribI2uivEXT)
       ("_ALLEGRO_glVertexAttribI3uivEXT_t" VertexAttribI3uivEXT)
       ("_ALLEGRO_glVertexAttribI4uivEXT_t" VertexAttribI4uivEXT)
       ("_ALLEGRO_glVertexAttribI4bvEXT_t" VertexAttribI4bvEXT)
       ("_ALLEGRO_glVertexAttribI4svEXT_t" VertexAttribI4svEXT)
       ("_ALLEGRO_glVertexAttribI4ubvEXT_t" VertexAttribI4ubvEXT)
       ("_ALLEGRO_glVertexAttribI4usvEXT_t" VertexAttribI4usvEXT)
       ("_ALLEGRO_glVertexAttribIPointerEXT_t" VertexAttribIPointerEXT)
       ("_ALLEGRO_glGetVertexAttribIivEXT_t" GetVertexAttribIivEXT)
       ("_ALLEGRO_glGetVertexAttribIuivEXT_t" GetVertexAttribIuivEXT)
       ("_ALLEGRO_glUniform1uiEXT_t" Uniform1uiEXT)
       ("_ALLEGRO_glUniform2uiEXT_t" Uniform2uiEXT)
       ("_ALLEGRO_glUniform3uiEXT_t" Uniform3uiEXT)
       ("_ALLEGRO_glUniform4uiEXT_t" Uniform4uiEXT)
       ("_ALLEGRO_glUniform1uivEXT_t" Uniform1uivEXT)
       ("_ALLEGRO_glUniform2uivEXT_t" Uniform2uivEXT)
       ("_ALLEGRO_glUniform3uivEXT_t" Uniform3uivEXT)
       ("_ALLEGRO_glUniform4uivEXT_t" Uniform4uivEXT)
       ("_ALLEGRO_glGetUniformuivEXT_t" GetUniformuivEXT)
       ("_ALLEGRO_glBindFragDataLocationEXT_t" BindFragDataLocationEXT)
       ("_ALLEGRO_glGetFragDataLocationEXT_t" GetFragDataLocationEXT)
       ("_ALLEGRO_glFramebufferTextureLayerEXT_t" FramebufferTextureLayerEXT)
       ("_ALLEGRO_glTexBufferEXT_t" TexBufferEXT)
       ("_ALLEGRO_glDepthRangedNV_t" DepthRangedNV)
       ("_ALLEGRO_glClearDepthdNV_t" ClearDepthdNV)
       ("_ALLEGRO_glDepthBoundsdNV_t" DepthBoundsdNV)
       ("_ALLEGRO_glRenderbufferStorageMultsampleCoverageNV_t"
        RenderbufferStorageMultsampleCoverageNV)
       ("_ALLEGRO_glProgramVertexLimitNV_t" ProgramVertexLimitNV)
       ("_ALLEGRO_glProgramLocalParameterI4iNV_t" ProgramLocalParameterI4iNV)
       ("_ALLEGRO_glProgramLocalParameterI4ivNV_t" ProgramLocalParameterI4ivNV)
       ("_ALLEGRO_glProgramLocalParametersI4ivNV_t"
        ProgramLocalParametersI4ivNV)
       ("_ALLEGRO_glProgramLocalParameterI4uiNV_t" ProgramLocalParameterI4uiNV)
       ("_ALLEGRO_glProgramLocalParameterI4uivNV_t"
        ProgramLocalParameterI4uivNV)
       ("_ALLEGRO_glProgramLocalParametersI4uivNV_t"
        ProgramLocalParametersI4uivNV)
       ("_ALLEGRO_glProgramEnvParameterI4iNV_t" ProgramEnvParameterI4iNV)
       ("_ALLEGRO_glProgramEnvParameterI4ivNV_t" ProgramEnvParameterI4ivNV)
       ("_ALLEGRO_glProgramEnvParametersI4ivNV_t" ProgramEnvParametersI4ivNV)
       ("_ALLEGRO_glProgramEnvParameterI4uiNV_t" ProgramEnvParameterI4uiNV)
       ("_ALLEGRO_glProgramEnvParameterI4uivNV_t" ProgramEnvParameterI4uivNV)
       ("_ALLEGRO_glProgramEnvParametersI4uivNV_t" ProgramEnvParametersI4uivNV)
       ("_ALLEGRO_glGetProgramLocalParameterIivNV_t"
        GetProgramLocalParameterIivNV)
       ("_ALLEGRO_glGetProgramLocalParameterIuivNV_t"
        GetProgramLocalParameterIuivNV)
       ("_ALLEGRO_glGetProgramEnvParameterIivNV_t" GetProgramEnvParameterIivNV)
       ("_ALLEGRO_glGetProgramEnvParameterIuivNV_t"
        GetProgramEnvParameterIuivNV)
       ("_ALLEGRO_glProgramBufferParametersfvNV_t" ProgramBufferParametersfvNV)
       ("_ALLEGRO_glProgramBufferParametersIivNV_t"
        ProgramBufferParametersIivNV)
       ("_ALLEGRO_glProgramBufferParametersIuivNV_t"
        ProgramBufferParametersIuivNV)
       ("_ALLEGRO_glBindBufferRangeNV_t" BindBufferRangeNV)
       ("_ALLEGRO_glBindBufferOffsetNV_t" BindBufferOffsetNV)
       ("_ALLEGRO_glBindBufferBaseNV_t" BindBufferBaseNV)
       ("_ALLEGRO_glTransformFeedbackAttribsNV_t" TransformFeedbackAttribsNV)
       ("_ALLEGRO_glTransformFeedbackVaryingsNV_t" TransformFeedbackVaryingsNV)
       ("_ALLEGRO_glBeginTransformFeedbackNV_t" BeginTransformFeedbackNV)
       ("_ALLEGRO_glEndTransformFeedbackNV_t" EndTransformFeedbackNV)
       ("_ALLEGRO_glGetVaryingLocationNV_t" GetVaryingLocationNV)
       ("_ALLEGRO_glGetActiveVaryingNV_t" GetActiveVaryingNV)
       ("_ALLEGRO_glActiveVaryingNV_t" ActiveVaryingNV)
       ("_ALLEGRO_glGetTransformFeedbackVaryingNV_t"
        GetTransformFeedbackVaryingNV)
       ("_ALLEGRO_glFrameTerminatorGREMEDY_t" FrameTerminatorGREMEDY)
       ("_ALLEGRO_glBeginConditionalRenderNV_t" BeginConditionalRenderNV)
       ("_ALLEGRO_glEndConditionalRenderNV_t" EndConditionalRenderNV)
       ("_ALLEGRO_glBeginTransformFeedbackEXT_t" BeginTransformFeedbackEXT)
       ("_ALLEGRO_glEndTransformFeedbackEXT_t" EndTransformFeedbackEXT)
       ("_ALLEGRO_glBindBufferRangeEXT_t" BindBufferRangeEXT)
       ("_ALLEGRO_glBindBufferOffsetEXT_t" BindBufferOffsetEXT)
       ("_ALLEGRO_glBindBufferBaseEXT_t" BindBufferBaseEXT)
       ("_ALLEGRO_glTransformFeedbackVaryingsEXT_t"
        TransformFeedbackVaryingsEXT)
       ("_ALLEGRO_glGetTransformFeedbackVaryingEXT_t"
        GetTransformFeedbackVaryingEXT)
       ("_ALLEGRO_glClientAttribDefaultEXT_t" ClientAttribDefaultEXT)
       ("_ALLEGRO_glPushClientAttribDefaultEXT_t" PushClientAttribDefaultEXT)
       ("_ALLEGRO_glMatrixLoadfEXT_t" MatrixLoadfEXT)
       ("_ALLEGRO_glMatrixLoaddEXT_t" MatrixLoaddEXT)
       ("_ALLEGRO_glMatrixMultfEXT_t" MatrixMultfEXT)
       ("_ALLEGRO_glMatrixMultdEXT_t" MatrixMultdEXT)
       ("_ALLEGRO_glMatrixLoadIdentityEXT_t" MatrixLoadIdentityEXT)
       ("_ALLEGRO_glMatrixRotatefEXT_t" MatrixRotatefEXT)
       ("_ALLEGRO_glMatrixRotatedEXT_t" MatrixRotatedEXT)
       ("_ALLEGRO_glMatrixScalefEXT_t" MatrixScalefEXT)
       ("_ALLEGRO_glMatrixScaledEXT_t" MatrixScaledEXT)
       ("_ALLEGRO_glMatrixTranslatefEXT_t" MatrixTranslatefEXT)
       ("_ALLEGRO_glMatrixTranslatedEXT_t" MatrixTranslatedEXT)
       ("_ALLEGRO_glMatrixFrustumEXT_t" MatrixFrustumEXT)
       ("_ALLEGRO_glMatrixOrthoEXT_t" MatrixOrthoEXT)
       ("_ALLEGRO_glMatrixPopEXT_t" MatrixPopEXT)
       ("_ALLEGRO_glMatrixPushEXT_t" MatrixPushEXT)
       ("_ALLEGRO_glMatrixLoadTransposefEXT_t" MatrixLoadTransposefEXT)
       ("_ALLEGRO_glMatrixLoadTransposedEXT_t" MatrixLoadTransposedEXT)
       ("_ALLEGRO_glMatrixMultTransposefEXT_t" MatrixMultTransposefEXT)
       ("_ALLEGRO_glMatrixMultTransposedEXT_t" MatrixMultTransposedEXT)
       ("_ALLEGRO_glTextureParameterfEXT_t" TextureParameterfEXT)
       ("_ALLEGRO_glTextureParameterfvEXT_t" TextureParameterfvEXT)
       ("_ALLEGRO_glTextureParameteriEXT_t" TextureParameteriEXT)
       ("_ALLEGRO_glTextureParameterivEXT_t" TextureParameterivEXT)
       ("_ALLEGRO_glTextureImage1DEXT_t" TextureImage1DEXT)
       ("_ALLEGRO_glTextureImage2DEXT_t" TextureImage2DEXT)
       ("_ALLEGRO_glTextureSubImage1DEXT_t" TextureSubImage1DEXT)
       ("_ALLEGRO_glTextureSubImage2DEXT_t" TextureSubImage2DEXT)
       ("_ALLEGRO_glCopyTextureImage1DEXT_t" CopyTextureImage1DEXT)
       ("_ALLEGRO_glCopyTextureImage2DEXT_t" CopyTextureImage2DEXT)
       ("_ALLEGRO_glCopyTextureSubImage1DEXT_t" CopyTextureSubImage1DEXT)
       ("_ALLEGRO_glCopyTextureSubImage2DEXT_t" CopyTextureSubImage2DEXT)
       ("_ALLEGRO_glGetTextureImageEXT_t" GetTextureImageEXT)
       ("_ALLEGRO_glGetTextureParameterfvEXT_t" GetTextureParameterfvEXT)
       ("_ALLEGRO_glGetTextureParameterivEXT_t" GetTextureParameterivEXT)
       ("_ALLEGRO_glGetTextureLevelParameterfvEXT_t"
        GetTextureLevelParameterfvEXT)
       ("_ALLEGRO_glGetTextureLevelParameterivEXT_t"
        GetTextureLevelParameterivEXT)
       ("_ALLEGRO_glTextureImage3DEXT_t" TextureImage3DEXT)
       ("_ALLEGRO_glTextureSubImage3DEXT_t" TextureSubImage3DEXT)
       ("_ALLEGRO_glCopyTextureSubImage3DEXT_t" CopyTextureSubImage3DEXT)
       ("_ALLEGRO_glMultiTexParameterfEXT_t" MultiTexParameterfEXT)
       ("_ALLEGRO_glMultiTexParameterfvEXT_t" MultiTexParameterfvEXT)
       ("_ALLEGRO_glMultiTexParameteriEXT_t" MultiTexParameteriEXT)
       ("_ALLEGRO_glMultiTexParameterivEXT_t" MultiTexParameterivEXT)
       ("_ALLEGRO_glMultiTexImage1DEXT_t" MultiTexImage1DEXT)
       ("_ALLEGRO_glMultiTexImage2DEXT_t" MultiTexImage2DEXT)
       ("_ALLEGRO_glMultiTexSubImage1DEXT_t" MultiTexSubImage1DEXT)
       ("_ALLEGRO_glMultiTexSubImage2DEXT_t" MultiTexSubImage2DEXT)
       ("_ALLEGRO_glCopyMultiTexImage1DEXT_t" CopyMultiTexImage1DEXT)
       ("_ALLEGRO_glCopyMultiTexImage2DEXT_t" CopyMultiTexImage2DEXT)
       ("_ALLEGRO_glCopyMultiTexSubImage1DEXT_t" CopyMultiTexSubImage1DEXT)
       ("_ALLEGRO_glCopyMultiTexSubImage2DEXT_t" CopyMultiTexSubImage2DEXT)
       ("_ALLEGRO_glGetMultiTexImageEXT_t" GetMultiTexImageEXT)
       ("_ALLEGRO_glGetMultiTexParameterfvEXT_t" GetMultiTexParameterfvEXT)
       ("_ALLEGRO_glGetMultiTexParameterivEXT_t" GetMultiTexParameterivEXT)
       ("_ALLEGRO_glGetMultiTexLevelParameterfvEXT_t"
        GetMultiTexLevelParameterfvEXT)
       ("_ALLEGRO_glGetMultiTexLevelParameterivEXT_t"
        GetMultiTexLevelParameterivEXT)
       ("_ALLEGRO_glMultiTexImage3DEXT_t" MultiTexImage3DEXT)
       ("_ALLEGRO_glMultiTexSubImage3DEXT_t" MultiTexSubImage3DEXT)
       ("_ALLEGRO_glCopyMultiTexSubImage3DEXT_t" CopyMultiTexSubImage3DEXT)
       ("_ALLEGRO_glBindMultiTextureEXT_t" BindMultiTextureEXT)
       ("_ALLEGRO_glEnableClientStateIndexedEXT_t" EnableClientStateIndexedEXT)
       ("_ALLEGRO_glDisableClientStateIndexedEXT_t"
        DisableClientStateIndexedEXT)
       ("_ALLEGRO_glMultiTexCoordPointerEXT_t" MultiTexCoordPointerEXT)
       ("_ALLEGRO_glMultiTexEnvfEXT_t" MultiTexEnvfEXT)
       ("_ALLEGRO_glMultiTexEnvfvEXT_t" MultiTexEnvfvEXT)
       ("_ALLEGRO_glMultiTexEnviEXT_t" MultiTexEnviEXT)
       ("_ALLEGRO_glMultiTexEnvivEXT_t" MultiTexEnvivEXT)
       ("_ALLEGRO_glMultiTexGendEXT_t" MultiTexGendEXT)
       ("_ALLEGRO_glMultiTexGendvEXT_t" MultiTexGendvEXT)
       ("_ALLEGRO_glMultiTexGenfEXT_t" MultiTexGenfEXT)
       ("_ALLEGRO_glMultiTexGenfvEXT_t" MultiTexGenfvEXT)
       ("_ALLEGRO_glMultiTexGeniEXT_t" MultiTexGeniEXT)
       ("_ALLEGRO_glMultiTexGenivEXT_t" MultiTexGenivEXT)
       ("_ALLEGRO_glGetMultiTexEnvfvEXT_t" GetMultiTexEnvfvEXT)
       ("_ALLEGRO_glGetMultiTexEnvivEXT_t" GetMultiTexEnvivEXT)
       ("_ALLEGRO_glGetMultiTexGendvEXT_t" GetMultiTexGendvEXT)
       ("_ALLEGRO_glGetMultiTexGenfvEXT_t" GetMultiTexGenfvEXT)
       ("_ALLEGRO_glGetMultiTexGenivEXT_t" GetMultiTexGenivEXT)
       ("_ALLEGRO_glGetFloatIndexedvEXT_t" GetFloatIndexedvEXT)
       ("_ALLEGRO_glGetDoubleIndexedvEXT_t" GetDoubleIndexedvEXT)
       ("_ALLEGRO_glGetPointerIndexedvEXT_t" GetPointerIndexedvEXT)
       ("_ALLEGRO_glCompressedTextureImage3DEXT_t" CompressedTextureImage3DEXT)
       ("_ALLEGRO_glCompressedTextureImage2DEXT_t" CompressedTextureImage2DEXT)
       ("_ALLEGRO_glCompressedTextureImage1DEXT_t" CompressedTextureImage1DEXT)
       ("_ALLEGRO_glCompressedTextureSubImage3DEXT_t"
        CompressedTextureSubImage3DEXT)
       ("_ALLEGRO_glCompressedTextureSubImage2DEXT_t"
        CompressedTextureSubImage2DEXT)
       ("_ALLEGRO_glCompressedTextureSubImage1DEXT_t"
        CompressedTextureSubImage1DEXT)
       ("_ALLEGRO_glGetCompressedTextureImageEXT_t"
        GetCompressedTextureImageEXT)
       ("_ALLEGRO_glCompressedMultiTexImage3DEXT_t"
        CompressedMultiTexImage3DEXT)
       ("_ALLEGRO_glCompressedMultiTexImage2DEXT_t"
        CompressedMultiTexImage2DEXT)
       ("_ALLEGRO_glCompressedMultiTexImage1DEXT_t"
        CompressedMultiTexImage1DEXT)
       ("_ALLEGRO_glCompressedMultiTexSubImage3DEXT_t"
        CompressedMultiTexSubImage3DEXT)
       ("_ALLEGRO_glCompressedMultiTexSubImage2DEXT_t"
        CompressedMultiTexSubImage2DEXT)
       ("_ALLEGRO_glCompressedMultiTexSubImage1DEXT_t"
        CompressedMultiTexSubImage1DEXT)
       ("_ALLEGRO_glGetCompressedMultiTexImageEXT_t"
        GetCompressedMultiTexImageEXT)
       ("_ALLEGRO_glNamedProgramStringEXT_t" NamedProgramStringEXT)
       ("_ALLEGRO_glNamedProgramLocalParameter4dEXT_t"
        NamedProgramLocalParameter4dEXT)
       ("_ALLEGRO_glNamedProgramLocalParameter4dvEXT_t"
        NamedProgramLocalParameter4dvEXT)
       ("_ALLEGRO_glNamedProgramLocalParameter4fEXT_t"
        NamedProgramLocalParameter4fEXT)
       ("_ALLEGRO_glNamedProgramLocalParameter4fvEXT_t"
        NamedProgramLocalParameter4fvEXT)
       ("_ALLEGRO_glGetNamedProgramLocalParameterdvEXT_t"
        GetNamedProgramLocalParameterdvEXT)
       ("_ALLEGRO_glGetNamedProgramLocalParameterfvEXT_t"
        GetNamedProgramLocalParameterfvEXT)
       ("_ALLEGRO_glGetNamedProgramivEXT_t" GetNamedProgramivEXT)
       ("_ALLEGRO_glGetNamedProgramStringEXT_t" GetNamedProgramStringEXT)
       ("_ALLEGRO_glNamedProgramLocalParameters4fvEXT_t"
        NamedProgramLocalParameters4fvEXT)
       ("_ALLEGRO_glNamedProgramLocalParameterI4iEXT_t"
        NamedProgramLocalParameterI4iEXT)
       ("_ALLEGRO_glNamedProgramLocalParameterI4ivEXT_t"
        NamedProgramLocalParameterI4ivEXT)
       ("_ALLEGRO_glNamedProgramLocalParametersI4ivEXT_t"
        NamedProgramLocalParametersI4ivEXT)
       ("_ALLEGRO_glNamedProgramLocalParameterI4uiEXT_t"
        NamedProgramLocalParameterI4uiEXT)
       ("_ALLEGRO_glNamedProgramLocalParameterI4uivEXT_t"
        NamedProgramLocalParameterI4uivEXT)
       ("_ALLEGRO_glNamedProgramLocalParametersI4uivEXT_t"
        NamedProgramLocalParametersI4uivEXT)
       ("_ALLEGRO_glGetNamedProgramLocalParameterIivEXT_t"
        GetNamedProgramLocalParameterIivEXT)
       ("_ALLEGRO_glGetNamedProgramLocalParameterIuivEXT_t"
        GetNamedProgramLocalParameterIuivEXT)
       ("_ALLEGRO_glTextureParameterIivEXT_t" TextureParameterIivEXT)
       ("_ALLEGRO_glTextureParameterIuivEXT_t" TextureParameterIuivEXT)
       ("_ALLEGRO_glGetTextureParameterIivEXT_t" GetTextureParameterIivEXT)
       ("_ALLEGRO_glGetTextureParameterIuivEXT_t" GetTextureParameterIuivEXT)
       ("_ALLEGRO_glMultiTexParameterIivEXT_t" MultiTexParameterIivEXT)
       ("_ALLEGRO_glMultiTexParameterIuivEXT_t" MultiTexParameterIuivEXT)
       ("_ALLEGRO_glGetMultiTexParameterIivEXT_t" GetMultiTexParameterIivEXT)
       ("_ALLEGRO_glGetMultiTexParameterIuivEXT_t" GetMultiTexParameterIuivEXT)
       ("_ALLEGRO_glProgramUniform1fEXT_t" ProgramUniform1fEXT)
       ("_ALLEGRO_glProgramUniform2fEXT_t" ProgramUniform2fEXT)
       ("_ALLEGRO_glProgramUniform3fEXT_t" ProgramUniform3fEXT)
       ("_ALLEGRO_glProgramUniform4fEXT_t" ProgramUniform4fEXT)
       ("_ALLEGRO_glProgramUniform1iEXT_t" ProgramUniform1iEXT)
       ("_ALLEGRO_glProgramUniform2iEXT_t" ProgramUniform2iEXT)
       ("_ALLEGRO_glProgramUniform3iEXT_t" ProgramUniform3iEXT)
       ("_ALLEGRO_glProgramUniform4iEXT_t" ProgramUniform4iEXT)
       ("_ALLEGRO_glProgramUniform1fvEXT_t" ProgramUniform1fvEXT)
       ("_ALLEGRO_glProgramUniform2fvEXT_t" ProgramUniform2fvEXT)
       ("_ALLEGRO_glProgramUniform3fvEXT_t" ProgramUniform3fvEXT)
       ("_ALLEGRO_glProgramUniform4fvEXT_t" ProgramUniform4fvEXT)
       ("_ALLEGRO_glProgramUniform1ivEXT_t" ProgramUniform1ivEXT)
       ("_ALLEGRO_glProgramUniform2ivEXT_t" ProgramUniform2ivEXT)
       ("_ALLEGRO_glProgramUniform3ivEXT_t" ProgramUniform3ivEXT)
       ("_ALLEGRO_glProgramUniform4ivEXT_t" ProgramUniform4ivEXT)
       ("_ALLEGRO_glProgramUniformMatrix2fvEXT_t" ProgramUniformMatrix2fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3fvEXT_t" ProgramUniformMatrix3fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4fvEXT_t" ProgramUniformMatrix4fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix2x3fvEXT_t"
        ProgramUniformMatrix2x3fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3x2fvEXT_t"
        ProgramUniformMatrix3x2fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix2x4fvEXT_t"
        ProgramUniformMatrix2x4fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4x2fvEXT_t"
        ProgramUniformMatrix4x2fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix3x4fvEXT_t"
        ProgramUniformMatrix3x4fvEXT)
       ("_ALLEGRO_glProgramUniformMatrix4x3fvEXT_t"
        ProgramUniformMatrix4x3fvEXT)
       ("_ALLEGRO_glProgramUniform1uiEXT_t" ProgramUniform1uiEXT)
       ("_ALLEGRO_glProgramUniform2uiEXT_t" ProgramUniform2uiEXT)
       ("_ALLEGRO_glProgramUniform3uiEXT_t" ProgramUniform3uiEXT)
       ("_ALLEGRO_glProgramUniform4uiEXT_t" ProgramUniform4uiEXT)
       ("_ALLEGRO_glProgramUniform1uivEXT_t" ProgramUniform1uivEXT)
       ("_ALLEGRO_glProgramUniform2uivEXT_t" ProgramUniform2uivEXT)
       ("_ALLEGRO_glProgramUniform3uivEXT_t" ProgramUniform3uivEXT)
       ("_ALLEGRO_glProgramUniform4uivEXT_t" ProgramUniform4uivEXT)
       ("_ALLEGRO_glNamedBufferDataEXT_t" NamedBufferDataEXT)
       ("_ALLEGRO_glNamedBufferSubDataEXT_t" NamedBufferSubDataEXT)
       ("_ALLEGRO_glMapNamedBufferEXT_t" MapNamedBufferEXT)
       ("_ALLEGRO_glUnmapNamedBufferEXT_t" UnmapNamedBufferEXT)
       ("_ALLEGRO_glGetNamedBufferParameterivEXT_t"
        GetNamedBufferParameterivEXT)
       ("_ALLEGRO_glGetNamedBufferPointervEXT_t" GetNamedBufferPointervEXT)
       ("_ALLEGRO_glGetNamedBufferSubDataEXT_t" GetNamedBufferSubDataEXT)
       ("_ALLEGRO_glTextureBufferEXT_t" TextureBufferEXT)
       ("_ALLEGRO_glMultiTexBufferEXT_t" MultiTexBufferEXT)
       ("_ALLEGRO_glNamedRenderbufferStorageEXT_t" NamedRenderbufferStorageEXT)
       ("_ALLEGRO_glGetNamedRenderbufferParameterivEXT_t"
        GetNamedRenderbufferParameterivEXT)
       ("_ALLEGRO_glCheckNamedFramebufferStatusEXT_t"
        CheckNamedFramebufferStatusEXT)
       ("_ALLEGRO_glNamedFramebufferTexture1DEXT_t"
        NamedFramebufferTexture1DEXT)
       ("_ALLEGRO_glNamedFramebufferTexture2DEXT_t"
        NamedFramebufferTexture2DEXT)
       ("_ALLEGRO_glNamedFramebufferTexture3DEXT_t"
        NamedFramebufferTexture3DEXT)
       ("_ALLEGRO_glNamedFramebufferRenderbufferEXT_t"
        NamedFramebufferRenderbufferEXT)
       ("_ALLEGRO_glGetNamedFramebufferAttachmentParameterivEXT_t"
        GetNamedFramebufferAttachmentParameterivEXT)
       ("_ALLEGRO_glGenerateTextureMipmapEXT_t" GenerateTextureMipmapEXT)
       ("_ALLEGRO_glGenerateMultiTexMipmapEXT_t" GenerateMultiTexMipmapEXT)
       ("_ALLEGRO_glFramebufferDrawBufferEXT_t" FramebufferDrawBufferEXT)
       ("_ALLEGRO_glFramebufferDrawBuffersEXT_t" FramebufferDrawBuffersEXT)
       ("_ALLEGRO_glFramebufferReadBufferEXT_t" FramebufferReadBufferEXT)
       ("_ALLEGRO_glGetFramebufferParameterivEXT_t"
        GetFramebufferParameterivEXT)
       ("_ALLEGRO_glNamedRenderbufferStorageMultisampleEXT_t"
        NamedRenderbufferStorageMultisampleEXT)
       ("_ALLEGRO_glNamedRenderbufferStorageMultisampleCoverageEXT_t"
        NamedRenderbufferStorageMultisampleCoverageEXT)
       ("_ALLEGRO_glNamedFramebufferTextureEXT_t" NamedFramebufferTextureEXT)
       ("_ALLEGRO_glNamedFramebufferTextureLayerEXT_t"
        NamedFramebufferTextureLayerEXT)
       ("_ALLEGRO_glNamedFramebufferTextureFaceEXT_t"
        NamedFramebufferTextureFaceEXT)
       ("_ALLEGRO_glTextureRenderbufferEXT_t" TextureRenderbufferEXT)
       ("_ALLEGRO_glMultiTexRenderbufferEXT_t" MultiTexRenderbufferEXT)
       ("_ALLEGRO_glGetMultisamplefvNV_t" GetMultisamplefvNV)
       ("_ALLEGRO_glSampleMaskIndexedNV_t" SampleMaskIndexedNV)
       ("_ALLEGRO_glTexRenderbufferNV_t" TexRenderbufferNV)
       ("_ALLEGRO_glBindTransformFeedbackNV_t" BindTransformFeedbackNV)
       ("_ALLEGRO_glDeleteTransformFeedbacksNV_t" DeleteTransformFeedbacksNV)
       ("_ALLEGRO_glGenTransformFeedbacksNV_t" GenTransformFeedbacksNV)
       ("_ALLEGRO_glIsTransformFeedbackNV_t" IsTransformFeedbackNV)
       ("_ALLEGRO_glPauseTransformFeedbackNV_t" PauseTransformFeedbackNV)
       ("_ALLEGRO_glResumeTransformFeedbackNV_t" ResumeTransformFeedbackNV)
       ("_ALLEGRO_glDrawTransformFeedbackNV_t" DrawTransformFeedbackNV)
       ("_ALLEGRO_glGetPerfMonitorGroupsAMD_t" GetPerfMonitorGroupsAMD)
       ("_ALLEGRO_glGetPerfMonitorCountersAMD_t" GetPerfMonitorCountersAMD)
       ("_ALLEGRO_glGetPerfMonitorGroupStringAMD_t"
        GetPerfMonitorGroupStringAMD)
       ("_ALLEGRO_glGetPerfMonitorCounterStringAMD_t"
        GetPerfMonitorCounterStringAMD)
       ("_ALLEGRO_glGetPerfMonitorCounterInfoAMD_t"
        GetPerfMonitorCounterInfoAMD)
       ("_ALLEGRO_glGenPerfMonitorsAMD_t" GenPerfMonitorsAMD)
       ("_ALLEGRO_glDeletePerfMonitorsAMD_t" DeletePerfMonitorsAMD)
       ("_ALLEGRO_glSelectPerfMonitorCountersAMD_t"
        SelectPerfMonitorCountersAMD)
       ("_ALLEGRO_glBeginPerfMonitorAMD_t" BeginPerfMonitorAMD)
       ("_ALLEGRO_glEndPerfMonitorAMD_t" EndPerfMonitorAMD)
       ("_ALLEGRO_glGetPerfMonitorCounterDataAMD_t"
        GetPerfMonitorCounterDataAMD)
       ("_ALLEGRO_glTessellationFactorAMD_t" TessellationFactorAMD)
       ("_ALLEGRO_glTessellationModeAMD_t" TessellationModeAMD)
       ("_ALLEGRO_glProvokingVertexEXT_t" ProvokingVertexEXT)
       ("_ALLEGRO_glBlendFuncIndexedAMD_t" BlendFuncIndexedAMD)
       ("_ALLEGRO_glBlendFuncSeparateIndexedAMD_t" BlendFuncSeparateIndexedAMD)
       ("_ALLEGRO_glBlendEquationIndexedAMD_t" BlendEquationIndexedAMD)
       ("_ALLEGRO_glBlendEquationSeparateIndexedAMD_t"
        BlendEquationSeparateIndexedAMD)
       ("_ALLEGRO_glTextureRangeAPPLE_t" TextureRangeAPPLE)
       ("_ALLEGRO_glGetTexParameterPointervAPPLE_t"
        GetTexParameterPointervAPPLE)
       ("_ALLEGRO_glEnableVertexAttribAPPLE_t" EnableVertexAttribAPPLE)
       ("_ALLEGRO_glDisableVertexAttribAPPLE_t" DisableVertexAttribAPPLE)
       ("_ALLEGRO_glIsVertexAttribEnabledAPPLE_t" IsVertexAttribEnabledAPPLE)
       ("_ALLEGRO_glMapVertexAttrib1dAPPLE_t" MapVertexAttrib1dAPPLE)
       ("_ALLEGRO_glMapVertexAttrib1fAPPLE_t" MapVertexAttrib1fAPPLE)
       ("_ALLEGRO_glMapVertexAttrib2dAPPLE_t" MapVertexAttrib2dAPPLE)
       ("_ALLEGRO_glMapVertexAttrib2fAPPLE_t" MapVertexAttrib2fAPPLE)
       ("_ALLEGRO_glObjectPurgeableAPPLE_t" ObjectPurgeableAPPLE)
       ("_ALLEGRO_glObjectUnpurgeableAPPLE_t" ObjectUnpurgeableAPPLE)
       ("_ALLEGRO_glGetObjectParameterivAPPLE_t" GetObjectParameterivAPPLE)
       ("_ALLEGRO_glBeginVideoCaptureNV_t" BeginVideoCaptureNV)
       ("_ALLEGRO_glBindVideoCaptureStreamBufferNV_t"
        BindVideoCaptureStreamBufferNV)
       ("_ALLEGRO_glBindVideoCaptureStreamTextureNV_t"
        BindVideoCaptureStreamTextureNV)
       ("_ALLEGRO_glEndVideoCaptureNV_t" EndVideoCaptureNV)
       ("_ALLEGRO_glGetVideoCaptureivNV_t" GetVideoCaptureivNV)
       ("_ALLEGRO_glGetVideoCaptureStreamivNV_t" GetVideoCaptureStreamivNV)
       ("_ALLEGRO_glGetVideoCaptureStreamfvNV_t" GetVideoCaptureStreamfvNV)
       ("_ALLEGRO_glGetVideoCaptureStreamdvNV_t" GetVideoCaptureStreamdvNV)
       ("_ALLEGRO_glVideoCaptureNV_t" VideoCaptureNV)
       ("_ALLEGRO_glVideoCaptureStreamParameterivNV_t"
        VideoCaptureStreamParameterivNV)
       ("_ALLEGRO_glVideoCaptureStreamParameterfvNV_t"
        VideoCaptureStreamParameterfvNV)
       ("_ALLEGRO_glVideoCaptureStreamParameterdvNV_t"
        VideoCaptureStreamParameterdvNV)
       ("_ALLEGRO_glUseShaderProgramEXT_t" UseShaderProgramEXT)
       ("_ALLEGRO_glActiveProgramEXT_t" ActiveProgramEXT)
       ("_ALLEGRO_glCreateShaderProgramEXT_t" CreateShaderProgramEXT)
       ("_ALLEGRO_glMakeBufferResidentNV_t" MakeBufferResidentNV)
       ("_ALLEGRO_glMakeBufferNonResidentNV_t" MakeBufferNonResidentNV)
       ("_ALLEGRO_glIsBufferResidentNV_t" IsBufferResidentNV)
       ("_ALLEGRO_glMakeNamedBufferResidentNV_t" MakeNamedBufferResidentNV)
       ("_ALLEGRO_glMakeNamedBufferNonResidentNV_t"
        MakeNamedBufferNonResidentNV)
       ("_ALLEGRO_glIsNamedBufferResidentNV_t" IsNamedBufferResidentNV)
       ("_ALLEGRO_glGetBufferParameterui64vNV_t" GetBufferParameterui64vNV)
       ("_ALLEGRO_glGetNamedBufferParameterui64vNV_t"
        GetNamedBufferParameterui64vNV)
       ("_ALLEGRO_glGetIntegerui64vNV_t" GetIntegerui64vNV)
       ("_ALLEGRO_glUniformui64NV_t" Uniformui64NV)
       ("_ALLEGRO_glUniformui64vNV_t" Uniformui64vNV)
       ("_ALLEGRO_glGetUniformui64vNV_t" GetUniformui64vNV)
       ("_ALLEGRO_glProgramUniformui64NV_t" ProgramUniformui64NV)
       ("_ALLEGRO_glProgramUniformui64vNV_t" ProgramUniformui64vNV)
       ("_ALLEGRO_glBufferAddressRangeNV_t" BufferAddressRangeNV)
       ("_ALLEGRO_glVertexFormatNV_t" VertexFormatNV)
       ("_ALLEGRO_glNormalFormatNV_t" NormalFormatNV)
       ("_ALLEGRO_glColorFormatNV_t" ColorFormatNV)
       ("_ALLEGRO_glIndexFormatNV_t" IndexFormatNV)
       ("_ALLEGRO_glTexCoordFormatNV_t" TexCoordFormatNV)
       ("_ALLEGRO_glEdgeFlagFormatNV_t" EdgeFlagFormatNV)
       ("_ALLEGRO_glSecondaryColorFormatNV_t" SecondaryColorFormatNV)
       ("_ALLEGRO_glFogCoordFormatNV_t" FogCoordFormatNV)
       ("_ALLEGRO_glVertexAttribFormatNV_t" VertexAttribFormatNV)
       ("_ALLEGRO_glVertexAttribIFormatNV_t" VertexAttribIFormatNV)
       ("_ALLEGRO_glGetIntegerui64i_vNV_t" GetIntegerui64i_vNV)
       ("_ALLEGRO_glTextureBarrierNV_t" TextureBarrierNV))
      "struct ALLEGRO_OGL_EXT_API *tmp_ =  (struct ALLEGRO_OGL_EXT_API *)C_malloc(sizeof(struct ALLEGRO_OGL_EXT_API));\ntmp_->BlendColor = BlendColor;\ntmp_->BlendEquation = BlendEquation;\ntmp_->DrawRangeElements = DrawRangeElements;\ntmp_->ColorTable = ColorTable;\ntmp_->ColorTableParameterfv = ColorTableParameterfv;\ntmp_->ColorTableParameteriv = ColorTableParameteriv;\ntmp_->CopyColorTable = CopyColorTable;\ntmp_->GetColorTable = GetColorTable;\ntmp_->GetColorTableParameterfv = GetColorTableParameterfv;\ntmp_->GetColorTableParameteriv = GetColorTableParameteriv;\ntmp_->ColorSubTable = ColorSubTable;\ntmp_->CopyColorSubTable = CopyColorSubTable;\ntmp_->TexImage3D = TexImage3D;\ntmp_->TexSubImage3D = TexSubImage3D;\ntmp_->CopyTexSubImage3D = CopyTexSubImage3D;\ntmp_->ConvolutionFilter1D = ConvolutionFilter1D;\ntmp_->ConvolutionFilter2D = ConvolutionFilter2D;\ntmp_->ConvolutionParameterf = ConvolutionParameterf;\ntmp_->ConvolutionParameterfv = ConvolutionParameterfv;\ntmp_->ConvolutionParameteri = ConvolutionParameteri;\ntmp_->ConvolutionParameteriv = ConvolutionParameteriv;\ntmp_->CopyConvolutionFilter1D = CopyConvolutionFilter1D;\ntmp_->CopyConvolutionFilter2D = CopyConvolutionFilter2D;\ntmp_->GetConvolutionFilter = GetConvolutionFilter;\ntmp_->GetConvolutionParameterfv = GetConvolutionParameterfv;\ntmp_->GetConvolutionParameteriv = GetConvolutionParameteriv;\ntmp_->GetSeparableFilter = GetSeparableFilter;\ntmp_->SeparableFilter2D = SeparableFilter2D;\ntmp_->GetHistogram = GetHistogram;\ntmp_->GetHistogramParameterfv = GetHistogramParameterfv;\ntmp_->GetHistogramParameteriv = GetHistogramParameteriv;\ntmp_->GetMinmax = GetMinmax;\ntmp_->GetMinmaxParameterfv = GetMinmaxParameterfv;\ntmp_->GetMinmaxParameteriv = GetMinmaxParameteriv;\ntmp_->Histogram = Histogram;\ntmp_->Minmax = Minmax;\ntmp_->ResetHistogram = ResetHistogram;\ntmp_->ResetMinmax = ResetMinmax;\ntmp_->ActiveTexture = ActiveTexture;\ntmp_->ClientActiveTexture = ClientActiveTexture;\ntmp_->MultiTexCoord1d = MultiTexCoord1d;\ntmp_->MultiTexCoord1dv = MultiTexCoord1dv;\ntmp_->MultiTexCoord1f = MultiTexCoord1f;\ntmp_->MultiTexCoord1fv = MultiTexCoord1fv;\ntmp_->MultiTexCoord1i = MultiTexCoord1i;\ntmp_->MultiTexCoord1iv = MultiTexCoord1iv;\ntmp_->MultiTexCoord1s = MultiTexCoord1s;\ntmp_->MultiTexCoord1sv = MultiTexCoord1sv;\ntmp_->MultiTexCoord2d = MultiTexCoord2d;\ntmp_->MultiTexCoord2dv = MultiTexCoord2dv;\ntmp_->MultiTexCoord2f = MultiTexCoord2f;\ntmp_->MultiTexCoord2fv = MultiTexCoord2fv;\ntmp_->MultiTexCoord2i = MultiTexCoord2i;\ntmp_->MultiTexCoord2iv = MultiTexCoord2iv;\ntmp_->MultiTexCoord2s = MultiTexCoord2s;\ntmp_->MultiTexCoord2sv = MultiTexCoord2sv;\ntmp_->MultiTexCoord3d = MultiTexCoord3d;\ntmp_->MultiTexCoord3dv = MultiTexCoord3dv;\ntmp_->MultiTexCoord3f = MultiTexCoord3f;\ntmp_->MultiTexCoord3fv = MultiTexCoord3fv;\ntmp_->MultiTexCoord3i = MultiTexCoord3i;\ntmp_->MultiTexCoord3iv = MultiTexCoord3iv;\ntmp_->MultiTexCoord3s = MultiTexCoord3s;\ntmp_->MultiTexCoord3sv = MultiTexCoord3sv;\ntmp_->MultiTexCoord4d = MultiTexCoord4d;\ntmp_->MultiTexCoord4dv = MultiTexCoord4dv;\ntmp_->MultiTexCoord4f = MultiTexCoord4f;\ntmp_->MultiTexCoord4fv = MultiTexCoord4fv;\ntmp_->MultiTexCoord4i = MultiTexCoord4i;\ntmp_->MultiTexCoord4iv = MultiTexCoord4iv;\ntmp_->MultiTexCoord4s = MultiTexCoord4s;\ntmp_->MultiTexCoord4sv = MultiTexCoord4sv;\ntmp_->LoadTransposeMatrixf = LoadTransposeMatrixf;\ntmp_->LoadTransposeMatrixd = LoadTransposeMatrixd;\ntmp_->MultTransposeMatrixf = MultTransposeMatrixf;\ntmp_->MultTransposeMatrixd = MultTransposeMatrixd;\ntmp_->SampleCoverage = SampleCoverage;\ntmp_->CompressedTexImage3D = CompressedTexImage3D;\ntmp_->CompressedTexImage2D = CompressedTexImage2D;\ntmp_->CompressedTexImage1D = CompressedTexImage1D;\ntmp_->CompressedTexSubImage3D = CompressedTexSubImage3D;\ntmp_->CompressedTexSubImage2D = CompressedTexSubImage2D;\ntmp_->CompressedTexSubImage1D = CompressedTexSubImage1D;\ntmp_->GetCompressedTexImage = GetCompressedTexImage;\ntmp_->BlendFuncSeparate = BlendFuncSeparate;\ntmp_->FogCoordf = FogCoordf;\ntmp_->FogCoordfv = FogCoordfv;\ntmp_->FogCoordd = FogCoordd;\ntmp_->FogCoorddv = FogCoorddv;\ntmp_->FogCoordPointer = FogCoordPointer;\ntmp_->MultiDrawArrays = MultiDrawArrays;\ntmp_->MultiDrawElements = MultiDrawElements;\ntmp_->PointParameterf = PointParameterf;\ntmp_->PointParameterfv = PointParameterfv;\ntmp_->PointParameteri = PointParameteri;\ntmp_->PointParameteriv = PointParameteriv;\ntmp_->SecondaryColor3b = SecondaryColor3b;\ntmp_->SecondaryColor3bv = SecondaryColor3bv;\ntmp_->SecondaryColor3d = SecondaryColor3d;\ntmp_->SecondaryColor3dv = SecondaryColor3dv;\ntmp_->SecondaryColor3f = SecondaryColor3f;\ntmp_->SecondaryColor3fv = SecondaryColor3fv;\ntmp_->SecondaryColor3i = SecondaryColor3i;\ntmp_->SecondaryColor3iv = SecondaryColor3iv;\ntmp_->SecondaryColor3s = SecondaryColor3s;\ntmp_->SecondaryColor3sv = SecondaryColor3sv;\ntmp_->SecondaryColor3ub = SecondaryColor3ub;\ntmp_->SecondaryColor3ubv = SecondaryColor3ubv;\ntmp_->SecondaryColor3ui = SecondaryColor3ui;\ntmp_->SecondaryColor3uiv = SecondaryColor3uiv;\ntmp_->SecondaryColor3us = SecondaryColor3us;\ntmp_->SecondaryColor3usv = SecondaryColor3usv;\ntmp_->SecondaryColorPointer = SecondaryColorPointer;\ntmp_->WindowPos2d = WindowPos2d;\ntmp_->WindowPos2dv = WindowPos2dv;\ntmp_->WindowPos2f = WindowPos2f;\ntmp_->WindowPos2fv = WindowPos2fv;\ntmp_->WindowPos2i = WindowPos2i;\ntmp_->WindowPos2iv = WindowPos2iv;\ntmp_->WindowPos2s = WindowPos2s;\ntmp_->WindowPos2sv = WindowPos2sv;\ntmp_->WindowPos3d = WindowPos3d;\ntmp_->WindowPos3dv = WindowPos3dv;\ntmp_->WindowPos3f = WindowPos3f;\ntmp_->WindowPos3fv = WindowPos3fv;\ntmp_->WindowPos3i = WindowPos3i;\ntmp_->WindowPos3iv = WindowPos3iv;\ntmp_->WindowPos3s = WindowPos3s;\ntmp_->WindowPos3sv = WindowPos3sv;\ntmp_->BindBuffer = BindBuffer;\ntmp_->DeleteBuffers = DeleteBuffers;\ntmp_->GenBuffers = GenBuffers;\ntmp_->IsBuffer = IsBuffer;\ntmp_->BufferData = BufferData;\ntmp_->BufferSubData = BufferSubData;\ntmp_->GetBufferSubData = GetBufferSubData;\ntmp_->MapBuffer = MapBuffer;\ntmp_->UnmapBuffer = UnmapBuffer;\ntmp_->GetBufferParameteriv = GetBufferParameteriv;\ntmp_->GetBufferPointerv = GetBufferPointerv;\ntmp_->GenQueries = GenQueries;\ntmp_->DeleteQueries = DeleteQueries;\ntmp_->IsQuery = IsQuery;\ntmp_->BeginQuery = BeginQuery;\ntmp_->EndQuery = EndQuery;\ntmp_->GetQueryiv = GetQueryiv;\ntmp_->GetQueryObjectiv = GetQueryObjectiv;\ntmp_->GetQueryObjectuiv = GetQueryObjectuiv;\ntmp_->BlendEquationSeparate = BlendEquationSeparate;\ntmp_->CreateProgram = CreateProgram;\ntmp_->CreateShader = CreateShader;\ntmp_->DeleteProgram = DeleteProgram;\ntmp_->DeleteShader = DeleteShader;\ntmp_->AttachShader = AttachShader;\ntmp_->DetachShader = DetachShader;\ntmp_->ShaderSource = ShaderSource;\ntmp_->CompileShader = CompileShader;\ntmp_->IsProgram = IsProgram;\ntmp_->IsShader = IsShader;\ntmp_->LinkProgram = LinkProgram;\ntmp_->UseProgram = UseProgram;\ntmp_->ValidateProgram = ValidateProgram;\ntmp_->Uniform1f = Uniform1f;\ntmp_->Uniform2f = Uniform2f;\ntmp_->Uniform3f = Uniform3f;\ntmp_->Uniform4f = Uniform4f;\ntmp_->Uniform1i = Uniform1i;\ntmp_->Uniform2i = Uniform2i;\ntmp_->Uniform3i = Uniform3i;\ntmp_->Uniform4i = Uniform4i;\ntmp_->Uniform1fv = Uniform1fv;\ntmp_->Uniform2fv = Uniform2fv;\ntmp_->Uniform3fv = Uniform3fv;\ntmp_->Uniform4fv = Uniform4fv;\ntmp_->Uniform1iv = Uniform1iv;\ntmp_->Uniform2iv = Uniform2iv;\ntmp_->Uniform3iv = Uniform3iv;\ntmp_->Uniform4iv = Uniform4iv;\ntmp_->UniformMatrix2fv = UniformMatrix2fv;\ntmp_->UniformMatrix3fv = UniformMatrix3fv;\ntmp_->UniformMatrix4fv = UniformMatrix4fv;\ntmp_->GetShaderfv = GetShaderfv;\ntmp_->GetShaderiv = GetShaderiv;\ntmp_->GetProgramfv = GetProgramfv;\ntmp_->GetProgramiv = GetProgramiv;\ntmp_->GetShaderInfoLog = GetShaderInfoLog;\ntmp_->GetProgramInfoLog = GetProgramInfoLog;\ntmp_->GetAttachedShaders = GetAttachedShaders;\ntmp_->GetUniformLocation = GetUniformLocation;\ntmp_->GetActiveUniform = GetActiveUniform;\ntmp_->GetUniformfv = GetUniformfv;\ntmp_->GetUniformiv = GetUniformiv;\ntmp_->GetShaderSource = GetShaderSource;\ntmp_->VertexAttrib1f = VertexAttrib1f;\ntmp_->VertexAttrib1s = VertexAttrib1s;\ntmp_->VertexAttrib1d = VertexAttrib1d;\ntmp_->VertexAttrib2f = VertexAttrib2f;\ntmp_->VertexAttrib2s = VertexAttrib2s;\ntmp_->VertexAttrib2d = VertexAttrib2d;\ntmp_->VertexAttrib3f = VertexAttrib3f;\ntmp_->VertexAttrib3s = VertexAttrib3s;\ntmp_->VertexAttrib3d = VertexAttrib3d;\ntmp_->VertexAttrib4f = VertexAttrib4f;\ntmp_->VertexAttrib4s = VertexAttrib4s;\ntmp_->VertexAttrib4d = VertexAttrib4d;\ntmp_->VertexAttrib4Nub = VertexAttrib4Nub;\ntmp_->VertexAttrib1fv = VertexAttrib1fv;\ntmp_->VertexAttrib1sv = VertexAttrib1sv;\ntmp_->VertexAttrib1dv = VertexAttrib1dv;\ntmp_->VertexAttrib2fv = VertexAttrib2fv;\ntmp_->VertexAttrib2sv = VertexAttrib2sv;\ntmp_->VertexAttrib2dv = VertexAttrib2dv;\ntmp_->VertexAttrib3fv = VertexAttrib3fv;\ntmp_->VertexAttrib3sv = VertexAttrib3sv;\ntmp_->VertexAttrib3dv = VertexAttrib3dv;\ntmp_->VertexAttrib4fv = VertexAttrib4fv;\ntmp_->VertexAttrib4sv = VertexAttrib4sv;\ntmp_->VertexAttrib4dv = VertexAttrib4dv;\ntmp_->VertexAttrib4iv = VertexAttrib4iv;\ntmp_->VertexAttrib4bv = VertexAttrib4bv;\ntmp_->VertexAttrib4ubv = VertexAttrib4ubv;\ntmp_->VertexAttrib4usv = VertexAttrib4usv;\ntmp_->VertexAttrib4uiv = VertexAttrib4uiv;\ntmp_->VertexAttrib4Nbv = VertexAttrib4Nbv;\ntmp_->VertexAttrib4Nsv = VertexAttrib4Nsv;\ntmp_->VertexAttrib4Niv = VertexAttrib4Niv;\ntmp_->VertexAttrib4Nubv = VertexAttrib4Nubv;\ntmp_->VertexAttrib4Nusv = VertexAttrib4Nusv;\ntmp_->VertexAttrib4Nuiv = VertexAttrib4Nuiv;\ntmp_->VertexAttribPointer = VertexAttribPointer;\ntmp_->EnableVertexAttribArray = EnableVertexAttribArray;\ntmp_->DisableVertexAttribArray = DisableVertexAttribArray;\ntmp_->BindAttribLocation = BindAttribLocation;\ntmp_->GetActiveAttrib = GetActiveAttrib;\ntmp_->GetAttribLocation = GetAttribLocation;\ntmp_->GetVertexAttribdv = GetVertexAttribdv;\ntmp_->GetVertexAttribfv = GetVertexAttribfv;\ntmp_->GetVertexAttribiv = GetVertexAttribiv;\ntmp_->GetVertexAttribPointerv = GetVertexAttribPointerv;\ntmp_->DrawBuffers = DrawBuffers;\ntmp_->StencilOpSeparate = StencilOpSeparate;\ntmp_->StencilFuncSeparate = StencilFuncSeparate;\ntmp_->StencilMaskSeparate = StencilMaskSeparate;\ntmp_->UniformMatrix2x3fv = UniformMatrix2x3fv;\ntmp_->UniformMatrix3x2fv = UniformMatrix3x2fv;\ntmp_->UniformMatrix2x4fv = UniformMatrix2x4fv;\ntmp_->UniformMatrix4x2fv = UniformMatrix4x2fv;\ntmp_->UniformMatrix3x4fv = UniformMatrix3x4fv;\ntmp_->UniformMatrix4x3fv = UniformMatrix4x3fv;\ntmp_->ColorMaski = ColorMaski;\ntmp_->GetBooleani_v = GetBooleani_v;\ntmp_->GetIntegeri_v = GetIntegeri_v;\ntmp_->Enablei = Enablei;\ntmp_->Disablei = Disablei;\ntmp_->IsEnabledi = IsEnabledi;\ntmp_->BeginTransformFeedback = BeginTransformFeedback;\ntmp_->EndTransformFeedback = EndTransformFeedback;\ntmp_->BindBufferRange = BindBufferRange;\ntmp_->BindBufferBase = BindBufferBase;\ntmp_->TransformFeedbackVaryings = TransformFeedbackVaryings;\ntmp_->GetTransformFeedbackVarying = GetTransformFeedbackVarying;\ntmp_->ClampColor = ClampColor;\ntmp_->BeginConditionalRender = BeginConditionalRender;\ntmp_->EndConditionalRender = EndConditionalRender;\ntmp_->VertexAttribI1i = VertexAttribI1i;\ntmp_->VertexAttribI2i = VertexAttribI2i;\ntmp_->VertexAttribI3i = VertexAttribI3i;\ntmp_->VertexAttribI4i = VertexAttribI4i;\ntmp_->VertexAttribI1ui = VertexAttribI1ui;\ntmp_->VertexAttribI2ui = VertexAttribI2ui;\ntmp_->VertexAttribI3ui = VertexAttribI3ui;\ntmp_->VertexAttribI4ui = VertexAttribI4ui;\ntmp_->VertexAttribI1iv = VertexAttribI1iv;\ntmp_->VertexAttribI2iv = VertexAttribI2iv;\ntmp_->VertexAttribI3iv = VertexAttribI3iv;\ntmp_->VertexAttribI4iv = VertexAttribI4iv;\ntmp_->VertexAttribI1uiv = VertexAttribI1uiv;\ntmp_->VertexAttribI2uiv = VertexAttribI2uiv;\ntmp_->VertexAttribI3uiv = VertexAttribI3uiv;\ntmp_->VertexAttribI4uiv = VertexAttribI4uiv;\ntmp_->VertexAttribI4bv = VertexAttribI4bv;\ntmp_->VertexAttribI4sv = VertexAttribI4sv;\ntmp_->VertexAttribI4ubv = VertexAttribI4ubv;\ntmp_->VertexAttribI4usv = VertexAttribI4usv;\ntmp_->VertexAttribIPointer = VertexAttribIPointer;\ntmp_->GetVertexAttribIiv = GetVertexAttribIiv;\ntmp_->GetVertexAttribIuiv = GetVertexAttribIuiv;\ntmp_->GetUniformuiv = GetUniformuiv;\ntmp_->BindFragDataLocation = BindFragDataLocation;\ntmp_->GetFragDataLocation = GetFragDataLocation;\ntmp_->Uniform1ui = Uniform1ui;\ntmp_->Uniform2ui = Uniform2ui;\ntmp_->Uniform3ui = Uniform3ui;\ntmp_->Uniform4ui = Uniform4ui;\ntmp_->Uniform1uiv = Uniform1uiv;\ntmp_->Uniform2uiv = Uniform2uiv;\ntmp_->Uniform3uiv = Uniform3uiv;\ntmp_->Uniform4uiv = Uniform4uiv;\ntmp_->TexParameterIiv = TexParameterIiv;\ntmp_->TexParameterIuiv = TexParameterIuiv;\ntmp_->GetTexParameterIiv = GetTexParameterIiv;\ntmp_->GetTexParameterIuiv = GetTexParameterIuiv;\ntmp_->ClearBufferiv = ClearBufferiv;\ntmp_->ClearBufferuiv = ClearBufferuiv;\ntmp_->ClearBufferfv = ClearBufferfv;\ntmp_->ClearBufferfi = ClearBufferfi;\ntmp_->GetStringi = GetStringi;\ntmp_->DrawArraysInstanced = DrawArraysInstanced;\ntmp_->DrawElementsInstanced = DrawElementsInstanced;\ntmp_->TexBuffer = TexBuffer;\ntmp_->PrimitiveRestartIndex = PrimitiveRestartIndex;\ntmp_->GetInteger64i_v = GetInteger64i_v;\ntmp_->GetBufferParameteri64v = GetBufferParameteri64v;\ntmp_->ProgramParameteri = ProgramParameteri;\ntmp_->FramebufferTexture = FramebufferTexture;\ntmp_->ClearBufferData = ClearBufferData;\ntmp_->ClearBufferSubData = ClearBufferSubData;\ntmp_->DispatchCompute = DispatchCompute;\ntmp_->DispatchComputeIndirect = DispatchComputeIndirect;\ntmp_->CopyImageSubData = CopyImageSubData;\ntmp_->FramebufferParameteri = FramebufferParameteri;\ntmp_->GetFramebufferParameteriv = GetFramebufferParameteriv;\ntmp_->GetInternalformati64v = GetInternalformati64v;\ntmp_->InvalidateTexSubImage = InvalidateTexSubImage;\ntmp_->InvalidateTexImage = InvalidateTexImage;\ntmp_->InvalidateBufferSubData = InvalidateBufferSubData;\ntmp_->InvalidateBufferData = InvalidateBufferData;\ntmp_->InvalidateFramebuffer = InvalidateFramebuffer;\ntmp_->InvalidateSubFramebuffer = InvalidateSubFramebuffer;\ntmp_->MultiDrawArraysIndirect = MultiDrawArraysIndirect;\ntmp_->MultiDrawElementsIndirect = MultiDrawElementsIndirect;\ntmp_->GetProgramInterfaceiv = GetProgramInterfaceiv;\ntmp_->GetProgramResourceIndex = GetProgramResourceIndex;\ntmp_->GetProgramResourceName = GetProgramResourceName;\ntmp_->GetProgramResourceiv = GetProgramResourceiv;\ntmp_->GetProgramResourceLocation = GetProgramResourceLocation;\ntmp_->GetProgramResourceLocationIndex = GetProgramResourceLocationIndex;\ntmp_->ShaderStorageBlockBinding = ShaderStorageBlockBinding;\ntmp_->TexBufferRange = TexBufferRange;\ntmp_->TexStorage2DMultisample = TexStorage2DMultisample;\ntmp_->TexStorage3DMultisample = TexStorage3DMultisample;\ntmp_->TextureView = TextureView;\ntmp_->BindVertexBuffer = BindVertexBuffer;\ntmp_->VertexAttribFormat = VertexAttribFormat;\ntmp_->VertexAttribIFormat = VertexAttribIFormat;\ntmp_->VertexAttribLFormat = VertexAttribLFormat;\ntmp_->VertexAttribBinding = VertexAttribBinding;\ntmp_->VertexBindingDivisor = VertexBindingDivisor;\ntmp_->DebugMessageControl = DebugMessageControl;\ntmp_->DebugMessageInsert = DebugMessageInsert;\ntmp_->DebugMessageCallback = DebugMessageCallback;\ntmp_->GetDebugMessageLog = GetDebugMessageLog;\ntmp_->PushDebugGroup = PushDebugGroup;\ntmp_->PopDebugGroup = PopDebugGroup;\ntmp_->ObjectLabel = ObjectLabel;\ntmp_->GetObjectLabel = GetObjectLabel;\ntmp_->ObjectPtrLabel = ObjectPtrLabel;\ntmp_->GetObjectPtrLabel = GetObjectPtrLabel;\ntmp_->ActiveTextureARB = ActiveTextureARB;\ntmp_->ClientActiveTextureARB = ClientActiveTextureARB;\ntmp_->MultiTexCoord1dARB = MultiTexCoord1dARB;\ntmp_->MultiTexCoord1dvARB = MultiTexCoord1dvARB;\ntmp_->MultiTexCoord1fARB = MultiTexCoord1fARB;\ntmp_->MultiTexCoord1fvARB = MultiTexCoord1fvARB;\ntmp_->MultiTexCoord1iARB = MultiTexCoord1iARB;\ntmp_->MultiTexCoord1ivARB = MultiTexCoord1ivARB;\ntmp_->MultiTexCoord1sARB = MultiTexCoord1sARB;\ntmp_->MultiTexCoord1svARB = MultiTexCoord1svARB;\ntmp_->MultiTexCoord2dARB = MultiTexCoord2dARB;\ntmp_->MultiTexCoord2dvARB = MultiTexCoord2dvARB;\ntmp_->MultiTexCoord2fARB = MultiTexCoord2fARB;\ntmp_->MultiTexCoord2fvARB = MultiTexCoord2fvARB;\ntmp_->MultiTexCoord2iARB = MultiTexCoord2iARB;\ntmp_->MultiTexCoord2ivARB = MultiTexCoord2ivARB;\ntmp_->MultiTexCoord2sARB = MultiTexCoord2sARB;\ntmp_->MultiTexCoord2svARB = MultiTexCoord2svARB;\ntmp_->MultiTexCoord3dARB = MultiTexCoord3dARB;\ntmp_->MultiTexCoord3dvARB = MultiTexCoord3dvARB;\ntmp_->MultiTexCoord3fARB = MultiTexCoord3fARB;\ntmp_->MultiTexCoord3fvARB = MultiTexCoord3fvARB;\ntmp_->MultiTexCoord3iARB = MultiTexCoord3iARB;\ntmp_->MultiTexCoord3ivARB = MultiTexCoord3ivARB;\ntmp_->MultiTexCoord3sARB = MultiTexCoord3sARB;\ntmp_->MultiTexCoord3svARB = MultiTexCoord3svARB;\ntmp_->MultiTexCoord4dARB = MultiTexCoord4dARB;\ntmp_->MultiTexCoord4dvARB = MultiTexCoord4dvARB;\ntmp_->MultiTexCoord4fARB = MultiTexCoord4fARB;\ntmp_->MultiTexCoord4fvARB = MultiTexCoord4fvARB;\ntmp_->MultiTexCoord4iARB = MultiTexCoord4iARB;\ntmp_->MultiTexCoord4ivARB = MultiTexCoord4ivARB;\ntmp_->MultiTexCoord4sARB = MultiTexCoord4sARB;\ntmp_->MultiTexCoord4svARB = MultiTexCoord4svARB;\ntmp_->LoadTransposeMatrixfARB = LoadTransposeMatrixfARB;\ntmp_->LoadTransposeMatrixdARB = LoadTransposeMatrixdARB;\ntmp_->MultTransposeMatrixfARB = MultTransposeMatrixfARB;\ntmp_->MultTransposeMatrixdARB = MultTransposeMatrixdARB;\ntmp_->SampleCoverageARB = SampleCoverageARB;\ntmp_->CompressedTexImage3DARB = CompressedTexImage3DARB;\ntmp_->CompressedTexImage2DARB = CompressedTexImage2DARB;\ntmp_->CompressedTexImage1DARB = CompressedTexImage1DARB;\ntmp_->CompressedTexSubImage3DARB = CompressedTexSubImage3DARB;\ntmp_->CompressedTexSubImage2DARB = CompressedTexSubImage2DARB;\ntmp_->CompressedTexSubImage1DARB = CompressedTexSubImage1DARB;\ntmp_->GetCompressedTexImageARB = GetCompressedTexImageARB;\ntmp_->PointParameterfARB = PointParameterfARB;\ntmp_->PointParameterfvARB = PointParameterfvARB;\ntmp_->WeightbvARB = WeightbvARB;\ntmp_->WeightsvARB = WeightsvARB;\ntmp_->WeightivARB = WeightivARB;\ntmp_->WeightfvARB = WeightfvARB;\ntmp_->WeightdvARB = WeightdvARB;\ntmp_->WeightubvARB = WeightubvARB;\ntmp_->WeightusvARB = WeightusvARB;\ntmp_->WeightuivARB = WeightuivARB;\ntmp_->WeightPointerARB = WeightPointerARB;\ntmp_->VertexBlendARB = VertexBlendARB;\ntmp_->CurrentPaletteMatrixARB = CurrentPaletteMatrixARB;\ntmp_->MatrixIndexubvARB = MatrixIndexubvARB;\ntmp_->MatrixIndexusvARB = MatrixIndexusvARB;\ntmp_->MatrixIndexuivARB = MatrixIndexuivARB;\ntmp_->MatrixIndexPointerARB = MatrixIndexPointerARB;\ntmp_->WindowPos2dARB = WindowPos2dARB;\ntmp_->WindowPos2dvARB = WindowPos2dvARB;\ntmp_->WindowPos2fARB = WindowPos2fARB;\ntmp_->WindowPos2fvARB = WindowPos2fvARB;\ntmp_->WindowPos2iARB = WindowPos2iARB;\ntmp_->WindowPos2ivARB = WindowPos2ivARB;\ntmp_->WindowPos2sARB = WindowPos2sARB;\ntmp_->WindowPos2svARB = WindowPos2svARB;\ntmp_->WindowPos3dARB = WindowPos3dARB;\ntmp_->WindowPos3dvARB = WindowPos3dvARB;\ntmp_->WindowPos3fARB = WindowPos3fARB;\ntmp_->WindowPos3fvARB = WindowPos3fvARB;\ntmp_->WindowPos3iARB = WindowPos3iARB;\ntmp_->WindowPos3ivARB = WindowPos3ivARB;\ntmp_->WindowPos3sARB = WindowPos3sARB;\ntmp_->WindowPos3svARB = WindowPos3svARB;\ntmp_->VertexAttrib1dARB = VertexAttrib1dARB;\ntmp_->VertexAttrib1dvARB = VertexAttrib1dvARB;\ntmp_->VertexAttrib1fARB = VertexAttrib1fARB;\ntmp_->VertexAttrib1fvARB = VertexAttrib1fvARB;\ntmp_->VertexAttrib1sARB = VertexAttrib1sARB;\ntmp_->VertexAttrib1svARB = VertexAttrib1svARB;\ntmp_->VertexAttrib2dARB = VertexAttrib2dARB;\ntmp_->VertexAttrib2dvARB = VertexAttrib2dvARB;\ntmp_->VertexAttrib2fARB = VertexAttrib2fARB;\ntmp_->VertexAttrib2fvARB = VertexAttrib2fvARB;\ntmp_->VertexAttrib2sARB = VertexAttrib2sARB;\ntmp_->VertexAttrib2svARB = VertexAttrib2svARB;\ntmp_->VertexAttrib3dARB = VertexAttrib3dARB;\ntmp_->VertexAttrib3dvARB = VertexAttrib3dvARB;\ntmp_->VertexAttrib3fARB = VertexAttrib3fARB;\ntmp_->VertexAttrib3fvARB = VertexAttrib3fvARB;\ntmp_->VertexAttrib3sARB = VertexAttrib3sARB;\ntmp_->VertexAttrib3svARB = VertexAttrib3svARB;\ntmp_->VertexAttrib4NbvARB = VertexAttrib4NbvARB;\ntmp_->VertexAttrib4NivARB = VertexAttrib4NivARB;\ntmp_->VertexAttrib4NsvARB = VertexAttrib4NsvARB;\ntmp_->VertexAttrib4NubARB = VertexAttrib4NubARB;\ntmp_->VertexAttrib4NubvARB = VertexAttrib4NubvARB;\ntmp_->VertexAttrib4NuivARB = VertexAttrib4NuivARB;\ntmp_->VertexAttrib4NusvARB = VertexAttrib4NusvARB;\ntmp_->VertexAttrib4bvARB = VertexAttrib4bvARB;\ntmp_->VertexAttrib4dARB = VertexAttrib4dARB;\ntmp_->VertexAttrib4dvARB = VertexAttrib4dvARB;\ntmp_->VertexAttrib4fARB = VertexAttrib4fARB;\ntmp_->VertexAttrib4fvARB = VertexAttrib4fvARB;\ntmp_->VertexAttrib4ivARB = VertexAttrib4ivARB;\ntmp_->VertexAttrib4sARB = VertexAttrib4sARB;\ntmp_->VertexAttrib4svARB = VertexAttrib4svARB;\ntmp_->VertexAttrib4ubvARB = VertexAttrib4ubvARB;\ntmp_->VertexAttrib4uivARB = VertexAttrib4uivARB;\ntmp_->VertexAttrib4usvARB = VertexAttrib4usvARB;\ntmp_->VertexAttribPointerARB = VertexAttribPointerARB;\ntmp_->EnableVertexAttribArrayARB = EnableVertexAttribArrayARB;\ntmp_->DisableVertexAttribArrayARB = DisableVertexAttribArrayARB;\ntmp_->ProgramStringARB = ProgramStringARB;\ntmp_->BindProgramARB = BindProgramARB;\ntmp_->DeleteProgramsARB = DeleteProgramsARB;\ntmp_->GenProgramsARB = GenProgramsARB;\ntmp_->ProgramEnvParameter4dARB = ProgramEnvParameter4dARB;\ntmp_->ProgramEnvParameter4dvARB = ProgramEnvParameter4dvARB;\ntmp_->ProgramEnvParameter4fARB = ProgramEnvParameter4fARB;\ntmp_->ProgramEnvParameter4fvARB = ProgramEnvParameter4fvARB;\ntmp_->ProgramLocalParameter4dARB = ProgramLocalParameter4dARB;\ntmp_->ProgramLocalParameter4dvARB = ProgramLocalParameter4dvARB;\ntmp_->ProgramLocalParameter4fARB = ProgramLocalParameter4fARB;\ntmp_->ProgramLocalParameter4fvARB = ProgramLocalParameter4fvARB;\ntmp_->GetProgramEnvParameterdvARB = GetProgramEnvParameterdvARB;\ntmp_->GetProgramEnvParameterfvARB = GetProgramEnvParameterfvARB;\ntmp_->GetProgramLocalParameterdvARB = GetProgramLocalParameterdvARB;\ntmp_->GetProgramLocalParameterfvARB = GetProgramLocalParameterfvARB;\ntmp_->GetProgramivARB = GetProgramivARB;\ntmp_->GetProgramStringARB = GetProgramStringARB;\ntmp_->GetVertexAttribdvARB = GetVertexAttribdvARB;\ntmp_->GetVertexAttribfvARB = GetVertexAttribfvARB;\ntmp_->GetVertexAttribivARB = GetVertexAttribivARB;\ntmp_->GetVertexAttribPointervARB = GetVertexAttribPointervARB;\ntmp_->IsProgramARB = IsProgramARB;\ntmp_->BindBufferARB = BindBufferARB;\ntmp_->DeleteBuffersARB = DeleteBuffersARB;\ntmp_->GenBuffersARB = GenBuffersARB;\ntmp_->IsBufferARB = IsBufferARB;\ntmp_->BufferDataARB = BufferDataARB;\ntmp_->BufferSubDataARB = BufferSubDataARB;\ntmp_->GetBufferSubDataARB = GetBufferSubDataARB;\ntmp_->MapBufferARB = MapBufferARB;\ntmp_->UnmapBufferARB = UnmapBufferARB;\ntmp_->GetBufferParameterivARB = GetBufferParameterivARB;\ntmp_->GetBufferPointervARB = GetBufferPointervARB;\ntmp_->GenQueriesARB = GenQueriesARB;\ntmp_->DeleteQueriesARB = DeleteQueriesARB;\ntmp_->IsQueryARB = IsQueryARB;\ntmp_->BeginQueryARB = BeginQueryARB;\ntmp_->EndQueryARB = EndQueryARB;\ntmp_->GetQueryivARB = GetQueryivARB;\ntmp_->GetQueryObjectivARB = GetQueryObjectivARB;\ntmp_->GetQueryObjectuivARB = GetQueryObjectuivARB;\ntmp_->DeleteObjectARB = DeleteObjectARB;\ntmp_->GetHandleARB = GetHandleARB;\ntmp_->DetachObjectARB = DetachObjectARB;\ntmp_->CreateShaderObjectARB = CreateShaderObjectARB;\ntmp_->ShaderSourceARB = ShaderSourceARB;\ntmp_->CompileShaderARB = CompileShaderARB;\ntmp_->CreateProgramObjectARB = CreateProgramObjectARB;\ntmp_->AttachObjectARB = AttachObjectARB;\ntmp_->LinkProgramARB = LinkProgramARB;\ntmp_->UseProgramObjectARB = UseProgramObjectARB;\ntmp_->ValidateProgramARB = ValidateProgramARB;\ntmp_->Uniform1fARB = Uniform1fARB;\ntmp_->Uniform2fARB = Uniform2fARB;\ntmp_->Uniform3fARB = Uniform3fARB;\ntmp_->Uniform4fARB = Uniform4fARB;\ntmp_->Uniform1iARB = Uniform1iARB;\ntmp_->Uniform2iARB = Uniform2iARB;\ntmp_->Uniform3iARB = Uniform3iARB;\ntmp_->Uniform4iARB = Uniform4iARB;\ntmp_->Uniform1fvARB = Uniform1fvARB;\ntmp_->Uniform2fvARB = Uniform2fvARB;\ntmp_->Uniform3fvARB = Uniform3fvARB;\ntmp_->Uniform4fvARB = Uniform4fvARB;\ntmp_->Uniform1ivARB = Uniform1ivARB;\ntmp_->Uniform2ivARB = Uniform2ivARB;\ntmp_->Uniform3ivARB = Uniform3ivARB;\ntmp_->Uniform4ivARB = Uniform4ivARB;\ntmp_->UniformMatrix2fvARB = UniformMatrix2fvARB;\ntmp_->UniformMatrix3fvARB = UniformMatrix3fvARB;\ntmp_->UniformMatrix4fvARB = UniformMatrix4fvARB;\ntmp_->GetObjectParameterfvARB = GetObjectParameterfvARB;\ntmp_->GetObjectParameterivARB = GetObjectParameterivARB;\ntmp_->GetInfoLogARB = GetInfoLogARB;\ntmp_->GetAttachedObjectsARB = GetAttachedObjectsARB;\ntmp_->GetUniformLocationARB = GetUniformLocationARB;\ntmp_->GetActiveUniformARB = GetActiveUniformARB;\ntmp_->GetUniformfvARB = GetUniformfvARB;\ntmp_->GetUniformivARB = GetUniformivARB;\ntmp_->GetShaderSourceARB = GetShaderSourceARB;\ntmp_->BindAttribLocationARB = BindAttribLocationARB;\ntmp_->GetActiveAttribARB = GetActiveAttribARB;\ntmp_->GetAttribLocationARB = GetAttribLocationARB;\ntmp_->DrawBuffersARB = DrawBuffersARB;\ntmp_->ClampColorARB = ClampColorARB;\ntmp_->DrawArraysInstancedARB = DrawArraysInstancedARB;\ntmp_->DrawElementsInstancedARB = DrawElementsInstancedARB;\ntmp_->IsRenderbuffer = IsRenderbuffer;\ntmp_->BindRenderbuffer = BindRenderbuffer;\ntmp_->DeleteRenderbuffers = DeleteRenderbuffers;\ntmp_->GenRenderbuffers = GenRenderbuffers;\ntmp_->RenderbufferStorage = RenderbufferStorage;\ntmp_->GetRenderbufferParameteriv = GetRenderbufferParameteriv;\ntmp_->IsFramebuffer = IsFramebuffer;\ntmp_->BindFramebuffer = BindFramebuffer;\ntmp_->DeleteFramebuffers = DeleteFramebuffers;\ntmp_->GenFramebuffers = GenFramebuffers;\ntmp_->CheckFramebufferStatus = CheckFramebufferStatus;\ntmp_->FramebufferTexture1D = FramebufferTexture1D;\ntmp_->FramebufferTexture2D = FramebufferTexture2D;\ntmp_->FramebufferTexture3D = FramebufferTexture3D;\ntmp_->FramebufferRenderbuffer = FramebufferRenderbuffer;\ntmp_->GetFramebufferAttachmentParameteriv = GetFramebufferAttachmentParameteriv;\ntmp_->GenerateMipmap = GenerateMipmap;\ntmp_->BlitFramebuffer = BlitFramebuffer;\ntmp_->RenderbufferStorageMultisample = RenderbufferStorageMultisample;\ntmp_->FramebufferTextureLayer = FramebufferTextureLayer;\ntmp_->ProgramParameteriARB = ProgramParameteriARB;\ntmp_->FramebufferTextureARB = FramebufferTextureARB;\ntmp_->FramebufferTextureLayerARB = FramebufferTextureLayerARB;\ntmp_->FramebufferTextureFaceARB = FramebufferTextureFaceARB;\ntmp_->VertexAttribDivisor = VertexAttribDivisor;\ntmp_->MapBufferRange = MapBufferRange;\ntmp_->FlushMappedBufferRange = FlushMappedBufferRange;\ntmp_->TexBufferARB = TexBufferARB;\ntmp_->BindVertexArray = BindVertexArray;\ntmp_->DeleteVertexArrays = DeleteVertexArrays;\ntmp_->GenVertexArrays = GenVertexArrays;\ntmp_->IsVertexArray = IsVertexArray;\ntmp_->GetUniformIndices = GetUniformIndices;\ntmp_->GetActiveUniformsiv = GetActiveUniformsiv;\ntmp_->GetActiveUniformName = GetActiveUniformName;\ntmp_->GetUniformBlockIndex = GetUniformBlockIndex;\ntmp_->GetActiveUniformBlockiv = GetActiveUniformBlockiv;\ntmp_->GetActiveUniformBlockName = GetActiveUniformBlockName;\ntmp_->UniformBlockBinding = UniformBlockBinding;\ntmp_->CopyBufferSubData = CopyBufferSubData;\ntmp_->DrawElementsBaseVertex = DrawElementsBaseVertex;\ntmp_->DrawRangeElementsBaseVertex = DrawRangeElementsBaseVertex;\ntmp_->DrawElementsInstancedBaseVertex = DrawElementsInstancedBaseVertex;\ntmp_->MultiDrawElementsBaseVertex = MultiDrawElementsBaseVertex;\ntmp_->ProvokingVertex = ProvokingVertex;\ntmp_->FenceSync = FenceSync;\ntmp_->IsSync = IsSync;\ntmp_->DeleteSync = DeleteSync;\ntmp_->ClientWaitSync = ClientWaitSync;\ntmp_->WaitSync = WaitSync;\ntmp_->GetInteger64v = GetInteger64v;\ntmp_->GetSynciv = GetSynciv;\ntmp_->TexImage2DMultisample = TexImage2DMultisample;\ntmp_->TexImage3DMultisample = TexImage3DMultisample;\ntmp_->GetMultisamplefv = GetMultisamplefv;\ntmp_->SampleMaski = SampleMaski;\ntmp_->BlendEquationi = BlendEquationi;\ntmp_->BlendEquationSeparatei = BlendEquationSeparatei;\ntmp_->BlendFunci = BlendFunci;\ntmp_->BlendFuncSeparatei = BlendFuncSeparatei;\ntmp_->MinSampleShading = MinSampleShading;\ntmp_->NamedStringARB = NamedStringARB;\ntmp_->DeleteNamedStringARB = DeleteNamedStringARB;\ntmp_->CompileShaderIncludeARB = CompileShaderIncludeARB;\ntmp_->IsNamedStringARB = IsNamedStringARB;\ntmp_->GetNamedStringARB = GetNamedStringARB;\ntmp_->GetNamedStringivARB = GetNamedStringivARB;\ntmp_->BindFragDataLocationIndexed = BindFragDataLocationIndexed;\ntmp_->GetFragDataIndex = GetFragDataIndex;\ntmp_->GenSamplers = GenSamplers;\ntmp_->DeleteSamplers = DeleteSamplers;\ntmp_->IsSampler = IsSampler;\ntmp_->BindSampler = BindSampler;\ntmp_->SamplerParameteri = SamplerParameteri;\ntmp_->SamplerParameteriv = SamplerParameteriv;\ntmp_->SamplerParameterf = SamplerParameterf;\ntmp_->SamplerParameterfv = SamplerParameterfv;\ntmp_->SamplerParameterIiv = SamplerParameterIiv;\ntmp_->SamplerParameterIuiv = SamplerParameterIuiv;\ntmp_->GetSamplerParameteriv = GetSamplerParameteriv;\ntmp_->GetSamplerParameterIiv = GetSamplerParameterIiv;\ntmp_->GetSamplerParameterfv = GetSamplerParameterfv;\ntmp_->GetSamplerParameterIfv = GetSamplerParameterIfv;\ntmp_->QueryCounter = QueryCounter;\ntmp_->GetQueryObjecti64v = GetQueryObjecti64v;\ntmp_->GetQueryObjectui64v = GetQueryObjectui64v;\ntmp_->VertexP2ui = VertexP2ui;\ntmp_->VertexP2uiv = VertexP2uiv;\ntmp_->VertexP3ui = VertexP3ui;\ntmp_->VertexP3uiv = VertexP3uiv;\ntmp_->VertexP4ui = VertexP4ui;\ntmp_->VertexP4uiv = VertexP4uiv;\ntmp_->TexCoordP1ui = TexCoordP1ui;\ntmp_->TexCoordP1uiv = TexCoordP1uiv;\ntmp_->TexCoordP2ui = TexCoordP2ui;\ntmp_->TexCoordP2uiv = TexCoordP2uiv;\ntmp_->TexCoordP3ui = TexCoordP3ui;\ntmp_->TexCoordP3uiv = TexCoordP3uiv;\ntmp_->TexCoordP4ui = TexCoordP4ui;\ntmp_->TexCoordP4uiv = TexCoordP4uiv;\ntmp_->MultiTexCoordP1ui = MultiTexCoordP1ui;\ntmp_->MultiTexCoordP1uiv = MultiTexCoordP1uiv;\ntmp_->MultiTexCoordP2ui = MultiTexCoordP2ui;\ntmp_->MultiTexCoordP2uiv = MultiTexCoordP2uiv;\ntmp_->MultiTexCoordP3ui = MultiTexCoordP3ui;\ntmp_->MultiTexCoordP3uiv = MultiTexCoordP3uiv;\ntmp_->MultiTexCoordP4ui = MultiTexCoordP4ui;\ntmp_->MultiTexCoordP4uiv = MultiTexCoordP4uiv;\ntmp_->NormalP3ui = NormalP3ui;\ntmp_->NormalP3uiv = NormalP3uiv;\ntmp_->ColorP3ui = ColorP3ui;\ntmp_->ColorP3uiv = ColorP3uiv;\ntmp_->ColorP4ui = ColorP4ui;\ntmp_->ColorP4uiv = ColorP4uiv;\ntmp_->SecondaryColorP3ui = SecondaryColorP3ui;\ntmp_->SecondaryColorP3uiv = SecondaryColorP3uiv;\ntmp_->VertexAttribP1ui = VertexAttribP1ui;\ntmp_->VertexAttribP1uiv = VertexAttribP1uiv;\ntmp_->VertexAttribP2ui = VertexAttribP2ui;\ntmp_->VertexAttribP2uiv = VertexAttribP2uiv;\ntmp_->VertexAttribP3ui = VertexAttribP3ui;\ntmp_->VertexAttribP3uiv = VertexAttribP3uiv;\ntmp_->VertexAttribP4ui = VertexAttribP4ui;\ntmp_->VertexAttribP4uiv = VertexAttribP4uiv;\ntmp_->DrawArraysIndirect = DrawArraysIndirect;\ntmp_->DrawElementsIndirect = DrawElementsIndirect;\ntmp_->Uniform1d = Uniform1d;\ntmp_->Uniform2d = Uniform2d;\ntmp_->Uniform3d = Uniform3d;\ntmp_->Uniform4d = Uniform4d;\ntmp_->Uniform1dv = Uniform1dv;\ntmp_->Uniform2dv = Uniform2dv;\ntmp_->Uniform3dv = Uniform3dv;\ntmp_->Uniform4dv = Uniform4dv;\ntmp_->UniformMatrix2dv = UniformMatrix2dv;\ntmp_->UniformMatrix3dv = UniformMatrix3dv;\ntmp_->UniformMatrix4dv = UniformMatrix4dv;\ntmp_->UniformMatrix2x3dv = UniformMatrix2x3dv;\ntmp_->UniformMatrix2x4dv = UniformMatrix2x4dv;\ntmp_->UniformMatrix3x2dv = UniformMatrix3x2dv;\ntmp_->UniformMatrix3x4dv = UniformMatrix3x4dv;\ntmp_->UniformMatrix4x2dv = UniformMatrix4x2dv;\ntmp_->UniformMatrix4x3dv = UniformMatrix4x3dv;\ntmp_->GetUniformdv = GetUniformdv;\ntmp_->ProgramUniform1dEXT = ProgramUniform1dEXT;\ntmp_->ProgramUniform2dEXT = ProgramUniform2dEXT;\ntmp_->ProgramUniform3dEXT = ProgramUniform3dEXT;\ntmp_->ProgramUniform4dEXT = ProgramUniform4dEXT;\ntmp_->ProgramUniform1dvEXT = ProgramUniform1dvEXT;\ntmp_->ProgramUniform2dvEXT = ProgramUniform2dvEXT;\ntmp_->ProgramUniform3dvEXT = ProgramUniform3dvEXT;\ntmp_->ProgramUniform4dvEXT = ProgramUniform4dvEXT;\ntmp_->ProgramUniformMatrix2dvEXT = ProgramUniformMatrix2dvEXT;\ntmp_->ProgramUniformMatrix3dvEXT = ProgramUniformMatrix3dvEXT;\ntmp_->ProgramUniformMatrix4dvEXT = ProgramUniformMatrix4dvEXT;\ntmp_->ProgramUniformMatrix2x3dvEXT = ProgramUniformMatrix2x3dvEXT;\ntmp_->ProgramUniformMatrix2x4dvEXT = ProgramUniformMatrix2x4dvEXT;\ntmp_->ProgramUniformMatrix3x2dvEXT = ProgramUniformMatrix3x2dvEXT;\ntmp_->ProgramUniformMatrix3x4dvEXT = ProgramUniformMatrix3x4dvEXT;\ntmp_->ProgramUniformMatrix4x2dvEXT = ProgramUniformMatrix4x2dvEXT;\ntmp_->ProgramUniformMatrix4x3dvEXT = ProgramUniformMatrix4x3dvEXT;\ntmp_->GetSubroutineUniformLocation = GetSubroutineUniformLocation;\ntmp_->GetSubroutineIndex = GetSubroutineIndex;\ntmp_->GetActiveSubroutineUniformiv = GetActiveSubroutineUniformiv;\ntmp_->GetActiveSubroutineUniformName = GetActiveSubroutineUniformName;\ntmp_->GetActiveSubroutineName = GetActiveSubroutineName;\ntmp_->UniformSubroutinesuiv = UniformSubroutinesuiv;\ntmp_->GetUniformSubroutineuiv = GetUniformSubroutineuiv;\ntmp_->GetProgramStageiv = GetProgramStageiv;\ntmp_->PatchParameteri = PatchParameteri;\ntmp_->PatchParameterfv = PatchParameterfv;\ntmp_->BindTransformFeedback = BindTransformFeedback;\ntmp_->DeleteTransformFeedbacks = DeleteTransformFeedbacks;\ntmp_->GenTransformFeedbacks = GenTransformFeedbacks;\ntmp_->IsTransformFeedback = IsTransformFeedback;\ntmp_->PauseTransformFeedback = PauseTransformFeedback;\ntmp_->ResumeTransformFeedback = ResumeTransformFeedback;\ntmp_->DrawTransformFeedback = DrawTransformFeedback;\ntmp_->DrawTransformFeedbackStream = DrawTransformFeedbackStream;\ntmp_->BeginQueryIndexed = BeginQueryIndexed;\ntmp_->EndQueryIndexed = EndQueryIndexed;\ntmp_->GetQueryIndexediv = GetQueryIndexediv;\ntmp_->BlendColorEXT = BlendColorEXT;\ntmp_->PolygonOffsetEXT = PolygonOffsetEXT;\ntmp_->TexImage3DEXT = TexImage3DEXT;\ntmp_->TexSubImage3DEXT = TexSubImage3DEXT;\ntmp_->GetTexFilterFuncSGIS = GetTexFilterFuncSGIS;\ntmp_->TexFilterFuncSGIS = TexFilterFuncSGIS;\ntmp_->TexSubImage1DEXT = TexSubImage1DEXT;\ntmp_->TexSubImage2DEXT = TexSubImage2DEXT;\ntmp_->CopyTexImage1DEXT = CopyTexImage1DEXT;\ntmp_->CopyTexImage2DEXT = CopyTexImage2DEXT;\ntmp_->CopyTexSubImage1DEXT = CopyTexSubImage1DEXT;\ntmp_->CopyTexSubImage2DEXT = CopyTexSubImage2DEXT;\ntmp_->CopyTexSubImage3DEXT = CopyTexSubImage3DEXT;\ntmp_->GetHistogramEXT = GetHistogramEXT;\ntmp_->GetHistogramParameterfvEXT = GetHistogramParameterfvEXT;\ntmp_->GetHistogramParameterivEXT = GetHistogramParameterivEXT;\ntmp_->GetMinmaxEXT = GetMinmaxEXT;\ntmp_->GetMinmaxParameterfvEXT = GetMinmaxParameterfvEXT;\ntmp_->GetMinmaxParameterivEXT = GetMinmaxParameterivEXT;\ntmp_->HistogramEXT = HistogramEXT;\ntmp_->MinmaxEXT = MinmaxEXT;\ntmp_->ResetHistogramEXT = ResetHistogramEXT;\ntmp_->ResetMinmaxEXT = ResetMinmaxEXT;\ntmp_->ConvolutionFilter1DEXT = ConvolutionFilter1DEXT;\ntmp_->ConvolutionFilter2DEXT = ConvolutionFilter2DEXT;\ntmp_->ConvolutionParameterfEXT = ConvolutionParameterfEXT;\ntmp_->ConvolutionParameterfvEXT = ConvolutionParameterfvEXT;\ntmp_->ConvolutionParameteriEXT = ConvolutionParameteriEXT;\ntmp_->ConvolutionParameterivEXT = ConvolutionParameterivEXT;\ntmp_->CopyConvolutionFilter1DEXT = CopyConvolutionFilter1DEXT;\ntmp_->CopyConvolutionFilter2DEXT = CopyConvolutionFilter2DEXT;\ntmp_->GetConvolutionFilterEXT = GetConvolutionFilterEXT;\ntmp_->GetConvolutionParameterfvEXT = GetConvolutionParameterfvEXT;\ntmp_->GetConvolutionParameterivEXT = GetConvolutionParameterivEXT;\ntmp_->GetSeparableFilterEXT = GetSeparableFilterEXT;\ntmp_->SeparableFilter2DEXT = SeparableFilter2DEXT;\ntmp_->ColorTableSGI = ColorTableSGI;\ntmp_->ColorTableParameterfvSGI = ColorTableParameterfvSGI;\ntmp_->ColorTableParameterivSGI = ColorTableParameterivSGI;\ntmp_->CopyColorTableSGI = CopyColorTableSGI;\ntmp_->GetColorTableSGI = GetColorTableSGI;\ntmp_->GetColorTableParameterfvSGI = GetColorTableParameterfvSGI;\ntmp_->GetColorTableParameterivSGI = GetColorTableParameterivSGI;\ntmp_->PixelTexGenSGIX = PixelTexGenSGIX;\ntmp_->PixelTexGenParameteriSGIS = PixelTexGenParameteriSGIS;\ntmp_->PixelTexGenParameterivSGIS = PixelTexGenParameterivSGIS;\ntmp_->PixelTexGenParameterfSGIS = PixelTexGenParameterfSGIS;\ntmp_->PixelTexGenParameterfvSGIS = PixelTexGenParameterfvSGIS;\ntmp_->GetPixelTexGenParameterivSGIS = GetPixelTexGenParameterivSGIS;\ntmp_->GetPixelTexGenParameterfvSGIS = GetPixelTexGenParameterfvSGIS;\ntmp_->TexImage4DSGIS = TexImage4DSGIS;\ntmp_->TexSubImage4DSGIS = TexSubImage4DSGIS;\ntmp_->AreTexturesResidentEXT = AreTexturesResidentEXT;\ntmp_->BindTextureEXT = BindTextureEXT;\ntmp_->DeleteTexturesEXT = DeleteTexturesEXT;\ntmp_->GenTexturesEXT = GenTexturesEXT;\ntmp_->IsTextureEXT = IsTextureEXT;\ntmp_->PrioritizeTexturesEXT = PrioritizeTexturesEXT;\ntmp_->DetailTexFuncSGIS = DetailTexFuncSGIS;\ntmp_->GetDetailTexFuncSGIS = GetDetailTexFuncSGIS;\ntmp_->SharpenTexFuncSGIS = SharpenTexFuncSGIS;\ntmp_->GetSharpenTexFuncSGIS = GetSharpenTexFuncSGIS;\ntmp_->SampleMaskSGIS = SampleMaskSGIS;\ntmp_->SamplePatternSGIS = SamplePatternSGIS;\ntmp_->ArrayElementEXT = ArrayElementEXT;\ntmp_->ColorPointerEXT = ColorPointerEXT;\ntmp_->DrawArraysEXT = DrawArraysEXT;\ntmp_->EdgeFlagPointerEXT = EdgeFlagPointerEXT;\ntmp_->GetPointervEXT = GetPointervEXT;\ntmp_->IndexPointerEXT = IndexPointerEXT;\ntmp_->NormalPointerEXT = NormalPointerEXT;\ntmp_->TexCoordPointerEXT = TexCoordPointerEXT;\ntmp_->VertexPointerEXT = VertexPointerEXT;\ntmp_->BlendEquationEXT = BlendEquationEXT;\ntmp_->SpriteParameterfSGIX = SpriteParameterfSGIX;\ntmp_->SpriteParameterfvSGIX = SpriteParameterfvSGIX;\ntmp_->SpriteParameteriSGIX = SpriteParameteriSGIX;\ntmp_->SpriteParameterivSGIX = SpriteParameterivSGIX;\ntmp_->PointParameterfEXT = PointParameterfEXT;\ntmp_->PointParameterfvEXT = PointParameterfvEXT;\ntmp_->PointParameterfSGIS = PointParameterfSGIS;\ntmp_->PointParameterfvSGIS = PointParameterfvSGIS;\ntmp_->GetInstrumentsSGIX = GetInstrumentsSGIX;\ntmp_->InstrumentsBufferSGIX = InstrumentsBufferSGIX;\ntmp_->PollInstrumentsSGIX = PollInstrumentsSGIX;\ntmp_->ReadInstrumentsSGIX = ReadInstrumentsSGIX;\ntmp_->StartInstrumentsSGIX = StartInstrumentsSGIX;\ntmp_->StopInstrumentsSGIX = StopInstrumentsSGIX;\ntmp_->FrameZoomSGIX = FrameZoomSGIX;\ntmp_->TagSampleBufferSGIX = TagSampleBufferSGIX;\ntmp_->DeformationMap3dSGIX = DeformationMap3dSGIX;\ntmp_->DeformationMap3fSGIX = DeformationMap3fSGIX;\ntmp_->DeformSGIX = DeformSGIX;\ntmp_->LoadIdentityDeformationMapSGIX = LoadIdentityDeformationMapSGIX;\ntmp_->ReferencePlaneSGIX = ReferencePlaneSGIX;\ntmp_->FlushRasterSGIX = FlushRasterSGIX;\ntmp_->FogFuncSGIS = FogFuncSGIS;\ntmp_->GetFogFuncSGIS = GetFogFuncSGIS;\ntmp_->ImageTransformParameteriHP = ImageTransformParameteriHP;\ntmp_->ImageTransformParameterfHP = ImageTransformParameterfHP;\ntmp_->ImageTransformParameterivHP = ImageTransformParameterivHP;\ntmp_->ImageTransformParameterfvHP = ImageTransformParameterfvHP;\ntmp_->GetImageTransformParameterivHP = GetImageTransformParameterivHP;\ntmp_->GetImageTransformParameterfvHP = GetImageTransformParameterfvHP;\ntmp_->CopyColorSubTableEXT = CopyColorSubTableEXT;\ntmp_->HintPGI = HintPGI;\ntmp_->ColorTableEXT = ColorTableEXT;\ntmp_->GetColorTableEXT = GetColorTableEXT;\ntmp_->GetColorTableParameterivEXT = GetColorTableParameterivEXT;\ntmp_->GetColorTableParameterfvEXT = GetColorTableParameterfvEXT;\ntmp_->GetListParameterfvSGIX = GetListParameterfvSGIX;\ntmp_->GetListParameterivSGIX = GetListParameterivSGIX;\ntmp_->ListParameterfSGIX = ListParameterfSGIX;\ntmp_->ListParameterfvSGIX = ListParameterfvSGIX;\ntmp_->ListParameteriSGIX = ListParameteriSGIX;\ntmp_->ListParameterivSGIX = ListParameterivSGIX;\ntmp_->IndexMaterialEXT = IndexMaterialEXT;\ntmp_->IndexFuncEXT = IndexFuncEXT;\ntmp_->LockArraysEXT = LockArraysEXT;\ntmp_->UnlockArraysEXT = UnlockArraysEXT;\ntmp_->CullParameterdvEXT = CullParameterdvEXT;\ntmp_->CullParameterfvEXT = CullParameterfvEXT;\ntmp_->FragmentColorMaterialSGIX = FragmentColorMaterialSGIX;\ntmp_->FragmentLightfSGIX = FragmentLightfSGIX;\ntmp_->FragmentLightfvSGIX = FragmentLightfvSGIX;\ntmp_->FragmentLightiSGIX = FragmentLightiSGIX;\ntmp_->FragmentLightivSGIX = FragmentLightivSGIX;\ntmp_->FragmentLightModelfSGIX = FragmentLightModelfSGIX;\ntmp_->FragmentLightModelfvSGIX = FragmentLightModelfvSGIX;\ntmp_->FragmentLightModeliSGIX = FragmentLightModeliSGIX;\ntmp_->FragmentLightModelivSGIX = FragmentLightModelivSGIX;\ntmp_->FragmentMaterialfSGIX = FragmentMaterialfSGIX;\ntmp_->FragmentMaterialfvSGIX = FragmentMaterialfvSGIX;\ntmp_->FragmentMaterialiSGIX = FragmentMaterialiSGIX;\ntmp_->FragmentMaterialivSGIX = FragmentMaterialivSGIX;\ntmp_->GetFragmentLightfvSGIX = GetFragmentLightfvSGIX;\ntmp_->GetFragmentLightivSGIX = GetFragmentLightivSGIX;\ntmp_->GetFragmentMaterialfvSGIX = GetFragmentMaterialfvSGIX;\ntmp_->GetFragmentMaterialivSGIX = GetFragmentMaterialivSGIX;\ntmp_->LightEnviSGIX = LightEnviSGIX;\ntmp_->DrawRangeElementsEXT = DrawRangeElementsEXT;\ntmp_->ApplyTextureEXT = ApplyTextureEXT;\ntmp_->TextureLightEXT = TextureLightEXT;\ntmp_->TextureMaterialEXT = TextureMaterialEXT;\ntmp_->AsyncMarkerSGIX = AsyncMarkerSGIX;\ntmp_->FinishAsyncSGIX = FinishAsyncSGIX;\ntmp_->PollAsyncSGIX = PollAsyncSGIX;\ntmp_->GenAsyncMarkersSGIX = GenAsyncMarkersSGIX;\ntmp_->DeleteAsyncMarkersSGIX = DeleteAsyncMarkersSGIX;\ntmp_->IsAsyncMarkerSGIX = IsAsyncMarkerSGIX;\ntmp_->VertexPointervINTEL = VertexPointervINTEL;\ntmp_->NormalPointervINTEL = NormalPointervINTEL;\ntmp_->ColorPointervINTEL = ColorPointervINTEL;\ntmp_->TexCoordPointervINTEL = TexCoordPointervINTEL;\ntmp_->PixelTransformParameteriEXT = PixelTransformParameteriEXT;\ntmp_->PixelTransformParameterfEXT = PixelTransformParameterfEXT;\ntmp_->PixelTransformParameterivEXT = PixelTransformParameterivEXT;\ntmp_->PixelTransformParameterfvEXT = PixelTransformParameterfvEXT;\ntmp_->SecondaryColor3bEXT = SecondaryColor3bEXT;\ntmp_->SecondaryColor3bvEXT = SecondaryColor3bvEXT;\ntmp_->SecondaryColor3dEXT = SecondaryColor3dEXT;\ntmp_->SecondaryColor3dvEXT = SecondaryColor3dvEXT;\ntmp_->SecondaryColor3fEXT = SecondaryColor3fEXT;\ntmp_->SecondaryColor3fvEXT = SecondaryColor3fvEXT;\ntmp_->SecondaryColor3iEXT = SecondaryColor3iEXT;\ntmp_->SecondaryColor3ivEXT = SecondaryColor3ivEXT;\ntmp_->SecondaryColor3sEXT = SecondaryColor3sEXT;\ntmp_->SecondaryColor3svEXT = SecondaryColor3svEXT;\ntmp_->SecondaryColor3ubEXT = SecondaryColor3ubEXT;\ntmp_->SecondaryColor3ubvEXT = SecondaryColor3ubvEXT;\ntmp_->SecondaryColor3uiEXT = SecondaryColor3uiEXT;\ntmp_->SecondaryColor3uivEXT = SecondaryColor3uivEXT;\ntmp_->SecondaryColor3usEXT = SecondaryColor3usEXT;\ntmp_->SecondaryColor3usvEXT = SecondaryColor3usvEXT;\ntmp_->SecondaryColorPointerEXT = SecondaryColorPointerEXT;\ntmp_->TextureNormalEXT = TextureNormalEXT;\ntmp_->MultiDrawArraysEXT = MultiDrawArraysEXT;\ntmp_->MultiDrawElementsEXT = MultiDrawElementsEXT;\ntmp_->FogCoordfEXT = FogCoordfEXT;\ntmp_->FogCoordfvEXT = FogCoordfvEXT;\ntmp_->FogCoorddEXT = FogCoorddEXT;\ntmp_->FogCoorddvEXT = FogCoorddvEXT;\ntmp_->FogCoordPointerEXT = FogCoordPointerEXT;\ntmp_->Tangent3bEXT = Tangent3bEXT;\ntmp_->Tangent3bvEXT = Tangent3bvEXT;\ntmp_->Tangent3dEXT = Tangent3dEXT;\ntmp_->Tangent3dvEXT = Tangent3dvEXT;\ntmp_->Tangent3fEXT = Tangent3fEXT;\ntmp_->Tangent3fvEXT = Tangent3fvEXT;\ntmp_->Tangent3iEXT = Tangent3iEXT;\ntmp_->Tangent3ivEXT = Tangent3ivEXT;\ntmp_->Tangent3sEXT = Tangent3sEXT;\ntmp_->Tangent3svEXT = Tangent3svEXT;\ntmp_->Binormal3bEXT = Binormal3bEXT;\ntmp_->Binormal3bvEXT = Binormal3bvEXT;\ntmp_->Binormal3dEXT = Binormal3dEXT;\ntmp_->Binormal3dvEXT = Binormal3dvEXT;\ntmp_->Binormal3fEXT = Binormal3fEXT;\ntmp_->Binormal3fvEXT = Binormal3fvEXT;\ntmp_->Binormal3iEXT = Binormal3iEXT;\ntmp_->Binormal3ivEXT = Binormal3ivEXT;\ntmp_->Binormal3sEXT = Binormal3sEXT;\ntmp_->Binormal3svEXT = Binormal3svEXT;\ntmp_->TangentPointerEXT = TangentPointerEXT;\ntmp_->BinormalPointerEXT = BinormalPointerEXT;\ntmp_->FinishTextureSUNX = FinishTextureSUNX;\ntmp_->GlobalAlphaFactorbSUN = GlobalAlphaFactorbSUN;\ntmp_->GlobalAlphaFactorsSUN = GlobalAlphaFactorsSUN;\ntmp_->GlobalAlphaFactoriSUN = GlobalAlphaFactoriSUN;\ntmp_->GlobalAlphaFactorfSUN = GlobalAlphaFactorfSUN;\ntmp_->GlobalAlphaFactordSUN = GlobalAlphaFactordSUN;\ntmp_->GlobalAlphaFactorubSUN = GlobalAlphaFactorubSUN;\ntmp_->GlobalAlphaFactorusSUN = GlobalAlphaFactorusSUN;\ntmp_->GlobalAlphaFactoruiSUN = GlobalAlphaFactoruiSUN;\ntmp_->ReplacementCodeuiSUN = ReplacementCodeuiSUN;\ntmp_->ReplacementCodeusSUN = ReplacementCodeusSUN;\ntmp_->ReplacementCodeubSUN = ReplacementCodeubSUN;\ntmp_->ReplacementCodeuivSUN = ReplacementCodeuivSUN;\ntmp_->ReplacementCodeusvSUN = ReplacementCodeusvSUN;\ntmp_->ReplacementCodeubvSUN = ReplacementCodeubvSUN;\ntmp_->ReplacementCodePointerSUN = ReplacementCodePointerSUN;\ntmp_->Color4ubVertex2fSUN = Color4ubVertex2fSUN;\ntmp_->Color4ubVertex2fvSUN = Color4ubVertex2fvSUN;\ntmp_->Color4ubVertex3fSUN = Color4ubVertex3fSUN;\ntmp_->Color4ubVertex3fvSUN = Color4ubVertex3fvSUN;\ntmp_->Color3fVertex3fSUN = Color3fVertex3fSUN;\ntmp_->Color3fVertex3fvSUN = Color3fVertex3fvSUN;\ntmp_->Normal3fVertex3fSUN = Normal3fVertex3fSUN;\ntmp_->Normal3fVertex3fvSUN = Normal3fVertex3fvSUN;\ntmp_->Color4fNormal3fVertex3fSUN = Color4fNormal3fVertex3fSUN;\ntmp_->Color4fNormal3fVertex3fvSUN = Color4fNormal3fVertex3fvSUN;\ntmp_->TexCoord2fVertex3fSUN = TexCoord2fVertex3fSUN;\ntmp_->TexCoord2fVertex3fvSUN = TexCoord2fVertex3fvSUN;\ntmp_->TexCoord4fVertex4fSUN = TexCoord4fVertex4fSUN;\ntmp_->TexCoord4fVertex4fvSUN = TexCoord4fVertex4fvSUN;\ntmp_->TexCoord2fColor4ubVertex3fSUN = TexCoord2fColor4ubVertex3fSUN;\ntmp_->TexCoord2fColor4ubVertex3fvSUN = TexCoord2fColor4ubVertex3fvSUN;\ntmp_->TexCoord2fColor3fVertex3fSUN = TexCoord2fColor3fVertex3fSUN;\ntmp_->TexCoord2fColor3fVertex3fvSUN = TexCoord2fColor3fVertex3fvSUN;\ntmp_->TexCoord2fNormal3fVertex3fSUN = TexCoord2fNormal3fVertex3fSUN;\ntmp_->TexCoord2fNormal3fVertex3fvSUN = TexCoord2fNormal3fVertex3fvSUN;\ntmp_->TexCoord2fColor4fNormal3fVertex3fSUN = TexCoord2fColor4fNormal3fVertex3fSUN;\ntmp_->TexCoord2fColor4fNormal3fVertex3fvSUN = TexCoord2fColor4fNormal3fVertex3fvSUN;\ntmp_->TexCoord4fColor4fNormal3fVertex4fSUN = TexCoord4fColor4fNormal3fVertex4fSUN;\ntmp_->TexCoord4fColor4fNormal3fVertex4fvSUN = TexCoord4fColor4fNormal3fVertex4fvSUN;\ntmp_->ReplacementCodeuiVertex3fSUN = ReplacementCodeuiVertex3fSUN;\ntmp_->ReplacementCodeuiVertex3fvSUN = ReplacementCodeuiVertex3fvSUN;\ntmp_->ReplacementCodeuiColor4ubVertex3fSUN = ReplacementCodeuiColor4ubVertex3fSUN;\ntmp_->ReplacementCodeuiColor4ubVertex3fvSUN = ReplacementCodeuiColor4ubVertex3fvSUN;\ntmp_->ReplacementCodeuiColor3fVertex3fSUN = ReplacementCodeuiColor3fVertex3fSUN;\ntmp_->ReplacementCodeuiColor3fVertex3fvSUN = ReplacementCodeuiColor3fVertex3fvSUN;\ntmp_->ReplacementCodeuiNormal3fVertex3fSUN = ReplacementCodeuiNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiNormal3fVertex3fvSUN = ReplacementCodeuiNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiColor4fNormal3fVertex3fSUN = ReplacementCodeuiColor4fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiColor4fNormal3fVertex3fvSUN = ReplacementCodeuiColor4fNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fVertex3fSUN = ReplacementCodeuiTexCoord2fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fVertex3fvSUN = ReplacementCodeuiTexCoord2fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;\ntmp_->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;\ntmp_->ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;\ntmp_->BlendFuncSeparateEXT = BlendFuncSeparateEXT;\ntmp_->BlendFuncSeparateINGR = BlendFuncSeparateINGR;\ntmp_->VertexWeightfEXT = VertexWeightfEXT;\ntmp_->VertexWeightfvEXT = VertexWeightfvEXT;\ntmp_->VertexWeightPointerEXT = VertexWeightPointerEXT;\ntmp_->FlushVertexArrayRangeNV = FlushVertexArrayRangeNV;\ntmp_->VertexArrayRangeNV = VertexArrayRangeNV;\ntmp_->CombinerParameterfvNV = CombinerParameterfvNV;\ntmp_->CombinerParameterfNV = CombinerParameterfNV;\ntmp_->CombinerParameterivNV = CombinerParameterivNV;\ntmp_->CombinerParameteriNV = CombinerParameteriNV;\ntmp_->CombinerInputNV = CombinerInputNV;\ntmp_->CombinerOutputNV = CombinerOutputNV;\ntmp_->FinalCombinerInputNV = FinalCombinerInputNV;\ntmp_->GetCombinerInputParameterfvNV = GetCombinerInputParameterfvNV;\ntmp_->GetCombinerInputParameterivNV = GetCombinerInputParameterivNV;\ntmp_->GetCombinerOutputParameterfvNV = GetCombinerOutputParameterfvNV;\ntmp_->GetCombinerOutputParameterivNV = GetCombinerOutputParameterivNV;\ntmp_->GetFinalCombinerInputParameterfvNV = GetFinalCombinerInputParameterfvNV;\ntmp_->GetFinalCombinerInputParameterivNV = GetFinalCombinerInputParameterivNV;\ntmp_->ResizeBuffersMESA = ResizeBuffersMESA;\ntmp_->WindowPos2dMESA = WindowPos2dMESA;\ntmp_->WindowPos2dvMESA = WindowPos2dvMESA;\ntmp_->WindowPos2fMESA = WindowPos2fMESA;\ntmp_->WindowPos2fvMESA = WindowPos2fvMESA;\ntmp_->WindowPos2iMESA = WindowPos2iMESA;\ntmp_->WindowPos2ivMESA = WindowPos2ivMESA;\ntmp_->WindowPos2sMESA = WindowPos2sMESA;\ntmp_->WindowPos2svMESA = WindowPos2svMESA;\ntmp_->WindowPos3dMESA = WindowPos3dMESA;\ntmp_->WindowPos3dvMESA = WindowPos3dvMESA;\ntmp_->WindowPos3fMESA = WindowPos3fMESA;\ntmp_->WindowPos3fvMESA = WindowPos3fvMESA;\ntmp_->WindowPos3iMESA = WindowPos3iMESA;\ntmp_->WindowPos3ivMESA = WindowPos3ivMESA;\ntmp_->WindowPos3sMESA = WindowPos3sMESA;\ntmp_->WindowPos3svMESA = WindowPos3svMESA;\ntmp_->WindowPos4dMESA = WindowPos4dMESA;\ntmp_->WindowPos4dvMESA = WindowPos4dvMESA;\ntmp_->WindowPos4fMESA = WindowPos4fMESA;\ntmp_->WindowPos4fvMESA = WindowPos4fvMESA;\ntmp_->WindowPos4iMESA = WindowPos4iMESA;\ntmp_->WindowPos4ivMESA = WindowPos4ivMESA;\ntmp_->WindowPos4sMESA = WindowPos4sMESA;\ntmp_->WindowPos4svMESA = WindowPos4svMESA;\ntmp_->MultiModeDrawArraysIBM = MultiModeDrawArraysIBM;\ntmp_->MultiModeDrawElementsIBM = MultiModeDrawElementsIBM;\ntmp_->TbufferMask3DFX = TbufferMask3DFX;\ntmp_->SampleMaskEXT = SampleMaskEXT;\ntmp_->SamplePatternEXT = SamplePatternEXT;\ntmp_->TextureColorMaskSGIS = TextureColorMaskSGIS;\ntmp_->IglooInterfaceSGIX = IglooInterfaceSGIX;\ntmp_->DeleteFencesNV = DeleteFencesNV;\ntmp_->GenFencesNV = GenFencesNV;\ntmp_->IsFenceNV = IsFenceNV;\ntmp_->TestFenceNV = TestFenceNV;\ntmp_->GetFenceivNV = GetFenceivNV;\ntmp_->FinishFenceNV = FinishFenceNV;\ntmp_->SetFenceNV = SetFenceNV;\ntmp_->MapControlPointsNV = MapControlPointsNV;\ntmp_->MapParameterivNV = MapParameterivNV;\ntmp_->MapParameterfvNV = MapParameterfvNV;\ntmp_->GetMapControlPointsNV = GetMapControlPointsNV;\ntmp_->GetMapParameterivNV = GetMapParameterivNV;\ntmp_->GetMapParameterfvNV = GetMapParameterfvNV;\ntmp_->GetMapAttribParameterivNV = GetMapAttribParameterivNV;\ntmp_->GetMapAttribParameterfvNV = GetMapAttribParameterfvNV;\ntmp_->EvalMapsNV = EvalMapsNV;\ntmp_->CombinerStageParameterfvNV = CombinerStageParameterfvNV;\ntmp_->GetCombinerStageParameterfvNV = GetCombinerStageParameterfvNV;\ntmp_->AreProgramsResidentNV = AreProgramsResidentNV;\ntmp_->BindProgramNV = BindProgramNV;\ntmp_->DeleteProgramsNV = DeleteProgramsNV;\ntmp_->ExecuteProgramNV = ExecuteProgramNV;\ntmp_->GenProgramsNV = GenProgramsNV;\ntmp_->GetProgramParameterdvNV = GetProgramParameterdvNV;\ntmp_->GetProgramParameterfvNV = GetProgramParameterfvNV;\ntmp_->GetProgramivNV = GetProgramivNV;\ntmp_->GetProgramStringNV = GetProgramStringNV;\ntmp_->GetTrackMatrixivNV = GetTrackMatrixivNV;\ntmp_->GetVertexAttribdvNV = GetVertexAttribdvNV;\ntmp_->GetVertexAttribfvNV = GetVertexAttribfvNV;\ntmp_->GetVertexAttribivNV = GetVertexAttribivNV;\ntmp_->GetVertexAttribPointervNV = GetVertexAttribPointervNV;\ntmp_->IsProgramNV = IsProgramNV;\ntmp_->LoadProgramNV = LoadProgramNV;\ntmp_->ProgramParameter4dNV = ProgramParameter4dNV;\ntmp_->ProgramParameter4dvNV = ProgramParameter4dvNV;\ntmp_->ProgramParameter4fNV = ProgramParameter4fNV;\ntmp_->ProgramParameter4fvNV = ProgramParameter4fvNV;\ntmp_->ProgramParameters4dvNV = ProgramParameters4dvNV;\ntmp_->ProgramParameters4fvNV = ProgramParameters4fvNV;\ntmp_->RequestResidentProgramsNV = RequestResidentProgramsNV;\ntmp_->TrackMatrixNV = TrackMatrixNV;\ntmp_->VertexAttribPointerNV = VertexAttribPointerNV;\ntmp_->VertexAttrib1dNV = VertexAttrib1dNV;\ntmp_->VertexAttrib1dvNV = VertexAttrib1dvNV;\ntmp_->VertexAttrib1fNV = VertexAttrib1fNV;\ntmp_->VertexAttrib1fvNV = VertexAttrib1fvNV;\ntmp_->VertexAttrib1sNV = VertexAttrib1sNV;\ntmp_->VertexAttrib1svNV = VertexAttrib1svNV;\ntmp_->VertexAttrib2dNV = VertexAttrib2dNV;\ntmp_->VertexAttrib2dvNV = VertexAttrib2dvNV;\ntmp_->VertexAttrib2fNV = VertexAttrib2fNV;\ntmp_->VertexAttrib2fvNV = VertexAttrib2fvNV;\ntmp_->VertexAttrib2sNV = VertexAttrib2sNV;\ntmp_->VertexAttrib2svNV = VertexAttrib2svNV;\ntmp_->VertexAttrib3dNV = VertexAttrib3dNV;\ntmp_->VertexAttrib3dvNV = VertexAttrib3dvNV;\ntmp_->VertexAttrib3fNV = VertexAttrib3fNV;\ntmp_->VertexAttrib3fvNV = VertexAttrib3fvNV;\ntmp_->VertexAttrib3sNV = VertexAttrib3sNV;\ntmp_->VertexAttrib3svNV = VertexAttrib3svNV;\ntmp_->VertexAttrib4dNV = VertexAttrib4dNV;\ntmp_->VertexAttrib4dvNV = VertexAttrib4dvNV;\ntmp_->VertexAttrib4fNV = VertexAttrib4fNV;\ntmp_->VertexAttrib4fvNV = VertexAttrib4fvNV;\ntmp_->VertexAttrib4sNV = VertexAttrib4sNV;\ntmp_->VertexAttrib4svNV = VertexAttrib4svNV;\ntmp_->VertexAttrib4ubNV = VertexAttrib4ubNV;\ntmp_->VertexAttrib4ubvNV = VertexAttrib4ubvNV;\ntmp_->VertexAttribs1dvNV = VertexAttribs1dvNV;\ntmp_->VertexAttribs1fvNV = VertexAttribs1fvNV;\ntmp_->VertexAttribs1svNV = VertexAttribs1svNV;\ntmp_->VertexAttribs2dvNV = VertexAttribs2dvNV;\ntmp_->VertexAttribs2fvNV = VertexAttribs2fvNV;\ntmp_->VertexAttribs2svNV = VertexAttribs2svNV;\ntmp_->VertexAttribs3dvNV = VertexAttribs3dvNV;\ntmp_->VertexAttribs3fvNV = VertexAttribs3fvNV;\ntmp_->VertexAttribs3svNV = VertexAttribs3svNV;\ntmp_->VertexAttribs4dvNV = VertexAttribs4dvNV;\ntmp_->VertexAttribs4fvNV = VertexAttribs4fvNV;\ntmp_->VertexAttribs4svNV = VertexAttribs4svNV;\ntmp_->VertexAttribs4ubvNV = VertexAttribs4ubvNV;\ntmp_->TexBumpParameterivATI = TexBumpParameterivATI;\ntmp_->TexBumpParameterfvATI = TexBumpParameterfvATI;\ntmp_->GetTexBumpParameterivATI = GetTexBumpParameterivATI;\ntmp_->GetTexBumpParameterfvATI = GetTexBumpParameterfvATI;\ntmp_->GenFragmentShadersATI = GenFragmentShadersATI;\ntmp_->BindFragmentShaderATI = BindFragmentShaderATI;\ntmp_->DeleteFragmentShaderATI = DeleteFragmentShaderATI;\ntmp_->BeginFragmentShaderATI = BeginFragmentShaderATI;\ntmp_->EndFragmentShaderATI = EndFragmentShaderATI;\ntmp_->PassTexCoordATI = PassTexCoordATI;\ntmp_->SampleMapATI = SampleMapATI;\ntmp_->ColorFragmentOp1ATI = ColorFragmentOp1ATI;\ntmp_->ColorFragmentOp2ATI = ColorFragmentOp2ATI;\ntmp_->ColorFragmentOp3ATI = ColorFragmentOp3ATI;\ntmp_->AlphaFragmentOp1ATI = AlphaFragmentOp1ATI;\ntmp_->AlphaFragmentOp2ATI = AlphaFragmentOp2ATI;\ntmp_->AlphaFragmentOp3ATI = AlphaFragmentOp3ATI;\ntmp_->SetFragmentShaderConstantATI = SetFragmentShaderConstantATI;\ntmp_->PNTrianglesiATI = PNTrianglesiATI;\ntmp_->PNTrianglesfATI = PNTrianglesfATI;\ntmp_->NewObjectBufferATI = NewObjectBufferATI;\ntmp_->IsObjectBufferATI = IsObjectBufferATI;\ntmp_->UpdateObjectBufferATI = UpdateObjectBufferATI;\ntmp_->GetObjectBufferfvATI = GetObjectBufferfvATI;\ntmp_->GetObjectBufferivATI = GetObjectBufferivATI;\ntmp_->FreeObjectBufferATI = FreeObjectBufferATI;\ntmp_->ArrayObjectATI = ArrayObjectATI;\ntmp_->GetArrayObjectfvATI = GetArrayObjectfvATI;\ntmp_->GetArrayObjectivATI = GetArrayObjectivATI;\ntmp_->VariantArrayObjectATI = VariantArrayObjectATI;\ntmp_->GetVariantArrayObjectfvATI = GetVariantArrayObjectfvATI;\ntmp_->GetVariantArrayObjectivATI = GetVariantArrayObjectivATI;\ntmp_->BeginVertexShaderEXT = BeginVertexShaderEXT;\ntmp_->EndVertexShaderEXT = EndVertexShaderEXT;\ntmp_->BindVertexShaderEXT = BindVertexShaderEXT;\ntmp_->GenVertexShadersEXT = GenVertexShadersEXT;\ntmp_->DeleteVertexShaderEXT = DeleteVertexShaderEXT;\ntmp_->ShaderOp1EXT = ShaderOp1EXT;\ntmp_->ShaderOp2EXT = ShaderOp2EXT;\ntmp_->ShaderOp3EXT = ShaderOp3EXT;\ntmp_->SwizzleEXT = SwizzleEXT;\ntmp_->WriteMaskEXT = WriteMaskEXT;\ntmp_->InsertComponentEXT = InsertComponentEXT;\ntmp_->ExtractComponentEXT = ExtractComponentEXT;\ntmp_->GenSymbolsEXT = GenSymbolsEXT;\ntmp_->SetInvariantEXT = SetInvariantEXT;\ntmp_->SetLocalConstantEXT = SetLocalConstantEXT;\ntmp_->VariantbvEXT = VariantbvEXT;\ntmp_->VariantsvEXT = VariantsvEXT;\ntmp_->VariantivEXT = VariantivEXT;\ntmp_->VariantfvEXT = VariantfvEXT;\ntmp_->VariantdvEXT = VariantdvEXT;\ntmp_->VariantubvEXT = VariantubvEXT;\ntmp_->VariantusvEXT = VariantusvEXT;\ntmp_->VariantuivEXT = VariantuivEXT;\ntmp_->VariantPointerEXT = VariantPointerEXT;\ntmp_->EnableVariantClientStateEXT = EnableVariantClientStateEXT;\ntmp_->DisableVariantClientStateEXT = DisableVariantClientStateEXT;\ntmp_->BindLightParameterEXT = BindLightParameterEXT;\ntmp_->BindMaterialParameterEXT = BindMaterialParameterEXT;\ntmp_->BindTexGenParameterEXT = BindTexGenParameterEXT;\ntmp_->BindTextureUnitParameterEXT = BindTextureUnitParameterEXT;\ntmp_->BindParameterEXT = BindParameterEXT;\ntmp_->IsVariantEnabledEXT = IsVariantEnabledEXT;\ntmp_->GetVariantBooleanvEXT = GetVariantBooleanvEXT;\ntmp_->GetVariantIntegervEXT = GetVariantIntegervEXT;\ntmp_->GetVariantFloatvEXT = GetVariantFloatvEXT;\ntmp_->GetVariantPointervEXT = GetVariantPointervEXT;\ntmp_->GetInvariantBooleanvEXT = GetInvariantBooleanvEXT;\ntmp_->GetInvariantIntegervEXT = GetInvariantIntegervEXT;\ntmp_->GetInvariantFloatvEXT = GetInvariantFloatvEXT;\ntmp_->GetLocalConstantBooleanvEXT = GetLocalConstantBooleanvEXT;\ntmp_->GetLocalConstantIntegervEXT = GetLocalConstantIntegervEXT;\ntmp_->GetLocalConstantFloatvEXT = GetLocalConstantFloatvEXT;\ntmp_->VertexStream1sATI = VertexStream1sATI;\ntmp_->VertexStream1svATI = VertexStream1svATI;\ntmp_->VertexStream1iATI = VertexStream1iATI;\ntmp_->VertexStream1ivATI = VertexStream1ivATI;\ntmp_->VertexStream1fATI = VertexStream1fATI;\ntmp_->VertexStream1fvATI = VertexStream1fvATI;\ntmp_->VertexStream1dATI = VertexStream1dATI;\ntmp_->VertexStream1dvATI = VertexStream1dvATI;\ntmp_->VertexStream2sATI = VertexStream2sATI;\ntmp_->VertexStream2svATI = VertexStream2svATI;\ntmp_->VertexStream2iATI = VertexStream2iATI;\ntmp_->VertexStream2ivATI = VertexStream2ivATI;\ntmp_->VertexStream2fATI = VertexStream2fATI;\ntmp_->VertexStream2fvATI = VertexStream2fvATI;\ntmp_->VertexStream2dATI = VertexStream2dATI;\ntmp_->VertexStream2dvATI = VertexStream2dvATI;\ntmp_->VertexStream3sATI = VertexStream3sATI;\ntmp_->VertexStream3svATI = VertexStream3svATI;\ntmp_->VertexStream3iATI = VertexStream3iATI;\ntmp_->VertexStream3ivATI = VertexStream3ivATI;\ntmp_->VertexStream3fATI = VertexStream3fATI;\ntmp_->VertexStream3fvATI = VertexStream3fvATI;\ntmp_->VertexStream3dATI = VertexStream3dATI;\ntmp_->VertexStream3dvATI = VertexStream3dvATI;\ntmp_->VertexStream4sATI = VertexStream4sATI;\ntmp_->VertexStream4svATI = VertexStream4svATI;\ntmp_->VertexStream4iATI = VertexStream4iATI;\ntmp_->VertexStream4ivATI = VertexStream4ivATI;\ntmp_->VertexStream4fATI = VertexStream4fATI;\ntmp_->VertexStream4fvATI = VertexStream4fvATI;\ntmp_->VertexStream4dATI = VertexStream4dATI;\ntmp_->VertexStream4dvATI = VertexStream4dvATI;\ntmp_->NormalStream3bATI = NormalStream3bATI;\ntmp_->NormalStream3bvATI = NormalStream3bvATI;\ntmp_->NormalStream3sATI = NormalStream3sATI;\ntmp_->NormalStream3svATI = NormalStream3svATI;\ntmp_->NormalStream3iATI = NormalStream3iATI;\ntmp_->NormalStream3ivATI = NormalStream3ivATI;\ntmp_->NormalStream3fATI = NormalStream3fATI;\ntmp_->NormalStream3fvATI = NormalStream3fvATI;\ntmp_->NormalStream3dATI = NormalStream3dATI;\ntmp_->NormalStream3dvATI = NormalStream3dvATI;\ntmp_->ClientActiveVertexStreamATI = ClientActiveVertexStreamATI;\ntmp_->VertexBlendEnviATI = VertexBlendEnviATI;\ntmp_->VertexBlendEnvfATI = VertexBlendEnvfATI;\ntmp_->ElementPointerATI = ElementPointerATI;\ntmp_->DrawElementArrayATI = DrawElementArrayATI;\ntmp_->DrawRangeElementArrayATI = DrawRangeElementArrayATI;\ntmp_->DrawMeshArraysSUN = DrawMeshArraysSUN;\ntmp_->GenOcclusionQueriesNV = GenOcclusionQueriesNV;\ntmp_->DeleteOcclusionQueriesNV = DeleteOcclusionQueriesNV;\ntmp_->IsOcclusionQueryNV = IsOcclusionQueryNV;\ntmp_->BeginOcclusionQueryNV = BeginOcclusionQueryNV;\ntmp_->EndOcclusionQueryNV = EndOcclusionQueryNV;\ntmp_->GetOcclusionQueryivNV = GetOcclusionQueryivNV;\ntmp_->GetOcclusionQueryuivNV = GetOcclusionQueryuivNV;\ntmp_->PointParameteriNV = PointParameteriNV;\ntmp_->PointParameterivNV = PointParameterivNV;\ntmp_->ActiveStencilFaceEXT = ActiveStencilFaceEXT;\ntmp_->ElementPointerAPPLE = ElementPointerAPPLE;\ntmp_->DrawElementArrayAPPLE = DrawElementArrayAPPLE;\ntmp_->DrawRangeElementArrayAPPLE = DrawRangeElementArrayAPPLE;\ntmp_->MultiDrawElementArrayAPPLE = MultiDrawElementArrayAPPLE;\ntmp_->MultiDrawRangeElementArrayAPPLE = MultiDrawRangeElementArrayAPPLE;\ntmp_->GenFencesAPPLE = GenFencesAPPLE;\ntmp_->DeleteFencesAPPLE = DeleteFencesAPPLE;\ntmp_->SetFenceAPPLE = SetFenceAPPLE;\ntmp_->IsFenceAPPLE = IsFenceAPPLE;\ntmp_->TestFenceAPPLE = TestFenceAPPLE;\ntmp_->FinishFenceAPPLE = FinishFenceAPPLE;\ntmp_->TestObjectAPPLE = TestObjectAPPLE;\ntmp_->FinishObjectAPPLE = FinishObjectAPPLE;\ntmp_->BindVertexArrayAPPLE = BindVertexArrayAPPLE;\ntmp_->DeleteVertexArraysAPPLE = DeleteVertexArraysAPPLE;\ntmp_->GenVertexArraysAPPLE = GenVertexArraysAPPLE;\ntmp_->IsVertexArrayAPPLE = IsVertexArrayAPPLE;\ntmp_->VertexArrayRangeAPPLE = VertexArrayRangeAPPLE;\ntmp_->FlushVertexArrayRangeAPPLE = FlushVertexArrayRangeAPPLE;\ntmp_->VertexArrayParameteriAPPLE = VertexArrayParameteriAPPLE;\ntmp_->DrawBuffersATI = DrawBuffersATI;\ntmp_->ProgramNamedParameter4fNV = ProgramNamedParameter4fNV;\ntmp_->ProgramNamedParameter4dNV = ProgramNamedParameter4dNV;\ntmp_->ProgramNamedParameter4fvNV = ProgramNamedParameter4fvNV;\ntmp_->ProgramNamedParameter4dvNV = ProgramNamedParameter4dvNV;\ntmp_->GetProgramNamedParameterfvNV = GetProgramNamedParameterfvNV;\ntmp_->GetProgramNamedParameterdvNV = GetProgramNamedParameterdvNV;\ntmp_->Vertex2hNV = Vertex2hNV;\ntmp_->Vertex2hvNV = Vertex2hvNV;\ntmp_->Vertex3hNV = Vertex3hNV;\ntmp_->Vertex3hvNV = Vertex3hvNV;\ntmp_->Vertex4hNV = Vertex4hNV;\ntmp_->Vertex4hvNV = Vertex4hvNV;\ntmp_->Normal3hNV = Normal3hNV;\ntmp_->Normal3hvNV = Normal3hvNV;\ntmp_->Color3hNV = Color3hNV;\ntmp_->Color3hvNV = Color3hvNV;\ntmp_->Color4hNV = Color4hNV;\ntmp_->Color4hvNV = Color4hvNV;\ntmp_->TexCoord1hNV = TexCoord1hNV;\ntmp_->TexCoord1hvNV = TexCoord1hvNV;\ntmp_->TexCoord2hNV = TexCoord2hNV;\ntmp_->TexCoord2hvNV = TexCoord2hvNV;\ntmp_->TexCoord3hNV = TexCoord3hNV;\ntmp_->TexCoord3hvNV = TexCoord3hvNV;\ntmp_->TexCoord4hNV = TexCoord4hNV;\ntmp_->TexCoord4hvNV = TexCoord4hvNV;\ntmp_->MultiTexCoord1hNV = MultiTexCoord1hNV;\ntmp_->MultiTexCoord1hvNV = MultiTexCoord1hvNV;\ntmp_->MultiTexCoord2hNV = MultiTexCoord2hNV;\ntmp_->MultiTexCoord2hvNV = MultiTexCoord2hvNV;\ntmp_->MultiTexCoord3hNV = MultiTexCoord3hNV;\ntmp_->MultiTexCoord3hvNV = MultiTexCoord3hvNV;\ntmp_->MultiTexCoord4hNV = MultiTexCoord4hNV;\ntmp_->MultiTexCoord4hvNV = MultiTexCoord4hvNV;\ntmp_->FogCoordhNV = FogCoordhNV;\ntmp_->FogCoordhvNV = FogCoordhvNV;\ntmp_->SecondaryColor3hNV = SecondaryColor3hNV;\ntmp_->SecondaryColor3hvNV = SecondaryColor3hvNV;\ntmp_->VertexWeighthNV = VertexWeighthNV;\ntmp_->VertexWeighthvNV = VertexWeighthvNV;\ntmp_->VertexAttrib1hNV = VertexAttrib1hNV;\ntmp_->VertexAttrib1hvNV = VertexAttrib1hvNV;\ntmp_->VertexAttrib2hNV = VertexAttrib2hNV;\ntmp_->VertexAttrib2hvNV = VertexAttrib2hvNV;\ntmp_->VertexAttrib3hNV = VertexAttrib3hNV;\ntmp_->VertexAttrib3hvNV = VertexAttrib3hvNV;\ntmp_->VertexAttrib4hNV = VertexAttrib4hNV;\ntmp_->VertexAttrib4hvNV = VertexAttrib4hvNV;\ntmp_->VertexAttribs1hvNV = VertexAttribs1hvNV;\ntmp_->VertexAttribs2hvNV = VertexAttribs2hvNV;\ntmp_->VertexAttribs3hvNV = VertexAttribs3hvNV;\ntmp_->VertexAttribs4hvNV = VertexAttribs4hvNV;\ntmp_->PixelDataRangeNV = PixelDataRangeNV;\ntmp_->FlushPixelDataRangeNV = FlushPixelDataRangeNV;\ntmp_->PrimitiveRestartNV = PrimitiveRestartNV;\ntmp_->PrimitiveRestartIndexNV = PrimitiveRestartIndexNV;\ntmp_->MapObjectBufferATI = MapObjectBufferATI;\ntmp_->UnmapObjectBufferATI = UnmapObjectBufferATI;\ntmp_->VertexAttribArrayObjectATI = VertexAttribArrayObjectATI;\ntmp_->GetVertexAttribArrayObjectfvATI = GetVertexAttribArrayObjectfvATI;\ntmp_->GetVertexAttribArrayObjectivATI = GetVertexAttribArrayObjectivATI;\ntmp_->Vertex2bOES = Vertex2bOES;\ntmp_->Vertex3bOES = Vertex3bOES;\ntmp_->Vertex4bOES = Vertex4bOES;\ntmp_->Vertex2bvOES = Vertex2bvOES;\ntmp_->Vertex3bvOES = Vertex3bvOES;\ntmp_->Vertex4bvOES = Vertex4bvOES;\ntmp_->TexCoord1bOES = TexCoord1bOES;\ntmp_->TexCoord2bOES = TexCoord2bOES;\ntmp_->TexCoord3bOES = TexCoord3bOES;\ntmp_->TexCoord4bOES = TexCoord4bOES;\ntmp_->TexCoord1bvOES = TexCoord1bvOES;\ntmp_->TexCoord2bvOES = TexCoord2bvOES;\ntmp_->TexCoord3bvOES = TexCoord3bvOES;\ntmp_->TexCoord4bvOES = TexCoord4bvOES;\ntmp_->MultiTexCoord1bOES = MultiTexCoord1bOES;\ntmp_->MultiTexCoord2bOES = MultiTexCoord2bOES;\ntmp_->MultiTexCoord3bOES = MultiTexCoord3bOES;\ntmp_->MultiTexCoord4bOES = MultiTexCoord4bOES;\ntmp_->MultiTexCoord1bvOES = MultiTexCoord1bvOES;\ntmp_->MultiTexCoord2bvOES = MultiTexCoord2bvOES;\ntmp_->MultiTexCoord3bvOES = MultiTexCoord3bvOES;\ntmp_->MultiTexCoord4bvOES = MultiTexCoord4bvOES;\ntmp_->Vertex2xOES = Vertex2xOES;\ntmp_->Vertex3xOES = Vertex3xOES;\ntmp_->Vertex4xOES = Vertex4xOES;\ntmp_->Vertex2xvOES = Vertex2xvOES;\ntmp_->Vertex3xvOES = Vertex3xvOES;\ntmp_->Vertex4xvOES = Vertex4xvOES;\ntmp_->Normal3xOES = Normal3xOES;\ntmp_->Normal3xvOES = Normal3xvOES;\ntmp_->TexCoord1xOES = TexCoord1xOES;\ntmp_->TexCoord2xOES = TexCoord2xOES;\ntmp_->TexCoord3xOES = TexCoord3xOES;\ntmp_->TexCoord4xOES = TexCoord4xOES;\ntmp_->TexCoord1xvOES = TexCoord1xvOES;\ntmp_->TexCoord2xvOES = TexCoord2xvOES;\ntmp_->TexCoord3xvOES = TexCoord3xvOES;\ntmp_->TexCoord4xvOES = TexCoord4xvOES;\ntmp_->MultiTexCoord1xOES = MultiTexCoord1xOES;\ntmp_->MultiTexCoord2xOES = MultiTexCoord2xOES;\ntmp_->MultiTexCoord3xOES = MultiTexCoord3xOES;\ntmp_->MultiTexCoord4xOES = MultiTexCoord4xOES;\ntmp_->MultiTexCoord1xvOES = MultiTexCoord1xvOES;\ntmp_->MultiTexCoord2xvOES = MultiTexCoord2xvOES;\ntmp_->MultiTexCoord3xvOES = MultiTexCoord3xvOES;\ntmp_->MultiTexCoord4xvOES = MultiTexCoord4xvOES;\ntmp_->Color3xOES = Color3xOES;\ntmp_->Color4xOES = Color4xOES;\ntmp_->Color3xvOES = Color3xvOES;\ntmp_->Color4xvOES = Color4xvOES;\ntmp_->IndexxOES = IndexxOES;\ntmp_->IndexxvOES = IndexxvOES;\ntmp_->RectxOES = RectxOES;\ntmp_->DepthRangexOES = DepthRangexOES;\ntmp_->RotatexOES = RotatexOES;\ntmp_->ScalexOES = ScalexOES;\ntmp_->TranslatexOES = TranslatexOES;\ntmp_->FrustumxOES = FrustumxOES;\ntmp_->OrthoxOES = OrthoxOES;\ntmp_->TexGenxOES = TexGenxOES;\ntmp_->TexGenxvOES = TexGenxvOES;\ntmp_->GetTexGenxvOES = GetTexGenxvOES;\ntmp_->ClipPlanexOES = ClipPlanexOES;\ntmp_->GetClipPlanexOES = GetClipPlanexOES;\ntmp_->RasterPos2xOES = RasterPos2xOES;\ntmp_->RasterPos3xOES = RasterPos3xOES;\ntmp_->RasterPos4xOES = RasterPos4xOES;\ntmp_->RasterPos2xvOES = RasterPos2xvOES;\ntmp_->RasterPos3xvOES = RasterPos3xvOES;\ntmp_->RasterPos4xvOES = RasterPos4xvOES;\ntmp_->MaterialxOES = MaterialxOES;\ntmp_->MaterialxvOES = MaterialxvOES;\ntmp_->GetMaterialxOES = GetMaterialxOES;\ntmp_->LightxOES = LightxOES;\ntmp_->LightxvOES = LightxvOES;\ntmp_->GetLightxOES = GetLightxOES;\ntmp_->LightModelxOES = LightModelxOES;\ntmp_->LightModelxvOES = LightModelxvOES;\ntmp_->PointSizexOES = PointSizexOES;\ntmp_->LineWidthxOES = LineWidthxOES;\ntmp_->PolygonOffsetxOES = PolygonOffsetxOES;\ntmp_->PixelStorex = PixelStorex;\ntmp_->PixelTransferxOES = PixelTransferxOES;\ntmp_->PixelMapx = PixelMapx;\ntmp_->GetPixelMapxv = GetPixelMapxv;\ntmp_->ConvolutionParameterxOES = ConvolutionParameterxOES;\ntmp_->ConvolutionParameterxvOES = ConvolutionParameterxvOES;\ntmp_->GetConvolutionParameterxvOES = GetConvolutionParameterxvOES;\ntmp_->GetHistogramParameterxvOES = GetHistogramParameterxvOES;\ntmp_->PixelZoomxOES = PixelZoomxOES;\ntmp_->BitmapxOES = BitmapxOES;\ntmp_->TexParameterxOES = TexParameterxOES;\ntmp_->TexParameterxvOES = TexParameterxvOES;\ntmp_->GetTexParameterxvOES = GetTexParameterxvOES;\ntmp_->GetTexLevelParameterxvOES = GetTexLevelParameterxvOES;\ntmp_->PrioritizeTexturesxOES = PrioritizeTexturesxOES;\ntmp_->TexEnvxOES = TexEnvxOES;\ntmp_->TexEnvxvOES = TexEnvxvOES;\ntmp_->GetTexEnvxvOES = GetTexEnvxvOES;\ntmp_->FogxOES = FogxOES;\ntmp_->FogxvOES = FogxvOES;\ntmp_->SampleCoverageOES = SampleCoverageOES;\ntmp_->AlphaFuncxOES = AlphaFuncxOES;\ntmp_->BlendColorxOES = BlendColorxOES;\ntmp_->ClearColorxOES = ClearColorxOES;\ntmp_->ClearDepthxOES = ClearDepthxOES;\ntmp_->ClearAccumxOES = ClearAccumxOES;\ntmp_->AccumxOES = AccumxOES;\ntmp_->Map1xOES = Map1xOES;\ntmp_->Map2xOES = Map2xOES;\ntmp_->MapGrid1xOES = MapGrid1xOES;\ntmp_->MapGrid2xOES = MapGrid2xOES;\ntmp_->GetMapxvOES = GetMapxvOES;\ntmp_->EvalCoord1xOES = EvalCoord1xOES;\ntmp_->EvalCoord2xOES = EvalCoord2xOES;\ntmp_->EvalCoord1xvOES = EvalCoord1xvOES;\ntmp_->EvalCoord2xvOES = EvalCoord2xvOES;\ntmp_->FeedbackBufferxOES = FeedbackBufferxOES;\ntmp_->PassThroughxOES = PassThroughxOES;\ntmp_->GetFixedvOES = GetFixedvOES;\ntmp_->DepthRangefOES = DepthRangefOES;\ntmp_->FrustumfOES = FrustumfOES;\ntmp_->OrthofOES = OrthofOES;\ntmp_->ClipPlanefOES = ClipPlanefOES;\ntmp_->GetClipPlanefOES = GetClipPlanefOES;\ntmp_->ClearDepthfOES = ClearDepthfOES;\ntmp_->DepthBoundsEXT = DepthBoundsEXT;\ntmp_->BlendEquationSeparateEXT = BlendEquationSeparateEXT;\ntmp_->IsRenderbufferEXT = IsRenderbufferEXT;\ntmp_->BindRenderbufferEXT = BindRenderbufferEXT;\ntmp_->DeleteRenderbuffersEXT = DeleteRenderbuffersEXT;\ntmp_->GenRenderbuffersEXT = GenRenderbuffersEXT;\ntmp_->RenderbufferStorageEXT = RenderbufferStorageEXT;\ntmp_->GetRenderbufferParameterivEXT = GetRenderbufferParameterivEXT;\ntmp_->IsFramebufferEXT = IsFramebufferEXT;\ntmp_->BindFramebufferEXT = BindFramebufferEXT;\ntmp_->DeleteFramebuffersEXT = DeleteFramebuffersEXT;\ntmp_->GenFramebuffersEXT = GenFramebuffersEXT;\ntmp_->CheckFramebufferStatusEXT = CheckFramebufferStatusEXT;\ntmp_->FramebufferTexture1DEXT = FramebufferTexture1DEXT;\ntmp_->FramebufferTexture2DEXT = FramebufferTexture2DEXT;\ntmp_->FramebufferTexture3DEXT = FramebufferTexture3DEXT;\ntmp_->FramebufferRenderbufferEXT = FramebufferRenderbufferEXT;\ntmp_->GetFramebufferAttachmentParameterivEXT = GetFramebufferAttachmentParameterivEXT;\ntmp_->GenerateMipmapEXT = GenerateMipmapEXT;\ntmp_->StringMarkerGREMEDY = StringMarkerGREMEDY;\ntmp_->StencilClearTagEXT = StencilClearTagEXT;\ntmp_->BlitFramebufferEXT = BlitFramebufferEXT;\ntmp_->RenderbufferStorageMultisampleEXT = RenderbufferStorageMultisampleEXT;\ntmp_->GetQueryObjecti64vEXT = GetQueryObjecti64vEXT;\ntmp_->GetQueryObjectui64vEXT = GetQueryObjectui64vEXT;\ntmp_->ProgramEnvParameters4fvEXT = ProgramEnvParameters4fvEXT;\ntmp_->ProgramLocalParameters4fvEXT = ProgramLocalParameters4fvEXT;\ntmp_->BufferParameteriAPPLE = BufferParameteriAPPLE;\ntmp_->FlushMappedBufferRangeAPPLE = FlushMappedBufferRangeAPPLE;\ntmp_->UniformBufferEXT = UniformBufferEXT;\ntmp_->GetUniformBufferSizeEXT = GetUniformBufferSizeEXT;\ntmp_->GetUniformOffsetEXT = GetUniformOffsetEXT;\ntmp_->ColorMaskIndexedEXT = ColorMaskIndexedEXT;\ntmp_->GetBooleanIndexedvEXT = GetBooleanIndexedvEXT;\ntmp_->GetIntegerIndexedvEXT = GetIntegerIndexedvEXT;\ntmp_->EnableIndexedEXT = EnableIndexedEXT;\ntmp_->DisableIndexedEXT = DisableIndexedEXT;\ntmp_->IsEnabledIndexedEXT = IsEnabledIndexedEXT;\ntmp_->DrawArraysInstancedEXT = DrawArraysInstancedEXT;\ntmp_->DrawElementsInstancedEXT = DrawElementsInstancedEXT;\ntmp_->ProgramParameteriEXT = ProgramParameteriEXT;\ntmp_->FramebufferTextureEXT = FramebufferTextureEXT;\ntmp_->FramebufferTextureFaceEXT = FramebufferTextureFaceEXT;\ntmp_->VertexAttribI1iEXT = VertexAttribI1iEXT;\ntmp_->VertexAttribI2iEXT = VertexAttribI2iEXT;\ntmp_->VertexAttribI3iEXT = VertexAttribI3iEXT;\ntmp_->VertexAttribI4iEXT = VertexAttribI4iEXT;\ntmp_->VertexAttribI1uiEXT = VertexAttribI1uiEXT;\ntmp_->VertexAttribI2uiEXT = VertexAttribI2uiEXT;\ntmp_->VertexAttribI3uiEXT = VertexAttribI3uiEXT;\ntmp_->VertexAttribI4uiEXT = VertexAttribI4uiEXT;\ntmp_->VertexAttribI1ivEXT = VertexAttribI1ivEXT;\ntmp_->VertexAttribI2ivEXT = VertexAttribI2ivEXT;\ntmp_->VertexAttribI3ivEXT = VertexAttribI3ivEXT;\ntmp_->VertexAttribI4ivEXT = VertexAttribI4ivEXT;\ntmp_->VertexAttribI1uivEXT = VertexAttribI1uivEXT;\ntmp_->VertexAttribI2uivEXT = VertexAttribI2uivEXT;\ntmp_->VertexAttribI3uivEXT = VertexAttribI3uivEXT;\ntmp_->VertexAttribI4uivEXT = VertexAttribI4uivEXT;\ntmp_->VertexAttribI4bvEXT = VertexAttribI4bvEXT;\ntmp_->VertexAttribI4svEXT = VertexAttribI4svEXT;\ntmp_->VertexAttribI4ubvEXT = VertexAttribI4ubvEXT;\ntmp_->VertexAttribI4usvEXT = VertexAttribI4usvEXT;\ntmp_->VertexAttribIPointerEXT = VertexAttribIPointerEXT;\ntmp_->GetVertexAttribIivEXT = GetVertexAttribIivEXT;\ntmp_->GetVertexAttribIuivEXT = GetVertexAttribIuivEXT;\ntmp_->Uniform1uiEXT = Uniform1uiEXT;\ntmp_->Uniform2uiEXT = Uniform2uiEXT;\ntmp_->Uniform3uiEXT = Uniform3uiEXT;\ntmp_->Uniform4uiEXT = Uniform4uiEXT;\ntmp_->Uniform1uivEXT = Uniform1uivEXT;\ntmp_->Uniform2uivEXT = Uniform2uivEXT;\ntmp_->Uniform3uivEXT = Uniform3uivEXT;\ntmp_->Uniform4uivEXT = Uniform4uivEXT;\ntmp_->GetUniformuivEXT = GetUniformuivEXT;\ntmp_->BindFragDataLocationEXT = BindFragDataLocationEXT;\ntmp_->GetFragDataLocationEXT = GetFragDataLocationEXT;\ntmp_->FramebufferTextureLayerEXT = FramebufferTextureLayerEXT;\ntmp_->TexBufferEXT = TexBufferEXT;\ntmp_->DepthRangedNV = DepthRangedNV;\ntmp_->ClearDepthdNV = ClearDepthdNV;\ntmp_->DepthBoundsdNV = DepthBoundsdNV;\ntmp_->RenderbufferStorageMultsampleCoverageNV = RenderbufferStorageMultsampleCoverageNV;\ntmp_->ProgramVertexLimitNV = ProgramVertexLimitNV;\ntmp_->ProgramLocalParameterI4iNV = ProgramLocalParameterI4iNV;\ntmp_->ProgramLocalParameterI4ivNV = ProgramLocalParameterI4ivNV;\ntmp_->ProgramLocalParametersI4ivNV = ProgramLocalParametersI4ivNV;\ntmp_->ProgramLocalParameterI4uiNV = ProgramLocalParameterI4uiNV;\ntmp_->ProgramLocalParameterI4uivNV = ProgramLocalParameterI4uivNV;\ntmp_->ProgramLocalParametersI4uivNV = ProgramLocalParametersI4uivNV;\ntmp_->ProgramEnvParameterI4iNV = ProgramEnvParameterI4iNV;\ntmp_->ProgramEnvParameterI4ivNV = ProgramEnvParameterI4ivNV;\ntmp_->ProgramEnvParametersI4ivNV = ProgramEnvParametersI4ivNV;\ntmp_->ProgramEnvParameterI4uiNV = ProgramEnvParameterI4uiNV;\ntmp_->ProgramEnvParameterI4uivNV = ProgramEnvParameterI4uivNV;\ntmp_->ProgramEnvParametersI4uivNV = ProgramEnvParametersI4uivNV;\ntmp_->GetProgramLocalParameterIivNV = GetProgramLocalParameterIivNV;\ntmp_->GetProgramLocalParameterIuivNV = GetProgramLocalParameterIuivNV;\ntmp_->GetProgramEnvParameterIivNV = GetProgramEnvParameterIivNV;\ntmp_->GetProgramEnvParameterIuivNV = GetProgramEnvParameterIuivNV;\ntmp_->ProgramBufferParametersfvNV = ProgramBufferParametersfvNV;\ntmp_->ProgramBufferParametersIivNV = ProgramBufferParametersIivNV;\ntmp_->ProgramBufferParametersIuivNV = ProgramBufferParametersIuivNV;\ntmp_->BindBufferRangeNV = BindBufferRangeNV;\ntmp_->BindBufferOffsetNV = BindBufferOffsetNV;\ntmp_->BindBufferBaseNV = BindBufferBaseNV;\ntmp_->TransformFeedbackAttribsNV = TransformFeedbackAttribsNV;\ntmp_->TransformFeedbackVaryingsNV = TransformFeedbackVaryingsNV;\ntmp_->BeginTransformFeedbackNV = BeginTransformFeedbackNV;\ntmp_->EndTransformFeedbackNV = EndTransformFeedbackNV;\ntmp_->GetVaryingLocationNV = GetVaryingLocationNV;\ntmp_->GetActiveVaryingNV = GetActiveVaryingNV;\ntmp_->ActiveVaryingNV = ActiveVaryingNV;\ntmp_->GetTransformFeedbackVaryingNV = GetTransformFeedbackVaryingNV;\ntmp_->FrameTerminatorGREMEDY = FrameTerminatorGREMEDY;\ntmp_->BeginConditionalRenderNV = BeginConditionalRenderNV;\ntmp_->EndConditionalRenderNV = EndConditionalRenderNV;\ntmp_->BeginTransformFeedbackEXT = BeginTransformFeedbackEXT;\ntmp_->EndTransformFeedbackEXT = EndTransformFeedbackEXT;\ntmp_->BindBufferRangeEXT = BindBufferRangeEXT;\ntmp_->BindBufferOffsetEXT = BindBufferOffsetEXT;\ntmp_->BindBufferBaseEXT = BindBufferBaseEXT;\ntmp_->TransformFeedbackVaryingsEXT = TransformFeedbackVaryingsEXT;\ntmp_->GetTransformFeedbackVaryingEXT = GetTransformFeedbackVaryingEXT;\ntmp_->ClientAttribDefaultEXT = ClientAttribDefaultEXT;\ntmp_->PushClientAttribDefaultEXT = PushClientAttribDefaultEXT;\ntmp_->MatrixLoadfEXT = MatrixLoadfEXT;\ntmp_->MatrixLoaddEXT = MatrixLoaddEXT;\ntmp_->MatrixMultfEXT = MatrixMultfEXT;\ntmp_->MatrixMultdEXT = MatrixMultdEXT;\ntmp_->MatrixLoadIdentityEXT = MatrixLoadIdentityEXT;\ntmp_->MatrixRotatefEXT = MatrixRotatefEXT;\ntmp_->MatrixRotatedEXT = MatrixRotatedEXT;\ntmp_->MatrixScalefEXT = MatrixScalefEXT;\ntmp_->MatrixScaledEXT = MatrixScaledEXT;\ntmp_->MatrixTranslatefEXT = MatrixTranslatefEXT;\ntmp_->MatrixTranslatedEXT = MatrixTranslatedEXT;\ntmp_->MatrixFrustumEXT = MatrixFrustumEXT;\ntmp_->MatrixOrthoEXT = MatrixOrthoEXT;\ntmp_->MatrixPopEXT = MatrixPopEXT;\ntmp_->MatrixPushEXT = MatrixPushEXT;\ntmp_->MatrixLoadTransposefEXT = MatrixLoadTransposefEXT;\ntmp_->MatrixLoadTransposedEXT = MatrixLoadTransposedEXT;\ntmp_->MatrixMultTransposefEXT = MatrixMultTransposefEXT;\ntmp_->MatrixMultTransposedEXT = MatrixMultTransposedEXT;\ntmp_->TextureParameterfEXT = TextureParameterfEXT;\ntmp_->TextureParameterfvEXT = TextureParameterfvEXT;\ntmp_->TextureParameteriEXT = TextureParameteriEXT;\ntmp_->TextureParameterivEXT = TextureParameterivEXT;\ntmp_->TextureImage1DEXT = TextureImage1DEXT;\ntmp_->TextureImage2DEXT = TextureImage2DEXT;\ntmp_->TextureSubImage1DEXT = TextureSubImage1DEXT;\ntmp_->TextureSubImage2DEXT = TextureSubImage2DEXT;\ntmp_->CopyTextureImage1DEXT = CopyTextureImage1DEXT;\ntmp_->CopyTextureImage2DEXT = CopyTextureImage2DEXT;\ntmp_->CopyTextureSubImage1DEXT = CopyTextureSubImage1DEXT;\ntmp_->CopyTextureSubImage2DEXT = CopyTextureSubImage2DEXT;\ntmp_->GetTextureImageEXT = GetTextureImageEXT;\ntmp_->GetTextureParameterfvEXT = GetTextureParameterfvEXT;\ntmp_->GetTextureParameterivEXT = GetTextureParameterivEXT;\ntmp_->GetTextureLevelParameterfvEXT = GetTextureLevelParameterfvEXT;\ntmp_->GetTextureLevelParameterivEXT = GetTextureLevelParameterivEXT;\ntmp_->TextureImage3DEXT = TextureImage3DEXT;\ntmp_->TextureSubImage3DEXT = TextureSubImage3DEXT;\ntmp_->CopyTextureSubImage3DEXT = CopyTextureSubImage3DEXT;\ntmp_->MultiTexParameterfEXT = MultiTexParameterfEXT;\ntmp_->MultiTexParameterfvEXT = MultiTexParameterfvEXT;\ntmp_->MultiTexParameteriEXT = MultiTexParameteriEXT;\ntmp_->MultiTexParameterivEXT = MultiTexParameterivEXT;\ntmp_->MultiTexImage1DEXT = MultiTexImage1DEXT;\ntmp_->MultiTexImage2DEXT = MultiTexImage2DEXT;\ntmp_->MultiTexSubImage1DEXT = MultiTexSubImage1DEXT;\ntmp_->MultiTexSubImage2DEXT = MultiTexSubImage2DEXT;\ntmp_->CopyMultiTexImage1DEXT = CopyMultiTexImage1DEXT;\ntmp_->CopyMultiTexImage2DEXT = CopyMultiTexImage2DEXT;\ntmp_->CopyMultiTexSubImage1DEXT = CopyMultiTexSubImage1DEXT;\ntmp_->CopyMultiTexSubImage2DEXT = CopyMultiTexSubImage2DEXT;\ntmp_->GetMultiTexImageEXT = GetMultiTexImageEXT;\ntmp_->GetMultiTexParameterfvEXT = GetMultiTexParameterfvEXT;\ntmp_->GetMultiTexParameterivEXT = GetMultiTexParameterivEXT;\ntmp_->GetMultiTexLevelParameterfvEXT = GetMultiTexLevelParameterfvEXT;\ntmp_->GetMultiTexLevelParameterivEXT = GetMultiTexLevelParameterivEXT;\ntmp_->MultiTexImage3DEXT = MultiTexImage3DEXT;\ntmp_->MultiTexSubImage3DEXT = MultiTexSubImage3DEXT;\ntmp_->CopyMultiTexSubImage3DEXT = CopyMultiTexSubImage3DEXT;\ntmp_->BindMultiTextureEXT = BindMultiTextureEXT;\ntmp_->EnableClientStateIndexedEXT = EnableClientStateIndexedEXT;\ntmp_->DisableClientStateIndexedEXT = DisableClientStateIndexedEXT;\ntmp_->MultiTexCoordPointerEXT = MultiTexCoordPointerEXT;\ntmp_->MultiTexEnvfEXT = MultiTexEnvfEXT;\ntmp_->MultiTexEnvfvEXT = MultiTexEnvfvEXT;\ntmp_->MultiTexEnviEXT = MultiTexEnviEXT;\ntmp_->MultiTexEnvivEXT = MultiTexEnvivEXT;\ntmp_->MultiTexGendEXT = MultiTexGendEXT;\ntmp_->MultiTexGendvEXT = MultiTexGendvEXT;\ntmp_->MultiTexGenfEXT = MultiTexGenfEXT;\ntmp_->MultiTexGenfvEXT = MultiTexGenfvEXT;\ntmp_->MultiTexGeniEXT = MultiTexGeniEXT;\ntmp_->MultiTexGenivEXT = MultiTexGenivEXT;\ntmp_->GetMultiTexEnvfvEXT = GetMultiTexEnvfvEXT;\ntmp_->GetMultiTexEnvivEXT = GetMultiTexEnvivEXT;\ntmp_->GetMultiTexGendvEXT = GetMultiTexGendvEXT;\ntmp_->GetMultiTexGenfvEXT = GetMultiTexGenfvEXT;\ntmp_->GetMultiTexGenivEXT = GetMultiTexGenivEXT;\ntmp_->GetFloatIndexedvEXT = GetFloatIndexedvEXT;\ntmp_->GetDoubleIndexedvEXT = GetDoubleIndexedvEXT;\ntmp_->GetPointerIndexedvEXT = GetPointerIndexedvEXT;\ntmp_->CompressedTextureImage3DEXT = CompressedTextureImage3DEXT;\ntmp_->CompressedTextureImage2DEXT = CompressedTextureImage2DEXT;\ntmp_->CompressedTextureImage1DEXT = CompressedTextureImage1DEXT;\ntmp_->CompressedTextureSubImage3DEXT = CompressedTextureSubImage3DEXT;\ntmp_->CompressedTextureSubImage2DEXT = CompressedTextureSubImage2DEXT;\ntmp_->CompressedTextureSubImage1DEXT = CompressedTextureSubImage1DEXT;\ntmp_->GetCompressedTextureImageEXT = GetCompressedTextureImageEXT;\ntmp_->CompressedMultiTexImage3DEXT = CompressedMultiTexImage3DEXT;\ntmp_->CompressedMultiTexImage2DEXT = CompressedMultiTexImage2DEXT;\ntmp_->CompressedMultiTexImage1DEXT = CompressedMultiTexImage1DEXT;\ntmp_->CompressedMultiTexSubImage3DEXT = CompressedMultiTexSubImage3DEXT;\ntmp_->CompressedMultiTexSubImage2DEXT = CompressedMultiTexSubImage2DEXT;\ntmp_->CompressedMultiTexSubImage1DEXT = CompressedMultiTexSubImage1DEXT;\ntmp_->GetCompressedMultiTexImageEXT = GetCompressedMultiTexImageEXT;\ntmp_->NamedProgramStringEXT = NamedProgramStringEXT;\ntmp_->NamedProgramLocalParameter4dEXT = NamedProgramLocalParameter4dEXT;\ntmp_->NamedProgramLocalParameter4dvEXT = NamedProgramLocalParameter4dvEXT;\ntmp_->NamedProgramLocalParameter4fEXT = NamedProgramLocalParameter4fEXT;\ntmp_->NamedProgramLocalParameter4fvEXT = NamedProgramLocalParameter4fvEXT;\ntmp_->GetNamedProgramLocalParameterdvEXT = GetNamedProgramLocalParameterdvEXT;\ntmp_->GetNamedProgramLocalParameterfvEXT = GetNamedProgramLocalParameterfvEXT;\ntmp_->GetNamedProgramivEXT = GetNamedProgramivEXT;\ntmp_->GetNamedProgramStringEXT = GetNamedProgramStringEXT;\ntmp_->NamedProgramLocalParameters4fvEXT = NamedProgramLocalParameters4fvEXT;\ntmp_->NamedProgramLocalParameterI4iEXT = NamedProgramLocalParameterI4iEXT;\ntmp_->NamedProgramLocalParameterI4ivEXT = NamedProgramLocalParameterI4ivEXT;\ntmp_->NamedProgramLocalParametersI4ivEXT = NamedProgramLocalParametersI4ivEXT;\ntmp_->NamedProgramLocalParameterI4uiEXT = NamedProgramLocalParameterI4uiEXT;\ntmp_->NamedProgramLocalParameterI4uivEXT = NamedProgramLocalParameterI4uivEXT;\ntmp_->NamedProgramLocalParametersI4uivEXT = NamedProgramLocalParametersI4uivEXT;\ntmp_->GetNamedProgramLocalParameterIivEXT = GetNamedProgramLocalParameterIivEXT;\ntmp_->GetNamedProgramLocalParameterIuivEXT = GetNamedProgramLocalParameterIuivEXT;\ntmp_->TextureParameterIivEXT = TextureParameterIivEXT;\ntmp_->TextureParameterIuivEXT = TextureParameterIuivEXT;\ntmp_->GetTextureParameterIivEXT = GetTextureParameterIivEXT;\ntmp_->GetTextureParameterIuivEXT = GetTextureParameterIuivEXT;\ntmp_->MultiTexParameterIivEXT = MultiTexParameterIivEXT;\ntmp_->MultiTexParameterIuivEXT = MultiTexParameterIuivEXT;\ntmp_->GetMultiTexParameterIivEXT = GetMultiTexParameterIivEXT;\ntmp_->GetMultiTexParameterIuivEXT = GetMultiTexParameterIuivEXT;\ntmp_->ProgramUniform1fEXT = ProgramUniform1fEXT;\ntmp_->ProgramUniform2fEXT = ProgramUniform2fEXT;\ntmp_->ProgramUniform3fEXT = ProgramUniform3fEXT;\ntmp_->ProgramUniform4fEXT = ProgramUniform4fEXT;\ntmp_->ProgramUniform1iEXT = ProgramUniform1iEXT;\ntmp_->ProgramUniform2iEXT = ProgramUniform2iEXT;\ntmp_->ProgramUniform3iEXT = ProgramUniform3iEXT;\ntmp_->ProgramUniform4iEXT = ProgramUniform4iEXT;\ntmp_->ProgramUniform1fvEXT = ProgramUniform1fvEXT;\ntmp_->ProgramUniform2fvEXT = ProgramUniform2fvEXT;\ntmp_->ProgramUniform3fvEXT = ProgramUniform3fvEXT;\ntmp_->ProgramUniform4fvEXT = ProgramUniform4fvEXT;\ntmp_->ProgramUniform1ivEXT = ProgramUniform1ivEXT;\ntmp_->ProgramUniform2ivEXT = ProgramUniform2ivEXT;\ntmp_->ProgramUniform3ivEXT = ProgramUniform3ivEXT;\ntmp_->ProgramUniform4ivEXT = ProgramUniform4ivEXT;\ntmp_->ProgramUniformMatrix2fvEXT = ProgramUniformMatrix2fvEXT;\ntmp_->ProgramUniformMatrix3fvEXT = ProgramUniformMatrix3fvEXT;\ntmp_->ProgramUniformMatrix4fvEXT = ProgramUniformMatrix4fvEXT;\ntmp_->ProgramUniformMatrix2x3fvEXT = ProgramUniformMatrix2x3fvEXT;\ntmp_->ProgramUniformMatrix3x2fvEXT = ProgramUniformMatrix3x2fvEXT;\ntmp_->ProgramUniformMatrix2x4fvEXT = ProgramUniformMatrix2x4fvEXT;\ntmp_->ProgramUniformMatrix4x2fvEXT = ProgramUniformMatrix4x2fvEXT;\ntmp_->ProgramUniformMatrix3x4fvEXT = ProgramUniformMatrix3x4fvEXT;\ntmp_->ProgramUniformMatrix4x3fvEXT = ProgramUniformMatrix4x3fvEXT;\ntmp_->ProgramUniform1uiEXT = ProgramUniform1uiEXT;\ntmp_->ProgramUniform2uiEXT = ProgramUniform2uiEXT;\ntmp_->ProgramUniform3uiEXT = ProgramUniform3uiEXT;\ntmp_->ProgramUniform4uiEXT = ProgramUniform4uiEXT;\ntmp_->ProgramUniform1uivEXT = ProgramUniform1uivEXT;\ntmp_->ProgramUniform2uivEXT = ProgramUniform2uivEXT;\ntmp_->ProgramUniform3uivEXT = ProgramUniform3uivEXT;\ntmp_->ProgramUniform4uivEXT = ProgramUniform4uivEXT;\ntmp_->NamedBufferDataEXT = NamedBufferDataEXT;\ntmp_->NamedBufferSubDataEXT = NamedBufferSubDataEXT;\ntmp_->MapNamedBufferEXT = MapNamedBufferEXT;\ntmp_->UnmapNamedBufferEXT = UnmapNamedBufferEXT;\ntmp_->GetNamedBufferParameterivEXT = GetNamedBufferParameterivEXT;\ntmp_->GetNamedBufferPointervEXT = GetNamedBufferPointervEXT;\ntmp_->GetNamedBufferSubDataEXT = GetNamedBufferSubDataEXT;\ntmp_->TextureBufferEXT = TextureBufferEXT;\ntmp_->MultiTexBufferEXT = MultiTexBufferEXT;\ntmp_->NamedRenderbufferStorageEXT = NamedRenderbufferStorageEXT;\ntmp_->GetNamedRenderbufferParameterivEXT = GetNamedRenderbufferParameterivEXT;\ntmp_->CheckNamedFramebufferStatusEXT = CheckNamedFramebufferStatusEXT;\ntmp_->NamedFramebufferTexture1DEXT = NamedFramebufferTexture1DEXT;\ntmp_->NamedFramebufferTexture2DEXT = NamedFramebufferTexture2DEXT;\ntmp_->NamedFramebufferTexture3DEXT = NamedFramebufferTexture3DEXT;\ntmp_->NamedFramebufferRenderbufferEXT = NamedFramebufferRenderbufferEXT;\ntmp_->GetNamedFramebufferAttachmentParameterivEXT = GetNamedFramebufferAttachmentParameterivEXT;\ntmp_->GenerateTextureMipmapEXT = GenerateTextureMipmapEXT;\ntmp_->GenerateMultiTexMipmapEXT = GenerateMultiTexMipmapEXT;\ntmp_->FramebufferDrawBufferEXT = FramebufferDrawBufferEXT;\ntmp_->FramebufferDrawBuffersEXT = FramebufferDrawBuffersEXT;\ntmp_->FramebufferReadBufferEXT = FramebufferReadBufferEXT;\ntmp_->GetFramebufferParameterivEXT = GetFramebufferParameterivEXT;\ntmp_->NamedRenderbufferStorageMultisampleEXT = NamedRenderbufferStorageMultisampleEXT;\ntmp_->NamedRenderbufferStorageMultisampleCoverageEXT = NamedRenderbufferStorageMultisampleCoverageEXT;\ntmp_->NamedFramebufferTextureEXT = NamedFramebufferTextureEXT;\ntmp_->NamedFramebufferTextureLayerEXT = NamedFramebufferTextureLayerEXT;\ntmp_->NamedFramebufferTextureFaceEXT = NamedFramebufferTextureFaceEXT;\ntmp_->TextureRenderbufferEXT = TextureRenderbufferEXT;\ntmp_->MultiTexRenderbufferEXT = MultiTexRenderbufferEXT;\ntmp_->GetMultisamplefvNV = GetMultisamplefvNV;\ntmp_->SampleMaskIndexedNV = SampleMaskIndexedNV;\ntmp_->TexRenderbufferNV = TexRenderbufferNV;\ntmp_->BindTransformFeedbackNV = BindTransformFeedbackNV;\ntmp_->DeleteTransformFeedbacksNV = DeleteTransformFeedbacksNV;\ntmp_->GenTransformFeedbacksNV = GenTransformFeedbacksNV;\ntmp_->IsTransformFeedbackNV = IsTransformFeedbackNV;\ntmp_->PauseTransformFeedbackNV = PauseTransformFeedbackNV;\ntmp_->ResumeTransformFeedbackNV = ResumeTransformFeedbackNV;\ntmp_->DrawTransformFeedbackNV = DrawTransformFeedbackNV;\ntmp_->GetPerfMonitorGroupsAMD = GetPerfMonitorGroupsAMD;\ntmp_->GetPerfMonitorCountersAMD = GetPerfMonitorCountersAMD;\ntmp_->GetPerfMonitorGroupStringAMD = GetPerfMonitorGroupStringAMD;\ntmp_->GetPerfMonitorCounterStringAMD = GetPerfMonitorCounterStringAMD;\ntmp_->GetPerfMonitorCounterInfoAMD = GetPerfMonitorCounterInfoAMD;\ntmp_->GenPerfMonitorsAMD = GenPerfMonitorsAMD;\ntmp_->DeletePerfMonitorsAMD = DeletePerfMonitorsAMD;\ntmp_->SelectPerfMonitorCountersAMD = SelectPerfMonitorCountersAMD;\ntmp_->BeginPerfMonitorAMD = BeginPerfMonitorAMD;\ntmp_->EndPerfMonitorAMD = EndPerfMonitorAMD;\ntmp_->GetPerfMonitorCounterDataAMD = GetPerfMonitorCounterDataAMD;\ntmp_->TessellationFactorAMD = TessellationFactorAMD;\ntmp_->TessellationModeAMD = TessellationModeAMD;\ntmp_->ProvokingVertexEXT = ProvokingVertexEXT;\ntmp_->BlendFuncIndexedAMD = BlendFuncIndexedAMD;\ntmp_->BlendFuncSeparateIndexedAMD = BlendFuncSeparateIndexedAMD;\ntmp_->BlendEquationIndexedAMD = BlendEquationIndexedAMD;\ntmp_->BlendEquationSeparateIndexedAMD = BlendEquationSeparateIndexedAMD;\ntmp_->TextureRangeAPPLE = TextureRangeAPPLE;\ntmp_->GetTexParameterPointervAPPLE = GetTexParameterPointervAPPLE;\ntmp_->EnableVertexAttribAPPLE = EnableVertexAttribAPPLE;\ntmp_->DisableVertexAttribAPPLE = DisableVertexAttribAPPLE;\ntmp_->IsVertexAttribEnabledAPPLE = IsVertexAttribEnabledAPPLE;\ntmp_->MapVertexAttrib1dAPPLE = MapVertexAttrib1dAPPLE;\ntmp_->MapVertexAttrib1fAPPLE = MapVertexAttrib1fAPPLE;\ntmp_->MapVertexAttrib2dAPPLE = MapVertexAttrib2dAPPLE;\ntmp_->MapVertexAttrib2fAPPLE = MapVertexAttrib2fAPPLE;\ntmp_->ObjectPurgeableAPPLE = ObjectPurgeableAPPLE;\ntmp_->ObjectUnpurgeableAPPLE = ObjectUnpurgeableAPPLE;\ntmp_->GetObjectParameterivAPPLE = GetObjectParameterivAPPLE;\ntmp_->BeginVideoCaptureNV = BeginVideoCaptureNV;\ntmp_->BindVideoCaptureStreamBufferNV = BindVideoCaptureStreamBufferNV;\ntmp_->BindVideoCaptureStreamTextureNV = BindVideoCaptureStreamTextureNV;\ntmp_->EndVideoCaptureNV = EndVideoCaptureNV;\ntmp_->GetVideoCaptureivNV = GetVideoCaptureivNV;\ntmp_->GetVideoCaptureStreamivNV = GetVideoCaptureStreamivNV;\ntmp_->GetVideoCaptureStreamfvNV = GetVideoCaptureStreamfvNV;\ntmp_->GetVideoCaptureStreamdvNV = GetVideoCaptureStreamdvNV;\ntmp_->VideoCaptureNV = VideoCaptureNV;\ntmp_->VideoCaptureStreamParameterivNV = VideoCaptureStreamParameterivNV;\ntmp_->VideoCaptureStreamParameterfvNV = VideoCaptureStreamParameterfvNV;\ntmp_->VideoCaptureStreamParameterdvNV = VideoCaptureStreamParameterdvNV;\ntmp_->UseShaderProgramEXT = UseShaderProgramEXT;\ntmp_->ActiveProgramEXT = ActiveProgramEXT;\ntmp_->CreateShaderProgramEXT = CreateShaderProgramEXT;\ntmp_->MakeBufferResidentNV = MakeBufferResidentNV;\ntmp_->MakeBufferNonResidentNV = MakeBufferNonResidentNV;\ntmp_->IsBufferResidentNV = IsBufferResidentNV;\ntmp_->MakeNamedBufferResidentNV = MakeNamedBufferResidentNV;\ntmp_->MakeNamedBufferNonResidentNV = MakeNamedBufferNonResidentNV;\ntmp_->IsNamedBufferResidentNV = IsNamedBufferResidentNV;\ntmp_->GetBufferParameterui64vNV = GetBufferParameterui64vNV;\ntmp_->GetNamedBufferParameterui64vNV = GetNamedBufferParameterui64vNV;\ntmp_->GetIntegerui64vNV = GetIntegerui64vNV;\ntmp_->Uniformui64NV = Uniformui64NV;\ntmp_->Uniformui64vNV = Uniformui64vNV;\ntmp_->GetUniformui64vNV = GetUniformui64vNV;\ntmp_->ProgramUniformui64NV = ProgramUniformui64NV;\ntmp_->ProgramUniformui64vNV = ProgramUniformui64vNV;\ntmp_->BufferAddressRangeNV = BufferAddressRangeNV;\ntmp_->VertexFormatNV = VertexFormatNV;\ntmp_->NormalFormatNV = NormalFormatNV;\ntmp_->ColorFormatNV = ColorFormatNV;\ntmp_->IndexFormatNV = IndexFormatNV;\ntmp_->TexCoordFormatNV = TexCoordFormatNV;\ntmp_->EdgeFlagFormatNV = EdgeFlagFormatNV;\ntmp_->SecondaryColorFormatNV = SecondaryColorFormatNV;\ntmp_->FogCoordFormatNV = FogCoordFormatNV;\ntmp_->VertexAttribFormatNV = VertexAttribFormatNV;\ntmp_->VertexAttribIFormatNV = VertexAttribIFormatNV;\ntmp_->GetIntegerui64i_vNV = GetIntegerui64i_vNV;\ntmp_->TextureBarrierNV = TextureBarrierNV;\nreturn(tmp_);;\n")))

;;; END OF FILE
